insert 

## ENTITIES #####################################
function sub entity
	plays in-function
	has name
	has asm-address
	has stack;

basic-block sub entity
	plays from-basic-block 
	plays to-basic-block
	plays in-basic-block 
	plays contains-basic-block
	has bb-start
	has bb-end;

instruction sub entity
	plays from-node
	plays to-node
	plays in-instruction
	plays contains-instruction
	has hash
	has il-index
	has asm-address
	has ins-text
	has operation-type;

operation sub entity
	plays from-node
	plays to-node
	plays in-operation
	plays contains-operation
	has hash
	has edge-label;

constant sub entity
	plays from-node
	plays to-node
	has hash
	has constant-value
	has edge-label;

variable sub entity
	plays from-node
	plays to-node
	has hash
	has var
	has edge-label
	has var-type
	has var-size
	has var-func;

variable-ssa sub entity
	plays from-node
	plays to-node
	has hash
	has var
	has version
	has edge-label
	has var-type
	has var-size
	has var-func;

list sub entity
	plays from-node
	plays to-node
	has hash
	has list-size
	has edge-label;


## SUB ENTITIES #################################
#### OPERATIONS #################################
MLIL_NOP sub operation;
MLIL_SET_VAR sub operation;
MLIL_SET_VAR_FIELD sub operation;
MLIL_SET_VAR_SPLIT sub operation;
MLIL_LOAD sub operation;
MLIL_STORE sub operation;
MLIL_VAR sub operation
	has var;
MLIL_VAR_FIELD sub operation;
MLIL_ADDRESS_OF sub operation;
MLIL_ADDRESS_OF_FIELD sub operation;
MLIL_CONST sub operation;
MLIL_CONST_PTR sub operation;
MLIL_ADD sub operation;
MLIL_ADC sub operation;
MLIL_SUB sub operation;
MLIL_SBB sub operation;
MLIL_AND sub operation;
MLIL_OR sub operation;
MLIL_XOR sub operation;
MLIL_LSL sub operation;
MLIL_LSR sub operation;
MLIL_ASR sub operation;
MLIL_ROL sub operation;
MLIL_RLC sub operation;
MLIL_ROR sub operation;
MLIL_RRC sub operation;
MLIL_MUL sub operation;
MLIL_MULU_DP sub operation;
MLIL_MULS_DP sub operation;
MLIL_DIVU sub operation;
MLIL_DIVU_DP sub operation;
MLIL_DIVS sub operation;
MLIL_DIVS_DP sub operation;
MLIL_MODU sub operation;
MLIL_MODU_DP sub operation;
MLIL_MODS sub operation;
MLIL_MODS_DP sub operation;
MLIL_NEG sub operation;
MLIL_NOT sub operation;
MLIL_SX sub operation;
MLIL_ZX sub operation;
MLIL_LOW_PART sub operation;
MLIL_JUMP sub operation;
MLIL_JUMP_TO sub operation;
MLIL_CALL sub operation;
MLIL_CALL_UNTYPED sub operation;
MLIL_CALL_OUTPUT sub operation;
MLIL_CALL_PARAM sub operation;
MLIL_RET sub operation;
MLIL_NORET sub operation;
MLIL_IF sub operation;
MLIL_GOTO sub operation;
MLIL_CMP_E sub operation;
MLIL_CMP_NE sub operation;
MLIL_CMP_SLT sub operation;
MLIL_CMP_ULT sub operation;
MLIL_CMP_SLE sub operation;
MLIL_CMP_ULE sub operation;
MLIL_CMP_SGE sub operation;
MLIL_CMP_UGE sub operation;
MLIL_CMP_SGT sub operation;
MLIL_CMP_UGT sub operation;
MLIL_TEST_BIT sub operation;
MLIL_BOOL_TO_INT sub operation;
MLIL_ADD_OVERFLOW sub operation;
MLIL_SYSCALL sub operation;
MLIL_SYSCALL_UNTYPED sub operation;
MLIL_BP sub operation;
MLIL_TRAP sub operation;
MLIL_UNDEF sub operation;
MLIL_UNIMPL sub operation;
MLIL_UNIMPL_MEM sub operation;
MLIL_IMPORT sub operation;
MLIL_SET_VAR_SSA sub operation;
MLIL_SET_VAR_SSA_FIELD sub operation;
MLIL_SET_VAR_SPLIT_SSA sub operation;
MLIL_SET_VAR_ALIASED sub operation;
MLIL_SET_VAR_ALIASED_FIELD sub operation;
MLIL_VAR_SSA sub operation;
MLIL_VAR_SSA_FIELD sub operation;
MLIL_VAR_ALIASED sub operation;
MLIL_VAR_ALIASED_FIELD sub operation;
MLIL_CALL_SSA sub operation;
MLIL_CALL_UNTYPED_SSA sub operation;
MLIL_SYSCALL_SSA sub operation;
MLIL_SYSCALL_UNTYPED_SSA sub operation;
MLIL_CALL_OUTPUT_SSA sub operation;
MLIL_CALL_PARAM_SSA sub operation;
MLIL_LOAD_SSA sub operation;
MLIL_STORE_SSA sub operation;
MLIL_VAR_PHI sub operation;
MLIL_MEM_PHI sub operation;


## RESOURCES (has) ##############################
stack			sub resource datatype string;
operation-type 		sub resource datatype string;
ins-text		sub resource datatype string;
name			sub resource datatype string;
asm-address 		sub resource datatype string;
edge-label 		sub resource datatype string;
constant-value 		sub resource datatype string;
hash 			sub resource datatype string;
var 			sub resource datatype string;
var-type 		sub resource datatype string;
var-func 		sub resource datatype string;
var-size		sub resource datatype long;
bb-start		sub resource datatype long;
bb-end			sub resource datatype long;
il-index 		sub resource datatype long;
list-size 		sub resource datatype long;
int 			sub resource datatype long;
version 		sub resource datatype long;
size			sub resource datatype long;
if-true 		sub resource datatype long;
if-false 		sub resource datatype long;


## ROLES (plays) ################################
in-function 			sub role;

from-basic-block 		sub role;
to-basic-block			sub role;
in-basic-block 			sub role;
contains-basic-block 	sub role;

in-instruction 			sub role;
contains-instruction 	sub role;

in-operation 			sub role;
contains-operation 		sub role;

from-node 				sub role;
to-node					sub role;


## RELATIONS ####################################
has-basic-block sub relation
	relates in-function
	relates contains-basic-block;

basic-block-edge sub relation
	relates from-basic-block
	relates to-basic-block;

has-instruction sub relation
    relates contains-instruction
    relates in-basic-block;

instruction-has-operation sub relation
	relates contains-operation
	relates in-instruction;

operation-has-operation sub relation
	relates contains-operation
	relates in-operation;

node-link sub relation
	relates from-node
	relates to-node;


## INFERRENCE RULES #############################

insert 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil", has asm-address "0x804bc80", has stack "[<var void var_1c>, <var int32_t __saved_esi>, <var int32_t var_c>, <var int32_t __saved_ebx>, <var int32_t __saved_ebp>, <var void* const __return_addr>, <var int32_t arg3>, <var int32_t arg4>, <var char arg5>, <var int32_t* arg6>]"; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349769081_134528135c isa instruction, has hash "N_8740349769081_134528135c", has il-index 0, has asm-address "0x804bc87", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#1 = arg6#0";
(contains-instruction: $N_8740349769081_134528135c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349769081_134528135c isa instruction, has hash "N_8740349769081_134528135c"; 

insert
$N_8740349769081_134528135c_0 isa variable-ssa, has hash "N_8740349769081_134528135c_0", has var "esi", has version 1, has edge-label "dest", has var-type "int32_t*", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349769081_134528135c_0, from-node: $N_8740349769081_134528135c) isa node-link; 

match
$N_8740349769081_134528135c isa instruction, has hash "N_8740349769081_134528135c"; 

insert
$N_8740349769081_134528135c_1 isa MLIL_VAR_SSA, has hash "N_8740349769081_134528135c_1", has edge-label "src";
(to-node: $N_8740349769081_134528135c_1, from-node: $N_8740349769081_134528135c) isa node-link; 

match
$N_8740349769081_134528135c_1 isa operation, has hash "N_8740349769081_134528135c_1"; 

insert
$N_8740349769081_134528135c_1_0 isa variable-ssa, has hash "N_8740349769081_134528135c_1_0", has var "arg6", has version 0, has edge-label "src", has var-type "int32_t*", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349769081_134528135c_1_0, from-node: $N_8740349769081_134528135c_1) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349760657_134528139c isa instruction, has hash "N_8740349760657_134528139c", has il-index 1, has asm-address "0x804bc8b", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebp#1 = arg4#0";
(contains-instruction: $N_8740349760657_134528139c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349760657_134528139c isa instruction, has hash "N_8740349760657_134528139c"; 

insert
$N_8740349760657_134528139c_0 isa variable-ssa, has hash "N_8740349760657_134528139c_0", has var "ebp", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349760657_134528139c_0, from-node: $N_8740349760657_134528139c) isa node-link; 

match
$N_8740349760657_134528139c isa instruction, has hash "N_8740349760657_134528139c"; 

insert
$N_8740349760657_134528139c_1 isa MLIL_VAR_SSA, has hash "N_8740349760657_134528139c_1", has edge-label "src";
(to-node: $N_8740349760657_134528139c_1, from-node: $N_8740349760657_134528139c) isa node-link; 

match
$N_8740349760657_134528139c_1 isa operation, has hash "N_8740349760657_134528139c_1"; 

insert
$N_8740349760657_134528139c_1_0 isa variable-ssa, has hash "N_8740349760657_134528139c_1_0", has var "arg4", has version 0, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349760657_134528139c_1_0, from-node: $N_8740349760657_134528139c_1) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349758981_134528143c isa instruction, has hash "N_8740349758981_134528143c", has il-index 2, has asm-address "0x804bc8f", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebx#1 = 0";
(contains-instruction: $N_8740349758981_134528143c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349758981_134528143c isa instruction, has hash "N_8740349758981_134528143c"; 

insert
$N_8740349758981_134528143c_0 isa variable-ssa, has hash "N_8740349758981_134528143c_0", has var "ebx", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349758981_134528143c_0, from-node: $N_8740349758981_134528143c) isa node-link; 

match
$N_8740349758981_134528143c isa instruction, has hash "N_8740349758981_134528143c"; 

insert
$N_8740349758981_134528143c_1 isa MLIL_CONST, has hash "N_8740349758981_134528143c_1", has edge-label "src";
(to-node: $N_8740349758981_134528143c_1, from-node: $N_8740349758981_134528143c) isa node-link; 

match
$N_8740349758981_134528143c_1 isa operation, has hash "N_8740349758981_134528143c_1"; 

insert
$N_8740349758981_134528143c_1_0 isa constant, has hash "N_8740349758981_134528143c_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349758981_134528143c_1_0, from-node: $N_8740349758981_134528143c_1) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349640965_134528145c isa instruction, has hash "N_8740349640965_134528145c", has il-index 4, has asm-address "0x804bc91", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebp_1#2 = temp0#1 - 1";
(contains-instruction: $N_8740349640965_134528145c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349640965_134528145c isa instruction, has hash "N_8740349640965_134528145c"; 

insert
$N_8740349640965_134528145c_0 isa variable-ssa, has hash "N_8740349640965_134528145c_0", has var "ebp_1", has version 2, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349640965_134528145c_0, from-node: $N_8740349640965_134528145c) isa node-link; 

match
$N_8740349640965_134528145c isa instruction, has hash "N_8740349640965_134528145c"; 

insert
$N_8740349640965_134528145c_1 isa MLIL_SUB, has hash "N_8740349640965_134528145c_1", has edge-label "src";
(to-node: $N_8740349640965_134528145c_1, from-node: $N_8740349640965_134528145c) isa node-link; 

match
$N_8740349640965_134528145c_1 isa operation, has hash "N_8740349640965_134528145c_1"; 

insert
$N_8740349640965_134528145c_1_0 isa MLIL_VAR_SSA, has hash "N_8740349640965_134528145c_1_0", has edge-label "left";
(to-node: $N_8740349640965_134528145c_1_0, from-node: $N_8740349640965_134528145c_1) isa node-link; 

match
$N_8740349640965_134528145c_1_0 isa operation, has hash "N_8740349640965_134528145c_1_0"; 

insert
$N_8740349640965_134528145c_1_0_0 isa variable-ssa, has hash "N_8740349640965_134528145c_1_0_0", has var "temp0", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349640965_134528145c_1_0_0, from-node: $N_8740349640965_134528145c_1_0) isa node-link; 

match
$N_8740349640965_134528145c_1 isa operation, has hash "N_8740349640965_134528145c_1"; 

insert
$N_8740349640965_134528145c_1_1 isa MLIL_CONST, has hash "N_8740349640965_134528145c_1_1", has edge-label "right";
(to-node: $N_8740349640965_134528145c_1_1, from-node: $N_8740349640965_134528145c_1) isa node-link; 

match
$N_8740349640965_134528145c_1_1 isa operation, has hash "N_8740349640965_134528145c_1_1"; 

insert
$N_8740349640965_134528145c_1_1_0 isa constant, has hash "N_8740349640965_134528145c_1_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8740349640965_134528145c_1_1_0, from-node: $N_8740349640965_134528145c_1_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349750869_134528145c isa instruction, has hash "N_8740349750869_134528145c", has il-index 3, has asm-address "0x804bc91", has operation-type "MLIL_SET_VAR_SSA", has ins-text "temp0#1 = ebp#1";
(contains-instruction: $N_8740349750869_134528145c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349750869_134528145c isa instruction, has hash "N_8740349750869_134528145c"; 

insert
$N_8740349750869_134528145c_0 isa variable-ssa, has hash "N_8740349750869_134528145c_0", has var "temp0", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349750869_134528145c_0, from-node: $N_8740349750869_134528145c) isa node-link; 

match
$N_8740349750869_134528145c isa instruction, has hash "N_8740349750869_134528145c"; 

insert
$N_8740349750869_134528145c_1 isa MLIL_VAR_SSA, has hash "N_8740349750869_134528145c_1", has edge-label "src";
(to-node: $N_8740349750869_134528145c_1, from-node: $N_8740349750869_134528145c) isa node-link; 

match
$N_8740349750869_134528145c_1 isa operation, has hash "N_8740349750869_134528145c_1"; 

insert
$N_8740349750869_134528145c_1_0 isa variable-ssa, has hash "N_8740349750869_134528145c_1_0", has var "ebp", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349750869_134528145c_1_0, from-node: $N_8740349750869_134528145c_1) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349531909_134528146c isa instruction, has hash "N_8740349531909_134528146c", has il-index 5, has asm-address "0x804bc92", has operation-type "MLIL_IF", has ins-text "if (temp0#1 == 1) then 6 @ 0x0 else 7 @ 0x804bc94";
(contains-instruction: $N_8740349531909_134528146c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349531909_134528146c isa instruction, has hash "N_8740349531909_134528146c"; 

insert
$N_8740349531909_134528146c_0 isa MLIL_CMP_E, has hash "N_8740349531909_134528146c_0", has edge-label "condition";
(to-node: $N_8740349531909_134528146c_0, from-node: $N_8740349531909_134528146c) isa node-link; 

match
$N_8740349531909_134528146c_0 isa operation, has hash "N_8740349531909_134528146c_0"; 

insert
$N_8740349531909_134528146c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349531909_134528146c_0_0", has edge-label "left";
(to-node: $N_8740349531909_134528146c_0_0, from-node: $N_8740349531909_134528146c_0) isa node-link; 

match
$N_8740349531909_134528146c_0_0 isa operation, has hash "N_8740349531909_134528146c_0_0"; 

insert
$N_8740349531909_134528146c_0_0_0 isa variable-ssa, has hash "N_8740349531909_134528146c_0_0_0", has var "temp0", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349531909_134528146c_0_0_0, from-node: $N_8740349531909_134528146c_0_0) isa node-link; 

match
$N_8740349531909_134528146c_0 isa operation, has hash "N_8740349531909_134528146c_0"; 

insert
$N_8740349531909_134528146c_0_1 isa MLIL_CONST, has hash "N_8740349531909_134528146c_0_1", has edge-label "right";
(to-node: $N_8740349531909_134528146c_0_1, from-node: $N_8740349531909_134528146c_0) isa node-link; 

match
$N_8740349531909_134528146c_0_1 isa operation, has hash "N_8740349531909_134528146c_0_1"; 

insert
$N_8740349531909_134528146c_0_1_0 isa constant, has hash "N_8740349531909_134528146c_0_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8740349531909_134528146c_0_1_0, from-node: $N_8740349531909_134528146c_0_1) isa node-link; 

match
$N_8740349531909_134528146c isa instruction, has hash "N_8740349531909_134528146c"; 

insert
$N_8740349531909_134528146c_1 isa constant, has hash "N_8740349531909_134528146c_1", has constant-value "6", has edge-label "true";
(to-node: $N_8740349531909_134528146c_1, from-node: $N_8740349531909_134528146c) isa node-link; 

match
$N_8740349531909_134528146c isa instruction, has hash "N_8740349531909_134528146c"; 

insert
$N_8740349531909_134528146c_2 isa constant, has hash "N_8740349531909_134528146c_2", has constant-value "7", has edge-label "false";
(to-node: $N_8740349531909_134528146c_2, from-node: $N_8740349531909_134528146c) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 6, has bb-end 6; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 6, has bb-end 6; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 6, has bb-end 6; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349443225_0c isa instruction, has hash "N_8740349443225_0c", has il-index 26, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 31 @ 0x804bce5";
(contains-instruction: $N_8740349443225_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349443225_0c isa instruction, has hash "N_8740349443225_0c"; 

insert
$N_8740349443225_0c_0 isa constant, has hash "N_8740349443225_0c_0", has constant-value "31", has edge-label "dest";
(to-node: $N_8740349443225_0c_0, from-node: $N_8740349443225_0c) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 6, has bb-end 6; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349471109_0c isa instruction, has hash "N_8740349471109_0c", has il-index 63, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 17 @ 0x804bca0";
(contains-instruction: $N_8740349471109_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349471109_0c isa instruction, has hash "N_8740349471109_0c"; 

insert
$N_8740349471109_0c_0 isa constant, has hash "N_8740349471109_0c_0", has constant-value "17", has edge-label "dest";
(to-node: $N_8740349471109_0c_0, from-node: $N_8740349471109_0c) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 6, has bb-end 6; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349498885_0c isa instruction, has hash "N_8740349498885_0c", has il-index 29, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 48 @ 0x804bcef";
(contains-instruction: $N_8740349498885_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349498885_0c isa instruction, has hash "N_8740349498885_0c"; 

insert
$N_8740349498885_0c_0 isa constant, has hash "N_8740349498885_0c_0", has constant-value "48", has edge-label "dest";
(to-node: $N_8740349498885_0c_0, from-node: $N_8740349498885_0c) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 6, has bb-end 6; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349531521_0c isa instruction, has hash "N_8740349531521_0c", has il-index 61, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 48 @ 0x804bcef";
(contains-instruction: $N_8740349531521_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349531521_0c isa instruction, has hash "N_8740349531521_0c"; 

insert
$N_8740349531521_0c_0 isa constant, has hash "N_8740349531521_0c_0", has constant-value "48", has edge-label "dest";
(to-node: $N_8740349531521_0c_0, from-node: $N_8740349531521_0c) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 6, has bb-end 6; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349536381_0c isa instruction, has hash "N_8740349536381_0c", has il-index 65, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 40 @ 0x804bcd0";
(contains-instruction: $N_8740349536381_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349536381_0c isa instruction, has hash "N_8740349536381_0c"; 

insert
$N_8740349536381_0c_0 isa constant, has hash "N_8740349536381_0c_0", has constant-value "40", has edge-label "dest";
(to-node: $N_8740349536381_0c_0, from-node: $N_8740349536381_0c) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 6, has bb-end 6; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349539589_0c isa instruction, has hash "N_8740349539589_0c", has il-index 64, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 10 @ 0x804bcc3";
(contains-instruction: $N_8740349539589_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349539589_0c isa instruction, has hash "N_8740349539589_0c"; 

insert
$N_8740349539589_0c_0 isa constant, has hash "N_8740349539589_0c_0", has constant-value "10", has edge-label "dest";
(to-node: $N_8740349539589_0c_0, from-node: $N_8740349539589_0c) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 6, has bb-end 6; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349633797_0c isa instruction, has hash "N_8740349633797_0c", has il-index 6, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 10 @ 0x804bcc3";
(contains-instruction: $N_8740349633797_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349633797_0c isa instruction, has hash "N_8740349633797_0c"; 

insert
$N_8740349633797_0c_0 isa constant, has hash "N_8740349633797_0c_0", has constant-value "10", has edge-label "dest";
(to-node: $N_8740349633797_0c_0, from-node: $N_8740349633797_0c) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 6, has bb-end 6; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349640577_0c isa instruction, has hash "N_8740349640577_0c", has il-index 66, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 31 @ 0x804bce5";
(contains-instruction: $N_8740349640577_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349640577_0c isa instruction, has hash "N_8740349640577_0c"; 

insert
$N_8740349640577_0c_0 isa constant, has hash "N_8740349640577_0c_0", has constant-value "31", has edge-label "dest";
(to-node: $N_8740349640577_0c_0, from-node: $N_8740349640577_0c) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 6, has bb-end 6; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349652613_0c isa instruction, has hash "N_8740349652613_0c", has il-index 56, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 10 @ 0x804bcc3";
(contains-instruction: $N_8740349652613_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349652613_0c isa instruction, has hash "N_8740349652613_0c"; 

insert
$N_8740349652613_0c_0 isa constant, has hash "N_8740349652613_0c_0", has constant-value "10", has edge-label "dest";
(to-node: $N_8740349652613_0c_0, from-node: $N_8740349652613_0c) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 7, has bb-end 9; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 7, has bb-end 9; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 7, has bb-end 9; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349763937_134528148c isa instruction, has hash "N_8740349763937_134528148c", has il-index 7, has asm-address "0x804bc94", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edi_1#1 = sx.d(arg5#0)";
(contains-instruction: $N_8740349763937_134528148c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349763937_134528148c isa instruction, has hash "N_8740349763937_134528148c"; 

insert
$N_8740349763937_134528148c_0 isa variable-ssa, has hash "N_8740349763937_134528148c_0", has var "edi_1", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349763937_134528148c_0, from-node: $N_8740349763937_134528148c) isa node-link; 

match
$N_8740349763937_134528148c isa instruction, has hash "N_8740349763937_134528148c"; 

insert
$N_8740349763937_134528148c_1 isa MLIL_SX, has hash "N_8740349763937_134528148c_1", has edge-label "src";
(to-node: $N_8740349763937_134528148c_1, from-node: $N_8740349763937_134528148c) isa node-link; 

match
$N_8740349763937_134528148c_1 isa operation, has hash "N_8740349763937_134528148c_1"; 

insert
$N_8740349763937_134528148c_1_0 isa MLIL_VAR_SSA, has hash "N_8740349763937_134528148c_1_0", has edge-label "src";
(to-node: $N_8740349763937_134528148c_1_0, from-node: $N_8740349763937_134528148c_1) isa node-link; 

match
$N_8740349763937_134528148c_1_0 isa operation, has hash "N_8740349763937_134528148c_1_0"; 

insert
$N_8740349763937_134528148c_1_0_0 isa variable-ssa, has hash "N_8740349763937_134528148c_1_0_0", has var "arg5", has version 0, has edge-label "src", has var-type "char", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349763937_134528148c_1_0_0, from-node: $N_8740349763937_134528148c_1_0) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 7, has bb-end 9; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 7, has bb-end 9; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349417833_134528153c isa instruction, has hash "N_8740349417833_134528153c", has il-index 8, has asm-address "0x804bc99", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebx#2 = 0";
(contains-instruction: $N_8740349417833_134528153c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349417833_134528153c isa instruction, has hash "N_8740349417833_134528153c"; 

insert
$N_8740349417833_134528153c_0 isa variable-ssa, has hash "N_8740349417833_134528153c_0", has var "ebx", has version 2, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349417833_134528153c_0, from-node: $N_8740349417833_134528153c) isa node-link; 

match
$N_8740349417833_134528153c isa instruction, has hash "N_8740349417833_134528153c"; 

insert
$N_8740349417833_134528153c_1 isa MLIL_CONST, has hash "N_8740349417833_134528153c_1", has edge-label "src";
(to-node: $N_8740349417833_134528153c_1, from-node: $N_8740349417833_134528153c) isa node-link; 

match
$N_8740349417833_134528153c_1 isa operation, has hash "N_8740349417833_134528153c_1"; 

insert
$N_8740349417833_134528153c_1_0 isa constant, has hash "N_8740349417833_134528153c_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349417833_134528153c_1_0, from-node: $N_8740349417833_134528153c_1) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 7, has bb-end 9; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 7, has bb-end 9; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349589105_134528155c isa instruction, has hash "N_8740349589105_134528155c", has il-index 9, has asm-address "0x804bc9b", has operation-type "MLIL_GOTO", has ins-text "goto 17 @ 0x804bca0";
(contains-instruction: $N_8740349589105_134528155c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349589105_134528155c isa instruction, has hash "N_8740349589105_134528155c"; 

insert
$N_8740349589105_134528155c_0 isa constant, has hash "N_8740349589105_134528155c_0", has constant-value "17", has edge-label "dest";
(to-node: $N_8740349589105_134528155c_0, from-node: $N_8740349589105_134528155c) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 10, has bb-end 16; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 10, has bb-end 16; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 10, has bb-end 16; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349491337_134528195c isa instruction, has hash "N_8740349491337_134528195c", has il-index 15, has asm-address "0x804bcc3", has operation-type "MLIL_MEM_PHI", has ins-text "mem#4 = ϕ(mem#0, mem#2, mem#3)";
(contains-instruction: $N_8740349491337_134528195c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349491337_134528195c isa instruction, has hash "N_8740349491337_134528195c"; 

insert
$N_8740349491337_134528195c_0 isa constant, has hash "N_8740349491337_134528195c_0", has constant-value "4", has edge-label "dest_memory";
(to-node: $N_8740349491337_134528195c_0, from-node: $N_8740349491337_134528195c) isa node-link; 

match
$N_8740349491337_134528195c isa instruction, has hash "N_8740349491337_134528195c"; 

insert
$L_8740349491337_134528195c_1 isa list, has hash "L_8740349491337_134528195c_1", has list-size 3, has edge-label "src_memory";
(to-node: $L_8740349491337_134528195c_1, from-node: $N_8740349491337_134528195c) isa node-link; 

match
$L_8740349491337_134528195c_1 isa list, has hash "L_8740349491337_134528195c_1"; 

insert
$N_8740349491337_134528195c_1_0 isa constant, has hash "N_8740349491337_134528195c_1_0", has constant-value "0", has edge-label "0";
(to-node: $N_8740349491337_134528195c_1_0, from-node: $L_8740349491337_134528195c_1) isa node-link; 

match
$L_8740349491337_134528195c_1 isa list, has hash "L_8740349491337_134528195c_1"; 

insert
$N_8740349491337_134528195c_1_1 isa constant, has hash "N_8740349491337_134528195c_1_1", has constant-value "2", has edge-label "1";
(to-node: $N_8740349491337_134528195c_1_1, from-node: $L_8740349491337_134528195c_1) isa node-link; 

match
$L_8740349491337_134528195c_1 isa list, has hash "L_8740349491337_134528195c_1"; 

insert
$N_8740349491337_134528195c_1_2 isa constant, has hash "N_8740349491337_134528195c_1_2", has constant-value "3", has edge-label "2";
(to-node: $N_8740349491337_134528195c_1_2, from-node: $L_8740349491337_134528195c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 10, has bb-end 16; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349494505_134528195c isa instruction, has hash "N_8740349494505_134528195c", has il-index 16, has asm-address "0x804bcc3", has operation-type "MLIL_IF", has ins-text "if (ebx#5 != ebp_1#2) then 26 @ 0x0 else 27 @ 0x804bcc5";
(contains-instruction: $N_8740349494505_134528195c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349494505_134528195c isa instruction, has hash "N_8740349494505_134528195c"; 

insert
$N_8740349494505_134528195c_0 isa MLIL_CMP_NE, has hash "N_8740349494505_134528195c_0", has edge-label "condition";
(to-node: $N_8740349494505_134528195c_0, from-node: $N_8740349494505_134528195c) isa node-link; 

match
$N_8740349494505_134528195c_0 isa operation, has hash "N_8740349494505_134528195c_0"; 

insert
$N_8740349494505_134528195c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349494505_134528195c_0_0", has edge-label "left";
(to-node: $N_8740349494505_134528195c_0_0, from-node: $N_8740349494505_134528195c_0) isa node-link; 

match
$N_8740349494505_134528195c_0_0 isa operation, has hash "N_8740349494505_134528195c_0_0"; 

insert
$N_8740349494505_134528195c_0_0_0 isa variable-ssa, has hash "N_8740349494505_134528195c_0_0_0", has var "ebx", has version 5, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349494505_134528195c_0_0_0, from-node: $N_8740349494505_134528195c_0_0) isa node-link; 

match
$N_8740349494505_134528195c_0 isa operation, has hash "N_8740349494505_134528195c_0"; 

insert
$N_8740349494505_134528195c_0_1 isa MLIL_VAR_SSA, has hash "N_8740349494505_134528195c_0_1", has edge-label "right";
(to-node: $N_8740349494505_134528195c_0_1, from-node: $N_8740349494505_134528195c_0) isa node-link; 

match
$N_8740349494505_134528195c_0_1 isa operation, has hash "N_8740349494505_134528195c_0_1"; 

insert
$N_8740349494505_134528195c_0_1_0 isa variable-ssa, has hash "N_8740349494505_134528195c_0_1_0", has var "ebp_1", has version 2, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349494505_134528195c_0_1_0, from-node: $N_8740349494505_134528195c_0_1) isa node-link; 

match
$N_8740349494505_134528195c isa instruction, has hash "N_8740349494505_134528195c"; 

insert
$N_8740349494505_134528195c_1 isa constant, has hash "N_8740349494505_134528195c_1", has constant-value "26", has edge-label "true";
(to-node: $N_8740349494505_134528195c_1, from-node: $N_8740349494505_134528195c) isa node-link; 

match
$N_8740349494505_134528195c isa instruction, has hash "N_8740349494505_134528195c"; 

insert
$N_8740349494505_134528195c_2 isa constant, has hash "N_8740349494505_134528195c_2", has constant-value "27", has edge-label "false";
(to-node: $N_8740349494505_134528195c_2, from-node: $N_8740349494505_134528195c) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 10, has bb-end 16; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349670229_134528195c isa instruction, has hash "N_8740349670229_134528195c", has il-index 11, has asm-address "0x804bcc3", has operation-type "MLIL_VAR_PHI", has ins-text "ecx_3#5 = ϕ(ecx#0, ecx_2#3, ecx_3#4)";
(contains-instruction: $N_8740349670229_134528195c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349670229_134528195c isa instruction, has hash "N_8740349670229_134528195c"; 

insert
$N_8740349670229_134528195c_0 isa variable-ssa, has hash "N_8740349670229_134528195c_0", has var "ecx_3", has version 5, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349670229_134528195c_0, from-node: $N_8740349670229_134528195c) isa node-link; 

match
$N_8740349670229_134528195c isa instruction, has hash "N_8740349670229_134528195c"; 

insert
$L_8740349670229_134528195c_1 isa list, has hash "L_8740349670229_134528195c_1", has list-size 3, has edge-label "src";
(to-node: $L_8740349670229_134528195c_1, from-node: $N_8740349670229_134528195c) isa node-link; 

match
$L_8740349670229_134528195c_1 isa list, has hash "L_8740349670229_134528195c_1"; 

insert
$N_8740349670229_134528195c_1_0 isa variable-ssa, has hash "N_8740349670229_134528195c_1_0", has var "ecx", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349670229_134528195c_1_0, from-node: $L_8740349670229_134528195c_1) isa node-link; 

match
$L_8740349670229_134528195c_1 isa list, has hash "L_8740349670229_134528195c_1"; 

insert
$N_8740349670229_134528195c_1_1 isa variable-ssa, has hash "N_8740349670229_134528195c_1_1", has var "ecx_2", has version 3, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349670229_134528195c_1_1, from-node: $L_8740349670229_134528195c_1) isa node-link; 

match
$L_8740349670229_134528195c_1 isa list, has hash "L_8740349670229_134528195c_1"; 

insert
$N_8740349670229_134528195c_1_2 isa variable-ssa, has hash "N_8740349670229_134528195c_1_2", has var "ecx_3", has version 4, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349670229_134528195c_1_2, from-node: $L_8740349670229_134528195c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 10, has bb-end 16; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349737989_134528195c isa instruction, has hash "N_8740349737989_134528195c", has il-index 13, has asm-address "0x804bcc3", has operation-type "MLIL_VAR_PHI", has ins-text "ebx#5 = ϕ(ebx#1, ebx#3, ebx#4)";
(contains-instruction: $N_8740349737989_134528195c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349737989_134528195c isa instruction, has hash "N_8740349737989_134528195c"; 

insert
$N_8740349737989_134528195c_0 isa variable-ssa, has hash "N_8740349737989_134528195c_0", has var "ebx", has version 5, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349737989_134528195c_0, from-node: $N_8740349737989_134528195c) isa node-link; 

match
$N_8740349737989_134528195c isa instruction, has hash "N_8740349737989_134528195c"; 

insert
$L_8740349737989_134528195c_1 isa list, has hash "L_8740349737989_134528195c_1", has list-size 3, has edge-label "src";
(to-node: $L_8740349737989_134528195c_1, from-node: $N_8740349737989_134528195c) isa node-link; 

match
$L_8740349737989_134528195c_1 isa list, has hash "L_8740349737989_134528195c_1"; 

insert
$N_8740349737989_134528195c_1_0 isa variable-ssa, has hash "N_8740349737989_134528195c_1_0", has var "ebx", has version 1, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349737989_134528195c_1_0, from-node: $L_8740349737989_134528195c_1) isa node-link; 

match
$L_8740349737989_134528195c_1 isa list, has hash "L_8740349737989_134528195c_1"; 

insert
$N_8740349737989_134528195c_1_1 isa variable-ssa, has hash "N_8740349737989_134528195c_1_1", has var "ebx", has version 3, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349737989_134528195c_1_1, from-node: $L_8740349737989_134528195c_1) isa node-link; 

match
$L_8740349737989_134528195c_1 isa list, has hash "L_8740349737989_134528195c_1"; 

insert
$N_8740349737989_134528195c_1_2 isa variable-ssa, has hash "N_8740349737989_134528195c_1_2", has var "ebx", has version 4, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349737989_134528195c_1_2, from-node: $L_8740349737989_134528195c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 10, has bb-end 16; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349740549_134528195c isa instruction, has hash "N_8740349740549_134528195c", has il-index 14, has asm-address "0x804bcc3", has operation-type "MLIL_VAR_PHI", has ins-text "edi_1#2 = ϕ(edi#0, edi_1#1)";
(contains-instruction: $N_8740349740549_134528195c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349740549_134528195c isa instruction, has hash "N_8740349740549_134528195c"; 

insert
$N_8740349740549_134528195c_0 isa variable-ssa, has hash "N_8740349740549_134528195c_0", has var "edi_1", has version 2, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349740549_134528195c_0, from-node: $N_8740349740549_134528195c) isa node-link; 

match
$N_8740349740549_134528195c isa instruction, has hash "N_8740349740549_134528195c"; 

insert
$L_8740349740549_134528195c_1 isa list, has hash "L_8740349740549_134528195c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349740549_134528195c_1, from-node: $N_8740349740549_134528195c) isa node-link; 

match
$L_8740349740549_134528195c_1 isa list, has hash "L_8740349740549_134528195c_1"; 

insert
$N_8740349740549_134528195c_1_0 isa variable-ssa, has hash "N_8740349740549_134528195c_1_0", has var "edi", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349740549_134528195c_1_0, from-node: $L_8740349740549_134528195c_1) isa node-link; 

match
$L_8740349740549_134528195c_1 isa list, has hash "L_8740349740549_134528195c_1"; 

insert
$N_8740349740549_134528195c_1_1 isa variable-ssa, has hash "N_8740349740549_134528195c_1_1", has var "edi_1", has version 1, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349740549_134528195c_1_1, from-node: $L_8740349740549_134528195c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 10, has bb-end 16; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349743621_134528195c isa instruction, has hash "N_8740349743621_134528195c", has il-index 12, has asm-address "0x804bcc3", has operation-type "MLIL_VAR_PHI", has ins-text "arg2#3 = ϕ(arg2#0, arg2#2)";
(contains-instruction: $N_8740349743621_134528195c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349743621_134528195c isa instruction, has hash "N_8740349743621_134528195c"; 

insert
$N_8740349743621_134528195c_0 isa variable-ssa, has hash "N_8740349743621_134528195c_0", has var "arg2", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349743621_134528195c_0, from-node: $N_8740349743621_134528195c) isa node-link; 

match
$N_8740349743621_134528195c isa instruction, has hash "N_8740349743621_134528195c"; 

insert
$L_8740349743621_134528195c_1 isa list, has hash "L_8740349743621_134528195c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349743621_134528195c_1, from-node: $N_8740349743621_134528195c) isa node-link; 

match
$L_8740349743621_134528195c_1 isa list, has hash "L_8740349743621_134528195c_1"; 

insert
$N_8740349743621_134528195c_1_0 isa variable-ssa, has hash "N_8740349743621_134528195c_1_0", has var "arg2", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349743621_134528195c_1_0, from-node: $L_8740349743621_134528195c_1) isa node-link; 

match
$L_8740349743621_134528195c_1 isa list, has hash "L_8740349743621_134528195c_1"; 

insert
$N_8740349743621_134528195c_1_1 isa variable-ssa, has hash "N_8740349743621_134528195c_1_1", has var "arg2", has version 2, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349743621_134528195c_1_1, from-node: $L_8740349743621_134528195c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 10, has bb-end 16; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349750981_134528195c isa instruction, has hash "N_8740349750981_134528195c", has il-index 10, has asm-address "0x804bcc3", has operation-type "MLIL_VAR_PHI", has ins-text "arg1#3 = ϕ(arg1#0, arg1#2)";
(contains-instruction: $N_8740349750981_134528195c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349750981_134528195c isa instruction, has hash "N_8740349750981_134528195c"; 

insert
$N_8740349750981_134528195c_0 isa variable-ssa, has hash "N_8740349750981_134528195c_0", has var "arg1", has version 3, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349750981_134528195c_0, from-node: $N_8740349750981_134528195c) isa node-link; 

match
$N_8740349750981_134528195c isa instruction, has hash "N_8740349750981_134528195c"; 

insert
$L_8740349750981_134528195c_1 isa list, has hash "L_8740349750981_134528195c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349750981_134528195c_1, from-node: $N_8740349750981_134528195c) isa node-link; 

match
$L_8740349750981_134528195c_1 isa list, has hash "L_8740349750981_134528195c_1"; 

insert
$N_8740349750981_134528195c_1_0 isa variable-ssa, has hash "N_8740349750981_134528195c_1_0", has var "arg1", has version 0, has edge-label "0", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349750981_134528195c_1_0, from-node: $L_8740349750981_134528195c_1) isa node-link; 

match
$L_8740349750981_134528195c_1 isa list, has hash "L_8740349750981_134528195c_1"; 

insert
$N_8740349750981_134528195c_1_1 isa variable-ssa, has hash "N_8740349750981_134528195c_1_1", has var "arg1", has version 2, has edge-label "1", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349750981_134528195c_1_1, from-node: $L_8740349750981_134528195c_1) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 17, has bb-end 25; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 17, has bb-end 25; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 17, has bb-end 25; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349442053_134528160c isa instruction, has hash "N_8740349442053_134528160c", has il-index 19, has asm-address "0x804bca0", has operation-type "MLIL_VAR_PHI", has ins-text "arg2#1 = ϕ(arg2#0, arg2#2)";
(contains-instruction: $N_8740349442053_134528160c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349442053_134528160c isa instruction, has hash "N_8740349442053_134528160c"; 

insert
$N_8740349442053_134528160c_0 isa variable-ssa, has hash "N_8740349442053_134528160c_0", has var "arg2", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349442053_134528160c_0, from-node: $N_8740349442053_134528160c) isa node-link; 

match
$N_8740349442053_134528160c isa instruction, has hash "N_8740349442053_134528160c"; 

insert
$L_8740349442053_134528160c_1 isa list, has hash "L_8740349442053_134528160c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349442053_134528160c_1, from-node: $N_8740349442053_134528160c) isa node-link; 

match
$L_8740349442053_134528160c_1 isa list, has hash "L_8740349442053_134528160c_1"; 

insert
$N_8740349442053_134528160c_1_0 isa variable-ssa, has hash "N_8740349442053_134528160c_1_0", has var "arg2", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349442053_134528160c_1_0, from-node: $L_8740349442053_134528160c_1) isa node-link; 

match
$L_8740349442053_134528160c_1 isa list, has hash "L_8740349442053_134528160c_1"; 

insert
$N_8740349442053_134528160c_1_1 isa variable-ssa, has hash "N_8740349442053_134528160c_1_1", has var "arg2", has version 2, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349442053_134528160c_1_1, from-node: $L_8740349442053_134528160c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 17, has bb-end 25; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349450185_134528160c isa instruction, has hash "N_8740349450185_134528160c", has il-index 20, has asm-address "0x804bca0", has operation-type "MLIL_VAR_PHI", has ins-text "ebx#3 = ϕ(ebx#2, ebx#4)";
(contains-instruction: $N_8740349450185_134528160c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349450185_134528160c isa instruction, has hash "N_8740349450185_134528160c"; 

insert
$N_8740349450185_134528160c_0 isa variable-ssa, has hash "N_8740349450185_134528160c_0", has var "ebx", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349450185_134528160c_0, from-node: $N_8740349450185_134528160c) isa node-link; 

match
$N_8740349450185_134528160c isa instruction, has hash "N_8740349450185_134528160c"; 

insert
$L_8740349450185_134528160c_1 isa list, has hash "L_8740349450185_134528160c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349450185_134528160c_1, from-node: $N_8740349450185_134528160c) isa node-link; 

match
$L_8740349450185_134528160c_1 isa list, has hash "L_8740349450185_134528160c_1"; 

insert
$N_8740349450185_134528160c_1_0 isa variable-ssa, has hash "N_8740349450185_134528160c_1_0", has var "ebx", has version 2, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349450185_134528160c_1_0, from-node: $L_8740349450185_134528160c_1) isa node-link; 

match
$L_8740349450185_134528160c_1 isa list, has hash "L_8740349450185_134528160c_1"; 

insert
$N_8740349450185_134528160c_1_1 isa variable-ssa, has hash "N_8740349450185_134528160c_1_1", has var "ebx", has version 4, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349450185_134528160c_1_1, from-node: $L_8740349450185_134528160c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 17, has bb-end 25; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349673117_134528160c isa instruction, has hash "N_8740349673117_134528160c", has il-index 22, has asm-address "0x804bca0", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_1#2 = esi#1";
(contains-instruction: $N_8740349673117_134528160c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349673117_134528160c isa instruction, has hash "N_8740349673117_134528160c"; 

insert
$N_8740349673117_134528160c_0 isa variable-ssa, has hash "N_8740349673117_134528160c_0", has var "ecx_1", has version 2, has edge-label "dest", has var-type "int32_t*", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349673117_134528160c_0, from-node: $N_8740349673117_134528160c) isa node-link; 

match
$N_8740349673117_134528160c isa instruction, has hash "N_8740349673117_134528160c"; 

insert
$N_8740349673117_134528160c_1 isa MLIL_VAR_SSA, has hash "N_8740349673117_134528160c_1", has edge-label "src";
(to-node: $N_8740349673117_134528160c_1, from-node: $N_8740349673117_134528160c) isa node-link; 

match
$N_8740349673117_134528160c_1 isa operation, has hash "N_8740349673117_134528160c_1"; 

insert
$N_8740349673117_134528160c_1_0 isa variable-ssa, has hash "N_8740349673117_134528160c_1_0", has var "esi", has version 1, has edge-label "src", has var-type "int32_t*", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349673117_134528160c_1_0, from-node: $N_8740349673117_134528160c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 17, has bb-end 25; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349677829_134528160c isa instruction, has hash "N_8740349677829_134528160c", has il-index 21, has asm-address "0x804bca0", has operation-type "MLIL_MEM_PHI", has ins-text "mem#1 = ϕ(mem#0, mem#3)";
(contains-instruction: $N_8740349677829_134528160c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349677829_134528160c isa instruction, has hash "N_8740349677829_134528160c"; 

insert
$N_8740349677829_134528160c_0 isa constant, has hash "N_8740349677829_134528160c_0", has constant-value "1", has edge-label "dest_memory";
(to-node: $N_8740349677829_134528160c_0, from-node: $N_8740349677829_134528160c) isa node-link; 

match
$N_8740349677829_134528160c isa instruction, has hash "N_8740349677829_134528160c"; 

insert
$L_8740349677829_134528160c_1 isa list, has hash "L_8740349677829_134528160c_1", has list-size 2, has edge-label "src_memory";
(to-node: $L_8740349677829_134528160c_1, from-node: $N_8740349677829_134528160c) isa node-link; 

match
$L_8740349677829_134528160c_1 isa list, has hash "L_8740349677829_134528160c_1"; 

insert
$N_8740349677829_134528160c_1_0 isa constant, has hash "N_8740349677829_134528160c_1_0", has constant-value "0", has edge-label "0";
(to-node: $N_8740349677829_134528160c_1_0, from-node: $L_8740349677829_134528160c_1) isa node-link; 

match
$L_8740349677829_134528160c_1 isa list, has hash "L_8740349677829_134528160c_1"; 

insert
$N_8740349677829_134528160c_1_1 isa constant, has hash "N_8740349677829_134528160c_1_1", has constant-value "3", has edge-label "1";
(to-node: $N_8740349677829_134528160c_1_1, from-node: $L_8740349677829_134528160c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 17, has bb-end 25; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349704161_134528160c isa instruction, has hash "N_8740349704161_134528160c", has il-index 18, has asm-address "0x804bca0", has operation-type "MLIL_VAR_PHI", has ins-text "ecx_3#1 = ϕ(ecx#0, ecx_3#4)";
(contains-instruction: $N_8740349704161_134528160c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349704161_134528160c isa instruction, has hash "N_8740349704161_134528160c"; 

insert
$N_8740349704161_134528160c_0 isa variable-ssa, has hash "N_8740349704161_134528160c_0", has var "ecx_3", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349704161_134528160c_0, from-node: $N_8740349704161_134528160c) isa node-link; 

match
$N_8740349704161_134528160c isa instruction, has hash "N_8740349704161_134528160c"; 

insert
$L_8740349704161_134528160c_1 isa list, has hash "L_8740349704161_134528160c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349704161_134528160c_1, from-node: $N_8740349704161_134528160c) isa node-link; 

match
$L_8740349704161_134528160c_1 isa list, has hash "L_8740349704161_134528160c_1"; 

insert
$N_8740349704161_134528160c_1_0 isa variable-ssa, has hash "N_8740349704161_134528160c_1_0", has var "ecx", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349704161_134528160c_1_0, from-node: $L_8740349704161_134528160c_1) isa node-link; 

match
$L_8740349704161_134528160c_1 isa list, has hash "L_8740349704161_134528160c_1"; 

insert
$N_8740349704161_134528160c_1_1 isa variable-ssa, has hash "N_8740349704161_134528160c_1_1", has var "ecx_3", has version 4, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349704161_134528160c_1_1, from-node: $L_8740349704161_134528160c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 17, has bb-end 25; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349707501_134528160c isa instruction, has hash "N_8740349707501_134528160c", has il-index 17, has asm-address "0x804bca0", has operation-type "MLIL_VAR_PHI", has ins-text "arg1#1 = ϕ(arg1#0, arg1#2)";
(contains-instruction: $N_8740349707501_134528160c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349707501_134528160c isa instruction, has hash "N_8740349707501_134528160c"; 

insert
$N_8740349707501_134528160c_0 isa variable-ssa, has hash "N_8740349707501_134528160c_0", has var "arg1", has version 1, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349707501_134528160c_0, from-node: $N_8740349707501_134528160c) isa node-link; 

match
$N_8740349707501_134528160c isa instruction, has hash "N_8740349707501_134528160c"; 

insert
$L_8740349707501_134528160c_1 isa list, has hash "L_8740349707501_134528160c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349707501_134528160c_1, from-node: $N_8740349707501_134528160c) isa node-link; 

match
$L_8740349707501_134528160c_1 isa list, has hash "L_8740349707501_134528160c_1"; 

insert
$N_8740349707501_134528160c_1_0 isa variable-ssa, has hash "N_8740349707501_134528160c_1_0", has var "arg1", has version 0, has edge-label "0", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349707501_134528160c_1_0, from-node: $L_8740349707501_134528160c_1) isa node-link; 

match
$L_8740349707501_134528160c_1 isa list, has hash "L_8740349707501_134528160c_1"; 

insert
$N_8740349707501_134528160c_1_1 isa variable-ssa, has hash "N_8740349707501_134528160c_1_1", has var "arg1", has version 2, has edge-label "1", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349707501_134528160c_1_1, from-node: $L_8740349707501_134528160c_1) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 17, has bb-end 25; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 17, has bb-end 25; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349476613_134528162c isa instruction, has hash "N_8740349476613_134528162c", has il-index 23, has asm-address "0x804bca2", has operation-type "MLIL_CALL_SSA", has ins-text "arg1#2, arg2#2, mem#2 = 0x804bd00(arg1#1, arg2#1, ecx_1#2) @ mem#1";
(contains-instruction: $N_8740349476613_134528162c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349476613_134528162c isa instruction, has hash "N_8740349476613_134528162c"; 

insert
$N_8740349476613_134528162c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740349476613_134528162c_0", has edge-label "output";
(to-node: $N_8740349476613_134528162c_0, from-node: $N_8740349476613_134528162c) isa node-link; 

match
$N_8740349476613_134528162c_0 isa operation, has hash "N_8740349476613_134528162c_0"; 

insert
$N_8740349476613_134528162c_0_0 isa constant, has hash "N_8740349476613_134528162c_0_0", has constant-value "2", has edge-label "dest_memory";
(to-node: $N_8740349476613_134528162c_0_0, from-node: $N_8740349476613_134528162c_0) isa node-link; 

match
$N_8740349476613_134528162c_0 isa operation, has hash "N_8740349476613_134528162c_0"; 

insert
$L_8740349476613_134528162c_0_1 isa list, has hash "L_8740349476613_134528162c_0_1", has list-size 2, has edge-label "dest";
(to-node: $L_8740349476613_134528162c_0_1, from-node: $N_8740349476613_134528162c_0) isa node-link; 

match
$L_8740349476613_134528162c_0_1 isa list, has hash "L_8740349476613_134528162c_0_1"; 

insert
$N_8740349476613_134528162c_0_1_0 isa variable-ssa, has hash "N_8740349476613_134528162c_0_1_0", has var "arg1", has version 2, has edge-label "0", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349476613_134528162c_0_1_0, from-node: $L_8740349476613_134528162c_0_1) isa node-link; 

match
$L_8740349476613_134528162c_0_1 isa list, has hash "L_8740349476613_134528162c_0_1"; 

insert
$N_8740349476613_134528162c_0_1_1 isa variable-ssa, has hash "N_8740349476613_134528162c_0_1_1", has var "arg2", has version 2, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349476613_134528162c_0_1_1, from-node: $L_8740349476613_134528162c_0_1) isa node-link; 

match
$N_8740349476613_134528162c isa instruction, has hash "N_8740349476613_134528162c"; 

insert
$N_8740349476613_134528162c_1 isa MLIL_CONST_PTR, has hash "N_8740349476613_134528162c_1", has edge-label "dest";
(to-node: $N_8740349476613_134528162c_1, from-node: $N_8740349476613_134528162c) isa node-link; 

match
$N_8740349476613_134528162c_1 isa operation, has hash "N_8740349476613_134528162c_1"; 

insert
$N_8740349476613_134528162c_1_0 isa constant, has hash "N_8740349476613_134528162c_1_0", has constant-value "134528256", has edge-label "constant";
(to-node: $N_8740349476613_134528162c_1_0, from-node: $N_8740349476613_134528162c_1) isa node-link; 

match
$N_8740349476613_134528162c isa instruction, has hash "N_8740349476613_134528162c"; 

insert
$L_8740349476613_134528162c_2 isa list, has hash "L_8740349476613_134528162c_2", has list-size 3, has edge-label "params";
(to-node: $L_8740349476613_134528162c_2, from-node: $N_8740349476613_134528162c) isa node-link; 

match
$L_8740349476613_134528162c_2 isa list, has hash "L_8740349476613_134528162c_2"; 

insert
$N_8740349476613_134528162c_2_0 isa MLIL_VAR_SSA, has hash "N_8740349476613_134528162c_2_0", has edge-label "0";
(to-node: $N_8740349476613_134528162c_2_0, from-node: $L_8740349476613_134528162c_2) isa node-link; 

match
$N_8740349476613_134528162c_2_0 isa operation, has hash "N_8740349476613_134528162c_2_0"; 

insert
$N_8740349476613_134528162c_2_0_0 isa variable-ssa, has hash "N_8740349476613_134528162c_2_0_0", has var "arg1", has version 1, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349476613_134528162c_2_0_0, from-node: $N_8740349476613_134528162c_2_0) isa node-link; 

match
$L_8740349476613_134528162c_2 isa list, has hash "L_8740349476613_134528162c_2"; 

insert
$N_8740349476613_134528162c_2_1 isa MLIL_VAR_SSA, has hash "N_8740349476613_134528162c_2_1", has edge-label "1";
(to-node: $N_8740349476613_134528162c_2_1, from-node: $L_8740349476613_134528162c_2) isa node-link; 

match
$N_8740349476613_134528162c_2_1 isa operation, has hash "N_8740349476613_134528162c_2_1"; 

insert
$N_8740349476613_134528162c_2_1_0 isa variable-ssa, has hash "N_8740349476613_134528162c_2_1_0", has var "arg2", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349476613_134528162c_2_1_0, from-node: $N_8740349476613_134528162c_2_1) isa node-link; 

match
$L_8740349476613_134528162c_2 isa list, has hash "L_8740349476613_134528162c_2"; 

insert
$N_8740349476613_134528162c_2_2 isa MLIL_VAR_SSA, has hash "N_8740349476613_134528162c_2_2", has edge-label "2";
(to-node: $N_8740349476613_134528162c_2_2, from-node: $L_8740349476613_134528162c_2) isa node-link; 

match
$N_8740349476613_134528162c_2_2 isa operation, has hash "N_8740349476613_134528162c_2_2"; 

insert
$N_8740349476613_134528162c_2_2_0 isa variable-ssa, has hash "N_8740349476613_134528162c_2_2_0", has var "ecx_1", has version 2, has edge-label "src", has var-type "int32_t*", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349476613_134528162c_2_2_0, from-node: $N_8740349476613_134528162c_2_2) isa node-link; 

match
$N_8740349476613_134528162c isa instruction, has hash "N_8740349476613_134528162c"; 

insert
$N_8740349476613_134528162c_3 isa constant, has hash "N_8740349476613_134528162c_3", has constant-value "1", has edge-label "src_memory";
(to-node: $N_8740349476613_134528162c_3, from-node: $N_8740349476613_134528162c) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 17, has bb-end 25; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 17, has bb-end 25; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349601709_134528167c isa instruction, has hash "N_8740349601709_134528167c", has il-index 24, has asm-address "0x804bca7", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_2#3 = 0xffffffff";
(contains-instruction: $N_8740349601709_134528167c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349601709_134528167c isa instruction, has hash "N_8740349601709_134528167c"; 

insert
$N_8740349601709_134528167c_0 isa variable-ssa, has hash "N_8740349601709_134528167c_0", has var "ecx_2", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349601709_134528167c_0, from-node: $N_8740349601709_134528167c) isa node-link; 

match
$N_8740349601709_134528167c isa instruction, has hash "N_8740349601709_134528167c"; 

insert
$N_8740349601709_134528167c_1 isa MLIL_CONST, has hash "N_8740349601709_134528167c_1", has edge-label "src";
(to-node: $N_8740349601709_134528167c_1, from-node: $N_8740349601709_134528167c) isa node-link; 

match
$N_8740349601709_134528167c_1 isa operation, has hash "N_8740349601709_134528167c_1"; 

insert
$N_8740349601709_134528167c_1_0 isa constant, has hash "N_8740349601709_134528167c_1_0", has constant-value "4294967295", has edge-label "constant";
(to-node: $N_8740349601709_134528167c_1_0, from-node: $N_8740349601709_134528167c_1) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 17, has bb-end 25; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 17, has bb-end 25; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349422261_134528175c isa instruction, has hash "N_8740349422261_134528175c", has il-index 25, has asm-address "0x804bcaf", has operation-type "MLIL_IF", has ins-text "if (arg1#2 == 0xffffffff) then 29 @ 0x0 else 30 @ 0x804bcb3";
(contains-instruction: $N_8740349422261_134528175c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349422261_134528175c isa instruction, has hash "N_8740349422261_134528175c"; 

insert
$N_8740349422261_134528175c_0 isa MLIL_CMP_E, has hash "N_8740349422261_134528175c_0", has edge-label "condition";
(to-node: $N_8740349422261_134528175c_0, from-node: $N_8740349422261_134528175c) isa node-link; 

match
$N_8740349422261_134528175c_0 isa operation, has hash "N_8740349422261_134528175c_0"; 

insert
$N_8740349422261_134528175c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349422261_134528175c_0_0", has edge-label "left";
(to-node: $N_8740349422261_134528175c_0_0, from-node: $N_8740349422261_134528175c_0) isa node-link; 

match
$N_8740349422261_134528175c_0_0 isa operation, has hash "N_8740349422261_134528175c_0_0"; 

insert
$N_8740349422261_134528175c_0_0_0 isa variable-ssa, has hash "N_8740349422261_134528175c_0_0_0", has var "arg1", has version 2, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349422261_134528175c_0_0_0, from-node: $N_8740349422261_134528175c_0_0) isa node-link; 

match
$N_8740349422261_134528175c_0 isa operation, has hash "N_8740349422261_134528175c_0"; 

insert
$N_8740349422261_134528175c_0_1 isa MLIL_CONST, has hash "N_8740349422261_134528175c_0_1", has edge-label "right";
(to-node: $N_8740349422261_134528175c_0_1, from-node: $N_8740349422261_134528175c_0) isa node-link; 

match
$N_8740349422261_134528175c_0_1 isa operation, has hash "N_8740349422261_134528175c_0_1"; 

insert
$N_8740349422261_134528175c_0_1_0 isa constant, has hash "N_8740349422261_134528175c_0_1_0", has constant-value "4294967295", has edge-label "constant";
(to-node: $N_8740349422261_134528175c_0_1_0, from-node: $N_8740349422261_134528175c_0_1) isa node-link; 

match
$N_8740349422261_134528175c isa instruction, has hash "N_8740349422261_134528175c"; 

insert
$N_8740349422261_134528175c_1 isa constant, has hash "N_8740349422261_134528175c_1", has constant-value "29", has edge-label "true";
(to-node: $N_8740349422261_134528175c_1, from-node: $N_8740349422261_134528175c) isa node-link; 

match
$N_8740349422261_134528175c isa instruction, has hash "N_8740349422261_134528175c"; 

insert
$N_8740349422261_134528175c_2 isa constant, has hash "N_8740349422261_134528175c_2", has constant-value "30", has edge-label "false";
(to-node: $N_8740349422261_134528175c_2, from-node: $N_8740349422261_134528175c) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 26, has bb-end 26; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 27, has bb-end 28; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 27, has bb-end 28; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 27, has bb-end 28; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349478029_134528197c isa instruction, has hash "N_8740349478029_134528197c", has il-index 27, has asm-address "0x804bcc5", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edi_2#3 = sx.d(arg5#0)";
(contains-instruction: $N_8740349478029_134528197c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349478029_134528197c isa instruction, has hash "N_8740349478029_134528197c"; 

insert
$N_8740349478029_134528197c_0 isa variable-ssa, has hash "N_8740349478029_134528197c_0", has var "edi_2", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349478029_134528197c_0, from-node: $N_8740349478029_134528197c) isa node-link; 

match
$N_8740349478029_134528197c isa instruction, has hash "N_8740349478029_134528197c"; 

insert
$N_8740349478029_134528197c_1 isa MLIL_SX, has hash "N_8740349478029_134528197c_1", has edge-label "src";
(to-node: $N_8740349478029_134528197c_1, from-node: $N_8740349478029_134528197c) isa node-link; 

match
$N_8740349478029_134528197c_1 isa operation, has hash "N_8740349478029_134528197c_1"; 

insert
$N_8740349478029_134528197c_1_0 isa MLIL_VAR_SSA, has hash "N_8740349478029_134528197c_1_0", has edge-label "src";
(to-node: $N_8740349478029_134528197c_1_0, from-node: $N_8740349478029_134528197c_1) isa node-link; 

match
$N_8740349478029_134528197c_1_0 isa operation, has hash "N_8740349478029_134528197c_1_0"; 

insert
$N_8740349478029_134528197c_1_0_0 isa variable-ssa, has hash "N_8740349478029_134528197c_1_0_0", has var "arg5", has version 0, has edge-label "src", has var-type "char", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349478029_134528197c_1_0_0, from-node: $N_8740349478029_134528197c_1_0) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 27, has bb-end 28; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 27, has bb-end 28; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349541025_134528202c isa instruction, has hash "N_8740349541025_134528202c", has il-index 28, has asm-address "0x804bcca", has operation-type "MLIL_GOTO", has ins-text "goto 40 @ 0x804bcd0";
(contains-instruction: $N_8740349541025_134528202c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349541025_134528202c isa instruction, has hash "N_8740349541025_134528202c"; 

insert
$N_8740349541025_134528202c_0 isa constant, has hash "N_8740349541025_134528202c_0", has constant-value "40", has edge-label "dest";
(to-node: $N_8740349541025_134528202c_0, from-node: $N_8740349541025_134528202c) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 29, has bb-end 29; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 30, has bb-end 30; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 30, has bb-end 30; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 30, has bb-end 30; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349532833_134528179c isa instruction, has hash "N_8740349532833_134528179c", has il-index 30, has asm-address "0x804bcb3", has operation-type "MLIL_IF", has ins-text "if (arg1#2 == edi_1#1) then 56 @ 0x0 else 57 @ 0x804bcb5";
(contains-instruction: $N_8740349532833_134528179c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349532833_134528179c isa instruction, has hash "N_8740349532833_134528179c"; 

insert
$N_8740349532833_134528179c_0 isa MLIL_CMP_E, has hash "N_8740349532833_134528179c_0", has edge-label "condition";
(to-node: $N_8740349532833_134528179c_0, from-node: $N_8740349532833_134528179c) isa node-link; 

match
$N_8740349532833_134528179c_0 isa operation, has hash "N_8740349532833_134528179c_0"; 

insert
$N_8740349532833_134528179c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349532833_134528179c_0_0", has edge-label "left";
(to-node: $N_8740349532833_134528179c_0_0, from-node: $N_8740349532833_134528179c_0) isa node-link; 

match
$N_8740349532833_134528179c_0_0 isa operation, has hash "N_8740349532833_134528179c_0_0"; 

insert
$N_8740349532833_134528179c_0_0_0 isa variable-ssa, has hash "N_8740349532833_134528179c_0_0_0", has var "arg1", has version 2, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349532833_134528179c_0_0_0, from-node: $N_8740349532833_134528179c_0_0) isa node-link; 

match
$N_8740349532833_134528179c_0 isa operation, has hash "N_8740349532833_134528179c_0"; 

insert
$N_8740349532833_134528179c_0_1 isa MLIL_VAR_SSA, has hash "N_8740349532833_134528179c_0_1", has edge-label "right";
(to-node: $N_8740349532833_134528179c_0_1, from-node: $N_8740349532833_134528179c_0) isa node-link; 

match
$N_8740349532833_134528179c_0_1 isa operation, has hash "N_8740349532833_134528179c_0_1"; 

insert
$N_8740349532833_134528179c_0_1_0 isa variable-ssa, has hash "N_8740349532833_134528179c_0_1_0", has var "edi_1", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349532833_134528179c_0_1_0, from-node: $N_8740349532833_134528179c_0_1) isa node-link; 

match
$N_8740349532833_134528179c isa instruction, has hash "N_8740349532833_134528179c"; 

insert
$N_8740349532833_134528179c_1 isa constant, has hash "N_8740349532833_134528179c_1", has constant-value "56", has edge-label "true";
(to-node: $N_8740349532833_134528179c_1, from-node: $N_8740349532833_134528179c) isa node-link; 

match
$N_8740349532833_134528179c isa instruction, has hash "N_8740349532833_134528179c"; 

insert
$N_8740349532833_134528179c_2 isa constant, has hash "N_8740349532833_134528179c_2", has constant-value "57", has edge-label "false";
(to-node: $N_8740349532833_134528179c_2, from-node: $N_8740349532833_134528179c) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 31, has bb-end 39; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 31, has bb-end 39; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 31, has bb-end 39; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349481033_134528229c isa instruction, has hash "N_8740349481033_134528229c", has il-index 36, has asm-address "0x804bce5", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax#7 = arg3#0";
(contains-instruction: $N_8740349481033_134528229c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349481033_134528229c isa instruction, has hash "N_8740349481033_134528229c"; 

insert
$N_8740349481033_134528229c_0 isa variable-ssa, has hash "N_8740349481033_134528229c_0", has var "eax", has version 7, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349481033_134528229c_0, from-node: $N_8740349481033_134528229c) isa node-link; 

match
$N_8740349481033_134528229c isa instruction, has hash "N_8740349481033_134528229c"; 

insert
$N_8740349481033_134528229c_1 isa MLIL_VAR_SSA, has hash "N_8740349481033_134528229c_1", has edge-label "src";
(to-node: $N_8740349481033_134528229c_1, from-node: $N_8740349481033_134528229c) isa node-link; 

match
$N_8740349481033_134528229c_1 isa operation, has hash "N_8740349481033_134528229c_1"; 

insert
$N_8740349481033_134528229c_1_0 isa variable-ssa, has hash "N_8740349481033_134528229c_1_0", has var "arg3", has version 0, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349481033_134528229c_1_0, from-node: $N_8740349481033_134528229c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 31, has bb-end 39; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349504005_134528229c isa instruction, has hash "N_8740349504005_134528229c", has il-index 35, has asm-address "0x804bce5", has operation-type "MLIL_MEM_PHI", has ins-text "mem#7 = ϕ(mem#4, mem#6)";
(contains-instruction: $N_8740349504005_134528229c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349504005_134528229c isa instruction, has hash "N_8740349504005_134528229c"; 

insert
$N_8740349504005_134528229c_0 isa constant, has hash "N_8740349504005_134528229c_0", has constant-value "7", has edge-label "dest_memory";
(to-node: $N_8740349504005_134528229c_0, from-node: $N_8740349504005_134528229c) isa node-link; 

match
$N_8740349504005_134528229c isa instruction, has hash "N_8740349504005_134528229c"; 

insert
$L_8740349504005_134528229c_1 isa list, has hash "L_8740349504005_134528229c_1", has list-size 2, has edge-label "src_memory";
(to-node: $L_8740349504005_134528229c_1, from-node: $N_8740349504005_134528229c) isa node-link; 

match
$L_8740349504005_134528229c_1 isa list, has hash "L_8740349504005_134528229c_1"; 

insert
$N_8740349504005_134528229c_1_0 isa constant, has hash "N_8740349504005_134528229c_1_0", has constant-value "4", has edge-label "0";
(to-node: $N_8740349504005_134528229c_1_0, from-node: $L_8740349504005_134528229c_1) isa node-link; 

match
$L_8740349504005_134528229c_1 isa list, has hash "L_8740349504005_134528229c_1"; 

insert
$N_8740349504005_134528229c_1_1 isa constant, has hash "N_8740349504005_134528229c_1_1", has constant-value "6", has edge-label "1";
(to-node: $N_8740349504005_134528229c_1_1, from-node: $L_8740349504005_134528229c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 31, has bb-end 39; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349523717_134528229c isa instruction, has hash "N_8740349523717_134528229c", has il-index 32, has asm-address "0x804bce5", has operation-type "MLIL_VAR_PHI", has ins-text "ecx_2#9 = ϕ(ecx_3#5, ecx_2#8)";
(contains-instruction: $N_8740349523717_134528229c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349523717_134528229c isa instruction, has hash "N_8740349523717_134528229c"; 

insert
$N_8740349523717_134528229c_0 isa variable-ssa, has hash "N_8740349523717_134528229c_0", has var "ecx_2", has version 9, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349523717_134528229c_0, from-node: $N_8740349523717_134528229c) isa node-link; 

match
$N_8740349523717_134528229c isa instruction, has hash "N_8740349523717_134528229c"; 

insert
$L_8740349523717_134528229c_1 isa list, has hash "L_8740349523717_134528229c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349523717_134528229c_1, from-node: $N_8740349523717_134528229c) isa node-link; 

match
$L_8740349523717_134528229c_1 isa list, has hash "L_8740349523717_134528229c_1"; 

insert
$N_8740349523717_134528229c_1_0 isa variable-ssa, has hash "N_8740349523717_134528229c_1_0", has var "ecx_3", has version 5, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349523717_134528229c_1_0, from-node: $L_8740349523717_134528229c_1) isa node-link; 

match
$L_8740349523717_134528229c_1 isa list, has hash "L_8740349523717_134528229c_1"; 

insert
$N_8740349523717_134528229c_1_1 isa variable-ssa, has hash "N_8740349523717_134528229c_1_1", has var "ecx_2", has version 8, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349523717_134528229c_1_1, from-node: $L_8740349523717_134528229c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 31, has bb-end 39; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349534617_134528229c isa instruction, has hash "N_8740349534617_134528229c", has il-index 31, has asm-address "0x804bce5", has operation-type "MLIL_VAR_PHI", has ins-text "arg1#6 = ϕ(arg1#3, arg1#5)";
(contains-instruction: $N_8740349534617_134528229c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349534617_134528229c isa instruction, has hash "N_8740349534617_134528229c"; 

insert
$N_8740349534617_134528229c_0 isa variable-ssa, has hash "N_8740349534617_134528229c_0", has var "arg1", has version 6, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349534617_134528229c_0, from-node: $N_8740349534617_134528229c) isa node-link; 

match
$N_8740349534617_134528229c isa instruction, has hash "N_8740349534617_134528229c"; 

insert
$L_8740349534617_134528229c_1 isa list, has hash "L_8740349534617_134528229c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349534617_134528229c_1, from-node: $N_8740349534617_134528229c) isa node-link; 

match
$L_8740349534617_134528229c_1 isa list, has hash "L_8740349534617_134528229c_1"; 

insert
$N_8740349534617_134528229c_1_0 isa variable-ssa, has hash "N_8740349534617_134528229c_1_0", has var "arg1", has version 3, has edge-label "0", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349534617_134528229c_1_0, from-node: $L_8740349534617_134528229c_1) isa node-link; 

match
$L_8740349534617_134528229c_1 isa list, has hash "L_8740349534617_134528229c_1"; 

insert
$N_8740349534617_134528229c_1_1 isa variable-ssa, has hash "N_8740349534617_134528229c_1_1", has var "arg1", has version 5, has edge-label "1", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349534617_134528229c_1_1, from-node: $L_8740349534617_134528229c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 31, has bb-end 39; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349623045_134528229c isa instruction, has hash "N_8740349623045_134528229c", has il-index 33, has asm-address "0x804bce5", has operation-type "MLIL_VAR_PHI", has ins-text "arg2#6 = ϕ(arg2#3, arg2#5)";
(contains-instruction: $N_8740349623045_134528229c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349623045_134528229c isa instruction, has hash "N_8740349623045_134528229c"; 

insert
$N_8740349623045_134528229c_0 isa variable-ssa, has hash "N_8740349623045_134528229c_0", has var "arg2", has version 6, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349623045_134528229c_0, from-node: $N_8740349623045_134528229c) isa node-link; 

match
$N_8740349623045_134528229c isa instruction, has hash "N_8740349623045_134528229c"; 

insert
$L_8740349623045_134528229c_1 isa list, has hash "L_8740349623045_134528229c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349623045_134528229c_1, from-node: $N_8740349623045_134528229c) isa node-link; 

match
$L_8740349623045_134528229c_1 isa list, has hash "L_8740349623045_134528229c_1"; 

insert
$N_8740349623045_134528229c_1_0 isa variable-ssa, has hash "N_8740349623045_134528229c_1_0", has var "arg2", has version 3, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349623045_134528229c_1_0, from-node: $L_8740349623045_134528229c_1) isa node-link; 

match
$L_8740349623045_134528229c_1 isa list, has hash "L_8740349623045_134528229c_1"; 

insert
$N_8740349623045_134528229c_1_1 isa variable-ssa, has hash "N_8740349623045_134528229c_1_1", has var "arg2", has version 5, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349623045_134528229c_1_1, from-node: $L_8740349623045_134528229c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 31, has bb-end 39; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349636357_134528229c isa instruction, has hash "N_8740349636357_134528229c", has il-index 34, has asm-address "0x804bce5", has operation-type "MLIL_VAR_PHI", has ins-text "edi_2#4 = ϕ(edi_1#2, edi_2#3)";
(contains-instruction: $N_8740349636357_134528229c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349636357_134528229c isa instruction, has hash "N_8740349636357_134528229c"; 

insert
$N_8740349636357_134528229c_0 isa variable-ssa, has hash "N_8740349636357_134528229c_0", has var "edi_2", has version 4, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349636357_134528229c_0, from-node: $N_8740349636357_134528229c) isa node-link; 

match
$N_8740349636357_134528229c isa instruction, has hash "N_8740349636357_134528229c"; 

insert
$L_8740349636357_134528229c_1 isa list, has hash "L_8740349636357_134528229c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349636357_134528229c_1, from-node: $N_8740349636357_134528229c) isa node-link; 

match
$L_8740349636357_134528229c_1 isa list, has hash "L_8740349636357_134528229c_1"; 

insert
$N_8740349636357_134528229c_1_0 isa variable-ssa, has hash "N_8740349636357_134528229c_1_0", has var "edi_1", has version 2, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349636357_134528229c_1_0, from-node: $L_8740349636357_134528229c_1) isa node-link; 

match
$L_8740349636357_134528229c_1 isa list, has hash "L_8740349636357_134528229c_1"; 

insert
$N_8740349636357_134528229c_1_1 isa variable-ssa, has hash "N_8740349636357_134528229c_1_1", has var "edi_2", has version 3, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349636357_134528229c_1_1, from-node: $L_8740349636357_134528229c_1) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 31, has bb-end 39; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 31, has bb-end 39; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349441029_134528233c isa instruction, has hash "N_8740349441029_134528233c", has il-index 37, has asm-address "0x804bce9", has operation-type "MLIL_STORE_SSA", has ins-text "[eax#7 + ebx#5].b = 0 @ mem#7 -> mem#8";
(contains-instruction: $N_8740349441029_134528233c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349441029_134528233c isa instruction, has hash "N_8740349441029_134528233c"; 

insert
$N_8740349441029_134528233c_0 isa MLIL_ADD, has hash "N_8740349441029_134528233c_0", has edge-label "dest";
(to-node: $N_8740349441029_134528233c_0, from-node: $N_8740349441029_134528233c) isa node-link; 

match
$N_8740349441029_134528233c_0 isa operation, has hash "N_8740349441029_134528233c_0"; 

insert
$N_8740349441029_134528233c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349441029_134528233c_0_0", has edge-label "left";
(to-node: $N_8740349441029_134528233c_0_0, from-node: $N_8740349441029_134528233c_0) isa node-link; 

match
$N_8740349441029_134528233c_0_0 isa operation, has hash "N_8740349441029_134528233c_0_0"; 

insert
$N_8740349441029_134528233c_0_0_0 isa variable-ssa, has hash "N_8740349441029_134528233c_0_0_0", has var "eax", has version 7, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349441029_134528233c_0_0_0, from-node: $N_8740349441029_134528233c_0_0) isa node-link; 

match
$N_8740349441029_134528233c_0 isa operation, has hash "N_8740349441029_134528233c_0"; 

insert
$N_8740349441029_134528233c_0_1 isa MLIL_VAR_SSA, has hash "N_8740349441029_134528233c_0_1", has edge-label "right";
(to-node: $N_8740349441029_134528233c_0_1, from-node: $N_8740349441029_134528233c_0) isa node-link; 

match
$N_8740349441029_134528233c_0_1 isa operation, has hash "N_8740349441029_134528233c_0_1"; 

insert
$N_8740349441029_134528233c_0_1_0 isa variable-ssa, has hash "N_8740349441029_134528233c_0_1_0", has var "ebx", has version 5, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349441029_134528233c_0_1_0, from-node: $N_8740349441029_134528233c_0_1) isa node-link; 

match
$N_8740349441029_134528233c isa instruction, has hash "N_8740349441029_134528233c"; 

insert
$N_8740349441029_134528233c_1 isa constant, has hash "N_8740349441029_134528233c_1", has constant-value "8", has edge-label "dest_memory";
(to-node: $N_8740349441029_134528233c_1, from-node: $N_8740349441029_134528233c) isa node-link; 

match
$N_8740349441029_134528233c isa instruction, has hash "N_8740349441029_134528233c"; 

insert
$N_8740349441029_134528233c_2 isa constant, has hash "N_8740349441029_134528233c_2", has constant-value "7", has edge-label "src_memory";
(to-node: $N_8740349441029_134528233c_2, from-node: $N_8740349441029_134528233c) isa node-link; 

match
$N_8740349441029_134528233c isa instruction, has hash "N_8740349441029_134528233c"; 

insert
$N_8740349441029_134528233c_3 isa MLIL_CONST, has hash "N_8740349441029_134528233c_3", has edge-label "src";
(to-node: $N_8740349441029_134528233c_3, from-node: $N_8740349441029_134528233c) isa node-link; 

match
$N_8740349441029_134528233c_3 isa operation, has hash "N_8740349441029_134528233c_3"; 

insert
$N_8740349441029_134528233c_3_0 isa constant, has hash "N_8740349441029_134528233c_3_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349441029_134528233c_3_0, from-node: $N_8740349441029_134528233c_3) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 31, has bb-end 39; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 31, has bb-end 39; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349411409_134528237c isa instruction, has hash "N_8740349411409_134528237c", has il-index 38, has asm-address "0x804bced", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_2#10 = ebx#5";
(contains-instruction: $N_8740349411409_134528237c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349411409_134528237c isa instruction, has hash "N_8740349411409_134528237c"; 

insert
$N_8740349411409_134528237c_0 isa variable-ssa, has hash "N_8740349411409_134528237c_0", has var "ecx_2", has version 10, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349411409_134528237c_0, from-node: $N_8740349411409_134528237c) isa node-link; 

match
$N_8740349411409_134528237c isa instruction, has hash "N_8740349411409_134528237c"; 

insert
$N_8740349411409_134528237c_1 isa MLIL_VAR_SSA, has hash "N_8740349411409_134528237c_1", has edge-label "src";
(to-node: $N_8740349411409_134528237c_1, from-node: $N_8740349411409_134528237c) isa node-link; 

match
$N_8740349411409_134528237c_1 isa operation, has hash "N_8740349411409_134528237c_1"; 

insert
$N_8740349411409_134528237c_1_0 isa variable-ssa, has hash "N_8740349411409_134528237c_1_0", has var "ebx", has version 5, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349411409_134528237c_1_0, from-node: $N_8740349411409_134528237c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 31, has bb-end 39; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349492741_134528237c isa instruction, has hash "N_8740349492741_134528237c", has il-index 39, has asm-address "0x804bced", has operation-type "MLIL_GOTO", has ins-text "goto 48 @ 0x804bcef";
(contains-instruction: $N_8740349492741_134528237c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349492741_134528237c isa instruction, has hash "N_8740349492741_134528237c"; 

insert
$N_8740349492741_134528237c_0 isa constant, has hash "N_8740349492741_134528237c_0", has constant-value "48", has edge-label "dest";
(to-node: $N_8740349492741_134528237c_0, from-node: $N_8740349492741_134528237c) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 40, has bb-end 47; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 40, has bb-end 47; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 40, has bb-end 47; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349412349_134528208c isa instruction, has hash "N_8740349412349_134528208c", has il-index 44, has asm-address "0x804bcd0", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_4#7 = esi#1";
(contains-instruction: $N_8740349412349_134528208c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349412349_134528208c isa instruction, has hash "N_8740349412349_134528208c"; 

insert
$N_8740349412349_134528208c_0 isa variable-ssa, has hash "N_8740349412349_134528208c_0", has var "ecx_4", has version 7, has edge-label "dest", has var-type "int32_t*", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349412349_134528208c_0, from-node: $N_8740349412349_134528208c) isa node-link; 

match
$N_8740349412349_134528208c isa instruction, has hash "N_8740349412349_134528208c"; 

insert
$N_8740349412349_134528208c_1 isa MLIL_VAR_SSA, has hash "N_8740349412349_134528208c_1", has edge-label "src";
(to-node: $N_8740349412349_134528208c_1, from-node: $N_8740349412349_134528208c) isa node-link; 

match
$N_8740349412349_134528208c_1 isa operation, has hash "N_8740349412349_134528208c_1"; 

insert
$N_8740349412349_134528208c_1_0 isa variable-ssa, has hash "N_8740349412349_134528208c_1_0", has var "esi", has version 1, has edge-label "src", has var-type "int32_t*", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349412349_134528208c_1_0, from-node: $N_8740349412349_134528208c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 40, has bb-end 47; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349506821_134528208c isa instruction, has hash "N_8740349506821_134528208c", has il-index 42, has asm-address "0x804bcd0", has operation-type "MLIL_VAR_PHI", has ins-text "arg2#4 = ϕ(arg2#3, arg2#5)";
(contains-instruction: $N_8740349506821_134528208c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349506821_134528208c isa instruction, has hash "N_8740349506821_134528208c"; 

insert
$N_8740349506821_134528208c_0 isa variable-ssa, has hash "N_8740349506821_134528208c_0", has var "arg2", has version 4, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349506821_134528208c_0, from-node: $N_8740349506821_134528208c) isa node-link; 

match
$N_8740349506821_134528208c isa instruction, has hash "N_8740349506821_134528208c"; 

insert
$L_8740349506821_134528208c_1 isa list, has hash "L_8740349506821_134528208c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349506821_134528208c_1, from-node: $N_8740349506821_134528208c) isa node-link; 

match
$L_8740349506821_134528208c_1 isa list, has hash "L_8740349506821_134528208c_1"; 

insert
$N_8740349506821_134528208c_1_0 isa variable-ssa, has hash "N_8740349506821_134528208c_1_0", has var "arg2", has version 3, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349506821_134528208c_1_0, from-node: $L_8740349506821_134528208c_1) isa node-link; 

match
$L_8740349506821_134528208c_1 isa list, has hash "L_8740349506821_134528208c_1"; 

insert
$N_8740349506821_134528208c_1_1 isa variable-ssa, has hash "N_8740349506821_134528208c_1_1", has var "arg2", has version 5, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349506821_134528208c_1_1, from-node: $L_8740349506821_134528208c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 40, has bb-end 47; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349534093_134528208c isa instruction, has hash "N_8740349534093_134528208c", has il-index 40, has asm-address "0x804bcd0", has operation-type "MLIL_VAR_PHI", has ins-text "arg1#4 = ϕ(arg1#3, arg1#5)";
(contains-instruction: $N_8740349534093_134528208c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349534093_134528208c isa instruction, has hash "N_8740349534093_134528208c"; 

insert
$N_8740349534093_134528208c_0 isa variable-ssa, has hash "N_8740349534093_134528208c_0", has var "arg1", has version 4, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349534093_134528208c_0, from-node: $N_8740349534093_134528208c) isa node-link; 

match
$N_8740349534093_134528208c isa instruction, has hash "N_8740349534093_134528208c"; 

insert
$L_8740349534093_134528208c_1 isa list, has hash "L_8740349534093_134528208c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349534093_134528208c_1, from-node: $N_8740349534093_134528208c) isa node-link; 

match
$L_8740349534093_134528208c_1 isa list, has hash "L_8740349534093_134528208c_1"; 

insert
$N_8740349534093_134528208c_1_0 isa variable-ssa, has hash "N_8740349534093_134528208c_1_0", has var "arg1", has version 3, has edge-label "0", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349534093_134528208c_1_0, from-node: $L_8740349534093_134528208c_1) isa node-link; 

match
$L_8740349534093_134528208c_1 isa list, has hash "L_8740349534093_134528208c_1"; 

insert
$N_8740349534093_134528208c_1_1 isa variable-ssa, has hash "N_8740349534093_134528208c_1_1", has var "arg1", has version 5, has edge-label "1", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349534093_134528208c_1_1, from-node: $L_8740349534093_134528208c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 40, has bb-end 47; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349585165_134528208c isa instruction, has hash "N_8740349585165_134528208c", has il-index 43, has asm-address "0x804bcd0", has operation-type "MLIL_MEM_PHI", has ins-text "mem#5 = ϕ(mem#4, mem#6)";
(contains-instruction: $N_8740349585165_134528208c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349585165_134528208c isa instruction, has hash "N_8740349585165_134528208c"; 

insert
$N_8740349585165_134528208c_0 isa constant, has hash "N_8740349585165_134528208c_0", has constant-value "5", has edge-label "dest_memory";
(to-node: $N_8740349585165_134528208c_0, from-node: $N_8740349585165_134528208c) isa node-link; 

match
$N_8740349585165_134528208c isa instruction, has hash "N_8740349585165_134528208c"; 

insert
$L_8740349585165_134528208c_1 isa list, has hash "L_8740349585165_134528208c_1", has list-size 2, has edge-label "src_memory";
(to-node: $L_8740349585165_134528208c_1, from-node: $N_8740349585165_134528208c) isa node-link; 

match
$L_8740349585165_134528208c_1 isa list, has hash "L_8740349585165_134528208c_1"; 

insert
$N_8740349585165_134528208c_1_0 isa constant, has hash "N_8740349585165_134528208c_1_0", has constant-value "4", has edge-label "0";
(to-node: $N_8740349585165_134528208c_1_0, from-node: $L_8740349585165_134528208c_1) isa node-link; 

match
$L_8740349585165_134528208c_1 isa list, has hash "L_8740349585165_134528208c_1"; 

insert
$N_8740349585165_134528208c_1_1 isa constant, has hash "N_8740349585165_134528208c_1_1", has constant-value "6", has edge-label "1";
(to-node: $N_8740349585165_134528208c_1_1, from-node: $L_8740349585165_134528208c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 40, has bb-end 47; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349638661_134528208c isa instruction, has hash "N_8740349638661_134528208c", has il-index 41, has asm-address "0x804bcd0", has operation-type "MLIL_VAR_PHI", has ins-text "ecx_2#6 = ϕ(ecx_3#5, ecx_2#8)";
(contains-instruction: $N_8740349638661_134528208c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349638661_134528208c isa instruction, has hash "N_8740349638661_134528208c"; 

insert
$N_8740349638661_134528208c_0 isa variable-ssa, has hash "N_8740349638661_134528208c_0", has var "ecx_2", has version 6, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349638661_134528208c_0, from-node: $N_8740349638661_134528208c) isa node-link; 

match
$N_8740349638661_134528208c isa instruction, has hash "N_8740349638661_134528208c"; 

insert
$L_8740349638661_134528208c_1 isa list, has hash "L_8740349638661_134528208c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349638661_134528208c_1, from-node: $N_8740349638661_134528208c) isa node-link; 

match
$L_8740349638661_134528208c_1 isa list, has hash "L_8740349638661_134528208c_1"; 

insert
$N_8740349638661_134528208c_1_0 isa variable-ssa, has hash "N_8740349638661_134528208c_1_0", has var "ecx_3", has version 5, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349638661_134528208c_1_0, from-node: $L_8740349638661_134528208c_1) isa node-link; 

match
$L_8740349638661_134528208c_1 isa list, has hash "L_8740349638661_134528208c_1"; 

insert
$N_8740349638661_134528208c_1_1 isa variable-ssa, has hash "N_8740349638661_134528208c_1_1", has var "ecx_2", has version 8, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349638661_134528208c_1_1, from-node: $L_8740349638661_134528208c_1) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 40, has bb-end 47; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 40, has bb-end 47; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349466637_134528210c isa instruction, has hash "N_8740349466637_134528210c", has il-index 45, has asm-address "0x804bcd2", has operation-type "MLIL_CALL_SSA", has ins-text "arg1#5, arg2#5, mem#6 = 0x804bd00(arg1#4, arg2#4, ecx_4#7) @ mem#5";
(contains-instruction: $N_8740349466637_134528210c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349466637_134528210c isa instruction, has hash "N_8740349466637_134528210c"; 

insert
$N_8740349466637_134528210c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740349466637_134528210c_0", has edge-label "output";
(to-node: $N_8740349466637_134528210c_0, from-node: $N_8740349466637_134528210c) isa node-link; 

match
$N_8740349466637_134528210c_0 isa operation, has hash "N_8740349466637_134528210c_0"; 

insert
$N_8740349466637_134528210c_0_0 isa constant, has hash "N_8740349466637_134528210c_0_0", has constant-value "6", has edge-label "dest_memory";
(to-node: $N_8740349466637_134528210c_0_0, from-node: $N_8740349466637_134528210c_0) isa node-link; 

match
$N_8740349466637_134528210c_0 isa operation, has hash "N_8740349466637_134528210c_0"; 

insert
$L_8740349466637_134528210c_0_1 isa list, has hash "L_8740349466637_134528210c_0_1", has list-size 2, has edge-label "dest";
(to-node: $L_8740349466637_134528210c_0_1, from-node: $N_8740349466637_134528210c_0) isa node-link; 

match
$L_8740349466637_134528210c_0_1 isa list, has hash "L_8740349466637_134528210c_0_1"; 

insert
$N_8740349466637_134528210c_0_1_0 isa variable-ssa, has hash "N_8740349466637_134528210c_0_1_0", has var "arg1", has version 5, has edge-label "0", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349466637_134528210c_0_1_0, from-node: $L_8740349466637_134528210c_0_1) isa node-link; 

match
$L_8740349466637_134528210c_0_1 isa list, has hash "L_8740349466637_134528210c_0_1"; 

insert
$N_8740349466637_134528210c_0_1_1 isa variable-ssa, has hash "N_8740349466637_134528210c_0_1_1", has var "arg2", has version 5, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349466637_134528210c_0_1_1, from-node: $L_8740349466637_134528210c_0_1) isa node-link; 

match
$N_8740349466637_134528210c isa instruction, has hash "N_8740349466637_134528210c"; 

insert
$N_8740349466637_134528210c_1 isa MLIL_CONST_PTR, has hash "N_8740349466637_134528210c_1", has edge-label "dest";
(to-node: $N_8740349466637_134528210c_1, from-node: $N_8740349466637_134528210c) isa node-link; 

match
$N_8740349466637_134528210c_1 isa operation, has hash "N_8740349466637_134528210c_1"; 

insert
$N_8740349466637_134528210c_1_0 isa constant, has hash "N_8740349466637_134528210c_1_0", has constant-value "134528256", has edge-label "constant";
(to-node: $N_8740349466637_134528210c_1_0, from-node: $N_8740349466637_134528210c_1) isa node-link; 

match
$N_8740349466637_134528210c isa instruction, has hash "N_8740349466637_134528210c"; 

insert
$L_8740349466637_134528210c_2 isa list, has hash "L_8740349466637_134528210c_2", has list-size 3, has edge-label "params";
(to-node: $L_8740349466637_134528210c_2, from-node: $N_8740349466637_134528210c) isa node-link; 

match
$L_8740349466637_134528210c_2 isa list, has hash "L_8740349466637_134528210c_2"; 

insert
$N_8740349466637_134528210c_2_0 isa MLIL_VAR_SSA, has hash "N_8740349466637_134528210c_2_0", has edge-label "0";
(to-node: $N_8740349466637_134528210c_2_0, from-node: $L_8740349466637_134528210c_2) isa node-link; 

match
$N_8740349466637_134528210c_2_0 isa operation, has hash "N_8740349466637_134528210c_2_0"; 

insert
$N_8740349466637_134528210c_2_0_0 isa variable-ssa, has hash "N_8740349466637_134528210c_2_0_0", has var "arg1", has version 4, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349466637_134528210c_2_0_0, from-node: $N_8740349466637_134528210c_2_0) isa node-link; 

match
$L_8740349466637_134528210c_2 isa list, has hash "L_8740349466637_134528210c_2"; 

insert
$N_8740349466637_134528210c_2_1 isa MLIL_VAR_SSA, has hash "N_8740349466637_134528210c_2_1", has edge-label "1";
(to-node: $N_8740349466637_134528210c_2_1, from-node: $L_8740349466637_134528210c_2) isa node-link; 

match
$N_8740349466637_134528210c_2_1 isa operation, has hash "N_8740349466637_134528210c_2_1"; 

insert
$N_8740349466637_134528210c_2_1_0 isa variable-ssa, has hash "N_8740349466637_134528210c_2_1_0", has var "arg2", has version 4, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349466637_134528210c_2_1_0, from-node: $N_8740349466637_134528210c_2_1) isa node-link; 

match
$L_8740349466637_134528210c_2 isa list, has hash "L_8740349466637_134528210c_2"; 

insert
$N_8740349466637_134528210c_2_2 isa MLIL_VAR_SSA, has hash "N_8740349466637_134528210c_2_2", has edge-label "2";
(to-node: $N_8740349466637_134528210c_2_2, from-node: $L_8740349466637_134528210c_2) isa node-link; 

match
$N_8740349466637_134528210c_2_2 isa operation, has hash "N_8740349466637_134528210c_2_2"; 

insert
$N_8740349466637_134528210c_2_2_0 isa variable-ssa, has hash "N_8740349466637_134528210c_2_2_0", has var "ecx_4", has version 7, has edge-label "src", has var-type "int32_t*", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349466637_134528210c_2_2_0, from-node: $N_8740349466637_134528210c_2_2) isa node-link; 

match
$N_8740349466637_134528210c isa instruction, has hash "N_8740349466637_134528210c"; 

insert
$N_8740349466637_134528210c_3 isa constant, has hash "N_8740349466637_134528210c_3", has constant-value "5", has edge-label "src_memory";
(to-node: $N_8740349466637_134528210c_3, from-node: $N_8740349466637_134528210c) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 40, has bb-end 47; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 40, has bb-end 47; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349459453_134528215c isa instruction, has hash "N_8740349459453_134528215c", has il-index 46, has asm-address "0x804bcd7", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_2#8 = 0xffffffff";
(contains-instruction: $N_8740349459453_134528215c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349459453_134528215c isa instruction, has hash "N_8740349459453_134528215c"; 

insert
$N_8740349459453_134528215c_0 isa variable-ssa, has hash "N_8740349459453_134528215c_0", has var "ecx_2", has version 8, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349459453_134528215c_0, from-node: $N_8740349459453_134528215c) isa node-link; 

match
$N_8740349459453_134528215c isa instruction, has hash "N_8740349459453_134528215c"; 

insert
$N_8740349459453_134528215c_1 isa MLIL_CONST, has hash "N_8740349459453_134528215c_1", has edge-label "src";
(to-node: $N_8740349459453_134528215c_1, from-node: $N_8740349459453_134528215c) isa node-link; 

match
$N_8740349459453_134528215c_1 isa operation, has hash "N_8740349459453_134528215c_1"; 

insert
$N_8740349459453_134528215c_1_0 isa constant, has hash "N_8740349459453_134528215c_1_0", has constant-value "4294967295", has edge-label "constant";
(to-node: $N_8740349459453_134528215c_1_0, from-node: $N_8740349459453_134528215c_1) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 40, has bb-end 47; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 40, has bb-end 47; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349669401_134528223c isa instruction, has hash "N_8740349669401_134528223c", has il-index 47, has asm-address "0x804bcdf", has operation-type "MLIL_IF", has ins-text "if (arg1#5 == 0xffffffff) then 61 @ 0x0 else 62 @ 0x804bce3";
(contains-instruction: $N_8740349669401_134528223c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349669401_134528223c isa instruction, has hash "N_8740349669401_134528223c"; 

insert
$N_8740349669401_134528223c_0 isa MLIL_CMP_E, has hash "N_8740349669401_134528223c_0", has edge-label "condition";
(to-node: $N_8740349669401_134528223c_0, from-node: $N_8740349669401_134528223c) isa node-link; 

match
$N_8740349669401_134528223c_0 isa operation, has hash "N_8740349669401_134528223c_0"; 

insert
$N_8740349669401_134528223c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349669401_134528223c_0_0", has edge-label "left";
(to-node: $N_8740349669401_134528223c_0_0, from-node: $N_8740349669401_134528223c_0) isa node-link; 

match
$N_8740349669401_134528223c_0_0 isa operation, has hash "N_8740349669401_134528223c_0_0"; 

insert
$N_8740349669401_134528223c_0_0_0 isa variable-ssa, has hash "N_8740349669401_134528223c_0_0_0", has var "arg1", has version 5, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349669401_134528223c_0_0_0, from-node: $N_8740349669401_134528223c_0_0) isa node-link; 

match
$N_8740349669401_134528223c_0 isa operation, has hash "N_8740349669401_134528223c_0"; 

insert
$N_8740349669401_134528223c_0_1 isa MLIL_CONST, has hash "N_8740349669401_134528223c_0_1", has edge-label "right";
(to-node: $N_8740349669401_134528223c_0_1, from-node: $N_8740349669401_134528223c_0) isa node-link; 

match
$N_8740349669401_134528223c_0_1 isa operation, has hash "N_8740349669401_134528223c_0_1"; 

insert
$N_8740349669401_134528223c_0_1_0 isa constant, has hash "N_8740349669401_134528223c_0_1_0", has constant-value "4294967295", has edge-label "constant";
(to-node: $N_8740349669401_134528223c_0_1_0, from-node: $N_8740349669401_134528223c_0_1) isa node-link; 

match
$N_8740349669401_134528223c isa instruction, has hash "N_8740349669401_134528223c"; 

insert
$N_8740349669401_134528223c_1 isa constant, has hash "N_8740349669401_134528223c_1", has constant-value "61", has edge-label "true";
(to-node: $N_8740349669401_134528223c_1, from-node: $N_8740349669401_134528223c) isa node-link; 

match
$N_8740349669401_134528223c isa instruction, has hash "N_8740349669401_134528223c"; 

insert
$N_8740349669401_134528223c_2 isa constant, has hash "N_8740349669401_134528223c_2", has constant-value "62", has edge-label "false";
(to-node: $N_8740349669401_134528223c_2, from-node: $N_8740349669401_134528223c) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 48, has bb-end 55; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 48, has bb-end 55; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 48, has bb-end 55; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349409853_134528239c isa instruction, has hash "N_8740349409853_134528239c", has il-index 49, has asm-address "0x804bcef", has operation-type "MLIL_VAR_PHI", has ins-text "ecx_2#11 = ϕ(ecx_2#3, ecx_2#8, ecx_2#10)";
(contains-instruction: $N_8740349409853_134528239c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349409853_134528239c isa instruction, has hash "N_8740349409853_134528239c"; 

insert
$N_8740349409853_134528239c_0 isa variable-ssa, has hash "N_8740349409853_134528239c_0", has var "ecx_2", has version 11, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349409853_134528239c_0, from-node: $N_8740349409853_134528239c) isa node-link; 

match
$N_8740349409853_134528239c isa instruction, has hash "N_8740349409853_134528239c"; 

insert
$L_8740349409853_134528239c_1 isa list, has hash "L_8740349409853_134528239c_1", has list-size 3, has edge-label "src";
(to-node: $L_8740349409853_134528239c_1, from-node: $N_8740349409853_134528239c) isa node-link; 

match
$L_8740349409853_134528239c_1 isa list, has hash "L_8740349409853_134528239c_1"; 

insert
$N_8740349409853_134528239c_1_0 isa variable-ssa, has hash "N_8740349409853_134528239c_1_0", has var "ecx_2", has version 3, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349409853_134528239c_1_0, from-node: $L_8740349409853_134528239c_1) isa node-link; 

match
$L_8740349409853_134528239c_1 isa list, has hash "L_8740349409853_134528239c_1"; 

insert
$N_8740349409853_134528239c_1_1 isa variable-ssa, has hash "N_8740349409853_134528239c_1_1", has var "ecx_2", has version 8, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349409853_134528239c_1_1, from-node: $L_8740349409853_134528239c_1) isa node-link; 

match
$L_8740349409853_134528239c_1 isa list, has hash "L_8740349409853_134528239c_1"; 

insert
$N_8740349409853_134528239c_1_2 isa variable-ssa, has hash "N_8740349409853_134528239c_1_2", has var "ecx_2", has version 10, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349409853_134528239c_1_2, from-node: $L_8740349409853_134528239c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 48, has bb-end 55; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349453317_134528239c isa instruction, has hash "N_8740349453317_134528239c", has il-index 53, has asm-address "0x804bcef", has operation-type "MLIL_MEM_PHI", has ins-text "mem#9 = ϕ(mem#2, mem#6, mem#8)";
(contains-instruction: $N_8740349453317_134528239c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349453317_134528239c isa instruction, has hash "N_8740349453317_134528239c"; 

insert
$N_8740349453317_134528239c_0 isa constant, has hash "N_8740349453317_134528239c_0", has constant-value "9", has edge-label "dest_memory";
(to-node: $N_8740349453317_134528239c_0, from-node: $N_8740349453317_134528239c) isa node-link; 

match
$N_8740349453317_134528239c isa instruction, has hash "N_8740349453317_134528239c"; 

insert
$L_8740349453317_134528239c_1 isa list, has hash "L_8740349453317_134528239c_1", has list-size 3, has edge-label "src_memory";
(to-node: $L_8740349453317_134528239c_1, from-node: $N_8740349453317_134528239c) isa node-link; 

match
$L_8740349453317_134528239c_1 isa list, has hash "L_8740349453317_134528239c_1"; 

insert
$N_8740349453317_134528239c_1_0 isa constant, has hash "N_8740349453317_134528239c_1_0", has constant-value "2", has edge-label "0";
(to-node: $N_8740349453317_134528239c_1_0, from-node: $L_8740349453317_134528239c_1) isa node-link; 

match
$L_8740349453317_134528239c_1 isa list, has hash "L_8740349453317_134528239c_1"; 

insert
$N_8740349453317_134528239c_1_1 isa constant, has hash "N_8740349453317_134528239c_1_1", has constant-value "6", has edge-label "1";
(to-node: $N_8740349453317_134528239c_1_1, from-node: $L_8740349453317_134528239c_1) isa node-link; 

match
$L_8740349453317_134528239c_1 isa list, has hash "L_8740349453317_134528239c_1"; 

insert
$N_8740349453317_134528239c_1_2 isa constant, has hash "N_8740349453317_134528239c_1_2", has constant-value "8", has edge-label "2";
(to-node: $N_8740349453317_134528239c_1_2, from-node: $L_8740349453317_134528239c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 48, has bb-end 55; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349473505_134528239c isa instruction, has hash "N_8740349473505_134528239c", has il-index 48, has asm-address "0x804bcef", has operation-type "MLIL_VAR_PHI", has ins-text "eax#8 = ϕ(arg1#2, arg1#5, eax#7)";
(contains-instruction: $N_8740349473505_134528239c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349473505_134528239c isa instruction, has hash "N_8740349473505_134528239c"; 

insert
$N_8740349473505_134528239c_0 isa variable-ssa, has hash "N_8740349473505_134528239c_0", has var "eax", has version 8, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349473505_134528239c_0, from-node: $N_8740349473505_134528239c) isa node-link; 

match
$N_8740349473505_134528239c isa instruction, has hash "N_8740349473505_134528239c"; 

insert
$L_8740349473505_134528239c_1 isa list, has hash "L_8740349473505_134528239c_1", has list-size 3, has edge-label "src";
(to-node: $L_8740349473505_134528239c_1, from-node: $N_8740349473505_134528239c) isa node-link; 

match
$L_8740349473505_134528239c_1 isa list, has hash "L_8740349473505_134528239c_1"; 

insert
$N_8740349473505_134528239c_1_0 isa variable-ssa, has hash "N_8740349473505_134528239c_1_0", has var "arg1", has version 2, has edge-label "0", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349473505_134528239c_1_0, from-node: $L_8740349473505_134528239c_1) isa node-link; 

match
$L_8740349473505_134528239c_1 isa list, has hash "L_8740349473505_134528239c_1"; 

insert
$N_8740349473505_134528239c_1_1 isa variable-ssa, has hash "N_8740349473505_134528239c_1_1", has var "arg1", has version 5, has edge-label "1", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349473505_134528239c_1_1, from-node: $L_8740349473505_134528239c_1) isa node-link; 

match
$L_8740349473505_134528239c_1 isa list, has hash "L_8740349473505_134528239c_1"; 

insert
$N_8740349473505_134528239c_1_2 isa variable-ssa, has hash "N_8740349473505_134528239c_1_2", has var "eax", has version 7, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349473505_134528239c_1_2, from-node: $L_8740349473505_134528239c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 48, has bb-end 55; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349511789_134528239c isa instruction, has hash "N_8740349511789_134528239c", has il-index 54, has asm-address "0x804bcef", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_1#9 = ecx_2#11";
(contains-instruction: $N_8740349511789_134528239c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349511789_134528239c isa instruction, has hash "N_8740349511789_134528239c"; 

insert
$N_8740349511789_134528239c_0 isa variable-ssa, has hash "N_8740349511789_134528239c_0", has var "eax_1", has version 9, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349511789_134528239c_0, from-node: $N_8740349511789_134528239c) isa node-link; 

match
$N_8740349511789_134528239c isa instruction, has hash "N_8740349511789_134528239c"; 

insert
$N_8740349511789_134528239c_1 isa MLIL_VAR_SSA, has hash "N_8740349511789_134528239c_1", has edge-label "src";
(to-node: $N_8740349511789_134528239c_1, from-node: $N_8740349511789_134528239c) isa node-link; 

match
$N_8740349511789_134528239c_1 isa operation, has hash "N_8740349511789_134528239c_1"; 

insert
$N_8740349511789_134528239c_1_0 isa variable-ssa, has hash "N_8740349511789_134528239c_1_0", has var "ecx_2", has version 11, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349511789_134528239c_1_0, from-node: $N_8740349511789_134528239c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 48, has bb-end 55; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349576453_134528239c isa instruction, has hash "N_8740349576453_134528239c", has il-index 50, has asm-address "0x804bcef", has operation-type "MLIL_VAR_PHI", has ins-text "arg2#7 = ϕ(arg2#2, arg2#5, arg2#6)";
(contains-instruction: $N_8740349576453_134528239c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349576453_134528239c isa instruction, has hash "N_8740349576453_134528239c"; 

insert
$N_8740349576453_134528239c_0 isa variable-ssa, has hash "N_8740349576453_134528239c_0", has var "arg2", has version 7, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349576453_134528239c_0, from-node: $N_8740349576453_134528239c) isa node-link; 

match
$N_8740349576453_134528239c isa instruction, has hash "N_8740349576453_134528239c"; 

insert
$L_8740349576453_134528239c_1 isa list, has hash "L_8740349576453_134528239c_1", has list-size 3, has edge-label "src";
(to-node: $L_8740349576453_134528239c_1, from-node: $N_8740349576453_134528239c) isa node-link; 

match
$L_8740349576453_134528239c_1 isa list, has hash "L_8740349576453_134528239c_1"; 

insert
$N_8740349576453_134528239c_1_0 isa variable-ssa, has hash "N_8740349576453_134528239c_1_0", has var "arg2", has version 2, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349576453_134528239c_1_0, from-node: $L_8740349576453_134528239c_1) isa node-link; 

match
$L_8740349576453_134528239c_1 isa list, has hash "L_8740349576453_134528239c_1"; 

insert
$N_8740349576453_134528239c_1_1 isa variable-ssa, has hash "N_8740349576453_134528239c_1_1", has var "arg2", has version 5, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349576453_134528239c_1_1, from-node: $L_8740349576453_134528239c_1) isa node-link; 

match
$L_8740349576453_134528239c_1 isa list, has hash "L_8740349576453_134528239c_1"; 

insert
$N_8740349576453_134528239c_1_2 isa variable-ssa, has hash "N_8740349576453_134528239c_1_2", has var "arg2", has version 6, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349576453_134528239c_1_2, from-node: $L_8740349576453_134528239c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 48, has bb-end 55; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349658117_134528239c isa instruction, has hash "N_8740349658117_134528239c", has il-index 51, has asm-address "0x804bcef", has operation-type "MLIL_VAR_PHI", has ins-text "ebx#6 = ϕ(ebx#3, ebx#5)";
(contains-instruction: $N_8740349658117_134528239c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349658117_134528239c isa instruction, has hash "N_8740349658117_134528239c"; 

insert
$N_8740349658117_134528239c_0 isa variable-ssa, has hash "N_8740349658117_134528239c_0", has var "ebx", has version 6, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349658117_134528239c_0, from-node: $N_8740349658117_134528239c) isa node-link; 

match
$N_8740349658117_134528239c isa instruction, has hash "N_8740349658117_134528239c"; 

insert
$L_8740349658117_134528239c_1 isa list, has hash "L_8740349658117_134528239c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349658117_134528239c_1, from-node: $N_8740349658117_134528239c) isa node-link; 

match
$L_8740349658117_134528239c_1 isa list, has hash "L_8740349658117_134528239c_1"; 

insert
$N_8740349658117_134528239c_1_0 isa variable-ssa, has hash "N_8740349658117_134528239c_1_0", has var "ebx", has version 3, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349658117_134528239c_1_0, from-node: $L_8740349658117_134528239c_1) isa node-link; 

match
$L_8740349658117_134528239c_1 isa list, has hash "L_8740349658117_134528239c_1"; 

insert
$N_8740349658117_134528239c_1_1 isa variable-ssa, has hash "N_8740349658117_134528239c_1_1", has var "ebx", has version 5, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349658117_134528239c_1_1, from-node: $L_8740349658117_134528239c_1) isa node-link; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 48, has bb-end 55; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349661701_134528239c isa instruction, has hash "N_8740349661701_134528239c", has il-index 52, has asm-address "0x804bcef", has operation-type "MLIL_VAR_PHI", has ins-text "edi_2#5 = ϕ(edi_1#1, edi_2#3, edi_2#4)";
(contains-instruction: $N_8740349661701_134528239c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349661701_134528239c isa instruction, has hash "N_8740349661701_134528239c"; 

insert
$N_8740349661701_134528239c_0 isa variable-ssa, has hash "N_8740349661701_134528239c_0", has var "edi_2", has version 5, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349661701_134528239c_0, from-node: $N_8740349661701_134528239c) isa node-link; 

match
$N_8740349661701_134528239c isa instruction, has hash "N_8740349661701_134528239c"; 

insert
$L_8740349661701_134528239c_1 isa list, has hash "L_8740349661701_134528239c_1", has list-size 3, has edge-label "src";
(to-node: $L_8740349661701_134528239c_1, from-node: $N_8740349661701_134528239c) isa node-link; 

match
$L_8740349661701_134528239c_1 isa list, has hash "L_8740349661701_134528239c_1"; 

insert
$N_8740349661701_134528239c_1_0 isa variable-ssa, has hash "N_8740349661701_134528239c_1_0", has var "edi_1", has version 1, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349661701_134528239c_1_0, from-node: $L_8740349661701_134528239c_1) isa node-link; 

match
$L_8740349661701_134528239c_1 isa list, has hash "L_8740349661701_134528239c_1"; 

insert
$N_8740349661701_134528239c_1_1 isa variable-ssa, has hash "N_8740349661701_134528239c_1_1", has var "edi_2", has version 3, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349661701_134528239c_1_1, from-node: $L_8740349661701_134528239c_1) isa node-link; 

match
$L_8740349661701_134528239c_1 isa list, has hash "L_8740349661701_134528239c_1"; 

insert
$N_8740349661701_134528239c_1_2 isa variable-ssa, has hash "N_8740349661701_134528239c_1_2", has var "edi_2", has version 4, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349661701_134528239c_1_2, from-node: $L_8740349661701_134528239c_1) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 48, has bb-end 55; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 48, has bb-end 55; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349452037_134528248c isa instruction, has hash "N_8740349452037_134528248c", has il-index 55, has asm-address "0x804bcf8", has operation-type "MLIL_RET", has ins-text "return eax_1#9";
(contains-instruction: $N_8740349452037_134528248c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349452037_134528248c isa instruction, has hash "N_8740349452037_134528248c"; 

insert
$L_8740349452037_134528248c_0 isa list, has hash "L_8740349452037_134528248c_0", has list-size 1, has edge-label "src";
(to-node: $L_8740349452037_134528248c_0, from-node: $N_8740349452037_134528248c) isa node-link; 

match
$L_8740349452037_134528248c_0 isa list, has hash "L_8740349452037_134528248c_0"; 

insert
$N_8740349452037_134528248c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349452037_134528248c_0_0", has edge-label "0";
(to-node: $N_8740349452037_134528248c_0_0, from-node: $L_8740349452037_134528248c_0) isa node-link; 

match
$N_8740349452037_134528248c_0_0 isa operation, has hash "N_8740349452037_134528248c_0_0"; 

insert
$N_8740349452037_134528248c_0_0_0 isa variable-ssa, has hash "N_8740349452037_134528248c_0_0_0", has var "eax_1", has version 9, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349452037_134528248c_0_0_0, from-node: $N_8740349452037_134528248c_0_0) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 56, has bb-end 56; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 57, has bb-end 60; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 57, has bb-end 60; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 57, has bb-end 60; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349643133_134528181c isa instruction, has hash "N_8740349643133_134528181c", has il-index 57, has asm-address "0x804bcb5", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_3#4 = arg3#0";
(contains-instruction: $N_8740349643133_134528181c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349643133_134528181c isa instruction, has hash "N_8740349643133_134528181c"; 

insert
$N_8740349643133_134528181c_0 isa variable-ssa, has hash "N_8740349643133_134528181c_0", has var "ecx_3", has version 4, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349643133_134528181c_0, from-node: $N_8740349643133_134528181c) isa node-link; 

match
$N_8740349643133_134528181c isa instruction, has hash "N_8740349643133_134528181c"; 

insert
$N_8740349643133_134528181c_1 isa MLIL_VAR_SSA, has hash "N_8740349643133_134528181c_1", has edge-label "src";
(to-node: $N_8740349643133_134528181c_1, from-node: $N_8740349643133_134528181c) isa node-link; 

match
$N_8740349643133_134528181c_1 isa operation, has hash "N_8740349643133_134528181c_1"; 

insert
$N_8740349643133_134528181c_1_0 isa variable-ssa, has hash "N_8740349643133_134528181c_1_0", has var "arg3", has version 0, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349643133_134528181c_1_0, from-node: $N_8740349643133_134528181c_1) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 57, has bb-end 60; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 57, has bb-end 60; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349433861_134528185c isa instruction, has hash "N_8740349433861_134528185c", has il-index 58, has asm-address "0x804bcb9", has operation-type "MLIL_STORE_SSA", has ins-text "[ecx_3#4 + ebx#3].b = arg1#2.al @ mem#2 -> mem#3";
(contains-instruction: $N_8740349433861_134528185c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349433861_134528185c isa instruction, has hash "N_8740349433861_134528185c"; 

insert
$N_8740349433861_134528185c_0 isa MLIL_ADD, has hash "N_8740349433861_134528185c_0", has edge-label "dest";
(to-node: $N_8740349433861_134528185c_0, from-node: $N_8740349433861_134528185c) isa node-link; 

match
$N_8740349433861_134528185c_0 isa operation, has hash "N_8740349433861_134528185c_0"; 

insert
$N_8740349433861_134528185c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349433861_134528185c_0_0", has edge-label "left";
(to-node: $N_8740349433861_134528185c_0_0, from-node: $N_8740349433861_134528185c_0) isa node-link; 

match
$N_8740349433861_134528185c_0_0 isa operation, has hash "N_8740349433861_134528185c_0_0"; 

insert
$N_8740349433861_134528185c_0_0_0 isa variable-ssa, has hash "N_8740349433861_134528185c_0_0_0", has var "ecx_3", has version 4, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349433861_134528185c_0_0_0, from-node: $N_8740349433861_134528185c_0_0) isa node-link; 

match
$N_8740349433861_134528185c_0 isa operation, has hash "N_8740349433861_134528185c_0"; 

insert
$N_8740349433861_134528185c_0_1 isa MLIL_VAR_SSA, has hash "N_8740349433861_134528185c_0_1", has edge-label "right";
(to-node: $N_8740349433861_134528185c_0_1, from-node: $N_8740349433861_134528185c_0) isa node-link; 

match
$N_8740349433861_134528185c_0_1 isa operation, has hash "N_8740349433861_134528185c_0_1"; 

insert
$N_8740349433861_134528185c_0_1_0 isa variable-ssa, has hash "N_8740349433861_134528185c_0_1_0", has var "ebx", has version 3, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349433861_134528185c_0_1_0, from-node: $N_8740349433861_134528185c_0_1) isa node-link; 

match
$N_8740349433861_134528185c isa instruction, has hash "N_8740349433861_134528185c"; 

insert
$N_8740349433861_134528185c_1 isa constant, has hash "N_8740349433861_134528185c_1", has constant-value "3", has edge-label "dest_memory";
(to-node: $N_8740349433861_134528185c_1, from-node: $N_8740349433861_134528185c) isa node-link; 

match
$N_8740349433861_134528185c isa instruction, has hash "N_8740349433861_134528185c"; 

insert
$N_8740349433861_134528185c_2 isa constant, has hash "N_8740349433861_134528185c_2", has constant-value "2", has edge-label "src_memory";
(to-node: $N_8740349433861_134528185c_2, from-node: $N_8740349433861_134528185c) isa node-link; 

match
$N_8740349433861_134528185c isa instruction, has hash "N_8740349433861_134528185c"; 

insert
$N_8740349433861_134528185c_3 isa MLIL_VAR_SSA_FIELD, has hash "N_8740349433861_134528185c_3", has edge-label "src";
(to-node: $N_8740349433861_134528185c_3, from-node: $N_8740349433861_134528185c) isa node-link; 

match
$N_8740349433861_134528185c_3 isa operation, has hash "N_8740349433861_134528185c_3"; 

insert
$N_8740349433861_134528185c_3_0 isa variable-ssa, has hash "N_8740349433861_134528185c_3_0", has var "arg1", has version 2, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349433861_134528185c_3_0, from-node: $N_8740349433861_134528185c_3) isa node-link; 

match
$N_8740349433861_134528185c_3 isa operation, has hash "N_8740349433861_134528185c_3"; 

insert
$N_8740349433861_134528185c_3_1 isa constant, has hash "N_8740349433861_134528185c_3_1", has constant-value "0", has edge-label "offset";
(to-node: $N_8740349433861_134528185c_3_1, from-node: $N_8740349433861_134528185c_3) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 57, has bb-end 60; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 57, has bb-end 60; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349512577_134528188c isa instruction, has hash "N_8740349512577_134528188c", has il-index 59, has asm-address "0x804bcbc", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebx#4 = ebx#3 + 1";
(contains-instruction: $N_8740349512577_134528188c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349512577_134528188c isa instruction, has hash "N_8740349512577_134528188c"; 

insert
$N_8740349512577_134528188c_0 isa variable-ssa, has hash "N_8740349512577_134528188c_0", has var "ebx", has version 4, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349512577_134528188c_0, from-node: $N_8740349512577_134528188c) isa node-link; 

match
$N_8740349512577_134528188c isa instruction, has hash "N_8740349512577_134528188c"; 

insert
$N_8740349512577_134528188c_1 isa MLIL_ADD, has hash "N_8740349512577_134528188c_1", has edge-label "src";
(to-node: $N_8740349512577_134528188c_1, from-node: $N_8740349512577_134528188c) isa node-link; 

match
$N_8740349512577_134528188c_1 isa operation, has hash "N_8740349512577_134528188c_1"; 

insert
$N_8740349512577_134528188c_1_0 isa MLIL_VAR_SSA, has hash "N_8740349512577_134528188c_1_0", has edge-label "left";
(to-node: $N_8740349512577_134528188c_1_0, from-node: $N_8740349512577_134528188c_1) isa node-link; 

match
$N_8740349512577_134528188c_1_0 isa operation, has hash "N_8740349512577_134528188c_1_0"; 

insert
$N_8740349512577_134528188c_1_0_0 isa variable-ssa, has hash "N_8740349512577_134528188c_1_0_0", has var "ebx", has version 3, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349512577_134528188c_1_0_0, from-node: $N_8740349512577_134528188c_1_0) isa node-link; 

match
$N_8740349512577_134528188c_1 isa operation, has hash "N_8740349512577_134528188c_1"; 

insert
$N_8740349512577_134528188c_1_1 isa MLIL_CONST, has hash "N_8740349512577_134528188c_1_1", has edge-label "right";
(to-node: $N_8740349512577_134528188c_1_1, from-node: $N_8740349512577_134528188c_1) isa node-link; 

match
$N_8740349512577_134528188c_1_1 isa operation, has hash "N_8740349512577_134528188c_1_1"; 

insert
$N_8740349512577_134528188c_1_1_0 isa constant, has hash "N_8740349512577_134528188c_1_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8740349512577_134528188c_1_1_0, from-node: $N_8740349512577_134528188c_1_1) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 57, has bb-end 60; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 57, has bb-end 60; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349558277_134528191c isa instruction, has hash "N_8740349558277_134528191c", has il-index 60, has asm-address "0x804bcbf", has operation-type "MLIL_IF", has ins-text "if (ebx#4 u< ebp_1#2) then 63 @ 0x0 else 64 @ 0x0";
(contains-instruction: $N_8740349558277_134528191c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349558277_134528191c isa instruction, has hash "N_8740349558277_134528191c"; 

insert
$N_8740349558277_134528191c_0 isa MLIL_CMP_ULT, has hash "N_8740349558277_134528191c_0", has edge-label "condition";
(to-node: $N_8740349558277_134528191c_0, from-node: $N_8740349558277_134528191c) isa node-link; 

match
$N_8740349558277_134528191c_0 isa operation, has hash "N_8740349558277_134528191c_0"; 

insert
$N_8740349558277_134528191c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349558277_134528191c_0_0", has edge-label "left";
(to-node: $N_8740349558277_134528191c_0_0, from-node: $N_8740349558277_134528191c_0) isa node-link; 

match
$N_8740349558277_134528191c_0_0 isa operation, has hash "N_8740349558277_134528191c_0_0"; 

insert
$N_8740349558277_134528191c_0_0_0 isa variable-ssa, has hash "N_8740349558277_134528191c_0_0_0", has var "ebx", has version 4, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349558277_134528191c_0_0_0, from-node: $N_8740349558277_134528191c_0_0) isa node-link; 

match
$N_8740349558277_134528191c_0 isa operation, has hash "N_8740349558277_134528191c_0"; 

insert
$N_8740349558277_134528191c_0_1 isa MLIL_VAR_SSA, has hash "N_8740349558277_134528191c_0_1", has edge-label "right";
(to-node: $N_8740349558277_134528191c_0_1, from-node: $N_8740349558277_134528191c_0) isa node-link; 

match
$N_8740349558277_134528191c_0_1 isa operation, has hash "N_8740349558277_134528191c_0_1"; 

insert
$N_8740349558277_134528191c_0_1_0 isa variable-ssa, has hash "N_8740349558277_134528191c_0_1_0", has var "ebp_1", has version 2, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349558277_134528191c_0_1_0, from-node: $N_8740349558277_134528191c_0_1) isa node-link; 

match
$N_8740349558277_134528191c isa instruction, has hash "N_8740349558277_134528191c"; 

insert
$N_8740349558277_134528191c_1 isa constant, has hash "N_8740349558277_134528191c_1", has constant-value "63", has edge-label "true";
(to-node: $N_8740349558277_134528191c_1, from-node: $N_8740349558277_134528191c) isa node-link; 

match
$N_8740349558277_134528191c isa instruction, has hash "N_8740349558277_134528191c"; 

insert
$N_8740349558277_134528191c_2 isa constant, has hash "N_8740349558277_134528191c_2", has constant-value "64", has edge-label "false";
(to-node: $N_8740349558277_134528191c_2, from-node: $N_8740349558277_134528191c) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 61, has bb-end 61; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 62, has bb-end 62; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 62, has bb-end 62; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$bb isa basic-block, has bb-start 62, has bb-end 62; 
(in-function: $func_cgc_freaduntil, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349639929_134528227c isa instruction, has hash "N_8740349639929_134528227c", has il-index 62, has asm-address "0x804bce3", has operation-type "MLIL_IF", has ins-text "if (arg1#5 != edi_2#3) then 65 @ 0x0 else 66 @ 0x0";
(contains-instruction: $N_8740349639929_134528227c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349639929_134528227c isa instruction, has hash "N_8740349639929_134528227c"; 

insert
$N_8740349639929_134528227c_0 isa MLIL_CMP_NE, has hash "N_8740349639929_134528227c_0", has edge-label "condition";
(to-node: $N_8740349639929_134528227c_0, from-node: $N_8740349639929_134528227c) isa node-link; 

match
$N_8740349639929_134528227c_0 isa operation, has hash "N_8740349639929_134528227c_0"; 

insert
$N_8740349639929_134528227c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349639929_134528227c_0_0", has edge-label "left";
(to-node: $N_8740349639929_134528227c_0_0, from-node: $N_8740349639929_134528227c_0) isa node-link; 

match
$N_8740349639929_134528227c_0_0 isa operation, has hash "N_8740349639929_134528227c_0_0"; 

insert
$N_8740349639929_134528227c_0_0_0 isa variable-ssa, has hash "N_8740349639929_134528227c_0_0_0", has var "arg1", has version 5, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349639929_134528227c_0_0_0, from-node: $N_8740349639929_134528227c_0_0) isa node-link; 

match
$N_8740349639929_134528227c_0 isa operation, has hash "N_8740349639929_134528227c_0"; 

insert
$N_8740349639929_134528227c_0_1 isa MLIL_VAR_SSA, has hash "N_8740349639929_134528227c_0_1", has edge-label "right";
(to-node: $N_8740349639929_134528227c_0_1, from-node: $N_8740349639929_134528227c_0) isa node-link; 

match
$N_8740349639929_134528227c_0_1 isa operation, has hash "N_8740349639929_134528227c_0_1"; 

insert
$N_8740349639929_134528227c_0_1_0 isa variable-ssa, has hash "N_8740349639929_134528227c_0_1_0", has var "edi_2", has version 3, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_freaduntil";
(to-node: $N_8740349639929_134528227c_0_1_0, from-node: $N_8740349639929_134528227c_0_1) isa node-link; 

match
$N_8740349639929_134528227c isa instruction, has hash "N_8740349639929_134528227c"; 

insert
$N_8740349639929_134528227c_1 isa constant, has hash "N_8740349639929_134528227c_1", has constant-value "65", has edge-label "true";
(to-node: $N_8740349639929_134528227c_1, from-node: $N_8740349639929_134528227c) isa node-link; 

match
$N_8740349639929_134528227c isa instruction, has hash "N_8740349639929_134528227c"; 

insert
$N_8740349639929_134528227c_2 isa constant, has hash "N_8740349639929_134528227c_2", has constant-value "66", has edge-label "false";
(to-node: $N_8740349639929_134528227c_2, from-node: $N_8740349639929_134528227c) isa node-link; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 63, has bb-end 63; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 64, has bb-end 64; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 65, has bb-end 65; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 

insert 
$bb isa basic-block, has bb-start 66, has bb-end 66; 
(contains-basic-block: $bb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 5, has bb-start 0; 
$tobb   isa basic-block, has bb-end 6, has bb-start 6; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 5, has bb-start 0; 
$tobb   isa basic-block, has bb-end 9, has bb-start 7; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 6, has bb-start 6; 
$tobb   isa basic-block, has bb-end 16, has bb-start 10; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 9, has bb-start 7; 
$tobb   isa basic-block, has bb-end 25, has bb-start 17; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 16, has bb-start 10; 
$tobb   isa basic-block, has bb-end 26, has bb-start 26; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 16, has bb-start 10; 
$tobb   isa basic-block, has bb-end 28, has bb-start 27; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 25, has bb-start 17; 
$tobb   isa basic-block, has bb-end 29, has bb-start 29; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 25, has bb-start 17; 
$tobb   isa basic-block, has bb-end 30, has bb-start 30; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 26, has bb-start 26; 
$tobb   isa basic-block, has bb-end 39, has bb-start 31; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 28, has bb-start 27; 
$tobb   isa basic-block, has bb-end 47, has bb-start 40; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 29, has bb-start 29; 
$tobb   isa basic-block, has bb-end 55, has bb-start 48; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 30, has bb-start 30; 
$tobb   isa basic-block, has bb-end 56, has bb-start 56; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 30, has bb-start 30; 
$tobb   isa basic-block, has bb-end 60, has bb-start 57; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 39, has bb-start 31; 
$tobb   isa basic-block, has bb-end 55, has bb-start 48; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 47, has bb-start 40; 
$tobb   isa basic-block, has bb-end 61, has bb-start 61; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 47, has bb-start 40; 
$tobb   isa basic-block, has bb-end 62, has bb-start 62; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 56, has bb-start 56; 
$tobb   isa basic-block, has bb-end 16, has bb-start 10; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 60, has bb-start 57; 
$tobb   isa basic-block, has bb-end 63, has bb-start 63; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 60, has bb-start 57; 
$tobb   isa basic-block, has bb-end 64, has bb-start 64; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 61, has bb-start 61; 
$tobb   isa basic-block, has bb-end 55, has bb-start 48; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 62, has bb-start 62; 
$tobb   isa basic-block, has bb-end 65, has bb-start 65; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 62, has bb-start 62; 
$tobb   isa basic-block, has bb-end 66, has bb-start 66; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 63, has bb-start 63; 
$tobb   isa basic-block, has bb-end 25, has bb-start 17; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 64, has bb-start 64; 
$tobb   isa basic-block, has bb-end 16, has bb-start 10; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 65, has bb-start 65; 
$tobb   isa basic-block, has bb-end 47, has bb-start 40; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_freaduntil isa function, has name "cgc_freaduntil"; 
$frombb isa basic-block, has bb-end 66, has bb-start 66; 
$tobb   isa basic-block, has bb-end 39, has bb-start 31; 
(contains-basic-block: $frombb, in-function: $func_cgc_freaduntil) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_freaduntil) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

insert 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user", has asm-address "0x804c840", has stack "[<var int32_t* var_1ac>, <var void* var_1ac_1>, <var void* var_1ac_2>, <var int32_t var_1ac_3>, <var void* var_1ac_4>, <var char* var_1ac_5>, <var void* var_1ac_6>, <var void* var_1ac_7>, <var int32_t var_1ac_8>, <var void* var_1ac_9>, <var char* var_1ac_10>, <var void* var_1ac_11>, <var void* var_1ac_12>, <var int32_t var_1ac_13>, <var int32_t** var_1ac_14>, <var void* var_1ac_15>, <var char* var_1ac_16>, <var void* var_1ac_17>, <var char* var_1ac_18>, <var int32_t var_1ac_19>, <var int32_t var_1ac_20>, <var char* var_1ac_21>, <var char* var_1ac_22>, <var char* var_1ac_23>, <var char* var_1ac_24>, <var char* var_1ac_25>, <var int32_t var_1a8>, <var void* var_1a8_1>, <var void* var_1a8_2>, <var void* var_1a8_3>, <var void* var_1a8_4>, <var void* var_1a8_5>, <var char* var_1a8_6>, <var char* var_1a8_7>, <var char* var_1a8_8>, <var char* var_1a8_9>, <var int32_t var_1a4>, <var int32_t var_1a0>, <var char* var_198>, <var char* var_194>, <var void var_190>, <var void var_90>, <var int32_t __saved_esi>, <var int32_t __saved_edi>, <var int32_t var_8>, <var int32_t var_4>, <var void* const __return_addr>, <var int32_t arg1>]"; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 0, has bb-end 6; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 0, has bb-end 6; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 0, has bb-end 6; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349431065_134531146c isa instruction, has hash "N_8740349431065_134531146c", has il-index 0, has asm-address "0x804c84a", has operation-type "MLIL_SET_VAR_ALIASED", has ins-text "var_194 @ mem#0 -> mem#1 = 0";
(contains-instruction: $N_8740349431065_134531146c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349431065_134531146c isa instruction, has hash "N_8740349431065_134531146c"; 

insert
$N_8740349431065_134531146c_0 isa variable-ssa, has hash "N_8740349431065_134531146c_0", has var "var_194", has version 1, has edge-label "prev", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349431065_134531146c_0, from-node: $N_8740349431065_134531146c) isa node-link; 

match
$N_8740349431065_134531146c isa instruction, has hash "N_8740349431065_134531146c"; 

insert
$N_8740349431065_134531146c_1 isa variable-ssa, has hash "N_8740349431065_134531146c_1", has var "var_194", has version 0, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349431065_134531146c_1, from-node: $N_8740349431065_134531146c) isa node-link; 

match
$N_8740349431065_134531146c isa instruction, has hash "N_8740349431065_134531146c"; 

insert
$N_8740349431065_134531146c_2 isa MLIL_CONST_PTR, has hash "N_8740349431065_134531146c_2", has edge-label "unimplemented";
(to-node: $N_8740349431065_134531146c_2, from-node: $N_8740349431065_134531146c) isa node-link; 

match
$N_8740349431065_134531146c_2 isa operation, has hash "N_8740349431065_134531146c_2"; 

insert
$N_8740349431065_134531146c_2_0 isa constant, has hash "N_8740349431065_134531146c_2_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349431065_134531146c_2_0, from-node: $N_8740349431065_134531146c_2) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 0, has bb-end 6; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 0, has bb-end 6; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349164725_134531154c isa instruction, has hash "N_8740349164725_134531154c", has il-index 1, has asm-address "0x804c852", has operation-type "MLIL_SET_VAR_ALIASED", has ins-text "var_198 @ mem#1 -> mem#2 = 0";
(contains-instruction: $N_8740349164725_134531154c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349164725_134531154c isa instruction, has hash "N_8740349164725_134531154c"; 

insert
$N_8740349164725_134531154c_0 isa variable-ssa, has hash "N_8740349164725_134531154c_0", has var "var_198", has version 2, has edge-label "prev", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349164725_134531154c_0, from-node: $N_8740349164725_134531154c) isa node-link; 

match
$N_8740349164725_134531154c isa instruction, has hash "N_8740349164725_134531154c"; 

insert
$N_8740349164725_134531154c_1 isa variable-ssa, has hash "N_8740349164725_134531154c_1", has var "var_198", has version 1, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349164725_134531154c_1, from-node: $N_8740349164725_134531154c) isa node-link; 

match
$N_8740349164725_134531154c isa instruction, has hash "N_8740349164725_134531154c"; 

insert
$N_8740349164725_134531154c_2 isa MLIL_CONST_PTR, has hash "N_8740349164725_134531154c_2", has edge-label "unimplemented";
(to-node: $N_8740349164725_134531154c_2, from-node: $N_8740349164725_134531154c) isa node-link; 

match
$N_8740349164725_134531154c_2 isa operation, has hash "N_8740349164725_134531154c_2"; 

insert
$N_8740349164725_134531154c_2_0 isa constant, has hash "N_8740349164725_134531154c_2_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349164725_134531154c_2_0, from-node: $N_8740349164725_134531154c_2) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 0, has bb-end 6; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 0, has bb-end 6; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349763189_134531166c isa instruction, has hash "N_8740349763189_134531166c", has il-index 2, has asm-address "0x804c85e", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac#1 = &var_194";
(contains-instruction: $N_8740349763189_134531166c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349763189_134531166c isa instruction, has hash "N_8740349763189_134531166c"; 

insert
$N_8740349763189_134531166c_0 isa variable-ssa, has hash "N_8740349763189_134531166c_0", has var "var_1ac", has version 1, has edge-label "dest", has var-type "int32_t*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349763189_134531166c_0, from-node: $N_8740349763189_134531166c) isa node-link; 

match
$N_8740349763189_134531166c isa instruction, has hash "N_8740349763189_134531166c"; 

insert
$N_8740349763189_134531166c_1 isa MLIL_ADDRESS_OF, has hash "N_8740349763189_134531166c_1", has edge-label "src";
(to-node: $N_8740349763189_134531166c_1, from-node: $N_8740349763189_134531166c) isa node-link; 

match
$N_8740349763189_134531166c_1 isa operation, has hash "N_8740349763189_134531166c_1"; 

insert
$N_8740349763189_134531166c_1_0 isa variable, has hash "N_8740349763189_134531166c_1_0", has var "var_194", has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349763189_134531166c_1_0, from-node: $N_8740349763189_134531166c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 0, has bb-end 6; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 0, has bb-end 6; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349767153_134531169c isa instruction, has hash "N_8740349767153_134531169c", has il-index 3, has asm-address "0x804c861", has operation-type "MLIL_CALL_SSA", has ins-text "eax#1, mem#3 = 0x804c3c0(var_1ac#1) @ mem#2";
(contains-instruction: $N_8740349767153_134531169c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349767153_134531169c isa instruction, has hash "N_8740349767153_134531169c"; 

insert
$N_8740349767153_134531169c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740349767153_134531169c_0", has edge-label "output";
(to-node: $N_8740349767153_134531169c_0, from-node: $N_8740349767153_134531169c) isa node-link; 

match
$N_8740349767153_134531169c_0 isa operation, has hash "N_8740349767153_134531169c_0"; 

insert
$N_8740349767153_134531169c_0_0 isa constant, has hash "N_8740349767153_134531169c_0_0", has constant-value "3", has edge-label "dest_memory";
(to-node: $N_8740349767153_134531169c_0_0, from-node: $N_8740349767153_134531169c_0) isa node-link; 

match
$N_8740349767153_134531169c_0 isa operation, has hash "N_8740349767153_134531169c_0"; 

insert
$L_8740349767153_134531169c_0_1 isa list, has hash "L_8740349767153_134531169c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740349767153_134531169c_0_1, from-node: $N_8740349767153_134531169c_0) isa node-link; 

match
$L_8740349767153_134531169c_0_1 isa list, has hash "L_8740349767153_134531169c_0_1"; 

insert
$N_8740349767153_134531169c_0_1_0 isa variable-ssa, has hash "N_8740349767153_134531169c_0_1_0", has var "eax", has version 1, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349767153_134531169c_0_1_0, from-node: $L_8740349767153_134531169c_0_1) isa node-link; 

match
$N_8740349767153_134531169c isa instruction, has hash "N_8740349767153_134531169c"; 

insert
$N_8740349767153_134531169c_1 isa MLIL_CONST_PTR, has hash "N_8740349767153_134531169c_1", has edge-label "dest";
(to-node: $N_8740349767153_134531169c_1, from-node: $N_8740349767153_134531169c) isa node-link; 

match
$N_8740349767153_134531169c_1 isa operation, has hash "N_8740349767153_134531169c_1"; 

insert
$N_8740349767153_134531169c_1_0 isa constant, has hash "N_8740349767153_134531169c_1_0", has constant-value "134529984", has edge-label "constant";
(to-node: $N_8740349767153_134531169c_1_0, from-node: $N_8740349767153_134531169c_1) isa node-link; 

match
$N_8740349767153_134531169c isa instruction, has hash "N_8740349767153_134531169c"; 

insert
$L_8740349767153_134531169c_2 isa list, has hash "L_8740349767153_134531169c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740349767153_134531169c_2, from-node: $N_8740349767153_134531169c) isa node-link; 

match
$L_8740349767153_134531169c_2 isa list, has hash "L_8740349767153_134531169c_2"; 

insert
$N_8740349767153_134531169c_2_0 isa MLIL_VAR_SSA, has hash "N_8740349767153_134531169c_2_0", has edge-label "0";
(to-node: $N_8740349767153_134531169c_2_0, from-node: $L_8740349767153_134531169c_2) isa node-link; 

match
$N_8740349767153_134531169c_2_0 isa operation, has hash "N_8740349767153_134531169c_2_0"; 

insert
$N_8740349767153_134531169c_2_0_0 isa variable-ssa, has hash "N_8740349767153_134531169c_2_0_0", has var "var_1ac", has version 1, has edge-label "src", has var-type "int32_t*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349767153_134531169c_2_0_0, from-node: $N_8740349767153_134531169c_2_0) isa node-link; 

match
$N_8740349767153_134531169c isa instruction, has hash "N_8740349767153_134531169c"; 

insert
$N_8740349767153_134531169c_3 isa constant, has hash "N_8740349767153_134531169c_3", has constant-value "2", has edge-label "src_memory";
(to-node: $N_8740349767153_134531169c_3, from-node: $N_8740349767153_134531169c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 0, has bb-end 6; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 0, has bb-end 6; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349765501_134531174c isa instruction, has hash "N_8740349765501_134531174c", has il-index 4, has asm-address "0x804c866", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#1 = eax#1";
(contains-instruction: $N_8740349765501_134531174c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349765501_134531174c isa instruction, has hash "N_8740349765501_134531174c"; 

insert
$N_8740349765501_134531174c_0 isa variable-ssa, has hash "N_8740349765501_134531174c_0", has var "esi", has version 1, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349765501_134531174c_0, from-node: $N_8740349765501_134531174c) isa node-link; 

match
$N_8740349765501_134531174c isa instruction, has hash "N_8740349765501_134531174c"; 

insert
$N_8740349765501_134531174c_1 isa MLIL_VAR_SSA, has hash "N_8740349765501_134531174c_1", has edge-label "src";
(to-node: $N_8740349765501_134531174c_1, from-node: $N_8740349765501_134531174c) isa node-link; 

match
$N_8740349765501_134531174c_1 isa operation, has hash "N_8740349765501_134531174c_1"; 

insert
$N_8740349765501_134531174c_1_0 isa variable-ssa, has hash "N_8740349765501_134531174c_1_0", has var "eax", has version 1, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349765501_134531174c_1_0, from-node: $N_8740349765501_134531174c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 0, has bb-end 6; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 0, has bb-end 6; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349766405_134531176c isa instruction, has hash "N_8740349766405_134531176c", has il-index 5, has asm-address "0x804c868", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edi#1 = 0";
(contains-instruction: $N_8740349766405_134531176c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349766405_134531176c isa instruction, has hash "N_8740349766405_134531176c"; 

insert
$N_8740349766405_134531176c_0 isa variable-ssa, has hash "N_8740349766405_134531176c_0", has var "edi", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349766405_134531176c_0, from-node: $N_8740349766405_134531176c) isa node-link; 

match
$N_8740349766405_134531176c isa instruction, has hash "N_8740349766405_134531176c"; 

insert
$N_8740349766405_134531176c_1 isa MLIL_CONST, has hash "N_8740349766405_134531176c_1", has edge-label "src";
(to-node: $N_8740349766405_134531176c_1, from-node: $N_8740349766405_134531176c) isa node-link; 

match
$N_8740349766405_134531176c_1 isa operation, has hash "N_8740349766405_134531176c_1"; 

insert
$N_8740349766405_134531176c_1_0 isa constant, has hash "N_8740349766405_134531176c_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349766405_134531176c_1_0, from-node: $N_8740349766405_134531176c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 0, has bb-end 6; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 0, has bb-end 6; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348773341_134531180c isa instruction, has hash "N_8740348773341_134531180c", has il-index 6, has asm-address "0x804c86c", has operation-type "MLIL_IF", has ins-text "if (esi#1 != 0) then 7 @ 0x0 else 8 @ 0x804c879";
(contains-instruction: $N_8740348773341_134531180c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348773341_134531180c isa instruction, has hash "N_8740348773341_134531180c"; 

insert
$N_8740348773341_134531180c_0 isa MLIL_CMP_NE, has hash "N_8740348773341_134531180c_0", has edge-label "condition";
(to-node: $N_8740348773341_134531180c_0, from-node: $N_8740348773341_134531180c) isa node-link; 

match
$N_8740348773341_134531180c_0 isa operation, has hash "N_8740348773341_134531180c_0"; 

insert
$N_8740348773341_134531180c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348773341_134531180c_0_0", has edge-label "left";
(to-node: $N_8740348773341_134531180c_0_0, from-node: $N_8740348773341_134531180c_0) isa node-link; 

match
$N_8740348773341_134531180c_0_0 isa operation, has hash "N_8740348773341_134531180c_0_0"; 

insert
$N_8740348773341_134531180c_0_0_0 isa variable-ssa, has hash "N_8740348773341_134531180c_0_0_0", has var "esi", has version 1, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348773341_134531180c_0_0_0, from-node: $N_8740348773341_134531180c_0_0) isa node-link; 

match
$N_8740348773341_134531180c_0 isa operation, has hash "N_8740348773341_134531180c_0"; 

insert
$N_8740348773341_134531180c_0_1 isa MLIL_CONST, has hash "N_8740348773341_134531180c_0_1", has edge-label "right";
(to-node: $N_8740348773341_134531180c_0_1, from-node: $N_8740348773341_134531180c_0) isa node-link; 

match
$N_8740348773341_134531180c_0_1 isa operation, has hash "N_8740348773341_134531180c_0_1"; 

insert
$N_8740348773341_134531180c_0_1_0 isa constant, has hash "N_8740348773341_134531180c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348773341_134531180c_0_1_0, from-node: $N_8740348773341_134531180c_0_1) isa node-link; 

match
$N_8740348773341_134531180c isa instruction, has hash "N_8740348773341_134531180c"; 

insert
$N_8740348773341_134531180c_1 isa constant, has hash "N_8740348773341_134531180c_1", has constant-value "7", has edge-label "true";
(to-node: $N_8740348773341_134531180c_1, from-node: $N_8740348773341_134531180c) isa node-link; 

match
$N_8740348773341_134531180c isa instruction, has hash "N_8740348773341_134531180c"; 

insert
$N_8740348773341_134531180c_2 isa constant, has hash "N_8740348773341_134531180c_2", has constant-value "8", has edge-label "false";
(to-node: $N_8740348773341_134531180c_2, from-node: $N_8740348773341_134531180c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348200305_0c isa instruction, has hash "N_8740348200305_0c", has il-index 160, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740348200305_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348200305_0c isa instruction, has hash "N_8740348200305_0c"; 

insert
$N_8740348200305_0c_0 isa constant, has hash "N_8740348200305_0c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740348200305_0c_0, from-node: $N_8740348200305_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348319221_0c isa instruction, has hash "N_8740348319221_0c", has il-index 218, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 179 @ 0x804ca39";
(contains-instruction: $N_8740348319221_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348319221_0c isa instruction, has hash "N_8740348319221_0c"; 

insert
$N_8740348319221_0c_0 isa constant, has hash "N_8740348319221_0c_0", has constant-value "179", has edge-label "dest";
(to-node: $N_8740348319221_0c_0, from-node: $N_8740348319221_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348323313_0c isa instruction, has hash "N_8740348323313_0c", has il-index 224, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740348323313_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348323313_0c isa instruction, has hash "N_8740348323313_0c"; 

insert
$N_8740348323313_0c_0 isa constant, has hash "N_8740348323313_0c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740348323313_0c_0, from-node: $N_8740348323313_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348327149_0c isa instruction, has hash "N_8740348327149_0c", has il-index 220, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740348327149_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348327149_0c isa instruction, has hash "N_8740348327149_0c"; 

insert
$N_8740348327149_0c_0 isa constant, has hash "N_8740348327149_0c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740348327149_0c_0, from-node: $N_8740348327149_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348438533_0c isa instruction, has hash "N_8740348438533_0c", has il-index 104, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 59 @ 0x804c8e0";
(contains-instruction: $N_8740348438533_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348438533_0c isa instruction, has hash "N_8740348438533_0c"; 

insert
$N_8740348438533_0c_0 isa constant, has hash "N_8740348438533_0c_0", has constant-value "59", has edge-label "dest";
(to-node: $N_8740348438533_0c_0, from-node: $N_8740348438533_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348486653_0c isa instruction, has hash "N_8740348486653_0c", has il-index 313, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 83 @ 0x804ccc1";
(contains-instruction: $N_8740348486653_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348486653_0c isa instruction, has hash "N_8740348486653_0c"; 

insert
$N_8740348486653_0c_0 isa constant, has hash "N_8740348486653_0c_0", has constant-value "83", has edge-label "dest";
(to-node: $N_8740348486653_0c_0, from-node: $N_8740348486653_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348536581_0c isa instruction, has hash "N_8740348536581_0c", has il-index 35, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 43 @ 0x804cca5";
(contains-instruction: $N_8740348536581_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348536581_0c isa instruction, has hash "N_8740348536581_0c"; 

insert
$N_8740348536581_0c_0 isa constant, has hash "N_8740348536581_0c_0", has constant-value "43", has edge-label "dest";
(to-node: $N_8740348536581_0c_0, from-node: $N_8740348536581_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348648713_0c isa instruction, has hash "N_8740348648713_0c", has il-index 70, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740348648713_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348648713_0c isa instruction, has hash "N_8740348648713_0c"; 

insert
$N_8740348648713_0c_0 isa constant, has hash "N_8740348648713_0c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740348648713_0c_0, from-node: $N_8740348648713_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348678385_0c isa instruction, has hash "N_8740348678385_0c", has il-index 191, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740348678385_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348678385_0c isa instruction, has hash "N_8740348678385_0c"; 

insert
$N_8740348678385_0c_0 isa constant, has hash "N_8740348678385_0c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740348678385_0c_0, from-node: $N_8740348678385_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348718485_0c isa instruction, has hash "N_8740348718485_0c", has il-index 302, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740348718485_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348718485_0c isa instruction, has hash "N_8740348718485_0c"; 

insert
$N_8740348718485_0c_0 isa constant, has hash "N_8740348718485_0c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740348718485_0c_0, from-node: $N_8740348718485_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348718857_0c isa instruction, has hash "N_8740348718857_0c", has il-index 280, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 287 @ 0x804cc14";
(contains-instruction: $N_8740348718857_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348718857_0c isa instruction, has hash "N_8740348718857_0c"; 

insert
$N_8740348718857_0c_0 isa constant, has hash "N_8740348718857_0c_0", has constant-value "287", has edge-label "dest";
(to-node: $N_8740348718857_0c_0, from-node: $N_8740348718857_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348845797_0c isa instruction, has hash "N_8740348845797_0c", has il-index 106, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 110 @ 0x804c993";
(contains-instruction: $N_8740348845797_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348845797_0c isa instruction, has hash "N_8740348845797_0c"; 

insert
$N_8740348845797_0c_0 isa constant, has hash "N_8740348845797_0c_0", has constant-value "110", has edge-label "dest";
(to-node: $N_8740348845797_0c_0, from-node: $N_8740348845797_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348845801_0c isa instruction, has hash "N_8740348845801_0c", has il-index 105, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 47 @ 0x804c903";
(contains-instruction: $N_8740348845801_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348845801_0c isa instruction, has hash "N_8740348845801_0c"; 

insert
$N_8740348845801_0c_0 isa constant, has hash "N_8740348845801_0c_0", has constant-value "47", has edge-label "dest";
(to-node: $N_8740348845801_0c_0, from-node: $N_8740348845801_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348907269_0c isa instruction, has hash "N_8740348907269_0c", has il-index 272, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 226 @ 0x804cb61";
(contains-instruction: $N_8740348907269_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348907269_0c isa instruction, has hash "N_8740348907269_0c"; 

insert
$N_8740348907269_0c_0 isa constant, has hash "N_8740348907269_0c_0", has constant-value "226", has edge-label "dest";
(to-node: $N_8740348907269_0c_0, from-node: $N_8740348907269_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349067525_0c isa instruction, has hash "N_8740349067525_0c", has il-index 310, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740349067525_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349067525_0c isa instruction, has hash "N_8740349067525_0c"; 

insert
$N_8740349067525_0c_0 isa constant, has hash "N_8740349067525_0c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740349067525_0c_0, from-node: $N_8740349067525_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349179129_0c isa instruction, has hash "N_8740349179129_0c", has il-index 225, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 254 @ 0x804cbc9";
(contains-instruction: $N_8740349179129_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349179129_0c isa instruction, has hash "N_8740349179129_0c"; 

insert
$N_8740349179129_0c_0 isa constant, has hash "N_8740349179129_0c_0", has constant-value "254", has edge-label "dest";
(to-node: $N_8740349179129_0c_0, from-node: $N_8740349179129_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349236193_0c isa instruction, has hash "N_8740349236193_0c", has il-index 95, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 83 @ 0x804ccc1";
(contains-instruction: $N_8740349236193_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349236193_0c isa instruction, has hash "N_8740349236193_0c"; 

insert
$N_8740349236193_0c_0 isa constant, has hash "N_8740349236193_0c_0", has constant-value "83", has edge-label "dest";
(to-node: $N_8740349236193_0c_0, from-node: $N_8740349236193_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349314649_0c isa instruction, has hash "N_8740349314649_0c", has il-index 277, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740349314649_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349314649_0c isa instruction, has hash "N_8740349314649_0c"; 

insert
$N_8740349314649_0c_0 isa constant, has hash "N_8740349314649_0c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740349314649_0c_0, from-node: $N_8740349314649_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349329925_0c isa instruction, has hash "N_8740349329925_0c", has il-index 151, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 110 @ 0x804c993";
(contains-instruction: $N_8740349329925_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349329925_0c isa instruction, has hash "N_8740349329925_0c"; 

insert
$N_8740349329925_0c_0 isa constant, has hash "N_8740349329925_0c_0", has constant-value "110", has edge-label "dest";
(to-node: $N_8740349329925_0c_0, from-node: $N_8740349329925_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349330009_0c isa instruction, has hash "N_8740349330009_0c", has il-index 150, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 121 @ 0x804c970";
(contains-instruction: $N_8740349330009_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349330009_0c isa instruction, has hash "N_8740349330009_0c"; 

insert
$N_8740349330009_0c_0 isa constant, has hash "N_8740349330009_0c_0", has constant-value "121", has edge-label "dest";
(to-node: $N_8740349330009_0c_0, from-node: $N_8740349330009_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349347453_0c isa instruction, has hash "N_8740349347453_0c", has il-index 167, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740349347453_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349347453_0c isa instruction, has hash "N_8740349347453_0c"; 

insert
$N_8740349347453_0c_0 isa constant, has hash "N_8740349347453_0c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740349347453_0c_0, from-node: $N_8740349347453_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349445313_0c isa instruction, has hash "N_8740349445313_0c", has il-index 299, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 287 @ 0x804cc14";
(contains-instruction: $N_8740349445313_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349445313_0c isa instruction, has hash "N_8740349445313_0c"; 

insert
$N_8740349445313_0c_0 isa constant, has hash "N_8740349445313_0c_0", has constant-value "287", has edge-label "dest";
(to-node: $N_8740349445313_0c_0, from-node: $N_8740349445313_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349471749_0c isa instruction, has hash "N_8740349471749_0c", has il-index 67, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 83 @ 0x804ccc1";
(contains-instruction: $N_8740349471749_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349471749_0c isa instruction, has hash "N_8740349471749_0c"; 

insert
$N_8740349471749_0c_0 isa constant, has hash "N_8740349471749_0c_0", has constant-value "83", has edge-label "dest";
(to-node: $N_8740349471749_0c_0, from-node: $N_8740349471749_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349652593_0c isa instruction, has hash "N_8740349652593_0c", has il-index 39, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 47 @ 0x804c903";
(contains-instruction: $N_8740349652593_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349652593_0c isa instruction, has hash "N_8740349652593_0c"; 

insert
$N_8740349652593_0c_0 isa constant, has hash "N_8740349652593_0c_0", has constant-value "47", has edge-label "dest";
(to-node: $N_8740349652593_0c_0, from-node: $N_8740349652593_0c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349764733_0c isa instruction, has hash "N_8740349764733_0c", has il-index 7, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740349764733_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349764733_0c isa instruction, has hash "N_8740349764733_0c"; 

insert
$N_8740349764733_0c_0 isa constant, has hash "N_8740349764733_0c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740349764733_0c_0, from-node: $N_8740349764733_0c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 8, has bb-end 13; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 8, has bb-end 13; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 8, has bb-end 13; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349536585_134531193c isa instruction, has hash "N_8740349536585_134531193c", has il-index 8, has asm-address "0x804c879", has operation-type "MLIL_CALL_SSA", has ins-text "eax_1#2, mem#4 = 0x804afd0(eax#1, 0x804ef8b) @ mem#3";
(contains-instruction: $N_8740349536585_134531193c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349536585_134531193c isa instruction, has hash "N_8740349536585_134531193c"; 

insert
$N_8740349536585_134531193c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740349536585_134531193c_0", has edge-label "output";
(to-node: $N_8740349536585_134531193c_0, from-node: $N_8740349536585_134531193c) isa node-link; 

match
$N_8740349536585_134531193c_0 isa operation, has hash "N_8740349536585_134531193c_0"; 

insert
$N_8740349536585_134531193c_0_0 isa constant, has hash "N_8740349536585_134531193c_0_0", has constant-value "4", has edge-label "dest_memory";
(to-node: $N_8740349536585_134531193c_0_0, from-node: $N_8740349536585_134531193c_0) isa node-link; 

match
$N_8740349536585_134531193c_0 isa operation, has hash "N_8740349536585_134531193c_0"; 

insert
$L_8740349536585_134531193c_0_1 isa list, has hash "L_8740349536585_134531193c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740349536585_134531193c_0_1, from-node: $N_8740349536585_134531193c_0) isa node-link; 

match
$L_8740349536585_134531193c_0_1 isa list, has hash "L_8740349536585_134531193c_0_1"; 

insert
$N_8740349536585_134531193c_0_1_0 isa variable-ssa, has hash "N_8740349536585_134531193c_0_1_0", has var "eax_1", has version 2, has edge-label "0", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349536585_134531193c_0_1_0, from-node: $L_8740349536585_134531193c_0_1) isa node-link; 

match
$N_8740349536585_134531193c isa instruction, has hash "N_8740349536585_134531193c"; 

insert
$N_8740349536585_134531193c_1 isa MLIL_CONST_PTR, has hash "N_8740349536585_134531193c_1", has edge-label "dest";
(to-node: $N_8740349536585_134531193c_1, from-node: $N_8740349536585_134531193c) isa node-link; 

match
$N_8740349536585_134531193c_1 isa operation, has hash "N_8740349536585_134531193c_1"; 

insert
$N_8740349536585_134531193c_1_0 isa constant, has hash "N_8740349536585_134531193c_1_0", has constant-value "134524880", has edge-label "constant";
(to-node: $N_8740349536585_134531193c_1_0, from-node: $N_8740349536585_134531193c_1) isa node-link; 

match
$N_8740349536585_134531193c isa instruction, has hash "N_8740349536585_134531193c"; 

insert
$L_8740349536585_134531193c_2 isa list, has hash "L_8740349536585_134531193c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740349536585_134531193c_2, from-node: $N_8740349536585_134531193c) isa node-link; 

match
$L_8740349536585_134531193c_2 isa list, has hash "L_8740349536585_134531193c_2"; 

insert
$N_8740349536585_134531193c_2_0 isa MLIL_VAR_SSA, has hash "N_8740349536585_134531193c_2_0", has edge-label "0";
(to-node: $N_8740349536585_134531193c_2_0, from-node: $L_8740349536585_134531193c_2) isa node-link; 

match
$N_8740349536585_134531193c_2_0 isa operation, has hash "N_8740349536585_134531193c_2_0"; 

insert
$N_8740349536585_134531193c_2_0_0 isa variable-ssa, has hash "N_8740349536585_134531193c_2_0_0", has var "eax", has version 1, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349536585_134531193c_2_0_0, from-node: $N_8740349536585_134531193c_2_0) isa node-link; 

match
$L_8740349536585_134531193c_2 isa list, has hash "L_8740349536585_134531193c_2"; 

insert
$N_8740349536585_134531193c_2_1 isa MLIL_CONST, has hash "N_8740349536585_134531193c_2_1", has edge-label "1";
(to-node: $N_8740349536585_134531193c_2_1, from-node: $L_8740349536585_134531193c_2) isa node-link; 

match
$N_8740349536585_134531193c_2_1 isa operation, has hash "N_8740349536585_134531193c_2_1"; 

insert
$N_8740349536585_134531193c_2_1_0 isa constant, has hash "N_8740349536585_134531193c_2_1_0", has constant-value "134541195", has edge-label "constant";
(to-node: $N_8740349536585_134531193c_2_1_0, from-node: $N_8740349536585_134531193c_2_1) isa node-link; 

match
$N_8740349536585_134531193c isa instruction, has hash "N_8740349536585_134531193c"; 

insert
$N_8740349536585_134531193c_3 isa constant, has hash "N_8740349536585_134531193c_3", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8740349536585_134531193c_3, from-node: $N_8740349536585_134531193c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 8, has bb-end 13; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 8, has bb-end 13; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348542093_134531205c isa instruction, has hash "N_8740348542093_134531205c", has il-index 9, has asm-address "0x804c885", has operation-type "MLIL_CALL_SSA", has ins-text "mem#5 = 0x804afd0(eax_1#2, 0x804efb3) @ mem#4";
(contains-instruction: $N_8740348542093_134531205c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348542093_134531205c isa instruction, has hash "N_8740348542093_134531205c"; 

insert
$N_8740348542093_134531205c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348542093_134531205c_0", has edge-label "output";
(to-node: $N_8740348542093_134531205c_0, from-node: $N_8740348542093_134531205c) isa node-link; 

match
$N_8740348542093_134531205c_0 isa operation, has hash "N_8740348542093_134531205c_0"; 

insert
$N_8740348542093_134531205c_0_0 isa constant, has hash "N_8740348542093_134531205c_0_0", has constant-value "5", has edge-label "dest_memory";
(to-node: $N_8740348542093_134531205c_0_0, from-node: $N_8740348542093_134531205c_0) isa node-link; 

match
$N_8740348542093_134531205c_0 isa operation, has hash "N_8740348542093_134531205c_0"; 

insert
$L_8740348542093_134531205c_0_1 isa list, has hash "L_8740348542093_134531205c_0_1", has list-size 0, has edge-label "dest";
(to-node: $L_8740348542093_134531205c_0_1, from-node: $N_8740348542093_134531205c_0) isa node-link; 

match
$N_8740348542093_134531205c isa instruction, has hash "N_8740348542093_134531205c"; 

insert
$N_8740348542093_134531205c_1 isa MLIL_CONST_PTR, has hash "N_8740348542093_134531205c_1", has edge-label "dest";
(to-node: $N_8740348542093_134531205c_1, from-node: $N_8740348542093_134531205c) isa node-link; 

match
$N_8740348542093_134531205c_1 isa operation, has hash "N_8740348542093_134531205c_1"; 

insert
$N_8740348542093_134531205c_1_0 isa constant, has hash "N_8740348542093_134531205c_1_0", has constant-value "134524880", has edge-label "constant";
(to-node: $N_8740348542093_134531205c_1_0, from-node: $N_8740348542093_134531205c_1) isa node-link; 

match
$N_8740348542093_134531205c isa instruction, has hash "N_8740348542093_134531205c"; 

insert
$L_8740348542093_134531205c_2 isa list, has hash "L_8740348542093_134531205c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740348542093_134531205c_2, from-node: $N_8740348542093_134531205c) isa node-link; 

match
$L_8740348542093_134531205c_2 isa list, has hash "L_8740348542093_134531205c_2"; 

insert
$N_8740348542093_134531205c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348542093_134531205c_2_0", has edge-label "0";
(to-node: $N_8740348542093_134531205c_2_0, from-node: $L_8740348542093_134531205c_2) isa node-link; 

match
$N_8740348542093_134531205c_2_0 isa operation, has hash "N_8740348542093_134531205c_2_0"; 

insert
$N_8740348542093_134531205c_2_0_0 isa variable-ssa, has hash "N_8740348542093_134531205c_2_0_0", has var "eax_1", has version 2, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348542093_134531205c_2_0_0, from-node: $N_8740348542093_134531205c_2_0) isa node-link; 

match
$L_8740348542093_134531205c_2 isa list, has hash "L_8740348542093_134531205c_2"; 

insert
$N_8740348542093_134531205c_2_1 isa MLIL_CONST, has hash "N_8740348542093_134531205c_2_1", has edge-label "1";
(to-node: $N_8740348542093_134531205c_2_1, from-node: $L_8740348542093_134531205c_2) isa node-link; 

match
$N_8740348542093_134531205c_2_1 isa operation, has hash "N_8740348542093_134531205c_2_1"; 

insert
$N_8740348542093_134531205c_2_1_0 isa constant, has hash "N_8740348542093_134531205c_2_1_0", has constant-value "134541235", has edge-label "constant";
(to-node: $N_8740348542093_134531205c_2_1_0, from-node: $N_8740348542093_134531205c_2_1) isa node-link; 

match
$N_8740348542093_134531205c isa instruction, has hash "N_8740348542093_134531205c"; 

insert
$N_8740348542093_134531205c_3 isa constant, has hash "N_8740348542093_134531205c_3", has constant-value "4", has edge-label "src_memory";
(to-node: $N_8740348542093_134531205c_3, from-node: $N_8740348542093_134531205c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 8, has bb-end 13; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 8, has bb-end 13; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349080581_134531219c isa instruction, has hash "N_8740349080581_134531219c", has il-index 10, has asm-address "0x804c893", has operation-type "MLIL_CALL_SSA", has ins-text "edx_1#1, mem#6 = 0x8049ad0(0x8050554) @ mem#5";
(contains-instruction: $N_8740349080581_134531219c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349080581_134531219c isa instruction, has hash "N_8740349080581_134531219c"; 

insert
$N_8740349080581_134531219c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740349080581_134531219c_0", has edge-label "output";
(to-node: $N_8740349080581_134531219c_0, from-node: $N_8740349080581_134531219c) isa node-link; 

match
$N_8740349080581_134531219c_0 isa operation, has hash "N_8740349080581_134531219c_0"; 

insert
$N_8740349080581_134531219c_0_0 isa constant, has hash "N_8740349080581_134531219c_0_0", has constant-value "6", has edge-label "dest_memory";
(to-node: $N_8740349080581_134531219c_0_0, from-node: $N_8740349080581_134531219c_0) isa node-link; 

match
$N_8740349080581_134531219c_0 isa operation, has hash "N_8740349080581_134531219c_0"; 

insert
$L_8740349080581_134531219c_0_1 isa list, has hash "L_8740349080581_134531219c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740349080581_134531219c_0_1, from-node: $N_8740349080581_134531219c_0) isa node-link; 

match
$L_8740349080581_134531219c_0_1 isa list, has hash "L_8740349080581_134531219c_0_1"; 

insert
$N_8740349080581_134531219c_0_1_0 isa variable-ssa, has hash "N_8740349080581_134531219c_0_1_0", has var "edx_1", has version 1, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349080581_134531219c_0_1_0, from-node: $L_8740349080581_134531219c_0_1) isa node-link; 

match
$N_8740349080581_134531219c isa instruction, has hash "N_8740349080581_134531219c"; 

insert
$N_8740349080581_134531219c_1 isa MLIL_CONST_PTR, has hash "N_8740349080581_134531219c_1", has edge-label "dest";
(to-node: $N_8740349080581_134531219c_1, from-node: $N_8740349080581_134531219c) isa node-link; 

match
$N_8740349080581_134531219c_1 isa operation, has hash "N_8740349080581_134531219c_1"; 

insert
$N_8740349080581_134531219c_1_0 isa constant, has hash "N_8740349080581_134531219c_1_0", has constant-value "134519504", has edge-label "constant";
(to-node: $N_8740349080581_134531219c_1_0, from-node: $N_8740349080581_134531219c_1) isa node-link; 

match
$N_8740349080581_134531219c isa instruction, has hash "N_8740349080581_134531219c"; 

insert
$L_8740349080581_134531219c_2 isa list, has hash "L_8740349080581_134531219c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740349080581_134531219c_2, from-node: $N_8740349080581_134531219c) isa node-link; 

match
$L_8740349080581_134531219c_2 isa list, has hash "L_8740349080581_134531219c_2"; 

insert
$N_8740349080581_134531219c_2_0 isa MLIL_CONST_PTR, has hash "N_8740349080581_134531219c_2_0", has edge-label "0";
(to-node: $N_8740349080581_134531219c_2_0, from-node: $L_8740349080581_134531219c_2) isa node-link; 

match
$N_8740349080581_134531219c_2_0 isa operation, has hash "N_8740349080581_134531219c_2_0"; 

insert
$N_8740349080581_134531219c_2_0_0 isa constant, has hash "N_8740349080581_134531219c_2_0_0", has constant-value "134546772", has edge-label "constant";
(to-node: $N_8740349080581_134531219c_2_0_0, from-node: $N_8740349080581_134531219c_2_0) isa node-link; 

match
$N_8740349080581_134531219c isa instruction, has hash "N_8740349080581_134531219c"; 

insert
$N_8740349080581_134531219c_3 isa constant, has hash "N_8740349080581_134531219c_3", has constant-value "5", has edge-label "src_memory";
(to-node: $N_8740349080581_134531219c_3, from-node: $N_8740349080581_134531219c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 8, has bb-end 13; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 8, has bb-end 13; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348879109_134531237c isa instruction, has hash "N_8740348879109_134531237c", has il-index 11, has asm-address "0x804c8a5", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_1#2 = &var_190";
(contains-instruction: $N_8740348879109_134531237c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348879109_134531237c isa instruction, has hash "N_8740348879109_134531237c"; 

insert
$N_8740348879109_134531237c_0 isa variable-ssa, has hash "N_8740348879109_134531237c_0", has var "var_1ac_1", has version 2, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348879109_134531237c_0, from-node: $N_8740348879109_134531237c) isa node-link; 

match
$N_8740348879109_134531237c isa instruction, has hash "N_8740348879109_134531237c"; 

insert
$N_8740348879109_134531237c_1 isa MLIL_ADDRESS_OF, has hash "N_8740348879109_134531237c_1", has edge-label "src";
(to-node: $N_8740348879109_134531237c_1, from-node: $N_8740348879109_134531237c) isa node-link; 

match
$N_8740348879109_134531237c_1 isa operation, has hash "N_8740348879109_134531237c_1"; 

insert
$N_8740348879109_134531237c_1_0 isa variable, has hash "N_8740348879109_134531237c_1_0", has var "var_190", has edge-label "src", has var-type "void", has var-size 256, has var-func "cgc_handle_register_user";
(to-node: $N_8740348879109_134531237c_1_0, from-node: $N_8740348879109_134531237c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 8, has bb-end 13; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 8, has bb-end 13; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348400809_134531256c isa instruction, has hash "N_8740348400809_134531256c", has il-index 12, has asm-address "0x804c8b8", has operation-type "MLIL_CALL_SSA", has ins-text "eax_2#3, mem#7 = 0x804bc80(0x805013c, edx_1#1, var_1ac_1#2, 0x100, 0xa, 0x805013c) @ mem#6";
(contains-instruction: $N_8740348400809_134531256c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348400809_134531256c isa instruction, has hash "N_8740348400809_134531256c"; 

insert
$N_8740348400809_134531256c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348400809_134531256c_0", has edge-label "output";
(to-node: $N_8740348400809_134531256c_0, from-node: $N_8740348400809_134531256c) isa node-link; 

match
$N_8740348400809_134531256c_0 isa operation, has hash "N_8740348400809_134531256c_0"; 

insert
$N_8740348400809_134531256c_0_0 isa constant, has hash "N_8740348400809_134531256c_0_0", has constant-value "7", has edge-label "dest_memory";
(to-node: $N_8740348400809_134531256c_0_0, from-node: $N_8740348400809_134531256c_0) isa node-link; 

match
$N_8740348400809_134531256c_0 isa operation, has hash "N_8740348400809_134531256c_0"; 

insert
$L_8740348400809_134531256c_0_1 isa list, has hash "L_8740348400809_134531256c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348400809_134531256c_0_1, from-node: $N_8740348400809_134531256c_0) isa node-link; 

match
$L_8740348400809_134531256c_0_1 isa list, has hash "L_8740348400809_134531256c_0_1"; 

insert
$N_8740348400809_134531256c_0_1_0 isa variable-ssa, has hash "N_8740348400809_134531256c_0_1_0", has var "eax_2", has version 3, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348400809_134531256c_0_1_0, from-node: $L_8740348400809_134531256c_0_1) isa node-link; 

match
$N_8740348400809_134531256c isa instruction, has hash "N_8740348400809_134531256c"; 

insert
$N_8740348400809_134531256c_1 isa MLIL_CONST_PTR, has hash "N_8740348400809_134531256c_1", has edge-label "dest";
(to-node: $N_8740348400809_134531256c_1, from-node: $N_8740348400809_134531256c) isa node-link; 

match
$N_8740348400809_134531256c_1 isa operation, has hash "N_8740348400809_134531256c_1"; 

insert
$N_8740348400809_134531256c_1_0 isa constant, has hash "N_8740348400809_134531256c_1_0", has constant-value "134528128", has edge-label "constant";
(to-node: $N_8740348400809_134531256c_1_0, from-node: $N_8740348400809_134531256c_1) isa node-link; 

match
$N_8740348400809_134531256c isa instruction, has hash "N_8740348400809_134531256c"; 

insert
$L_8740348400809_134531256c_2 isa list, has hash "L_8740348400809_134531256c_2", has list-size 6, has edge-label "params";
(to-node: $L_8740348400809_134531256c_2, from-node: $N_8740348400809_134531256c) isa node-link; 

match
$L_8740348400809_134531256c_2 isa list, has hash "L_8740348400809_134531256c_2"; 

insert
$N_8740348400809_134531256c_2_0 isa MLIL_CONST, has hash "N_8740348400809_134531256c_2_0", has edge-label "0";
(to-node: $N_8740348400809_134531256c_2_0, from-node: $L_8740348400809_134531256c_2) isa node-link; 

match
$N_8740348400809_134531256c_2_0 isa operation, has hash "N_8740348400809_134531256c_2_0"; 

insert
$N_8740348400809_134531256c_2_0_0 isa constant, has hash "N_8740348400809_134531256c_2_0_0", has constant-value "134545724", has edge-label "constant";
(to-node: $N_8740348400809_134531256c_2_0_0, from-node: $N_8740348400809_134531256c_2_0) isa node-link; 

match
$L_8740348400809_134531256c_2 isa list, has hash "L_8740348400809_134531256c_2"; 

insert
$N_8740348400809_134531256c_2_1 isa MLIL_VAR_SSA, has hash "N_8740348400809_134531256c_2_1", has edge-label "1";
(to-node: $N_8740348400809_134531256c_2_1, from-node: $L_8740348400809_134531256c_2) isa node-link; 

match
$N_8740348400809_134531256c_2_1 isa operation, has hash "N_8740348400809_134531256c_2_1"; 

insert
$N_8740348400809_134531256c_2_1_0 isa variable-ssa, has hash "N_8740348400809_134531256c_2_1_0", has var "edx_1", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348400809_134531256c_2_1_0, from-node: $N_8740348400809_134531256c_2_1) isa node-link; 

match
$L_8740348400809_134531256c_2 isa list, has hash "L_8740348400809_134531256c_2"; 

insert
$N_8740348400809_134531256c_2_2 isa MLIL_VAR_SSA, has hash "N_8740348400809_134531256c_2_2", has edge-label "2";
(to-node: $N_8740348400809_134531256c_2_2, from-node: $L_8740348400809_134531256c_2) isa node-link; 

match
$N_8740348400809_134531256c_2_2 isa operation, has hash "N_8740348400809_134531256c_2_2"; 

insert
$N_8740348400809_134531256c_2_2_0 isa variable-ssa, has hash "N_8740348400809_134531256c_2_2_0", has var "var_1ac_1", has version 2, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348400809_134531256c_2_2_0, from-node: $N_8740348400809_134531256c_2_2) isa node-link; 

match
$L_8740348400809_134531256c_2 isa list, has hash "L_8740348400809_134531256c_2"; 

insert
$N_8740348400809_134531256c_2_3 isa MLIL_CONST, has hash "N_8740348400809_134531256c_2_3", has edge-label "3";
(to-node: $N_8740348400809_134531256c_2_3, from-node: $L_8740348400809_134531256c_2) isa node-link; 

match
$N_8740348400809_134531256c_2_3 isa operation, has hash "N_8740348400809_134531256c_2_3"; 

insert
$N_8740348400809_134531256c_2_3_0 isa constant, has hash "N_8740348400809_134531256c_2_3_0", has constant-value "256", has edge-label "constant";
(to-node: $N_8740348400809_134531256c_2_3_0, from-node: $N_8740348400809_134531256c_2_3) isa node-link; 

match
$L_8740348400809_134531256c_2 isa list, has hash "L_8740348400809_134531256c_2"; 

insert
$N_8740348400809_134531256c_2_4 isa MLIL_CONST, has hash "N_8740348400809_134531256c_2_4", has edge-label "4";
(to-node: $N_8740348400809_134531256c_2_4, from-node: $L_8740348400809_134531256c_2) isa node-link; 

match
$N_8740348400809_134531256c_2_4 isa operation, has hash "N_8740348400809_134531256c_2_4"; 

insert
$N_8740348400809_134531256c_2_4_0 isa constant, has hash "N_8740348400809_134531256c_2_4_0", has constant-value "10", has edge-label "constant";
(to-node: $N_8740348400809_134531256c_2_4_0, from-node: $N_8740348400809_134531256c_2_4) isa node-link; 

match
$L_8740348400809_134531256c_2 isa list, has hash "L_8740348400809_134531256c_2"; 

insert
$N_8740348400809_134531256c_2_5 isa MLIL_CONST_PTR, has hash "N_8740348400809_134531256c_2_5", has edge-label "5";
(to-node: $N_8740348400809_134531256c_2_5, from-node: $L_8740348400809_134531256c_2) isa node-link; 

match
$N_8740348400809_134531256c_2_5 isa operation, has hash "N_8740348400809_134531256c_2_5"; 

insert
$N_8740348400809_134531256c_2_5_0 isa constant, has hash "N_8740348400809_134531256c_2_5_0", has constant-value "134545724", has edge-label "constant";
(to-node: $N_8740348400809_134531256c_2_5_0, from-node: $N_8740348400809_134531256c_2_5) isa node-link; 

match
$N_8740348400809_134531256c isa instruction, has hash "N_8740348400809_134531256c"; 

insert
$N_8740348400809_134531256c_3 isa constant, has hash "N_8740348400809_134531256c_3", has constant-value "6", has edge-label "src_memory";
(to-node: $N_8740348400809_134531256c_3, from-node: $N_8740348400809_134531256c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 8, has bb-end 13; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 8, has bb-end 13; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348491781_134531263c isa instruction, has hash "N_8740348491781_134531263c", has il-index 13, has asm-address "0x804c8bf", has operation-type "MLIL_IF", has ins-text "if (eax_2#3 s<= 0) then 30 @ 0x804c9b0 else 32 @ 0x804c8c5";
(contains-instruction: $N_8740348491781_134531263c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348491781_134531263c isa instruction, has hash "N_8740348491781_134531263c"; 

insert
$N_8740348491781_134531263c_0 isa MLIL_CMP_SLE, has hash "N_8740348491781_134531263c_0", has edge-label "condition";
(to-node: $N_8740348491781_134531263c_0, from-node: $N_8740348491781_134531263c) isa node-link; 

match
$N_8740348491781_134531263c_0 isa operation, has hash "N_8740348491781_134531263c_0"; 

insert
$N_8740348491781_134531263c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348491781_134531263c_0_0", has edge-label "left";
(to-node: $N_8740348491781_134531263c_0_0, from-node: $N_8740348491781_134531263c_0) isa node-link; 

match
$N_8740348491781_134531263c_0_0 isa operation, has hash "N_8740348491781_134531263c_0_0"; 

insert
$N_8740348491781_134531263c_0_0_0 isa variable-ssa, has hash "N_8740348491781_134531263c_0_0_0", has var "eax_2", has version 3, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348491781_134531263c_0_0_0, from-node: $N_8740348491781_134531263c_0_0) isa node-link; 

match
$N_8740348491781_134531263c_0 isa operation, has hash "N_8740348491781_134531263c_0"; 

insert
$N_8740348491781_134531263c_0_1 isa MLIL_CONST, has hash "N_8740348491781_134531263c_0_1", has edge-label "right";
(to-node: $N_8740348491781_134531263c_0_1, from-node: $N_8740348491781_134531263c_0) isa node-link; 

match
$N_8740348491781_134531263c_0_1 isa operation, has hash "N_8740348491781_134531263c_0_1"; 

insert
$N_8740348491781_134531263c_0_1_0 isa constant, has hash "N_8740348491781_134531263c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348491781_134531263c_0_1_0, from-node: $N_8740348491781_134531263c_0_1) isa node-link; 

match
$N_8740348491781_134531263c isa instruction, has hash "N_8740348491781_134531263c"; 

insert
$N_8740348491781_134531263c_1 isa constant, has hash "N_8740348491781_134531263c_1", has constant-value "30", has edge-label "true";
(to-node: $N_8740348491781_134531263c_1, from-node: $N_8740348491781_134531263c) isa node-link; 

match
$N_8740348491781_134531263c isa instruction, has hash "N_8740348491781_134531263c"; 

insert
$N_8740348491781_134531263c_2 isa constant, has hash "N_8740348491781_134531263c_2", has constant-value "32", has edge-label "false";
(to-node: $N_8740348491781_134531263c_2, from-node: $N_8740348491781_134531263c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348404741_134532219c isa instruction, has hash "N_8740348404741_134532219c", has il-index 24, has asm-address "0x804cc7b", has operation-type "MLIL_MEM_PHI", has ins-text "mem#53 = ϕ(mem#3, mem#7, mem#10, mem#13, mem#16, mem#19, mem#22, mem#25, mem#26, mem#27, mem#31, mem#32, mem#35, mem#36, mem#44, mem#46, mem#47, mem#49, mem#50)";
(contains-instruction: $N_8740348404741_134532219c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348404741_134532219c isa instruction, has hash "N_8740348404741_134532219c"; 

insert
$N_8740348404741_134532219c_0 isa constant, has hash "N_8740348404741_134532219c_0", has constant-value "53", has edge-label "dest_memory";
(to-node: $N_8740348404741_134532219c_0, from-node: $N_8740348404741_134532219c) isa node-link; 

match
$N_8740348404741_134532219c isa instruction, has hash "N_8740348404741_134532219c"; 

insert
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1", has list-size 19, has edge-label "src_memory";
(to-node: $L_8740348404741_134532219c_1, from-node: $N_8740348404741_134532219c) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_0 isa constant, has hash "N_8740348404741_134532219c_1_0", has constant-value "3", has edge-label "0";
(to-node: $N_8740348404741_134532219c_1_0, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_1 isa constant, has hash "N_8740348404741_134532219c_1_1", has constant-value "7", has edge-label "1";
(to-node: $N_8740348404741_134532219c_1_1, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_2 isa constant, has hash "N_8740348404741_134532219c_1_2", has constant-value "10", has edge-label "2";
(to-node: $N_8740348404741_134532219c_1_2, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_3 isa constant, has hash "N_8740348404741_134532219c_1_3", has constant-value "13", has edge-label "3";
(to-node: $N_8740348404741_134532219c_1_3, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_4 isa constant, has hash "N_8740348404741_134532219c_1_4", has constant-value "16", has edge-label "4";
(to-node: $N_8740348404741_134532219c_1_4, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_5 isa constant, has hash "N_8740348404741_134532219c_1_5", has constant-value "19", has edge-label "5";
(to-node: $N_8740348404741_134532219c_1_5, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_6 isa constant, has hash "N_8740348404741_134532219c_1_6", has constant-value "22", has edge-label "6";
(to-node: $N_8740348404741_134532219c_1_6, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_7 isa constant, has hash "N_8740348404741_134532219c_1_7", has constant-value "25", has edge-label "7";
(to-node: $N_8740348404741_134532219c_1_7, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_8 isa constant, has hash "N_8740348404741_134532219c_1_8", has constant-value "26", has edge-label "8";
(to-node: $N_8740348404741_134532219c_1_8, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_9 isa constant, has hash "N_8740348404741_134532219c_1_9", has constant-value "27", has edge-label "9";
(to-node: $N_8740348404741_134532219c_1_9, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_10 isa constant, has hash "N_8740348404741_134532219c_1_10", has constant-value "31", has edge-label "10";
(to-node: $N_8740348404741_134532219c_1_10, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_11 isa constant, has hash "N_8740348404741_134532219c_1_11", has constant-value "32", has edge-label "11";
(to-node: $N_8740348404741_134532219c_1_11, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_12 isa constant, has hash "N_8740348404741_134532219c_1_12", has constant-value "35", has edge-label "12";
(to-node: $N_8740348404741_134532219c_1_12, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_13 isa constant, has hash "N_8740348404741_134532219c_1_13", has constant-value "36", has edge-label "13";
(to-node: $N_8740348404741_134532219c_1_13, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_14 isa constant, has hash "N_8740348404741_134532219c_1_14", has constant-value "44", has edge-label "14";
(to-node: $N_8740348404741_134532219c_1_14, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_15 isa constant, has hash "N_8740348404741_134532219c_1_15", has constant-value "46", has edge-label "15";
(to-node: $N_8740348404741_134532219c_1_15, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_16 isa constant, has hash "N_8740348404741_134532219c_1_16", has constant-value "47", has edge-label "16";
(to-node: $N_8740348404741_134532219c_1_16, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_17 isa constant, has hash "N_8740348404741_134532219c_1_17", has constant-value "49", has edge-label "17";
(to-node: $N_8740348404741_134532219c_1_17, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$L_8740348404741_134532219c_1 isa list, has hash "L_8740348404741_134532219c_1"; 

insert
$N_8740348404741_134532219c_1_18 isa constant, has hash "N_8740348404741_134532219c_1_18", has constant-value "50", has edge-label "18";
(to-node: $N_8740348404741_134532219c_1_18, from-node: $L_8740348404741_134532219c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348614153_134532219c isa instruction, has hash "N_8740348614153_134532219c", has il-index 17, has asm-address "0x804cc7b", has operation-type "MLIL_VAR_PHI", has ins-text "ecx_4#6 = ϕ(ecx#0, ecx_1#2, ecx_2#3, ecx_3#4, ecx_4#5)";
(contains-instruction: $N_8740348614153_134532219c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348614153_134532219c isa instruction, has hash "N_8740348614153_134532219c"; 

insert
$N_8740348614153_134532219c_0 isa variable-ssa, has hash "N_8740348614153_134532219c_0", has var "ecx_4", has version 6, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348614153_134532219c_0, from-node: $N_8740348614153_134532219c) isa node-link; 

match
$N_8740348614153_134532219c isa instruction, has hash "N_8740348614153_134532219c"; 

insert
$L_8740348614153_134532219c_1 isa list, has hash "L_8740348614153_134532219c_1", has list-size 5, has edge-label "src";
(to-node: $L_8740348614153_134532219c_1, from-node: $N_8740348614153_134532219c) isa node-link; 

match
$L_8740348614153_134532219c_1 isa list, has hash "L_8740348614153_134532219c_1"; 

insert
$N_8740348614153_134532219c_1_0 isa variable-ssa, has hash "N_8740348614153_134532219c_1_0", has var "ecx", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348614153_134532219c_1_0, from-node: $L_8740348614153_134532219c_1) isa node-link; 

match
$L_8740348614153_134532219c_1 isa list, has hash "L_8740348614153_134532219c_1"; 

insert
$N_8740348614153_134532219c_1_1 isa variable-ssa, has hash "N_8740348614153_134532219c_1_1", has var "ecx_1", has version 2, has edge-label "1", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348614153_134532219c_1_1, from-node: $L_8740348614153_134532219c_1) isa node-link; 

match
$L_8740348614153_134532219c_1 isa list, has hash "L_8740348614153_134532219c_1"; 

insert
$N_8740348614153_134532219c_1_2 isa variable-ssa, has hash "N_8740348614153_134532219c_1_2", has var "ecx_2", has version 3, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348614153_134532219c_1_2, from-node: $L_8740348614153_134532219c_1) isa node-link; 

match
$L_8740348614153_134532219c_1 isa list, has hash "L_8740348614153_134532219c_1"; 

insert
$N_8740348614153_134532219c_1_3 isa variable-ssa, has hash "N_8740348614153_134532219c_1_3", has var "ecx_3", has version 4, has edge-label "3", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348614153_134532219c_1_3, from-node: $L_8740348614153_134532219c_1) isa node-link; 

match
$L_8740348614153_134532219c_1 isa list, has hash "L_8740348614153_134532219c_1"; 

insert
$N_8740348614153_134532219c_1_4 isa variable-ssa, has hash "N_8740348614153_134532219c_1_4", has var "ecx_4", has version 5, has edge-label "4", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348614153_134532219c_1_4, from-node: $L_8740348614153_134532219c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348673797_134532219c isa instruction, has hash "N_8740348673797_134532219c", has il-index 16, has asm-address "0x804cc7b", has operation-type "MLIL_VAR_PHI", has ins-text "eax_49#65 = ϕ(eax#1, eax_2#3, eax_5#7, eax_9#12, eax_10#13, eax_13#17, eax_17#22, eax_18#23, eax_25#25, eax_27#27, eax_29#29, eax_30#30, eax_32#32, eax_20#42, eax_24#51, eax_43#54, eax_45#56, eax_47#59, eax_49#61)";
(contains-instruction: $N_8740348673797_134532219c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348673797_134532219c isa instruction, has hash "N_8740348673797_134532219c"; 

insert
$N_8740348673797_134532219c_0 isa variable-ssa, has hash "N_8740348673797_134532219c_0", has var "eax_49", has version 65, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_0, from-node: $N_8740348673797_134532219c) isa node-link; 

match
$N_8740348673797_134532219c isa instruction, has hash "N_8740348673797_134532219c"; 

insert
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1", has list-size 19, has edge-label "src";
(to-node: $L_8740348673797_134532219c_1, from-node: $N_8740348673797_134532219c) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_0 isa variable-ssa, has hash "N_8740348673797_134532219c_1_0", has var "eax", has version 1, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_0, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_1 isa variable-ssa, has hash "N_8740348673797_134532219c_1_1", has var "eax_2", has version 3, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_1, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_2 isa variable-ssa, has hash "N_8740348673797_134532219c_1_2", has var "eax_5", has version 7, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_2, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_3 isa variable-ssa, has hash "N_8740348673797_134532219c_1_3", has var "eax_9", has version 12, has edge-label "3", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_3, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_4 isa variable-ssa, has hash "N_8740348673797_134532219c_1_4", has var "eax_10", has version 13, has edge-label "4", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_4, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_5 isa variable-ssa, has hash "N_8740348673797_134532219c_1_5", has var "eax_13", has version 17, has edge-label "5", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_5, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_6 isa variable-ssa, has hash "N_8740348673797_134532219c_1_6", has var "eax_17", has version 22, has edge-label "6", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_6, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_7 isa variable-ssa, has hash "N_8740348673797_134532219c_1_7", has var "eax_18", has version 23, has edge-label "7", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_7, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_8 isa variable-ssa, has hash "N_8740348673797_134532219c_1_8", has var "eax_25", has version 25, has edge-label "8", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_8, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_9 isa variable-ssa, has hash "N_8740348673797_134532219c_1_9", has var "eax_27", has version 27, has edge-label "9", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_9, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_10 isa variable-ssa, has hash "N_8740348673797_134532219c_1_10", has var "eax_29", has version 29, has edge-label "10", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_10, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_11 isa variable-ssa, has hash "N_8740348673797_134532219c_1_11", has var "eax_30", has version 30, has edge-label "11", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_11, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_12 isa variable-ssa, has hash "N_8740348673797_134532219c_1_12", has var "eax_32", has version 32, has edge-label "12", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_12, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_13 isa variable-ssa, has hash "N_8740348673797_134532219c_1_13", has var "eax_20", has version 42, has edge-label "13", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_13, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_14 isa variable-ssa, has hash "N_8740348673797_134532219c_1_14", has var "eax_24", has version 51, has edge-label "14", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_14, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_15 isa variable-ssa, has hash "N_8740348673797_134532219c_1_15", has var "eax_43", has version 54, has edge-label "15", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_15, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_16 isa variable-ssa, has hash "N_8740348673797_134532219c_1_16", has var "eax_45", has version 56, has edge-label "16", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_16, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_17 isa variable-ssa, has hash "N_8740348673797_134532219c_1_17", has var "eax_47", has version 59, has edge-label "17", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_17, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$L_8740348673797_134532219c_1 isa list, has hash "L_8740348673797_134532219c_1"; 

insert
$N_8740348673797_134532219c_1_18 isa variable-ssa, has hash "N_8740348673797_134532219c_1_18", has var "eax_49", has version 61, has edge-label "18", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348673797_134532219c_1_18, from-node: $L_8740348673797_134532219c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348803025_134532219c isa instruction, has hash "N_8740348803025_134532219c", has il-index 25, has asm-address "0x804cc7b", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_23#32 = esi#32";
(contains-instruction: $N_8740348803025_134532219c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348803025_134532219c isa instruction, has hash "N_8740348803025_134532219c"; 

insert
$N_8740348803025_134532219c_0 isa variable-ssa, has hash "N_8740348803025_134532219c_0", has var "var_1ac_23", has version 32, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348803025_134532219c_0, from-node: $N_8740348803025_134532219c) isa node-link; 

match
$N_8740348803025_134532219c isa instruction, has hash "N_8740348803025_134532219c"; 

insert
$N_8740348803025_134532219c_1 isa MLIL_VAR_SSA, has hash "N_8740348803025_134532219c_1", has edge-label "src";
(to-node: $N_8740348803025_134532219c_1, from-node: $N_8740348803025_134532219c) isa node-link; 

match
$N_8740348803025_134532219c_1 isa operation, has hash "N_8740348803025_134532219c_1"; 

insert
$N_8740348803025_134532219c_1_0 isa variable-ssa, has hash "N_8740348803025_134532219c_1_0", has var "esi", has version 32, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348803025_134532219c_1_0, from-node: $N_8740348803025_134532219c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349073661_134532219c isa instruction, has hash "N_8740349073661_134532219c", has il-index 14, has asm-address "0x804cc7b", has operation-type "MLIL_VAR_PHI", has ins-text "var_1ac_22#31 = ϕ(var_1ac#1, var_1ac_1#2, var_1ac_3#5, var_1ac_5#8, var_1ac_6#9, var_1ac_8#12, var_1ac_10#15, var_1ac_11#16, var_1ac_12#17, var_1ac_14#18, var_1ac_15#19, var_1ac_16#20, var_1ac_17#21, var_1ac_18#22, var_1ac_13#24, var_1ac_19#26, var_1ac_20#27, var_1ac_21#29, var_1ac_22#30)";
(contains-instruction: $N_8740349073661_134532219c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349073661_134532219c isa instruction, has hash "N_8740349073661_134532219c"; 

insert
$N_8740349073661_134532219c_0 isa variable-ssa, has hash "N_8740349073661_134532219c_0", has var "var_1ac_22", has version 31, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_0, from-node: $N_8740349073661_134532219c) isa node-link; 

match
$N_8740349073661_134532219c isa instruction, has hash "N_8740349073661_134532219c"; 

insert
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1", has list-size 19, has edge-label "src";
(to-node: $L_8740349073661_134532219c_1, from-node: $N_8740349073661_134532219c) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_0 isa variable-ssa, has hash "N_8740349073661_134532219c_1_0", has var "var_1ac", has version 1, has edge-label "0", has var-type "int32_t*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_0, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_1 isa variable-ssa, has hash "N_8740349073661_134532219c_1_1", has var "var_1ac_1", has version 2, has edge-label "1", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_1, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_2 isa variable-ssa, has hash "N_8740349073661_134532219c_1_2", has var "var_1ac_3", has version 5, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_2, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_3 isa variable-ssa, has hash "N_8740349073661_134532219c_1_3", has var "var_1ac_5", has version 8, has edge-label "3", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_3, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_4 isa variable-ssa, has hash "N_8740349073661_134532219c_1_4", has var "var_1ac_6", has version 9, has edge-label "4", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_4, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_5 isa variable-ssa, has hash "N_8740349073661_134532219c_1_5", has var "var_1ac_8", has version 12, has edge-label "5", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_5, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_6 isa variable-ssa, has hash "N_8740349073661_134532219c_1_6", has var "var_1ac_10", has version 15, has edge-label "6", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_6, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_7 isa variable-ssa, has hash "N_8740349073661_134532219c_1_7", has var "var_1ac_11", has version 16, has edge-label "7", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_7, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_8 isa variable-ssa, has hash "N_8740349073661_134532219c_1_8", has var "var_1ac_12", has version 17, has edge-label "8", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_8, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_9 isa variable-ssa, has hash "N_8740349073661_134532219c_1_9", has var "var_1ac_14", has version 18, has edge-label "9", has var-type "int32_t**", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_9, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_10 isa variable-ssa, has hash "N_8740349073661_134532219c_1_10", has var "var_1ac_15", has version 19, has edge-label "10", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_10, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_11 isa variable-ssa, has hash "N_8740349073661_134532219c_1_11", has var "var_1ac_16", has version 20, has edge-label "11", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_11, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_12 isa variable-ssa, has hash "N_8740349073661_134532219c_1_12", has var "var_1ac_17", has version 21, has edge-label "12", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_12, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_13 isa variable-ssa, has hash "N_8740349073661_134532219c_1_13", has var "var_1ac_18", has version 22, has edge-label "13", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_13, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_14 isa variable-ssa, has hash "N_8740349073661_134532219c_1_14", has var "var_1ac_13", has version 24, has edge-label "14", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_14, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_15 isa variable-ssa, has hash "N_8740349073661_134532219c_1_15", has var "var_1ac_19", has version 26, has edge-label "15", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_15, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_16 isa variable-ssa, has hash "N_8740349073661_134532219c_1_16", has var "var_1ac_20", has version 27, has edge-label "16", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_16, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_17 isa variable-ssa, has hash "N_8740349073661_134532219c_1_17", has var "var_1ac_21", has version 29, has edge-label "17", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_17, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$L_8740349073661_134532219c_1 isa list, has hash "L_8740349073661_134532219c_1"; 

insert
$N_8740349073661_134532219c_1_18 isa variable-ssa, has hash "N_8740349073661_134532219c_1_18", has var "var_1ac_22", has version 30, has edge-label "18", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349073661_134532219c_1_18, from-node: $L_8740349073661_134532219c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349231621_134532219c isa instruction, has hash "N_8740349231621_134532219c", has il-index 21, has asm-address "0x804cc7b", has operation-type "MLIL_VAR_PHI", has ins-text "esi#32 = ϕ(esi#1, esi#2, esi#5, esi#8, esi#9, esi#12, esi#15, esi#16, esi#17, esi#18, esi#19, esi#20, esi#21, esi#25, esi#27, esi#28, esi#30, esi#31)";
(contains-instruction: $N_8740349231621_134532219c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349231621_134532219c isa instruction, has hash "N_8740349231621_134532219c"; 

insert
$N_8740349231621_134532219c_0 isa variable-ssa, has hash "N_8740349231621_134532219c_0", has var "esi", has version 32, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_0, from-node: $N_8740349231621_134532219c) isa node-link; 

match
$N_8740349231621_134532219c isa instruction, has hash "N_8740349231621_134532219c"; 

insert
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1", has list-size 18, has edge-label "src";
(to-node: $L_8740349231621_134532219c_1, from-node: $N_8740349231621_134532219c) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_0 isa variable-ssa, has hash "N_8740349231621_134532219c_1_0", has var "esi", has version 1, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_0, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_1 isa variable-ssa, has hash "N_8740349231621_134532219c_1_1", has var "esi", has version 2, has edge-label "1", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_1, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_2 isa variable-ssa, has hash "N_8740349231621_134532219c_1_2", has var "esi", has version 5, has edge-label "2", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_2, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_3 isa variable-ssa, has hash "N_8740349231621_134532219c_1_3", has var "esi", has version 8, has edge-label "3", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_3, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_4 isa variable-ssa, has hash "N_8740349231621_134532219c_1_4", has var "esi", has version 9, has edge-label "4", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_4, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_5 isa variable-ssa, has hash "N_8740349231621_134532219c_1_5", has var "esi", has version 12, has edge-label "5", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_5, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_6 isa variable-ssa, has hash "N_8740349231621_134532219c_1_6", has var "esi", has version 15, has edge-label "6", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_6, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_7 isa variable-ssa, has hash "N_8740349231621_134532219c_1_7", has var "esi", has version 16, has edge-label "7", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_7, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_8 isa variable-ssa, has hash "N_8740349231621_134532219c_1_8", has var "esi", has version 17, has edge-label "8", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_8, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_9 isa variable-ssa, has hash "N_8740349231621_134532219c_1_9", has var "esi", has version 18, has edge-label "9", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_9, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_10 isa variable-ssa, has hash "N_8740349231621_134532219c_1_10", has var "esi", has version 19, has edge-label "10", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_10, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_11 isa variable-ssa, has hash "N_8740349231621_134532219c_1_11", has var "esi", has version 20, has edge-label "11", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_11, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_12 isa variable-ssa, has hash "N_8740349231621_134532219c_1_12", has var "esi", has version 21, has edge-label "12", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_12, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_13 isa variable-ssa, has hash "N_8740349231621_134532219c_1_13", has var "esi", has version 25, has edge-label "13", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_13, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_14 isa variable-ssa, has hash "N_8740349231621_134532219c_1_14", has var "esi", has version 27, has edge-label "14", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_14, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_15 isa variable-ssa, has hash "N_8740349231621_134532219c_1_15", has var "esi", has version 28, has edge-label "15", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_15, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_16 isa variable-ssa, has hash "N_8740349231621_134532219c_1_16", has var "esi", has version 30, has edge-label "16", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_16, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$L_8740349231621_134532219c_1 isa list, has hash "L_8740349231621_134532219c_1"; 

insert
$N_8740349231621_134532219c_1_17 isa variable-ssa, has hash "N_8740349231621_134532219c_1_17", has var "esi", has version 31, has edge-label "17", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349231621_134532219c_1_17, from-node: $L_8740349231621_134532219c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349242137_134532219c isa instruction, has hash "N_8740349242137_134532219c", has il-index 20, has asm-address "0x804cc7b", has operation-type "MLIL_VAR_PHI", has ins-text "ebp_2#10 = ϕ(ebp#0, ebp_1#1, ebp_2#8, ebp_2#9)";
(contains-instruction: $N_8740349242137_134532219c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349242137_134532219c isa instruction, has hash "N_8740349242137_134532219c"; 

insert
$N_8740349242137_134532219c_0 isa variable-ssa, has hash "N_8740349242137_134532219c_0", has var "ebp_2", has version 10, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349242137_134532219c_0, from-node: $N_8740349242137_134532219c) isa node-link; 

match
$N_8740349242137_134532219c isa instruction, has hash "N_8740349242137_134532219c"; 

insert
$L_8740349242137_134532219c_1 isa list, has hash "L_8740349242137_134532219c_1", has list-size 4, has edge-label "src";
(to-node: $L_8740349242137_134532219c_1, from-node: $N_8740349242137_134532219c) isa node-link; 

match
$L_8740349242137_134532219c_1 isa list, has hash "L_8740349242137_134532219c_1"; 

insert
$N_8740349242137_134532219c_1_0 isa variable-ssa, has hash "N_8740349242137_134532219c_1_0", has var "ebp", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349242137_134532219c_1_0, from-node: $L_8740349242137_134532219c_1) isa node-link; 

match
$L_8740349242137_134532219c_1 isa list, has hash "L_8740349242137_134532219c_1"; 

insert
$N_8740349242137_134532219c_1_1 isa variable-ssa, has hash "N_8740349242137_134532219c_1_1", has var "ebp_1", has version 1, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349242137_134532219c_1_1, from-node: $L_8740349242137_134532219c_1) isa node-link; 

match
$L_8740349242137_134532219c_1 isa list, has hash "L_8740349242137_134532219c_1"; 

insert
$N_8740349242137_134532219c_1_2 isa variable-ssa, has hash "N_8740349242137_134532219c_1_2", has var "ebp_2", has version 8, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349242137_134532219c_1_2, from-node: $L_8740349242137_134532219c_1) isa node-link; 

match
$L_8740349242137_134532219c_1 isa list, has hash "L_8740349242137_134532219c_1"; 

insert
$N_8740349242137_134532219c_1_3 isa variable-ssa, has hash "N_8740349242137_134532219c_1_3", has var "ebp_2", has version 9, has edge-label "3", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349242137_134532219c_1_3, from-node: $L_8740349242137_134532219c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349381637_134532219c isa instruction, has hash "N_8740349381637_134532219c", has il-index 23, has asm-address "0x804cc7b", has operation-type "MLIL_VAR_PHI", has ins-text "cond:0_1#3 = ϕ(cond:0#0, cond:0_1#1, cond:0_1#2)";
(contains-instruction: $N_8740349381637_134532219c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349381637_134532219c isa instruction, has hash "N_8740349381637_134532219c"; 

insert
$N_8740349381637_134532219c_0 isa variable-ssa, has hash "N_8740349381637_134532219c_0", has var "cond:0_1", has version 3, has edge-label "dest", has var-type "bool", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349381637_134532219c_0, from-node: $N_8740349381637_134532219c) isa node-link; 

match
$N_8740349381637_134532219c isa instruction, has hash "N_8740349381637_134532219c"; 

insert
$L_8740349381637_134532219c_1 isa list, has hash "L_8740349381637_134532219c_1", has list-size 3, has edge-label "src";
(to-node: $L_8740349381637_134532219c_1, from-node: $N_8740349381637_134532219c) isa node-link; 

match
$L_8740349381637_134532219c_1 isa list, has hash "L_8740349381637_134532219c_1"; 

insert
$N_8740349381637_134532219c_1_0 isa variable-ssa, has hash "N_8740349381637_134532219c_1_0", has var "cond:0", has version 0, has edge-label "0", has var-type "bool", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349381637_134532219c_1_0, from-node: $L_8740349381637_134532219c_1) isa node-link; 

match
$L_8740349381637_134532219c_1 isa list, has hash "L_8740349381637_134532219c_1"; 

insert
$N_8740349381637_134532219c_1_1 isa variable-ssa, has hash "N_8740349381637_134532219c_1_1", has var "cond:0_1", has version 1, has edge-label "1", has var-type "bool", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349381637_134532219c_1_1, from-node: $L_8740349381637_134532219c_1) isa node-link; 

match
$L_8740349381637_134532219c_1 isa list, has hash "L_8740349381637_134532219c_1"; 

insert
$N_8740349381637_134532219c_1_2 isa variable-ssa, has hash "N_8740349381637_134532219c_1_2", has var "cond:0_1", has version 2, has edge-label "2", has var-type "bool", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349381637_134532219c_1_2, from-node: $L_8740349381637_134532219c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349486825_134532219c isa instruction, has hash "N_8740349486825_134532219c", has il-index 15, has asm-address "0x804cc7b", has operation-type "MLIL_VAR_PHI", has ins-text "var_1a8_9#13 = ϕ(var_1a8#0, var_1a8_1#1, var_1a8_2#2, var_1a8_4#3, var_1a8_5#4, var_1a8_3#6, var_1a8_6#8, var_1a8_7#9, var_1a8_8#11, var_1a8_9#12)";
(contains-instruction: $N_8740349486825_134532219c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349486825_134532219c isa instruction, has hash "N_8740349486825_134532219c"; 

insert
$N_8740349486825_134532219c_0 isa variable-ssa, has hash "N_8740349486825_134532219c_0", has var "var_1a8_9", has version 13, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349486825_134532219c_0, from-node: $N_8740349486825_134532219c) isa node-link; 

match
$N_8740349486825_134532219c isa instruction, has hash "N_8740349486825_134532219c"; 

insert
$L_8740349486825_134532219c_1 isa list, has hash "L_8740349486825_134532219c_1", has list-size 10, has edge-label "src";
(to-node: $L_8740349486825_134532219c_1, from-node: $N_8740349486825_134532219c) isa node-link; 

match
$L_8740349486825_134532219c_1 isa list, has hash "L_8740349486825_134532219c_1"; 

insert
$N_8740349486825_134532219c_1_0 isa variable-ssa, has hash "N_8740349486825_134532219c_1_0", has var "var_1a8", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349486825_134532219c_1_0, from-node: $L_8740349486825_134532219c_1) isa node-link; 

match
$L_8740349486825_134532219c_1 isa list, has hash "L_8740349486825_134532219c_1"; 

insert
$N_8740349486825_134532219c_1_1 isa variable-ssa, has hash "N_8740349486825_134532219c_1_1", has var "var_1a8_1", has version 1, has edge-label "1", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349486825_134532219c_1_1, from-node: $L_8740349486825_134532219c_1) isa node-link; 

match
$L_8740349486825_134532219c_1 isa list, has hash "L_8740349486825_134532219c_1"; 

insert
$N_8740349486825_134532219c_1_2 isa variable-ssa, has hash "N_8740349486825_134532219c_1_2", has var "var_1a8_2", has version 2, has edge-label "2", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349486825_134532219c_1_2, from-node: $L_8740349486825_134532219c_1) isa node-link; 

match
$L_8740349486825_134532219c_1 isa list, has hash "L_8740349486825_134532219c_1"; 

insert
$N_8740349486825_134532219c_1_3 isa variable-ssa, has hash "N_8740349486825_134532219c_1_3", has var "var_1a8_4", has version 3, has edge-label "3", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349486825_134532219c_1_3, from-node: $L_8740349486825_134532219c_1) isa node-link; 

match
$L_8740349486825_134532219c_1 isa list, has hash "L_8740349486825_134532219c_1"; 

insert
$N_8740349486825_134532219c_1_4 isa variable-ssa, has hash "N_8740349486825_134532219c_1_4", has var "var_1a8_5", has version 4, has edge-label "4", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349486825_134532219c_1_4, from-node: $L_8740349486825_134532219c_1) isa node-link; 

match
$L_8740349486825_134532219c_1 isa list, has hash "L_8740349486825_134532219c_1"; 

insert
$N_8740349486825_134532219c_1_5 isa variable-ssa, has hash "N_8740349486825_134532219c_1_5", has var "var_1a8_3", has version 6, has edge-label "5", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349486825_134532219c_1_5, from-node: $L_8740349486825_134532219c_1) isa node-link; 

match
$L_8740349486825_134532219c_1 isa list, has hash "L_8740349486825_134532219c_1"; 

insert
$N_8740349486825_134532219c_1_6 isa variable-ssa, has hash "N_8740349486825_134532219c_1_6", has var "var_1a8_6", has version 8, has edge-label "6", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349486825_134532219c_1_6, from-node: $L_8740349486825_134532219c_1) isa node-link; 

match
$L_8740349486825_134532219c_1 isa list, has hash "L_8740349486825_134532219c_1"; 

insert
$N_8740349486825_134532219c_1_7 isa variable-ssa, has hash "N_8740349486825_134532219c_1_7", has var "var_1a8_7", has version 9, has edge-label "7", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349486825_134532219c_1_7, from-node: $L_8740349486825_134532219c_1) isa node-link; 

match
$L_8740349486825_134532219c_1 isa list, has hash "L_8740349486825_134532219c_1"; 

insert
$N_8740349486825_134532219c_1_8 isa variable-ssa, has hash "N_8740349486825_134532219c_1_8", has var "var_1a8_8", has version 11, has edge-label "8", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349486825_134532219c_1_8, from-node: $L_8740349486825_134532219c_1) isa node-link; 

match
$L_8740349486825_134532219c_1 isa list, has hash "L_8740349486825_134532219c_1"; 

insert
$N_8740349486825_134532219c_1_9 isa variable-ssa, has hash "N_8740349486825_134532219c_1_9", has var "var_1a8_9", has version 12, has edge-label "9", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349486825_134532219c_1_9, from-node: $L_8740349486825_134532219c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349490693_134532219c isa instruction, has hash "N_8740349490693_134532219c", has il-index 18, has asm-address "0x804cc7b", has operation-type "MLIL_VAR_PHI", has ins-text "edx_4#14 = ϕ(edx#0, edx_1#1, edx_2#2, edx_3#3, edx_5#4, edx_6#5, edx_4#12, edx_4#13)";
(contains-instruction: $N_8740349490693_134532219c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349490693_134532219c isa instruction, has hash "N_8740349490693_134532219c"; 

insert
$N_8740349490693_134532219c_0 isa variable-ssa, has hash "N_8740349490693_134532219c_0", has var "edx_4", has version 14, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349490693_134532219c_0, from-node: $N_8740349490693_134532219c) isa node-link; 

match
$N_8740349490693_134532219c isa instruction, has hash "N_8740349490693_134532219c"; 

insert
$L_8740349490693_134532219c_1 isa list, has hash "L_8740349490693_134532219c_1", has list-size 8, has edge-label "src";
(to-node: $L_8740349490693_134532219c_1, from-node: $N_8740349490693_134532219c) isa node-link; 

match
$L_8740349490693_134532219c_1 isa list, has hash "L_8740349490693_134532219c_1"; 

insert
$N_8740349490693_134532219c_1_0 isa variable-ssa, has hash "N_8740349490693_134532219c_1_0", has var "edx", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349490693_134532219c_1_0, from-node: $L_8740349490693_134532219c_1) isa node-link; 

match
$L_8740349490693_134532219c_1 isa list, has hash "L_8740349490693_134532219c_1"; 

insert
$N_8740349490693_134532219c_1_1 isa variable-ssa, has hash "N_8740349490693_134532219c_1_1", has var "edx_1", has version 1, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349490693_134532219c_1_1, from-node: $L_8740349490693_134532219c_1) isa node-link; 

match
$L_8740349490693_134532219c_1 isa list, has hash "L_8740349490693_134532219c_1"; 

insert
$N_8740349490693_134532219c_1_2 isa variable-ssa, has hash "N_8740349490693_134532219c_1_2", has var "edx_2", has version 2, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349490693_134532219c_1_2, from-node: $L_8740349490693_134532219c_1) isa node-link; 

match
$L_8740349490693_134532219c_1 isa list, has hash "L_8740349490693_134532219c_1"; 

insert
$N_8740349490693_134532219c_1_3 isa variable-ssa, has hash "N_8740349490693_134532219c_1_3", has var "edx_3", has version 3, has edge-label "3", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349490693_134532219c_1_3, from-node: $L_8740349490693_134532219c_1) isa node-link; 

match
$L_8740349490693_134532219c_1 isa list, has hash "L_8740349490693_134532219c_1"; 

insert
$N_8740349490693_134532219c_1_4 isa variable-ssa, has hash "N_8740349490693_134532219c_1_4", has var "edx_5", has version 4, has edge-label "4", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349490693_134532219c_1_4, from-node: $L_8740349490693_134532219c_1) isa node-link; 

match
$L_8740349490693_134532219c_1 isa list, has hash "L_8740349490693_134532219c_1"; 

insert
$N_8740349490693_134532219c_1_5 isa variable-ssa, has hash "N_8740349490693_134532219c_1_5", has var "edx_6", has version 5, has edge-label "5", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349490693_134532219c_1_5, from-node: $L_8740349490693_134532219c_1) isa node-link; 

match
$L_8740349490693_134532219c_1 isa list, has hash "L_8740349490693_134532219c_1"; 

insert
$N_8740349490693_134532219c_1_6 isa variable-ssa, has hash "N_8740349490693_134532219c_1_6", has var "edx_4", has version 12, has edge-label "6", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349490693_134532219c_1_6, from-node: $L_8740349490693_134532219c_1) isa node-link; 

match
$L_8740349490693_134532219c_1 isa list, has hash "L_8740349490693_134532219c_1"; 

insert
$N_8740349490693_134532219c_1_7 isa variable-ssa, has hash "N_8740349490693_134532219c_1_7", has var "edx_4", has version 13, has edge-label "7", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349490693_134532219c_1_7, from-node: $L_8740349490693_134532219c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349495557_134532219c isa instruction, has hash "N_8740349495557_134532219c", has il-index 19, has asm-address "0x804cc7b", has operation-type "MLIL_VAR_PHI", has ins-text "ebx_7#10 = ϕ(ebx#0, ebx_7#9)";
(contains-instruction: $N_8740349495557_134532219c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349495557_134532219c isa instruction, has hash "N_8740349495557_134532219c"; 

insert
$N_8740349495557_134532219c_0 isa variable-ssa, has hash "N_8740349495557_134532219c_0", has var "ebx_7", has version 10, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349495557_134532219c_0, from-node: $N_8740349495557_134532219c) isa node-link; 

match
$N_8740349495557_134532219c isa instruction, has hash "N_8740349495557_134532219c"; 

insert
$L_8740349495557_134532219c_1 isa list, has hash "L_8740349495557_134532219c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349495557_134532219c_1, from-node: $N_8740349495557_134532219c) isa node-link; 

match
$L_8740349495557_134532219c_1 isa list, has hash "L_8740349495557_134532219c_1"; 

insert
$N_8740349495557_134532219c_1_0 isa variable-ssa, has hash "N_8740349495557_134532219c_1_0", has var "ebx", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349495557_134532219c_1_0, from-node: $L_8740349495557_134532219c_1) isa node-link; 

match
$L_8740349495557_134532219c_1 isa list, has hash "L_8740349495557_134532219c_1"; 

insert
$N_8740349495557_134532219c_1_1 isa variable-ssa, has hash "N_8740349495557_134532219c_1_1", has var "ebx_7", has version 9, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349495557_134532219c_1_1, from-node: $L_8740349495557_134532219c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349538821_134532219c isa instruction, has hash "N_8740349538821_134532219c", has il-index 22, has asm-address "0x804cc7b", has operation-type "MLIL_VAR_PHI", has ins-text "edi#14 = ϕ(edi#1, edi#2, edi#4, edi#5, edi#7, edi#10, edi#11, edi#12, edi#13)";
(contains-instruction: $N_8740349538821_134532219c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349538821_134532219c isa instruction, has hash "N_8740349538821_134532219c"; 

insert
$N_8740349538821_134532219c_0 isa variable-ssa, has hash "N_8740349538821_134532219c_0", has var "edi", has version 14, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349538821_134532219c_0, from-node: $N_8740349538821_134532219c) isa node-link; 

match
$N_8740349538821_134532219c isa instruction, has hash "N_8740349538821_134532219c"; 

insert
$L_8740349538821_134532219c_1 isa list, has hash "L_8740349538821_134532219c_1", has list-size 9, has edge-label "src";
(to-node: $L_8740349538821_134532219c_1, from-node: $N_8740349538821_134532219c) isa node-link; 

match
$L_8740349538821_134532219c_1 isa list, has hash "L_8740349538821_134532219c_1"; 

insert
$N_8740349538821_134532219c_1_0 isa variable-ssa, has hash "N_8740349538821_134532219c_1_0", has var "edi", has version 1, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349538821_134532219c_1_0, from-node: $L_8740349538821_134532219c_1) isa node-link; 

match
$L_8740349538821_134532219c_1 isa list, has hash "L_8740349538821_134532219c_1"; 

insert
$N_8740349538821_134532219c_1_1 isa variable-ssa, has hash "N_8740349538821_134532219c_1_1", has var "edi", has version 2, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349538821_134532219c_1_1, from-node: $L_8740349538821_134532219c_1) isa node-link; 

match
$L_8740349538821_134532219c_1 isa list, has hash "L_8740349538821_134532219c_1"; 

insert
$N_8740349538821_134532219c_1_2 isa variable-ssa, has hash "N_8740349538821_134532219c_1_2", has var "edi", has version 4, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349538821_134532219c_1_2, from-node: $L_8740349538821_134532219c_1) isa node-link; 

match
$L_8740349538821_134532219c_1 isa list, has hash "L_8740349538821_134532219c_1"; 

insert
$N_8740349538821_134532219c_1_3 isa variable-ssa, has hash "N_8740349538821_134532219c_1_3", has var "edi", has version 5, has edge-label "3", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349538821_134532219c_1_3, from-node: $L_8740349538821_134532219c_1) isa node-link; 

match
$L_8740349538821_134532219c_1 isa list, has hash "L_8740349538821_134532219c_1"; 

insert
$N_8740349538821_134532219c_1_4 isa variable-ssa, has hash "N_8740349538821_134532219c_1_4", has var "edi", has version 7, has edge-label "4", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349538821_134532219c_1_4, from-node: $L_8740349538821_134532219c_1) isa node-link; 

match
$L_8740349538821_134532219c_1 isa list, has hash "L_8740349538821_134532219c_1"; 

insert
$N_8740349538821_134532219c_1_5 isa variable-ssa, has hash "N_8740349538821_134532219c_1_5", has var "edi", has version 10, has edge-label "5", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349538821_134532219c_1_5, from-node: $L_8740349538821_134532219c_1) isa node-link; 

match
$L_8740349538821_134532219c_1 isa list, has hash "L_8740349538821_134532219c_1"; 

insert
$N_8740349538821_134532219c_1_6 isa variable-ssa, has hash "N_8740349538821_134532219c_1_6", has var "edi", has version 11, has edge-label "6", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349538821_134532219c_1_6, from-node: $L_8740349538821_134532219c_1) isa node-link; 

match
$L_8740349538821_134532219c_1 isa list, has hash "L_8740349538821_134532219c_1"; 

insert
$N_8740349538821_134532219c_1_7 isa variable-ssa, has hash "N_8740349538821_134532219c_1_7", has var "edi", has version 12, has edge-label "7", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349538821_134532219c_1_7, from-node: $L_8740349538821_134532219c_1) isa node-link; 

match
$L_8740349538821_134532219c_1 isa list, has hash "L_8740349538821_134532219c_1"; 

insert
$N_8740349538821_134532219c_1_8 isa variable-ssa, has hash "N_8740349538821_134532219c_1_8", has var "edi", has version 13, has edge-label "8", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349538821_134532219c_1_8, from-node: $L_8740349538821_134532219c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348962337_134532222c isa instruction, has hash "N_8740348962337_134532222c", has il-index 26, has asm-address "0x804cc7e", has operation-type "MLIL_CALL_SSA", has ins-text "eax_52#66, mem#54 = 0x804de90(var_1ac_23#32) @ mem#53";
(contains-instruction: $N_8740348962337_134532222c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348962337_134532222c isa instruction, has hash "N_8740348962337_134532222c"; 

insert
$N_8740348962337_134532222c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348962337_134532222c_0", has edge-label "output";
(to-node: $N_8740348962337_134532222c_0, from-node: $N_8740348962337_134532222c) isa node-link; 

match
$N_8740348962337_134532222c_0 isa operation, has hash "N_8740348962337_134532222c_0"; 

insert
$N_8740348962337_134532222c_0_0 isa constant, has hash "N_8740348962337_134532222c_0_0", has constant-value "54", has edge-label "dest_memory";
(to-node: $N_8740348962337_134532222c_0_0, from-node: $N_8740348962337_134532222c_0) isa node-link; 

match
$N_8740348962337_134532222c_0 isa operation, has hash "N_8740348962337_134532222c_0"; 

insert
$L_8740348962337_134532222c_0_1 isa list, has hash "L_8740348962337_134532222c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348962337_134532222c_0_1, from-node: $N_8740348962337_134532222c_0) isa node-link; 

match
$L_8740348962337_134532222c_0_1 isa list, has hash "L_8740348962337_134532222c_0_1"; 

insert
$N_8740348962337_134532222c_0_1_0 isa variable-ssa, has hash "N_8740348962337_134532222c_0_1_0", has var "eax_52", has version 66, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348962337_134532222c_0_1_0, from-node: $L_8740348962337_134532222c_0_1) isa node-link; 

match
$N_8740348962337_134532222c isa instruction, has hash "N_8740348962337_134532222c"; 

insert
$N_8740348962337_134532222c_1 isa MLIL_CONST_PTR, has hash "N_8740348962337_134532222c_1", has edge-label "dest";
(to-node: $N_8740348962337_134532222c_1, from-node: $N_8740348962337_134532222c) isa node-link; 

match
$N_8740348962337_134532222c_1 isa operation, has hash "N_8740348962337_134532222c_1"; 

insert
$N_8740348962337_134532222c_1_0 isa constant, has hash "N_8740348962337_134532222c_1_0", has constant-value "134536848", has edge-label "constant";
(to-node: $N_8740348962337_134532222c_1_0, from-node: $N_8740348962337_134532222c_1) isa node-link; 

match
$N_8740348962337_134532222c isa instruction, has hash "N_8740348962337_134532222c"; 

insert
$L_8740348962337_134532222c_2 isa list, has hash "L_8740348962337_134532222c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740348962337_134532222c_2, from-node: $N_8740348962337_134532222c) isa node-link; 

match
$L_8740348962337_134532222c_2 isa list, has hash "L_8740348962337_134532222c_2"; 

insert
$N_8740348962337_134532222c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348962337_134532222c_2_0", has edge-label "0";
(to-node: $N_8740348962337_134532222c_2_0, from-node: $L_8740348962337_134532222c_2) isa node-link; 

match
$N_8740348962337_134532222c_2_0 isa operation, has hash "N_8740348962337_134532222c_2_0"; 

insert
$N_8740348962337_134532222c_2_0_0 isa variable-ssa, has hash "N_8740348962337_134532222c_2_0_0", has var "var_1ac_23", has version 32, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348962337_134532222c_2_0_0, from-node: $N_8740348962337_134532222c_2_0) isa node-link; 

match
$N_8740348962337_134532222c isa instruction, has hash "N_8740348962337_134532222c"; 

insert
$N_8740348962337_134532222c_3 isa constant, has hash "N_8740348962337_134532222c_3", has constant-value "53", has edge-label "src_memory";
(to-node: $N_8740348962337_134532222c_3, from-node: $N_8740348962337_134532222c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348295029_134532238c isa instruction, has hash "N_8740348295029_134532238c", has il-index 27, has asm-address "0x804cc8e", has operation-type "MLIL_CALL_SSA", has ins-text "mem#55 = 0x804afd0(eax_52#66, 0x804f040) @ mem#54";
(contains-instruction: $N_8740348295029_134532238c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348295029_134532238c isa instruction, has hash "N_8740348295029_134532238c"; 

insert
$N_8740348295029_134532238c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348295029_134532238c_0", has edge-label "output";
(to-node: $N_8740348295029_134532238c_0, from-node: $N_8740348295029_134532238c) isa node-link; 

match
$N_8740348295029_134532238c_0 isa operation, has hash "N_8740348295029_134532238c_0"; 

insert
$N_8740348295029_134532238c_0_0 isa constant, has hash "N_8740348295029_134532238c_0_0", has constant-value "55", has edge-label "dest_memory";
(to-node: $N_8740348295029_134532238c_0_0, from-node: $N_8740348295029_134532238c_0) isa node-link; 

match
$N_8740348295029_134532238c_0 isa operation, has hash "N_8740348295029_134532238c_0"; 

insert
$L_8740348295029_134532238c_0_1 isa list, has hash "L_8740348295029_134532238c_0_1", has list-size 0, has edge-label "dest";
(to-node: $L_8740348295029_134532238c_0_1, from-node: $N_8740348295029_134532238c_0) isa node-link; 

match
$N_8740348295029_134532238c isa instruction, has hash "N_8740348295029_134532238c"; 

insert
$N_8740348295029_134532238c_1 isa MLIL_CONST_PTR, has hash "N_8740348295029_134532238c_1", has edge-label "dest";
(to-node: $N_8740348295029_134532238c_1, from-node: $N_8740348295029_134532238c) isa node-link; 

match
$N_8740348295029_134532238c_1 isa operation, has hash "N_8740348295029_134532238c_1"; 

insert
$N_8740348295029_134532238c_1_0 isa constant, has hash "N_8740348295029_134532238c_1_0", has constant-value "134524880", has edge-label "constant";
(to-node: $N_8740348295029_134532238c_1_0, from-node: $N_8740348295029_134532238c_1) isa node-link; 

match
$N_8740348295029_134532238c isa instruction, has hash "N_8740348295029_134532238c"; 

insert
$L_8740348295029_134532238c_2 isa list, has hash "L_8740348295029_134532238c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740348295029_134532238c_2, from-node: $N_8740348295029_134532238c) isa node-link; 

match
$L_8740348295029_134532238c_2 isa list, has hash "L_8740348295029_134532238c_2"; 

insert
$N_8740348295029_134532238c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348295029_134532238c_2_0", has edge-label "0";
(to-node: $N_8740348295029_134532238c_2_0, from-node: $L_8740348295029_134532238c_2) isa node-link; 

match
$N_8740348295029_134532238c_2_0 isa operation, has hash "N_8740348295029_134532238c_2_0"; 

insert
$N_8740348295029_134532238c_2_0_0 isa variable-ssa, has hash "N_8740348295029_134532238c_2_0_0", has var "eax_52", has version 66, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348295029_134532238c_2_0_0, from-node: $N_8740348295029_134532238c_2_0) isa node-link; 

match
$L_8740348295029_134532238c_2 isa list, has hash "L_8740348295029_134532238c_2"; 

insert
$N_8740348295029_134532238c_2_1 isa MLIL_CONST, has hash "N_8740348295029_134532238c_2_1", has edge-label "1";
(to-node: $N_8740348295029_134532238c_2_1, from-node: $L_8740348295029_134532238c_2) isa node-link; 

match
$N_8740348295029_134532238c_2_1 isa operation, has hash "N_8740348295029_134532238c_2_1"; 

insert
$N_8740348295029_134532238c_2_1_0 isa constant, has hash "N_8740348295029_134532238c_2_1_0", has constant-value "134541376", has edge-label "constant";
(to-node: $N_8740348295029_134532238c_2_1_0, from-node: $N_8740348295029_134532238c_2_1) isa node-link; 

match
$N_8740348295029_134532238c isa instruction, has hash "N_8740348295029_134532238c"; 

insert
$N_8740348295029_134532238c_3 isa constant, has hash "N_8740348295029_134532238c_3", has constant-value "54", has edge-label "src_memory";
(to-node: $N_8740348295029_134532238c_3, from-node: $N_8740348295029_134532238c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349572713_134532243c isa instruction, has hash "N_8740349572713_134532243c", has il-index 28, has asm-address "0x804cc93", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_50#67 = var_194 @ mem#55";
(contains-instruction: $N_8740349572713_134532243c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349572713_134532243c isa instruction, has hash "N_8740349572713_134532243c"; 

insert
$N_8740349572713_134532243c_0 isa variable-ssa, has hash "N_8740349572713_134532243c_0", has var "eax_50", has version 67, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349572713_134532243c_0, from-node: $N_8740349572713_134532243c) isa node-link; 

match
$N_8740349572713_134532243c isa instruction, has hash "N_8740349572713_134532243c"; 

insert
$N_8740349572713_134532243c_1 isa MLIL_VAR_ALIASED, has hash "N_8740349572713_134532243c_1", has edge-label "src";
(to-node: $N_8740349572713_134532243c_1, from-node: $N_8740349572713_134532243c) isa node-link; 

match
$N_8740349572713_134532243c_1 isa operation, has hash "N_8740349572713_134532243c_1"; 

insert
$N_8740349572713_134532243c_1_0 isa variable-ssa, has hash "N_8740349572713_134532243c_1_0", has var "var_194", has version 55, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349572713_134532243c_1_0, from-node: $N_8740349572713_134532243c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 14, has bb-end 29; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349061381_134532249c isa instruction, has hash "N_8740349061381_134532249c", has il-index 29, has asm-address "0x804cc99", has operation-type "MLIL_IF", has ins-text "if (eax_50#67 == 0) then 35 @ 0x0 else 36 @ 0x804cc9b";
(contains-instruction: $N_8740349061381_134532249c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349061381_134532249c isa instruction, has hash "N_8740349061381_134532249c"; 

insert
$N_8740349061381_134532249c_0 isa MLIL_CMP_E, has hash "N_8740349061381_134532249c_0", has edge-label "condition";
(to-node: $N_8740349061381_134532249c_0, from-node: $N_8740349061381_134532249c) isa node-link; 

match
$N_8740349061381_134532249c_0 isa operation, has hash "N_8740349061381_134532249c_0"; 

insert
$N_8740349061381_134532249c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349061381_134532249c_0_0", has edge-label "left";
(to-node: $N_8740349061381_134532249c_0_0, from-node: $N_8740349061381_134532249c_0) isa node-link; 

match
$N_8740349061381_134532249c_0_0 isa operation, has hash "N_8740349061381_134532249c_0_0"; 

insert
$N_8740349061381_134532249c_0_0_0 isa variable-ssa, has hash "N_8740349061381_134532249c_0_0_0", has var "eax_50", has version 67, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349061381_134532249c_0_0_0, from-node: $N_8740349061381_134532249c_0_0) isa node-link; 

match
$N_8740349061381_134532249c_0 isa operation, has hash "N_8740349061381_134532249c_0"; 

insert
$N_8740349061381_134532249c_0_1 isa MLIL_CONST, has hash "N_8740349061381_134532249c_0_1", has edge-label "right";
(to-node: $N_8740349061381_134532249c_0_1, from-node: $N_8740349061381_134532249c_0) isa node-link; 

match
$N_8740349061381_134532249c_0_1 isa operation, has hash "N_8740349061381_134532249c_0_1"; 

insert
$N_8740349061381_134532249c_0_1_0 isa constant, has hash "N_8740349061381_134532249c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349061381_134532249c_0_1_0, from-node: $N_8740349061381_134532249c_0_1) isa node-link; 

match
$N_8740349061381_134532249c isa instruction, has hash "N_8740349061381_134532249c"; 

insert
$N_8740349061381_134532249c_1 isa constant, has hash "N_8740349061381_134532249c_1", has constant-value "35", has edge-label "true";
(to-node: $N_8740349061381_134532249c_1, from-node: $N_8740349061381_134532249c) isa node-link; 

match
$N_8740349061381_134532249c isa instruction, has hash "N_8740349061381_134532249c"; 

insert
$N_8740349061381_134532249c_2 isa constant, has hash "N_8740349061381_134532249c_2", has constant-value "36", has edge-label "false";
(to-node: $N_8740349061381_134532249c_2, from-node: $N_8740349061381_134532249c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 30, has bb-end 31; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 30, has bb-end 31; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 30, has bb-end 31; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349403397_134531504c isa instruction, has hash "N_8740349403397_134531504c", has il-index 30, has asm-address "0x804c9b0", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#2 = 0xf";
(contains-instruction: $N_8740349403397_134531504c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349403397_134531504c isa instruction, has hash "N_8740349403397_134531504c"; 

insert
$N_8740349403397_134531504c_0 isa variable-ssa, has hash "N_8740349403397_134531504c_0", has var "esi", has version 2, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349403397_134531504c_0, from-node: $N_8740349403397_134531504c) isa node-link; 

match
$N_8740349403397_134531504c isa instruction, has hash "N_8740349403397_134531504c"; 

insert
$N_8740349403397_134531504c_1 isa MLIL_CONST_PTR, has hash "N_8740349403397_134531504c_1", has edge-label "src";
(to-node: $N_8740349403397_134531504c_1, from-node: $N_8740349403397_134531504c) isa node-link; 

match
$N_8740349403397_134531504c_1 isa operation, has hash "N_8740349403397_134531504c_1"; 

insert
$N_8740349403397_134531504c_1_0 isa constant, has hash "N_8740349403397_134531504c_1_0", has constant-value "15", has edge-label "constant";
(to-node: $N_8740349403397_134531504c_1_0, from-node: $N_8740349403397_134531504c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 30, has bb-end 31; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 30, has bb-end 31; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348421021_134531509c isa instruction, has hash "N_8740348421021_134531509c", has il-index 31, has asm-address "0x804c9b5", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740348421021_134531509c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348421021_134531509c isa instruction, has hash "N_8740348421021_134531509c"; 

insert
$N_8740348421021_134531509c_0 isa constant, has hash "N_8740348421021_134531509c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740348421021_134531509c_0, from-node: $N_8740348421021_134531509c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 32, has bb-end 34; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 32, has bb-end 34; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 32, has bb-end 34; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349402117_134531269c isa instruction, has hash "N_8740349402117_134531269c", has il-index 32, has asm-address "0x804c8c5", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_2#3 = &var_190";
(contains-instruction: $N_8740349402117_134531269c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349402117_134531269c isa instruction, has hash "N_8740349402117_134531269c"; 

insert
$N_8740349402117_134531269c_0 isa variable-ssa, has hash "N_8740349402117_134531269c_0", has var "var_1ac_2", has version 3, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349402117_134531269c_0, from-node: $N_8740349402117_134531269c) isa node-link; 

match
$N_8740349402117_134531269c isa instruction, has hash "N_8740349402117_134531269c"; 

insert
$N_8740349402117_134531269c_1 isa MLIL_ADDRESS_OF, has hash "N_8740349402117_134531269c_1", has edge-label "src";
(to-node: $N_8740349402117_134531269c_1, from-node: $N_8740349402117_134531269c) isa node-link; 

match
$N_8740349402117_134531269c_1 isa operation, has hash "N_8740349402117_134531269c_1"; 

insert
$N_8740349402117_134531269c_1_0 isa variable, has hash "N_8740349402117_134531269c_1_0", has var "var_190", has edge-label "src", has var-type "void", has var-size 256, has var-func "cgc_handle_register_user";
(to-node: $N_8740349402117_134531269c_1_0, from-node: $N_8740349402117_134531269c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 32, has bb-end 34; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 32, has bb-end 34; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349235973_134531272c isa instruction, has hash "N_8740349235973_134531272c", has il-index 33, has asm-address "0x804c8c8", has operation-type "MLIL_CALL_SSA", has ins-text "eax_3#4, mem#8 = 0x804aeb0(var_1ac_2#3) @ mem#7";
(contains-instruction: $N_8740349235973_134531272c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349235973_134531272c isa instruction, has hash "N_8740349235973_134531272c"; 

insert
$N_8740349235973_134531272c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740349235973_134531272c_0", has edge-label "output";
(to-node: $N_8740349235973_134531272c_0, from-node: $N_8740349235973_134531272c) isa node-link; 

match
$N_8740349235973_134531272c_0 isa operation, has hash "N_8740349235973_134531272c_0"; 

insert
$N_8740349235973_134531272c_0_0 isa constant, has hash "N_8740349235973_134531272c_0_0", has constant-value "8", has edge-label "dest_memory";
(to-node: $N_8740349235973_134531272c_0_0, from-node: $N_8740349235973_134531272c_0) isa node-link; 

match
$N_8740349235973_134531272c_0 isa operation, has hash "N_8740349235973_134531272c_0"; 

insert
$L_8740349235973_134531272c_0_1 isa list, has hash "L_8740349235973_134531272c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740349235973_134531272c_0_1, from-node: $N_8740349235973_134531272c_0) isa node-link; 

match
$L_8740349235973_134531272c_0_1 isa list, has hash "L_8740349235973_134531272c_0_1"; 

insert
$N_8740349235973_134531272c_0_1_0 isa variable-ssa, has hash "N_8740349235973_134531272c_0_1_0", has var "eax_3", has version 4, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349235973_134531272c_0_1_0, from-node: $L_8740349235973_134531272c_0_1) isa node-link; 

match
$N_8740349235973_134531272c isa instruction, has hash "N_8740349235973_134531272c"; 

insert
$N_8740349235973_134531272c_1 isa MLIL_CONST_PTR, has hash "N_8740349235973_134531272c_1", has edge-label "dest";
(to-node: $N_8740349235973_134531272c_1, from-node: $N_8740349235973_134531272c) isa node-link; 

match
$N_8740349235973_134531272c_1 isa operation, has hash "N_8740349235973_134531272c_1"; 

insert
$N_8740349235973_134531272c_1_0 isa constant, has hash "N_8740349235973_134531272c_1_0", has constant-value "134524592", has edge-label "constant";
(to-node: $N_8740349235973_134531272c_1_0, from-node: $N_8740349235973_134531272c_1) isa node-link; 

match
$N_8740349235973_134531272c isa instruction, has hash "N_8740349235973_134531272c"; 

insert
$L_8740349235973_134531272c_2 isa list, has hash "L_8740349235973_134531272c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740349235973_134531272c_2, from-node: $N_8740349235973_134531272c) isa node-link; 

match
$L_8740349235973_134531272c_2 isa list, has hash "L_8740349235973_134531272c_2"; 

insert
$N_8740349235973_134531272c_2_0 isa MLIL_VAR_SSA, has hash "N_8740349235973_134531272c_2_0", has edge-label "0";
(to-node: $N_8740349235973_134531272c_2_0, from-node: $L_8740349235973_134531272c_2) isa node-link; 

match
$N_8740349235973_134531272c_2_0 isa operation, has hash "N_8740349235973_134531272c_2_0"; 

insert
$N_8740349235973_134531272c_2_0_0 isa variable-ssa, has hash "N_8740349235973_134531272c_2_0_0", has var "var_1ac_2", has version 3, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349235973_134531272c_2_0_0, from-node: $N_8740349235973_134531272c_2_0) isa node-link; 

match
$N_8740349235973_134531272c isa instruction, has hash "N_8740349235973_134531272c"; 

insert
$N_8740349235973_134531272c_3 isa constant, has hash "N_8740349235973_134531272c_3", has constant-value "7", has edge-label "src_memory";
(to-node: $N_8740349235973_134531272c_3, from-node: $N_8740349235973_134531272c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 32, has bb-end 34; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 32, has bb-end 34; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348320885_134531280c isa instruction, has hash "N_8740348320885_134531280c", has il-index 34, has asm-address "0x804c8d0", has operation-type "MLIL_IF", has ins-text "if (eax_3#4 == 1) then 39 @ 0x0 else 40 @ 0x804c8d2";
(contains-instruction: $N_8740348320885_134531280c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348320885_134531280c isa instruction, has hash "N_8740348320885_134531280c"; 

insert
$N_8740348320885_134531280c_0 isa MLIL_CMP_E, has hash "N_8740348320885_134531280c_0", has edge-label "condition";
(to-node: $N_8740348320885_134531280c_0, from-node: $N_8740348320885_134531280c) isa node-link; 

match
$N_8740348320885_134531280c_0 isa operation, has hash "N_8740348320885_134531280c_0"; 

insert
$N_8740348320885_134531280c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348320885_134531280c_0_0", has edge-label "left";
(to-node: $N_8740348320885_134531280c_0_0, from-node: $N_8740348320885_134531280c_0) isa node-link; 

match
$N_8740348320885_134531280c_0_0 isa operation, has hash "N_8740348320885_134531280c_0_0"; 

insert
$N_8740348320885_134531280c_0_0_0 isa variable-ssa, has hash "N_8740348320885_134531280c_0_0_0", has var "eax_3", has version 4, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348320885_134531280c_0_0_0, from-node: $N_8740348320885_134531280c_0_0) isa node-link; 

match
$N_8740348320885_134531280c_0 isa operation, has hash "N_8740348320885_134531280c_0"; 

insert
$N_8740348320885_134531280c_0_1 isa MLIL_CONST, has hash "N_8740348320885_134531280c_0_1", has edge-label "right";
(to-node: $N_8740348320885_134531280c_0_1, from-node: $N_8740348320885_134531280c_0) isa node-link; 

match
$N_8740348320885_134531280c_0_1 isa operation, has hash "N_8740348320885_134531280c_0_1"; 

insert
$N_8740348320885_134531280c_0_1_0 isa constant, has hash "N_8740348320885_134531280c_0_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8740348320885_134531280c_0_1_0, from-node: $N_8740348320885_134531280c_0_1) isa node-link; 

match
$N_8740348320885_134531280c isa instruction, has hash "N_8740348320885_134531280c"; 

insert
$N_8740348320885_134531280c_1 isa constant, has hash "N_8740348320885_134531280c_1", has constant-value "39", has edge-label "true";
(to-node: $N_8740348320885_134531280c_1, from-node: $N_8740348320885_134531280c) isa node-link; 

match
$N_8740348320885_134531280c isa instruction, has hash "N_8740348320885_134531280c"; 

insert
$N_8740348320885_134531280c_2 isa constant, has hash "N_8740348320885_134531280c_2", has constant-value "40", has edge-label "false";
(to-node: $N_8740348320885_134531280c_2, from-node: $N_8740348320885_134531280c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 35, has bb-end 35; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 36, has bb-end 38; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 36, has bb-end 38; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 36, has bb-end 38; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348866409_134532251c isa instruction, has hash "N_8740348866409_134532251c", has il-index 36, has asm-address "0x804cc9b", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_24#33 = eax_50#67";
(contains-instruction: $N_8740348866409_134532251c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348866409_134532251c isa instruction, has hash "N_8740348866409_134532251c"; 

insert
$N_8740348866409_134532251c_0 isa variable-ssa, has hash "N_8740348866409_134532251c_0", has var "var_1ac_24", has version 33, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348866409_134532251c_0, from-node: $N_8740348866409_134532251c) isa node-link; 

match
$N_8740348866409_134532251c isa instruction, has hash "N_8740348866409_134532251c"; 

insert
$N_8740348866409_134532251c_1 isa MLIL_VAR_SSA, has hash "N_8740348866409_134532251c_1", has edge-label "src";
(to-node: $N_8740348866409_134532251c_1, from-node: $N_8740348866409_134532251c) isa node-link; 

match
$N_8740348866409_134532251c_1 isa operation, has hash "N_8740348866409_134532251c_1"; 

insert
$N_8740348866409_134532251c_1_0 isa variable-ssa, has hash "N_8740348866409_134532251c_1_0", has var "eax_50", has version 67, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348866409_134532251c_1_0, from-node: $N_8740348866409_134532251c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 36, has bb-end 38; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 36, has bb-end 38; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348847953_134532254c isa instruction, has hash "N_8740348847953_134532254c", has il-index 38, has asm-address "0x804cc9e", has operation-type "MLIL_GOTO", has ins-text "goto 43 @ 0x804cca5";
(contains-instruction: $N_8740348847953_134532254c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348847953_134532254c isa instruction, has hash "N_8740348847953_134532254c"; 

insert
$N_8740348847953_134532254c_0 isa constant, has hash "N_8740348847953_134532254c_0", has constant-value "43", has edge-label "dest";
(to-node: $N_8740348847953_134532254c_0, from-node: $N_8740348847953_134532254c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 36, has bb-end 38; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348848901_134532254c isa instruction, has hash "N_8740348848901_134532254c", has il-index 37, has asm-address "0x804cc9e", has operation-type "MLIL_CALL_SSA", has ins-text "eax_50#68, mem#56 = 0x804c200(var_1ac_24#33) @ mem#55";
(contains-instruction: $N_8740348848901_134532254c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348848901_134532254c isa instruction, has hash "N_8740348848901_134532254c"; 

insert
$N_8740348848901_134532254c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348848901_134532254c_0", has edge-label "output";
(to-node: $N_8740348848901_134532254c_0, from-node: $N_8740348848901_134532254c) isa node-link; 

match
$N_8740348848901_134532254c_0 isa operation, has hash "N_8740348848901_134532254c_0"; 

insert
$N_8740348848901_134532254c_0_0 isa constant, has hash "N_8740348848901_134532254c_0_0", has constant-value "56", has edge-label "dest_memory";
(to-node: $N_8740348848901_134532254c_0_0, from-node: $N_8740348848901_134532254c_0) isa node-link; 

match
$N_8740348848901_134532254c_0 isa operation, has hash "N_8740348848901_134532254c_0"; 

insert
$L_8740348848901_134532254c_0_1 isa list, has hash "L_8740348848901_134532254c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348848901_134532254c_0_1, from-node: $N_8740348848901_134532254c_0) isa node-link; 

match
$L_8740348848901_134532254c_0_1 isa list, has hash "L_8740348848901_134532254c_0_1"; 

insert
$N_8740348848901_134532254c_0_1_0 isa variable-ssa, has hash "N_8740348848901_134532254c_0_1_0", has var "eax_50", has version 68, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348848901_134532254c_0_1_0, from-node: $L_8740348848901_134532254c_0_1) isa node-link; 

match
$N_8740348848901_134532254c isa instruction, has hash "N_8740348848901_134532254c"; 

insert
$N_8740348848901_134532254c_1 isa MLIL_CONST_PTR, has hash "N_8740348848901_134532254c_1", has edge-label "dest";
(to-node: $N_8740348848901_134532254c_1, from-node: $N_8740348848901_134532254c) isa node-link; 

match
$N_8740348848901_134532254c_1 isa operation, has hash "N_8740348848901_134532254c_1"; 

insert
$N_8740348848901_134532254c_1_0 isa constant, has hash "N_8740348848901_134532254c_1_0", has constant-value "134529536", has edge-label "constant";
(to-node: $N_8740348848901_134532254c_1_0, from-node: $N_8740348848901_134532254c_1) isa node-link; 

match
$N_8740348848901_134532254c isa instruction, has hash "N_8740348848901_134532254c"; 

insert
$L_8740348848901_134532254c_2 isa list, has hash "L_8740348848901_134532254c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740348848901_134532254c_2, from-node: $N_8740348848901_134532254c) isa node-link; 

match
$L_8740348848901_134532254c_2 isa list, has hash "L_8740348848901_134532254c_2"; 

insert
$N_8740348848901_134532254c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348848901_134532254c_2_0", has edge-label "0";
(to-node: $N_8740348848901_134532254c_2_0, from-node: $L_8740348848901_134532254c_2) isa node-link; 

match
$N_8740348848901_134532254c_2_0 isa operation, has hash "N_8740348848901_134532254c_2_0"; 

insert
$N_8740348848901_134532254c_2_0_0 isa variable-ssa, has hash "N_8740348848901_134532254c_2_0_0", has var "var_1ac_24", has version 33, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348848901_134532254c_2_0_0, from-node: $N_8740348848901_134532254c_2_0) isa node-link; 

match
$N_8740348848901_134532254c isa instruction, has hash "N_8740348848901_134532254c"; 

insert
$N_8740348848901_134532254c_3 isa constant, has hash "N_8740348848901_134532254c_3", has constant-value "55", has edge-label "src_memory";
(to-node: $N_8740348848901_134532254c_3, from-node: $N_8740348848901_134532254c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 39, has bb-end 39; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 40, has bb-end 42; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 40, has bb-end 42; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 40, has bb-end 42; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349592433_134531282c isa instruction, has hash "N_8740349592433_134531282c", has il-index 40, has asm-address "0x804c8d2", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi_1#3 = 0";
(contains-instruction: $N_8740349592433_134531282c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349592433_134531282c isa instruction, has hash "N_8740349592433_134531282c"; 

insert
$N_8740349592433_134531282c_0 isa variable-ssa, has hash "N_8740349592433_134531282c_0", has var "esi_1", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349592433_134531282c_0, from-node: $N_8740349592433_134531282c) isa node-link; 

match
$N_8740349592433_134531282c isa instruction, has hash "N_8740349592433_134531282c"; 

insert
$N_8740349592433_134531282c_1 isa MLIL_CONST, has hash "N_8740349592433_134531282c_1", has edge-label "src";
(to-node: $N_8740349592433_134531282c_1, from-node: $N_8740349592433_134531282c) isa node-link; 

match
$N_8740349592433_134531282c_1 isa operation, has hash "N_8740349592433_134531282c_1"; 

insert
$N_8740349592433_134531282c_1_0 isa constant, has hash "N_8740349592433_134531282c_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349592433_134531282c_1_0, from-node: $N_8740349592433_134531282c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 40, has bb-end 42; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 40, has bb-end 42; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349619821_134531284c isa instruction, has hash "N_8740349619821_134531284c", has il-index 41, has asm-address "0x804c8d4", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edi#2 = 0";
(contains-instruction: $N_8740349619821_134531284c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349619821_134531284c isa instruction, has hash "N_8740349619821_134531284c"; 

insert
$N_8740349619821_134531284c_0 isa variable-ssa, has hash "N_8740349619821_134531284c_0", has var "edi", has version 2, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349619821_134531284c_0, from-node: $N_8740349619821_134531284c) isa node-link; 

match
$N_8740349619821_134531284c isa instruction, has hash "N_8740349619821_134531284c"; 

insert
$N_8740349619821_134531284c_1 isa MLIL_CONST, has hash "N_8740349619821_134531284c_1", has edge-label "src";
(to-node: $N_8740349619821_134531284c_1, from-node: $N_8740349619821_134531284c) isa node-link; 

match
$N_8740349619821_134531284c_1 isa operation, has hash "N_8740349619821_134531284c_1"; 

insert
$N_8740349619821_134531284c_1_0 isa constant, has hash "N_8740349619821_134531284c_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349619821_134531284c_1_0, from-node: $N_8740349619821_134531284c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 40, has bb-end 42; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 40, has bb-end 42; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349444497_134531286c isa instruction, has hash "N_8740349444497_134531286c", has il-index 42, has asm-address "0x804c8d6", has operation-type "MLIL_GOTO", has ins-text "goto 59 @ 0x804c8e0";
(contains-instruction: $N_8740349444497_134531286c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349444497_134531286c isa instruction, has hash "N_8740349444497_134531286c"; 

insert
$N_8740349444497_134531286c_0 isa constant, has hash "N_8740349444497_134531286c_0", has constant-value "59", has edge-label "dest";
(to-node: $N_8740349444497_134531286c_0, from-node: $N_8740349444497_134531286c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 43, has bb-end 46; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 43, has bb-end 46; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 43, has bb-end 46; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348278597_134532261c isa instruction, has hash "N_8740348278597_134532261c", has il-index 46, has asm-address "0x804cca5", has operation-type "MLIL_IF", has ins-text "if (edi#14 == 0) then 67 @ 0x0 else 68 @ 0x804cca7";
(contains-instruction: $N_8740348278597_134532261c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348278597_134532261c isa instruction, has hash "N_8740348278597_134532261c"; 

insert
$N_8740348278597_134532261c_0 isa MLIL_CMP_E, has hash "N_8740348278597_134532261c_0", has edge-label "condition";
(to-node: $N_8740348278597_134532261c_0, from-node: $N_8740348278597_134532261c) isa node-link; 

match
$N_8740348278597_134532261c_0 isa operation, has hash "N_8740348278597_134532261c_0"; 

insert
$N_8740348278597_134532261c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348278597_134532261c_0_0", has edge-label "left";
(to-node: $N_8740348278597_134532261c_0_0, from-node: $N_8740348278597_134532261c_0) isa node-link; 

match
$N_8740348278597_134532261c_0_0 isa operation, has hash "N_8740348278597_134532261c_0_0"; 

insert
$N_8740348278597_134532261c_0_0_0 isa variable-ssa, has hash "N_8740348278597_134532261c_0_0_0", has var "edi", has version 14, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348278597_134532261c_0_0_0, from-node: $N_8740348278597_134532261c_0_0) isa node-link; 

match
$N_8740348278597_134532261c_0 isa operation, has hash "N_8740348278597_134532261c_0"; 

insert
$N_8740348278597_134532261c_0_1 isa MLIL_CONST, has hash "N_8740348278597_134532261c_0_1", has edge-label "right";
(to-node: $N_8740348278597_134532261c_0_1, from-node: $N_8740348278597_134532261c_0) isa node-link; 

match
$N_8740348278597_134532261c_0_1 isa operation, has hash "N_8740348278597_134532261c_0_1"; 

insert
$N_8740348278597_134532261c_0_1_0 isa constant, has hash "N_8740348278597_134532261c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348278597_134532261c_0_1_0, from-node: $N_8740348278597_134532261c_0_1) isa node-link; 

match
$N_8740348278597_134532261c isa instruction, has hash "N_8740348278597_134532261c"; 

insert
$N_8740348278597_134532261c_1 isa constant, has hash "N_8740348278597_134532261c_1", has constant-value "67", has edge-label "true";
(to-node: $N_8740348278597_134532261c_1, from-node: $N_8740348278597_134532261c) isa node-link; 

match
$N_8740348278597_134532261c isa instruction, has hash "N_8740348278597_134532261c"; 

insert
$N_8740348278597_134532261c_2 isa constant, has hash "N_8740348278597_134532261c_2", has constant-value "68", has edge-label "false";
(to-node: $N_8740348278597_134532261c_2, from-node: $N_8740348278597_134532261c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 43, has bb-end 46; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348452449_134532261c isa instruction, has hash "N_8740348452449_134532261c", has il-index 44, has asm-address "0x804cca5", has operation-type "MLIL_VAR_PHI", has ins-text "eax_50#69 = ϕ(eax_50#67, eax_50#68)";
(contains-instruction: $N_8740348452449_134532261c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348452449_134532261c isa instruction, has hash "N_8740348452449_134532261c"; 

insert
$N_8740348452449_134532261c_0 isa variable-ssa, has hash "N_8740348452449_134532261c_0", has var "eax_50", has version 69, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348452449_134532261c_0, from-node: $N_8740348452449_134532261c) isa node-link; 

match
$N_8740348452449_134532261c isa instruction, has hash "N_8740348452449_134532261c"; 

insert
$L_8740348452449_134532261c_1 isa list, has hash "L_8740348452449_134532261c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348452449_134532261c_1, from-node: $N_8740348452449_134532261c) isa node-link; 

match
$L_8740348452449_134532261c_1 isa list, has hash "L_8740348452449_134532261c_1"; 

insert
$N_8740348452449_134532261c_1_0 isa variable-ssa, has hash "N_8740348452449_134532261c_1_0", has var "eax_50", has version 67, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348452449_134532261c_1_0, from-node: $L_8740348452449_134532261c_1) isa node-link; 

match
$L_8740348452449_134532261c_1 isa list, has hash "L_8740348452449_134532261c_1"; 

insert
$N_8740348452449_134532261c_1_1 isa variable-ssa, has hash "N_8740348452449_134532261c_1_1", has var "eax_50", has version 68, has edge-label "1", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348452449_134532261c_1_1, from-node: $L_8740348452449_134532261c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 43, has bb-end 46; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348455429_134532261c isa instruction, has hash "N_8740348455429_134532261c", has il-index 45, has asm-address "0x804cca5", has operation-type "MLIL_MEM_PHI", has ins-text "mem#57 = ϕ(mem#55, mem#56)";
(contains-instruction: $N_8740348455429_134532261c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348455429_134532261c isa instruction, has hash "N_8740348455429_134532261c"; 

insert
$N_8740348455429_134532261c_0 isa constant, has hash "N_8740348455429_134532261c_0", has constant-value "57", has edge-label "dest_memory";
(to-node: $N_8740348455429_134532261c_0, from-node: $N_8740348455429_134532261c) isa node-link; 

match
$N_8740348455429_134532261c isa instruction, has hash "N_8740348455429_134532261c"; 

insert
$L_8740348455429_134532261c_1 isa list, has hash "L_8740348455429_134532261c_1", has list-size 2, has edge-label "src_memory";
(to-node: $L_8740348455429_134532261c_1, from-node: $N_8740348455429_134532261c) isa node-link; 

match
$L_8740348455429_134532261c_1 isa list, has hash "L_8740348455429_134532261c_1"; 

insert
$N_8740348455429_134532261c_1_0 isa constant, has hash "N_8740348455429_134532261c_1_0", has constant-value "55", has edge-label "0";
(to-node: $N_8740348455429_134532261c_1_0, from-node: $L_8740348455429_134532261c_1) isa node-link; 

match
$L_8740348455429_134532261c_1 isa list, has hash "L_8740348455429_134532261c_1"; 

insert
$N_8740348455429_134532261c_1_1 isa constant, has hash "N_8740348455429_134532261c_1_1", has constant-value "56", has edge-label "1";
(to-node: $N_8740348455429_134532261c_1_1, from-node: $L_8740348455429_134532261c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 43, has bb-end 46; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348607253_134532261c isa instruction, has hash "N_8740348607253_134532261c", has il-index 43, has asm-address "0x804cca5", has operation-type "MLIL_VAR_PHI", has ins-text "var_1ac_24#34 = ϕ(var_1ac_23#32, var_1ac_24#33)";
(contains-instruction: $N_8740348607253_134532261c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348607253_134532261c isa instruction, has hash "N_8740348607253_134532261c"; 

insert
$N_8740348607253_134532261c_0 isa variable-ssa, has hash "N_8740348607253_134532261c_0", has var "var_1ac_24", has version 34, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348607253_134532261c_0, from-node: $N_8740348607253_134532261c) isa node-link; 

match
$N_8740348607253_134532261c isa instruction, has hash "N_8740348607253_134532261c"; 

insert
$L_8740348607253_134532261c_1 isa list, has hash "L_8740348607253_134532261c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348607253_134532261c_1, from-node: $N_8740348607253_134532261c) isa node-link; 

match
$L_8740348607253_134532261c_1 isa list, has hash "L_8740348607253_134532261c_1"; 

insert
$N_8740348607253_134532261c_1_0 isa variable-ssa, has hash "N_8740348607253_134532261c_1_0", has var "var_1ac_23", has version 32, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348607253_134532261c_1_0, from-node: $L_8740348607253_134532261c_1) isa node-link; 

match
$L_8740348607253_134532261c_1 isa list, has hash "L_8740348607253_134532261c_1"; 

insert
$N_8740348607253_134532261c_1_1 isa variable-ssa, has hash "N_8740348607253_134532261c_1_1", has var "var_1ac_24", has version 33, has edge-label "1", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348607253_134532261c_1_1, from-node: $L_8740348607253_134532261c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348288605_134531331c isa instruction, has hash "N_8740348288605_134531331c", has il-index 48, has asm-address "0x804c903", has operation-type "MLIL_VAR_PHI", has ins-text "eax_7#10 = ϕ(eax_3#4, eax_7#9)";
(contains-instruction: $N_8740348288605_134531331c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348288605_134531331c isa instruction, has hash "N_8740348288605_134531331c"; 

insert
$N_8740348288605_134531331c_0 isa variable-ssa, has hash "N_8740348288605_134531331c_0", has var "eax_7", has version 10, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348288605_134531331c_0, from-node: $N_8740348288605_134531331c) isa node-link; 

match
$N_8740348288605_134531331c isa instruction, has hash "N_8740348288605_134531331c"; 

insert
$L_8740348288605_134531331c_1 isa list, has hash "L_8740348288605_134531331c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348288605_134531331c_1, from-node: $N_8740348288605_134531331c) isa node-link; 

match
$L_8740348288605_134531331c_1 isa list, has hash "L_8740348288605_134531331c_1"; 

insert
$N_8740348288605_134531331c_1_0 isa variable-ssa, has hash "N_8740348288605_134531331c_1_0", has var "eax_3", has version 4, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348288605_134531331c_1_0, from-node: $L_8740348288605_134531331c_1) isa node-link; 

match
$L_8740348288605_134531331c_1 isa list, has hash "L_8740348288605_134531331c_1"; 

insert
$N_8740348288605_134531331c_1_1 isa variable-ssa, has hash "N_8740348288605_134531331c_1_1", has var "eax_7", has version 9, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348288605_134531331c_1_1, from-node: $L_8740348288605_134531331c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348444933_134531331c isa instruction, has hash "N_8740348444933_134531331c", has il-index 50, has asm-address "0x804c903", has operation-type "MLIL_VAR_PHI", has ins-text "edi#3 = ϕ(edi#1, edi#2)";
(contains-instruction: $N_8740348444933_134531331c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348444933_134531331c isa instruction, has hash "N_8740348444933_134531331c"; 

insert
$N_8740348444933_134531331c_0 isa variable-ssa, has hash "N_8740348444933_134531331c_0", has var "edi", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348444933_134531331c_0, from-node: $N_8740348444933_134531331c) isa node-link; 

match
$N_8740348444933_134531331c isa instruction, has hash "N_8740348444933_134531331c"; 

insert
$L_8740348444933_134531331c_1 isa list, has hash "L_8740348444933_134531331c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348444933_134531331c_1, from-node: $N_8740348444933_134531331c) isa node-link; 

match
$L_8740348444933_134531331c_1 isa list, has hash "L_8740348444933_134531331c_1"; 

insert
$N_8740348444933_134531331c_1_0 isa variable-ssa, has hash "N_8740348444933_134531331c_1_0", has var "edi", has version 1, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348444933_134531331c_1_0, from-node: $L_8740348444933_134531331c_1) isa node-link; 

match
$L_8740348444933_134531331c_1 isa list, has hash "L_8740348444933_134531331c_1"; 

insert
$N_8740348444933_134531331c_1_1 isa variable-ssa, has hash "N_8740348444933_134531331c_1_1", has var "edi", has version 2, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348444933_134531331c_1_1, from-node: $L_8740348444933_134531331c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349433605_134531331c isa instruction, has hash "N_8740349433605_134531331c", has il-index 49, has asm-address "0x804c903", has operation-type "MLIL_VAR_PHI", has ins-text "esi_1#7 = ϕ(esi#1, esi_1#6)";
(contains-instruction: $N_8740349433605_134531331c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349433605_134531331c isa instruction, has hash "N_8740349433605_134531331c"; 

insert
$N_8740349433605_134531331c_0 isa variable-ssa, has hash "N_8740349433605_134531331c_0", has var "esi_1", has version 7, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349433605_134531331c_0, from-node: $N_8740349433605_134531331c) isa node-link; 

match
$N_8740349433605_134531331c isa instruction, has hash "N_8740349433605_134531331c"; 

insert
$L_8740349433605_134531331c_1 isa list, has hash "L_8740349433605_134531331c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349433605_134531331c_1, from-node: $N_8740349433605_134531331c) isa node-link; 

match
$L_8740349433605_134531331c_1 isa list, has hash "L_8740349433605_134531331c_1"; 

insert
$N_8740349433605_134531331c_1_0 isa variable-ssa, has hash "N_8740349433605_134531331c_1_0", has var "esi", has version 1, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349433605_134531331c_1_0, from-node: $L_8740349433605_134531331c_1) isa node-link; 

match
$L_8740349433605_134531331c_1 isa list, has hash "L_8740349433605_134531331c_1"; 

insert
$N_8740349433605_134531331c_1_1 isa variable-ssa, has hash "N_8740349433605_134531331c_1_1", has var "esi_1", has version 6, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349433605_134531331c_1_1, from-node: $L_8740349433605_134531331c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349435197_134531331c isa instruction, has hash "N_8740349435197_134531331c", has il-index 47, has asm-address "0x804c903", has operation-type "MLIL_VAR_PHI", has ins-text "var_1ac_4#7 = ϕ(var_1ac_2#3, var_1ac_4#6)";
(contains-instruction: $N_8740349435197_134531331c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349435197_134531331c isa instruction, has hash "N_8740349435197_134531331c"; 

insert
$N_8740349435197_134531331c_0 isa variable-ssa, has hash "N_8740349435197_134531331c_0", has var "var_1ac_4", has version 7, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349435197_134531331c_0, from-node: $N_8740349435197_134531331c) isa node-link; 

match
$N_8740349435197_134531331c isa instruction, has hash "N_8740349435197_134531331c"; 

insert
$L_8740349435197_134531331c_1 isa list, has hash "L_8740349435197_134531331c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349435197_134531331c_1, from-node: $N_8740349435197_134531331c) isa node-link; 

match
$L_8740349435197_134531331c_1 isa list, has hash "L_8740349435197_134531331c_1"; 

insert
$N_8740349435197_134531331c_1_0 isa variable-ssa, has hash "N_8740349435197_134531331c_1_0", has var "var_1ac_2", has version 3, has edge-label "0", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349435197_134531331c_1_0, from-node: $L_8740349435197_134531331c_1) isa node-link; 

match
$L_8740349435197_134531331c_1 isa list, has hash "L_8740349435197_134531331c_1"; 

insert
$N_8740349435197_134531331c_1_1 isa variable-ssa, has hash "N_8740349435197_134531331c_1_1", has var "var_1ac_4", has version 6, has edge-label "1", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349435197_134531331c_1_1, from-node: $L_8740349435197_134531331c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349708217_134531331c isa instruction, has hash "N_8740349708217_134531331c", has il-index 51, has asm-address "0x804c903", has operation-type "MLIL_MEM_PHI", has ins-text "mem#12 = ϕ(mem#8, mem#11)";
(contains-instruction: $N_8740349708217_134531331c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349708217_134531331c isa instruction, has hash "N_8740349708217_134531331c"; 

insert
$N_8740349708217_134531331c_0 isa constant, has hash "N_8740349708217_134531331c_0", has constant-value "12", has edge-label "dest_memory";
(to-node: $N_8740349708217_134531331c_0, from-node: $N_8740349708217_134531331c) isa node-link; 

match
$N_8740349708217_134531331c isa instruction, has hash "N_8740349708217_134531331c"; 

insert
$L_8740349708217_134531331c_1 isa list, has hash "L_8740349708217_134531331c_1", has list-size 2, has edge-label "src_memory";
(to-node: $L_8740349708217_134531331c_1, from-node: $N_8740349708217_134531331c) isa node-link; 

match
$L_8740349708217_134531331c_1 isa list, has hash "L_8740349708217_134531331c_1"; 

insert
$N_8740349708217_134531331c_1_0 isa constant, has hash "N_8740349708217_134531331c_1_0", has constant-value "8", has edge-label "0";
(to-node: $N_8740349708217_134531331c_1_0, from-node: $L_8740349708217_134531331c_1) isa node-link; 

match
$L_8740349708217_134531331c_1 isa list, has hash "L_8740349708217_134531331c_1"; 

insert
$N_8740349708217_134531331c_1_1 isa constant, has hash "N_8740349708217_134531331c_1_1", has constant-value "11", has edge-label "1";
(to-node: $N_8740349708217_134531331c_1_1, from-node: $L_8740349708217_134531331c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349719037_134531331c isa instruction, has hash "N_8740349719037_134531331c", has il-index 52, has asm-address "0x804c903", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_8#11 = var_194 @ mem#12";
(contains-instruction: $N_8740349719037_134531331c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349719037_134531331c isa instruction, has hash "N_8740349719037_134531331c"; 

insert
$N_8740349719037_134531331c_0 isa variable-ssa, has hash "N_8740349719037_134531331c_0", has var "eax_8", has version 11, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349719037_134531331c_0, from-node: $N_8740349719037_134531331c) isa node-link; 

match
$N_8740349719037_134531331c isa instruction, has hash "N_8740349719037_134531331c"; 

insert
$N_8740349719037_134531331c_1 isa MLIL_VAR_ALIASED, has hash "N_8740349719037_134531331c_1", has edge-label "src";
(to-node: $N_8740349719037_134531331c_1, from-node: $N_8740349719037_134531331c) isa node-link; 

match
$N_8740349719037_134531331c_1 isa operation, has hash "N_8740349719037_134531331c_1"; 

insert
$N_8740349719037_134531331c_1_0 isa variable-ssa, has hash "N_8740349719037_134531331c_1_0", has var "var_194", has version 12, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349719037_134531331c_1_0, from-node: $N_8740349719037_134531331c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349030677_134531335c isa instruction, has hash "N_8740349030677_134531335c", has il-index 53, has asm-address "0x804c907", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1a8_1#1 = &var_190";
(contains-instruction: $N_8740349030677_134531335c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349030677_134531335c isa instruction, has hash "N_8740349030677_134531335c"; 

insert
$N_8740349030677_134531335c_0 isa variable-ssa, has hash "N_8740349030677_134531335c_0", has var "var_1a8_1", has version 1, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349030677_134531335c_0, from-node: $N_8740349030677_134531335c) isa node-link; 

match
$N_8740349030677_134531335c isa instruction, has hash "N_8740349030677_134531335c"; 

insert
$N_8740349030677_134531335c_1 isa MLIL_ADDRESS_OF, has hash "N_8740349030677_134531335c_1", has edge-label "src";
(to-node: $N_8740349030677_134531335c_1, from-node: $N_8740349030677_134531335c) isa node-link; 

match
$N_8740349030677_134531335c_1 isa operation, has hash "N_8740349030677_134531335c_1"; 

insert
$N_8740349030677_134531335c_1_0 isa variable, has hash "N_8740349030677_134531335c_1_0", has var "var_190", has edge-label "src", has var-type "void", has var-size 256, has var-func "cgc_handle_register_user";
(to-node: $N_8740349030677_134531335c_1_0, from-node: $N_8740349030677_134531335c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349722897_134531339c isa instruction, has hash "N_8740349722897_134531339c", has il-index 54, has asm-address "0x804c90b", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_5#8 = eax_8#11";
(contains-instruction: $N_8740349722897_134531339c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349722897_134531339c isa instruction, has hash "N_8740349722897_134531339c"; 

insert
$N_8740349722897_134531339c_0 isa variable-ssa, has hash "N_8740349722897_134531339c_0", has var "var_1ac_5", has version 8, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349722897_134531339c_0, from-node: $N_8740349722897_134531339c) isa node-link; 

match
$N_8740349722897_134531339c isa instruction, has hash "N_8740349722897_134531339c"; 

insert
$N_8740349722897_134531339c_1 isa MLIL_VAR_SSA, has hash "N_8740349722897_134531339c_1", has edge-label "src";
(to-node: $N_8740349722897_134531339c_1, from-node: $N_8740349722897_134531339c) isa node-link; 

match
$N_8740349722897_134531339c_1 isa operation, has hash "N_8740349722897_134531339c_1"; 

insert
$N_8740349722897_134531339c_1_0 isa variable-ssa, has hash "N_8740349722897_134531339c_1_0", has var "eax_8", has version 11, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349722897_134531339c_1_0, from-node: $N_8740349722897_134531339c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348552197_134531342c isa instruction, has hash "N_8740348552197_134531342c", has il-index 55, has asm-address "0x804c90e", has operation-type "MLIL_CALL_SSA", has ins-text "eax_9#12, mem#13 = 0x804c400(var_1ac_5#8, var_1a8_1#1) @ mem#12";
(contains-instruction: $N_8740348552197_134531342c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348552197_134531342c isa instruction, has hash "N_8740348552197_134531342c"; 

insert
$N_8740348552197_134531342c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348552197_134531342c_0", has edge-label "output";
(to-node: $N_8740348552197_134531342c_0, from-node: $N_8740348552197_134531342c) isa node-link; 

match
$N_8740348552197_134531342c_0 isa operation, has hash "N_8740348552197_134531342c_0"; 

insert
$N_8740348552197_134531342c_0_0 isa constant, has hash "N_8740348552197_134531342c_0_0", has constant-value "13", has edge-label "dest_memory";
(to-node: $N_8740348552197_134531342c_0_0, from-node: $N_8740348552197_134531342c_0) isa node-link; 

match
$N_8740348552197_134531342c_0 isa operation, has hash "N_8740348552197_134531342c_0"; 

insert
$L_8740348552197_134531342c_0_1 isa list, has hash "L_8740348552197_134531342c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348552197_134531342c_0_1, from-node: $N_8740348552197_134531342c_0) isa node-link; 

match
$L_8740348552197_134531342c_0_1 isa list, has hash "L_8740348552197_134531342c_0_1"; 

insert
$N_8740348552197_134531342c_0_1_0 isa variable-ssa, has hash "N_8740348552197_134531342c_0_1_0", has var "eax_9", has version 12, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348552197_134531342c_0_1_0, from-node: $L_8740348552197_134531342c_0_1) isa node-link; 

match
$N_8740348552197_134531342c isa instruction, has hash "N_8740348552197_134531342c"; 

insert
$N_8740348552197_134531342c_1 isa MLIL_CONST_PTR, has hash "N_8740348552197_134531342c_1", has edge-label "dest";
(to-node: $N_8740348552197_134531342c_1, from-node: $N_8740348552197_134531342c) isa node-link; 

match
$N_8740348552197_134531342c_1 isa operation, has hash "N_8740348552197_134531342c_1"; 

insert
$N_8740348552197_134531342c_1_0 isa constant, has hash "N_8740348552197_134531342c_1_0", has constant-value "134530048", has edge-label "constant";
(to-node: $N_8740348552197_134531342c_1_0, from-node: $N_8740348552197_134531342c_1) isa node-link; 

match
$N_8740348552197_134531342c isa instruction, has hash "N_8740348552197_134531342c"; 

insert
$L_8740348552197_134531342c_2 isa list, has hash "L_8740348552197_134531342c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740348552197_134531342c_2, from-node: $N_8740348552197_134531342c) isa node-link; 

match
$L_8740348552197_134531342c_2 isa list, has hash "L_8740348552197_134531342c_2"; 

insert
$N_8740348552197_134531342c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348552197_134531342c_2_0", has edge-label "0";
(to-node: $N_8740348552197_134531342c_2_0, from-node: $L_8740348552197_134531342c_2) isa node-link; 

match
$N_8740348552197_134531342c_2_0 isa operation, has hash "N_8740348552197_134531342c_2_0"; 

insert
$N_8740348552197_134531342c_2_0_0 isa variable-ssa, has hash "N_8740348552197_134531342c_2_0_0", has var "var_1ac_5", has version 8, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348552197_134531342c_2_0_0, from-node: $N_8740348552197_134531342c_2_0) isa node-link; 

match
$L_8740348552197_134531342c_2 isa list, has hash "L_8740348552197_134531342c_2"; 

insert
$N_8740348552197_134531342c_2_1 isa MLIL_VAR_SSA, has hash "N_8740348552197_134531342c_2_1", has edge-label "1";
(to-node: $N_8740348552197_134531342c_2_1, from-node: $L_8740348552197_134531342c_2) isa node-link; 

match
$N_8740348552197_134531342c_2_1 isa operation, has hash "N_8740348552197_134531342c_2_1"; 

insert
$N_8740348552197_134531342c_2_1_0 isa variable-ssa, has hash "N_8740348552197_134531342c_2_1_0", has var "var_1a8_1", has version 1, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348552197_134531342c_2_1_0, from-node: $N_8740348552197_134531342c_2_1) isa node-link; 

match
$N_8740348552197_134531342c isa instruction, has hash "N_8740348552197_134531342c"; 

insert
$N_8740348552197_134531342c_3 isa constant, has hash "N_8740348552197_134531342c_3", has constant-value "12", has edge-label "src_memory";
(to-node: $N_8740348552197_134531342c_3, from-node: $N_8740348552197_134531342c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349479657_134531347c isa instruction, has hash "N_8740349479657_134531347c", has il-index 56, has asm-address "0x804c913", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#8 = eax_9#12";
(contains-instruction: $N_8740349479657_134531347c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349479657_134531347c isa instruction, has hash "N_8740349479657_134531347c"; 

insert
$N_8740349479657_134531347c_0 isa variable-ssa, has hash "N_8740349479657_134531347c_0", has var "esi", has version 8, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349479657_134531347c_0, from-node: $N_8740349479657_134531347c) isa node-link; 

match
$N_8740349479657_134531347c isa instruction, has hash "N_8740349479657_134531347c"; 

insert
$N_8740349479657_134531347c_1 isa MLIL_VAR_SSA, has hash "N_8740349479657_134531347c_1", has edge-label "src";
(to-node: $N_8740349479657_134531347c_1, from-node: $N_8740349479657_134531347c) isa node-link; 

match
$N_8740349479657_134531347c_1 isa operation, has hash "N_8740349479657_134531347c_1"; 

insert
$N_8740349479657_134531347c_1_0 isa variable-ssa, has hash "N_8740349479657_134531347c_1_0", has var "eax_9", has version 12, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349479657_134531347c_1_0, from-node: $N_8740349479657_134531347c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349566213_134531349c isa instruction, has hash "N_8740349566213_134531349c", has il-index 57, has asm-address "0x804c915", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edi#4 = 0";
(contains-instruction: $N_8740349566213_134531349c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349566213_134531349c isa instruction, has hash "N_8740349566213_134531349c"; 

insert
$N_8740349566213_134531349c_0 isa variable-ssa, has hash "N_8740349566213_134531349c_0", has var "edi", has version 4, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349566213_134531349c_0, from-node: $N_8740349566213_134531349c) isa node-link; 

match
$N_8740349566213_134531349c isa instruction, has hash "N_8740349566213_134531349c"; 

insert
$N_8740349566213_134531349c_1 isa MLIL_CONST, has hash "N_8740349566213_134531349c_1", has edge-label "src";
(to-node: $N_8740349566213_134531349c_1, from-node: $N_8740349566213_134531349c) isa node-link; 

match
$N_8740349566213_134531349c_1 isa operation, has hash "N_8740349566213_134531349c_1"; 

insert
$N_8740349566213_134531349c_1_0 isa constant, has hash "N_8740349566213_134531349c_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349566213_134531349c_1_0, from-node: $N_8740349566213_134531349c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 47, has bb-end 58; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349268513_134531353c isa instruction, has hash "N_8740349268513_134531353c", has il-index 58, has asm-address "0x804c919", has operation-type "MLIL_IF", has ins-text "if (esi#8 != 0) then 70 @ 0x0 else 71 @ 0x804c926";
(contains-instruction: $N_8740349268513_134531353c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349268513_134531353c isa instruction, has hash "N_8740349268513_134531353c"; 

insert
$N_8740349268513_134531353c_0 isa MLIL_CMP_NE, has hash "N_8740349268513_134531353c_0", has edge-label "condition";
(to-node: $N_8740349268513_134531353c_0, from-node: $N_8740349268513_134531353c) isa node-link; 

match
$N_8740349268513_134531353c_0 isa operation, has hash "N_8740349268513_134531353c_0"; 

insert
$N_8740349268513_134531353c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349268513_134531353c_0_0", has edge-label "left";
(to-node: $N_8740349268513_134531353c_0_0, from-node: $N_8740349268513_134531353c_0) isa node-link; 

match
$N_8740349268513_134531353c_0_0 isa operation, has hash "N_8740349268513_134531353c_0_0"; 

insert
$N_8740349268513_134531353c_0_0_0 isa variable-ssa, has hash "N_8740349268513_134531353c_0_0_0", has var "esi", has version 8, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349268513_134531353c_0_0_0, from-node: $N_8740349268513_134531353c_0_0) isa node-link; 

match
$N_8740349268513_134531353c_0 isa operation, has hash "N_8740349268513_134531353c_0"; 

insert
$N_8740349268513_134531353c_0_1 isa MLIL_CONST, has hash "N_8740349268513_134531353c_0_1", has edge-label "right";
(to-node: $N_8740349268513_134531353c_0_1, from-node: $N_8740349268513_134531353c_0) isa node-link; 

match
$N_8740349268513_134531353c_0_1 isa operation, has hash "N_8740349268513_134531353c_0_1"; 

insert
$N_8740349268513_134531353c_0_1_0 isa constant, has hash "N_8740349268513_134531353c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349268513_134531353c_0_1_0, from-node: $N_8740349268513_134531353c_0_1) isa node-link; 

match
$N_8740349268513_134531353c isa instruction, has hash "N_8740349268513_134531353c"; 

insert
$N_8740349268513_134531353c_1 isa constant, has hash "N_8740349268513_134531353c_1", has constant-value "70", has edge-label "true";
(to-node: $N_8740349268513_134531353c_1, from-node: $N_8740349268513_134531353c) isa node-link; 

match
$N_8740349268513_134531353c isa instruction, has hash "N_8740349268513_134531353c"; 

insert
$N_8740349268513_134531353c_2 isa constant, has hash "N_8740349268513_134531353c_2", has constant-value "71", has edge-label "false";
(to-node: $N_8740349268513_134531353c_2, from-node: $N_8740349268513_134531353c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 59, has bb-end 66; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 59, has bb-end 66; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 59, has bb-end 66; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348268753_134531296c isa instruction, has hash "N_8740348268753_134531296c", has il-index 59, has asm-address "0x804c8e0", has operation-type "MLIL_VAR_PHI", has ins-text "var_1ac_4#4 = ϕ(var_1ac_2#3, var_1ac_4#6)";
(contains-instruction: $N_8740348268753_134531296c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348268753_134531296c isa instruction, has hash "N_8740348268753_134531296c"; 

insert
$N_8740348268753_134531296c_0 isa variable-ssa, has hash "N_8740348268753_134531296c_0", has var "var_1ac_4", has version 4, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348268753_134531296c_0, from-node: $N_8740348268753_134531296c) isa node-link; 

match
$N_8740348268753_134531296c isa instruction, has hash "N_8740348268753_134531296c"; 

insert
$L_8740348268753_134531296c_1 isa list, has hash "L_8740348268753_134531296c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348268753_134531296c_1, from-node: $N_8740348268753_134531296c) isa node-link; 

match
$L_8740348268753_134531296c_1 isa list, has hash "L_8740348268753_134531296c_1"; 

insert
$N_8740348268753_134531296c_1_0 isa variable-ssa, has hash "N_8740348268753_134531296c_1_0", has var "var_1ac_2", has version 3, has edge-label "0", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348268753_134531296c_1_0, from-node: $L_8740348268753_134531296c_1) isa node-link; 

match
$L_8740348268753_134531296c_1 isa list, has hash "L_8740348268753_134531296c_1"; 

insert
$N_8740348268753_134531296c_1_1 isa variable-ssa, has hash "N_8740348268753_134531296c_1_1", has var "var_1ac_4", has version 6, has edge-label "1", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348268753_134531296c_1_1, from-node: $L_8740348268753_134531296c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 59, has bb-end 66; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348272133_134531296c isa instruction, has hash "N_8740348272133_134531296c", has il-index 61, has asm-address "0x804c8e0", has operation-type "MLIL_VAR_PHI", has ins-text "esi_1#4 = ϕ(esi_1#3, esi_1#6)";
(contains-instruction: $N_8740348272133_134531296c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348272133_134531296c isa instruction, has hash "N_8740348272133_134531296c"; 

insert
$N_8740348272133_134531296c_0 isa variable-ssa, has hash "N_8740348272133_134531296c_0", has var "esi_1", has version 4, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348272133_134531296c_0, from-node: $N_8740348272133_134531296c) isa node-link; 

match
$N_8740348272133_134531296c isa instruction, has hash "N_8740348272133_134531296c"; 

insert
$L_8740348272133_134531296c_1 isa list, has hash "L_8740348272133_134531296c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348272133_134531296c_1, from-node: $N_8740348272133_134531296c) isa node-link; 

match
$L_8740348272133_134531296c_1 isa list, has hash "L_8740348272133_134531296c_1"; 

insert
$N_8740348272133_134531296c_1_0 isa variable-ssa, has hash "N_8740348272133_134531296c_1_0", has var "esi_1", has version 3, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348272133_134531296c_1_0, from-node: $L_8740348272133_134531296c_1) isa node-link; 

match
$L_8740348272133_134531296c_1 isa list, has hash "L_8740348272133_134531296c_1"; 

insert
$N_8740348272133_134531296c_1_1 isa variable-ssa, has hash "N_8740348272133_134531296c_1_1", has var "esi_1", has version 6, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348272133_134531296c_1_1, from-node: $L_8740348272133_134531296c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 59, has bb-end 66; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348742465_134531296c isa instruction, has hash "N_8740348742465_134531296c", has il-index 60, has asm-address "0x804c8e0", has operation-type "MLIL_VAR_PHI", has ins-text "eax_7#5 = ϕ(eax_3#4, eax_7#9)";
(contains-instruction: $N_8740348742465_134531296c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348742465_134531296c isa instruction, has hash "N_8740348742465_134531296c"; 

insert
$N_8740348742465_134531296c_0 isa variable-ssa, has hash "N_8740348742465_134531296c_0", has var "eax_7", has version 5, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348742465_134531296c_0, from-node: $N_8740348742465_134531296c) isa node-link; 

match
$N_8740348742465_134531296c isa instruction, has hash "N_8740348742465_134531296c"; 

insert
$L_8740348742465_134531296c_1 isa list, has hash "L_8740348742465_134531296c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348742465_134531296c_1, from-node: $N_8740348742465_134531296c) isa node-link; 

match
$L_8740348742465_134531296c_1 isa list, has hash "L_8740348742465_134531296c_1"; 

insert
$N_8740348742465_134531296c_1_0 isa variable-ssa, has hash "N_8740348742465_134531296c_1_0", has var "eax_3", has version 4, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348742465_134531296c_1_0, from-node: $L_8740348742465_134531296c_1) isa node-link; 

match
$L_8740348742465_134531296c_1 isa list, has hash "L_8740348742465_134531296c_1"; 

insert
$N_8740348742465_134531296c_1_1 isa variable-ssa, has hash "N_8740348742465_134531296c_1_1", has var "eax_7", has version 9, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348742465_134531296c_1_1, from-node: $L_8740348742465_134531296c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 59, has bb-end 66; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348782341_134531296c isa instruction, has hash "N_8740348782341_134531296c", has il-index 62, has asm-address "0x804c8e0", has operation-type "MLIL_MEM_PHI", has ins-text "mem#9 = ϕ(mem#8, mem#11)";
(contains-instruction: $N_8740348782341_134531296c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348782341_134531296c isa instruction, has hash "N_8740348782341_134531296c"; 

insert
$N_8740348782341_134531296c_0 isa constant, has hash "N_8740348782341_134531296c_0", has constant-value "9", has edge-label "dest_memory";
(to-node: $N_8740348782341_134531296c_0, from-node: $N_8740348782341_134531296c) isa node-link; 

match
$N_8740348782341_134531296c isa instruction, has hash "N_8740348782341_134531296c"; 

insert
$L_8740348782341_134531296c_1 isa list, has hash "L_8740348782341_134531296c_1", has list-size 2, has edge-label "src_memory";
(to-node: $L_8740348782341_134531296c_1, from-node: $N_8740348782341_134531296c) isa node-link; 

match
$L_8740348782341_134531296c_1 isa list, has hash "L_8740348782341_134531296c_1"; 

insert
$N_8740348782341_134531296c_1_0 isa constant, has hash "N_8740348782341_134531296c_1_0", has constant-value "8", has edge-label "0";
(to-node: $N_8740348782341_134531296c_1_0, from-node: $L_8740348782341_134531296c_1) isa node-link; 

match
$L_8740348782341_134531296c_1 isa list, has hash "L_8740348782341_134531296c_1"; 

insert
$N_8740348782341_134531296c_1_1 isa constant, has hash "N_8740348782341_134531296c_1_1", has constant-value "11", has edge-label "1";
(to-node: $N_8740348782341_134531296c_1_1, from-node: $L_8740348782341_134531296c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 59, has bb-end 66; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349268621_134531296c isa instruction, has hash "N_8740349268621_134531296c", has il-index 63, has asm-address "0x804c8e0", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_4#6 = sx.d([&var_190 + esi_1#4].b @ mem#9)";
(contains-instruction: $N_8740349268621_134531296c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349268621_134531296c isa instruction, has hash "N_8740349268621_134531296c"; 

insert
$N_8740349268621_134531296c_0 isa variable-ssa, has hash "N_8740349268621_134531296c_0", has var "eax_4", has version 6, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349268621_134531296c_0, from-node: $N_8740349268621_134531296c) isa node-link; 

match
$N_8740349268621_134531296c isa instruction, has hash "N_8740349268621_134531296c"; 

insert
$N_8740349268621_134531296c_1 isa MLIL_SX, has hash "N_8740349268621_134531296c_1", has edge-label "src";
(to-node: $N_8740349268621_134531296c_1, from-node: $N_8740349268621_134531296c) isa node-link; 

match
$N_8740349268621_134531296c_1 isa operation, has hash "N_8740349268621_134531296c_1"; 

insert
$N_8740349268621_134531296c_1_0 isa MLIL_LOAD_SSA, has hash "N_8740349268621_134531296c_1_0", has edge-label "src";
(to-node: $N_8740349268621_134531296c_1_0, from-node: $N_8740349268621_134531296c_1) isa node-link; 

match
$N_8740349268621_134531296c_1_0 isa operation, has hash "N_8740349268621_134531296c_1_0"; 

insert
$N_8740349268621_134531296c_1_0_0 isa MLIL_ADD, has hash "N_8740349268621_134531296c_1_0_0", has edge-label "src";
(to-node: $N_8740349268621_134531296c_1_0_0, from-node: $N_8740349268621_134531296c_1_0) isa node-link; 

match
$N_8740349268621_134531296c_1_0_0 isa operation, has hash "N_8740349268621_134531296c_1_0_0"; 

insert
$N_8740349268621_134531296c_1_0_0_0 isa MLIL_ADDRESS_OF, has hash "N_8740349268621_134531296c_1_0_0_0", has edge-label "left";
(to-node: $N_8740349268621_134531296c_1_0_0_0, from-node: $N_8740349268621_134531296c_1_0_0) isa node-link; 

match
$N_8740349268621_134531296c_1_0_0_0 isa operation, has hash "N_8740349268621_134531296c_1_0_0_0"; 

insert
$N_8740349268621_134531296c_1_0_0_0_0 isa variable, has hash "N_8740349268621_134531296c_1_0_0_0_0", has var "var_190", has edge-label "src", has var-type "void", has var-size 256, has var-func "cgc_handle_register_user";
(to-node: $N_8740349268621_134531296c_1_0_0_0_0, from-node: $N_8740349268621_134531296c_1_0_0_0) isa node-link; 

match
$N_8740349268621_134531296c_1_0_0 isa operation, has hash "N_8740349268621_134531296c_1_0_0"; 

insert
$N_8740349268621_134531296c_1_0_0_1 isa MLIL_VAR_SSA, has hash "N_8740349268621_134531296c_1_0_0_1", has edge-label "right";
(to-node: $N_8740349268621_134531296c_1_0_0_1, from-node: $N_8740349268621_134531296c_1_0_0) isa node-link; 

match
$N_8740349268621_134531296c_1_0_0_1 isa operation, has hash "N_8740349268621_134531296c_1_0_0_1"; 

insert
$N_8740349268621_134531296c_1_0_0_1_0 isa variable-ssa, has hash "N_8740349268621_134531296c_1_0_0_1_0", has var "esi_1", has version 4, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349268621_134531296c_1_0_0_1_0, from-node: $N_8740349268621_134531296c_1_0_0_1) isa node-link; 

match
$N_8740349268621_134531296c_1_0 isa operation, has hash "N_8740349268621_134531296c_1_0"; 

insert
$N_8740349268621_134531296c_1_0_1 isa constant, has hash "N_8740349268621_134531296c_1_0_1", has constant-value "9", has edge-label "src_memory";
(to-node: $N_8740349268621_134531296c_1_0_1, from-node: $N_8740349268621_134531296c_1_0) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 59, has bb-end 66; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 59, has bb-end 66; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349363885_134531301c isa instruction, has hash "N_8740349363885_134531301c", has il-index 64, has asm-address "0x804c8e5", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_3#5 = eax_4#6";
(contains-instruction: $N_8740349363885_134531301c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349363885_134531301c isa instruction, has hash "N_8740349363885_134531301c"; 

insert
$N_8740349363885_134531301c_0 isa variable-ssa, has hash "N_8740349363885_134531301c_0", has var "var_1ac_3", has version 5, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349363885_134531301c_0, from-node: $N_8740349363885_134531301c) isa node-link; 

match
$N_8740349363885_134531301c isa instruction, has hash "N_8740349363885_134531301c"; 

insert
$N_8740349363885_134531301c_1 isa MLIL_VAR_SSA, has hash "N_8740349363885_134531301c_1", has edge-label "src";
(to-node: $N_8740349363885_134531301c_1, from-node: $N_8740349363885_134531301c) isa node-link; 

match
$N_8740349363885_134531301c_1 isa operation, has hash "N_8740349363885_134531301c_1"; 

insert
$N_8740349363885_134531301c_1_0 isa variable-ssa, has hash "N_8740349363885_134531301c_1_0", has var "eax_4", has version 6, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349363885_134531301c_1_0, from-node: $N_8740349363885_134531301c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 59, has bb-end 66; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 59, has bb-end 66; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349054725_134531304c isa instruction, has hash "N_8740349054725_134531304c", has il-index 65, has asm-address "0x804c8e8", has operation-type "MLIL_CALL_SSA", has ins-text "eax_5#7, mem#10 = 0x804c250(var_1ac_3#5) @ mem#9";
(contains-instruction: $N_8740349054725_134531304c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349054725_134531304c isa instruction, has hash "N_8740349054725_134531304c"; 

insert
$N_8740349054725_134531304c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740349054725_134531304c_0", has edge-label "output";
(to-node: $N_8740349054725_134531304c_0, from-node: $N_8740349054725_134531304c) isa node-link; 

match
$N_8740349054725_134531304c_0 isa operation, has hash "N_8740349054725_134531304c_0"; 

insert
$N_8740349054725_134531304c_0_0 isa constant, has hash "N_8740349054725_134531304c_0_0", has constant-value "10", has edge-label "dest_memory";
(to-node: $N_8740349054725_134531304c_0_0, from-node: $N_8740349054725_134531304c_0) isa node-link; 

match
$N_8740349054725_134531304c_0 isa operation, has hash "N_8740349054725_134531304c_0"; 

insert
$L_8740349054725_134531304c_0_1 isa list, has hash "L_8740349054725_134531304c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740349054725_134531304c_0_1, from-node: $N_8740349054725_134531304c_0) isa node-link; 

match
$L_8740349054725_134531304c_0_1 isa list, has hash "L_8740349054725_134531304c_0_1"; 

insert
$N_8740349054725_134531304c_0_1_0 isa variable-ssa, has hash "N_8740349054725_134531304c_0_1_0", has var "eax_5", has version 7, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349054725_134531304c_0_1_0, from-node: $L_8740349054725_134531304c_0_1) isa node-link; 

match
$N_8740349054725_134531304c isa instruction, has hash "N_8740349054725_134531304c"; 

insert
$N_8740349054725_134531304c_1 isa MLIL_CONST_PTR, has hash "N_8740349054725_134531304c_1", has edge-label "dest";
(to-node: $N_8740349054725_134531304c_1, from-node: $N_8740349054725_134531304c) isa node-link; 

match
$N_8740349054725_134531304c_1 isa operation, has hash "N_8740349054725_134531304c_1"; 

insert
$N_8740349054725_134531304c_1_0 isa constant, has hash "N_8740349054725_134531304c_1_0", has constant-value "134529616", has edge-label "constant";
(to-node: $N_8740349054725_134531304c_1_0, from-node: $N_8740349054725_134531304c_1) isa node-link; 

match
$N_8740349054725_134531304c isa instruction, has hash "N_8740349054725_134531304c"; 

insert
$L_8740349054725_134531304c_2 isa list, has hash "L_8740349054725_134531304c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740349054725_134531304c_2, from-node: $N_8740349054725_134531304c) isa node-link; 

match
$L_8740349054725_134531304c_2 isa list, has hash "L_8740349054725_134531304c_2"; 

insert
$N_8740349054725_134531304c_2_0 isa MLIL_VAR_SSA, has hash "N_8740349054725_134531304c_2_0", has edge-label "0";
(to-node: $N_8740349054725_134531304c_2_0, from-node: $L_8740349054725_134531304c_2) isa node-link; 

match
$N_8740349054725_134531304c_2_0 isa operation, has hash "N_8740349054725_134531304c_2_0"; 

insert
$N_8740349054725_134531304c_2_0_0 isa variable-ssa, has hash "N_8740349054725_134531304c_2_0_0", has var "var_1ac_3", has version 5, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349054725_134531304c_2_0_0, from-node: $N_8740349054725_134531304c_2_0) isa node-link; 

match
$N_8740349054725_134531304c isa instruction, has hash "N_8740349054725_134531304c"; 

insert
$N_8740349054725_134531304c_3 isa constant, has hash "N_8740349054725_134531304c_3", has constant-value "9", has edge-label "src_memory";
(to-node: $N_8740349054725_134531304c_3, from-node: $N_8740349054725_134531304c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 59, has bb-end 66; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 59, has bb-end 66; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348621129_134531311c isa instruction, has hash "N_8740348621129_134531311c", has il-index 66, has asm-address "0x804c8ef", has operation-type "MLIL_IF", has ins-text "if (eax_5#7 == 0) then 76 @ 0x804c9ba else 78 @ 0x804c8f5";
(contains-instruction: $N_8740348621129_134531311c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348621129_134531311c isa instruction, has hash "N_8740348621129_134531311c"; 

insert
$N_8740348621129_134531311c_0 isa MLIL_CMP_E, has hash "N_8740348621129_134531311c_0", has edge-label "condition";
(to-node: $N_8740348621129_134531311c_0, from-node: $N_8740348621129_134531311c) isa node-link; 

match
$N_8740348621129_134531311c_0 isa operation, has hash "N_8740348621129_134531311c_0"; 

insert
$N_8740348621129_134531311c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348621129_134531311c_0_0", has edge-label "left";
(to-node: $N_8740348621129_134531311c_0_0, from-node: $N_8740348621129_134531311c_0) isa node-link; 

match
$N_8740348621129_134531311c_0_0 isa operation, has hash "N_8740348621129_134531311c_0_0"; 

insert
$N_8740348621129_134531311c_0_0_0 isa variable-ssa, has hash "N_8740348621129_134531311c_0_0_0", has var "eax_5", has version 7, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348621129_134531311c_0_0_0, from-node: $N_8740348621129_134531311c_0_0) isa node-link; 

match
$N_8740348621129_134531311c_0 isa operation, has hash "N_8740348621129_134531311c_0"; 

insert
$N_8740348621129_134531311c_0_1 isa MLIL_CONST, has hash "N_8740348621129_134531311c_0_1", has edge-label "right";
(to-node: $N_8740348621129_134531311c_0_1, from-node: $N_8740348621129_134531311c_0) isa node-link; 

match
$N_8740348621129_134531311c_0_1 isa operation, has hash "N_8740348621129_134531311c_0_1"; 

insert
$N_8740348621129_134531311c_0_1_0 isa constant, has hash "N_8740348621129_134531311c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348621129_134531311c_0_1_0, from-node: $N_8740348621129_134531311c_0_1) isa node-link; 

match
$N_8740348621129_134531311c isa instruction, has hash "N_8740348621129_134531311c"; 

insert
$N_8740348621129_134531311c_1 isa constant, has hash "N_8740348621129_134531311c_1", has constant-value "76", has edge-label "true";
(to-node: $N_8740348621129_134531311c_1, from-node: $N_8740348621129_134531311c) isa node-link; 

match
$N_8740348621129_134531311c isa instruction, has hash "N_8740348621129_134531311c"; 

insert
$N_8740348621129_134531311c_2 isa constant, has hash "N_8740348621129_134531311c_2", has constant-value "78", has edge-label "false";
(to-node: $N_8740348621129_134531311c_2, from-node: $N_8740348621129_134531311c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 67, has bb-end 67; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 68, has bb-end 69; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 68, has bb-end 69; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 68, has bb-end 69; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348398509_134532263c isa instruction, has hash "N_8740348398509_134532263c", has il-index 68, has asm-address "0x804cca7", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_50#70 = var_198 @ mem#57";
(contains-instruction: $N_8740348398509_134532263c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348398509_134532263c isa instruction, has hash "N_8740348398509_134532263c"; 

insert
$N_8740348398509_134532263c_0 isa variable-ssa, has hash "N_8740348398509_134532263c_0", has var "eax_50", has version 70, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348398509_134532263c_0, from-node: $N_8740348398509_134532263c) isa node-link; 

match
$N_8740348398509_134532263c isa instruction, has hash "N_8740348398509_134532263c"; 

insert
$N_8740348398509_134532263c_1 isa MLIL_VAR_ALIASED, has hash "N_8740348398509_134532263c_1", has edge-label "src";
(to-node: $N_8740348398509_134532263c_1, from-node: $N_8740348398509_134532263c) isa node-link; 

match
$N_8740348398509_134532263c_1 isa operation, has hash "N_8740348398509_134532263c_1"; 

insert
$N_8740348398509_134532263c_1_0 isa variable-ssa, has hash "N_8740348398509_134532263c_1_0", has var "var_198", has version 57, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348398509_134532263c_1_0, from-node: $N_8740348398509_134532263c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 68, has bb-end 69; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 68, has bb-end 69; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349671433_134532269c isa instruction, has hash "N_8740349671433_134532269c", has il-index 69, has asm-address "0x804ccad", has operation-type "MLIL_IF", has ins-text "if (eax_50#70 == 0) then 95 @ 0x0 else 96 @ 0x804ccaf";
(contains-instruction: $N_8740349671433_134532269c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349671433_134532269c isa instruction, has hash "N_8740349671433_134532269c"; 

insert
$N_8740349671433_134532269c_0 isa MLIL_CMP_E, has hash "N_8740349671433_134532269c_0", has edge-label "condition";
(to-node: $N_8740349671433_134532269c_0, from-node: $N_8740349671433_134532269c) isa node-link; 

match
$N_8740349671433_134532269c_0 isa operation, has hash "N_8740349671433_134532269c_0"; 

insert
$N_8740349671433_134532269c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349671433_134532269c_0_0", has edge-label "left";
(to-node: $N_8740349671433_134532269c_0_0, from-node: $N_8740349671433_134532269c_0) isa node-link; 

match
$N_8740349671433_134532269c_0_0 isa operation, has hash "N_8740349671433_134532269c_0_0"; 

insert
$N_8740349671433_134532269c_0_0_0 isa variable-ssa, has hash "N_8740349671433_134532269c_0_0_0", has var "eax_50", has version 70, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349671433_134532269c_0_0_0, from-node: $N_8740349671433_134532269c_0_0) isa node-link; 

match
$N_8740349671433_134532269c_0 isa operation, has hash "N_8740349671433_134532269c_0"; 

insert
$N_8740349671433_134532269c_0_1 isa MLIL_CONST, has hash "N_8740349671433_134532269c_0_1", has edge-label "right";
(to-node: $N_8740349671433_134532269c_0_1, from-node: $N_8740349671433_134532269c_0) isa node-link; 

match
$N_8740349671433_134532269c_0_1 isa operation, has hash "N_8740349671433_134532269c_0_1"; 

insert
$N_8740349671433_134532269c_0_1_0 isa constant, has hash "N_8740349671433_134532269c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349671433_134532269c_0_1_0, from-node: $N_8740349671433_134532269c_0_1) isa node-link; 

match
$N_8740349671433_134532269c isa instruction, has hash "N_8740349671433_134532269c"; 

insert
$N_8740349671433_134532269c_1 isa constant, has hash "N_8740349671433_134532269c_1", has constant-value "95", has edge-label "true";
(to-node: $N_8740349671433_134532269c_1, from-node: $N_8740349671433_134532269c) isa node-link; 

match
$N_8740349671433_134532269c isa instruction, has hash "N_8740349671433_134532269c"; 

insert
$N_8740349671433_134532269c_2 isa constant, has hash "N_8740349671433_134532269c_2", has constant-value "96", has edge-label "false";
(to-node: $N_8740349671433_134532269c_2, from-node: $N_8740349671433_134532269c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 70, has bb-end 70; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 71, has bb-end 75; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 71, has bb-end 75; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 71, has bb-end 75; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348116157_134531366c isa instruction, has hash "N_8740348116157_134531366c", has il-index 71, has asm-address "0x804c926", has operation-type "MLIL_CALL_SSA", has ins-text "mem#14 = 0x804afd0(eax_9#12, 0x804efbe) @ mem#13";
(contains-instruction: $N_8740348116157_134531366c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348116157_134531366c isa instruction, has hash "N_8740348116157_134531366c"; 

insert
$N_8740348116157_134531366c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348116157_134531366c_0", has edge-label "output";
(to-node: $N_8740348116157_134531366c_0, from-node: $N_8740348116157_134531366c) isa node-link; 

match
$N_8740348116157_134531366c_0 isa operation, has hash "N_8740348116157_134531366c_0"; 

insert
$N_8740348116157_134531366c_0_0 isa constant, has hash "N_8740348116157_134531366c_0_0", has constant-value "14", has edge-label "dest_memory";
(to-node: $N_8740348116157_134531366c_0_0, from-node: $N_8740348116157_134531366c_0) isa node-link; 

match
$N_8740348116157_134531366c_0 isa operation, has hash "N_8740348116157_134531366c_0"; 

insert
$L_8740348116157_134531366c_0_1 isa list, has hash "L_8740348116157_134531366c_0_1", has list-size 0, has edge-label "dest";
(to-node: $L_8740348116157_134531366c_0_1, from-node: $N_8740348116157_134531366c_0) isa node-link; 

match
$N_8740348116157_134531366c isa instruction, has hash "N_8740348116157_134531366c"; 

insert
$N_8740348116157_134531366c_1 isa MLIL_CONST_PTR, has hash "N_8740348116157_134531366c_1", has edge-label "dest";
(to-node: $N_8740348116157_134531366c_1, from-node: $N_8740348116157_134531366c) isa node-link; 

match
$N_8740348116157_134531366c_1 isa operation, has hash "N_8740348116157_134531366c_1"; 

insert
$N_8740348116157_134531366c_1_0 isa constant, has hash "N_8740348116157_134531366c_1_0", has constant-value "134524880", has edge-label "constant";
(to-node: $N_8740348116157_134531366c_1_0, from-node: $N_8740348116157_134531366c_1) isa node-link; 

match
$N_8740348116157_134531366c isa instruction, has hash "N_8740348116157_134531366c"; 

insert
$L_8740348116157_134531366c_2 isa list, has hash "L_8740348116157_134531366c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740348116157_134531366c_2, from-node: $N_8740348116157_134531366c) isa node-link; 

match
$L_8740348116157_134531366c_2 isa list, has hash "L_8740348116157_134531366c_2"; 

insert
$N_8740348116157_134531366c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348116157_134531366c_2_0", has edge-label "0";
(to-node: $N_8740348116157_134531366c_2_0, from-node: $L_8740348116157_134531366c_2) isa node-link; 

match
$N_8740348116157_134531366c_2_0 isa operation, has hash "N_8740348116157_134531366c_2_0"; 

insert
$N_8740348116157_134531366c_2_0_0 isa variable-ssa, has hash "N_8740348116157_134531366c_2_0_0", has var "eax_9", has version 12, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348116157_134531366c_2_0_0, from-node: $N_8740348116157_134531366c_2_0) isa node-link; 

match
$L_8740348116157_134531366c_2 isa list, has hash "L_8740348116157_134531366c_2"; 

insert
$N_8740348116157_134531366c_2_1 isa MLIL_CONST, has hash "N_8740348116157_134531366c_2_1", has edge-label "1";
(to-node: $N_8740348116157_134531366c_2_1, from-node: $L_8740348116157_134531366c_2) isa node-link; 

match
$N_8740348116157_134531366c_2_1 isa operation, has hash "N_8740348116157_134531366c_2_1"; 

insert
$N_8740348116157_134531366c_2_1_0 isa constant, has hash "N_8740348116157_134531366c_2_1_0", has constant-value "134541246", has edge-label "constant";
(to-node: $N_8740348116157_134531366c_2_1_0, from-node: $N_8740348116157_134531366c_2_1) isa node-link; 

match
$N_8740348116157_134531366c isa instruction, has hash "N_8740348116157_134531366c"; 

insert
$N_8740348116157_134531366c_3 isa constant, has hash "N_8740348116157_134531366c_3", has constant-value "13", has edge-label "src_memory";
(to-node: $N_8740348116157_134531366c_3, from-node: $N_8740348116157_134531366c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 71, has bb-end 75; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 71, has bb-end 75; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348568509_134531374c isa instruction, has hash "N_8740348568509_134531374c", has il-index 72, has asm-address "0x804c92e", has operation-type "MLIL_CALL_SSA", has ins-text "edx_2#2, mem#15 = 0x8049ad0(0x8050554) @ mem#14";
(contains-instruction: $N_8740348568509_134531374c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348568509_134531374c isa instruction, has hash "N_8740348568509_134531374c"; 

insert
$N_8740348568509_134531374c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348568509_134531374c_0", has edge-label "output";
(to-node: $N_8740348568509_134531374c_0, from-node: $N_8740348568509_134531374c) isa node-link; 

match
$N_8740348568509_134531374c_0 isa operation, has hash "N_8740348568509_134531374c_0"; 

insert
$N_8740348568509_134531374c_0_0 isa constant, has hash "N_8740348568509_134531374c_0_0", has constant-value "15", has edge-label "dest_memory";
(to-node: $N_8740348568509_134531374c_0_0, from-node: $N_8740348568509_134531374c_0) isa node-link; 

match
$N_8740348568509_134531374c_0 isa operation, has hash "N_8740348568509_134531374c_0"; 

insert
$L_8740348568509_134531374c_0_1 isa list, has hash "L_8740348568509_134531374c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348568509_134531374c_0_1, from-node: $N_8740348568509_134531374c_0) isa node-link; 

match
$L_8740348568509_134531374c_0_1 isa list, has hash "L_8740348568509_134531374c_0_1"; 

insert
$N_8740348568509_134531374c_0_1_0 isa variable-ssa, has hash "N_8740348568509_134531374c_0_1_0", has var "edx_2", has version 2, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348568509_134531374c_0_1_0, from-node: $L_8740348568509_134531374c_0_1) isa node-link; 

match
$N_8740348568509_134531374c isa instruction, has hash "N_8740348568509_134531374c"; 

insert
$N_8740348568509_134531374c_1 isa MLIL_CONST_PTR, has hash "N_8740348568509_134531374c_1", has edge-label "dest";
(to-node: $N_8740348568509_134531374c_1, from-node: $N_8740348568509_134531374c) isa node-link; 

match
$N_8740348568509_134531374c_1 isa operation, has hash "N_8740348568509_134531374c_1"; 

insert
$N_8740348568509_134531374c_1_0 isa constant, has hash "N_8740348568509_134531374c_1_0", has constant-value "134519504", has edge-label "constant";
(to-node: $N_8740348568509_134531374c_1_0, from-node: $N_8740348568509_134531374c_1) isa node-link; 

match
$N_8740348568509_134531374c isa instruction, has hash "N_8740348568509_134531374c"; 

insert
$L_8740348568509_134531374c_2 isa list, has hash "L_8740348568509_134531374c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740348568509_134531374c_2, from-node: $N_8740348568509_134531374c) isa node-link; 

match
$L_8740348568509_134531374c_2 isa list, has hash "L_8740348568509_134531374c_2"; 

insert
$N_8740348568509_134531374c_2_0 isa MLIL_CONST_PTR, has hash "N_8740348568509_134531374c_2_0", has edge-label "0";
(to-node: $N_8740348568509_134531374c_2_0, from-node: $L_8740348568509_134531374c_2) isa node-link; 

match
$N_8740348568509_134531374c_2_0 isa operation, has hash "N_8740348568509_134531374c_2_0"; 

insert
$N_8740348568509_134531374c_2_0_0 isa constant, has hash "N_8740348568509_134531374c_2_0_0", has constant-value "134546772", has edge-label "constant";
(to-node: $N_8740348568509_134531374c_2_0_0, from-node: $N_8740348568509_134531374c_2_0) isa node-link; 

match
$N_8740348568509_134531374c isa instruction, has hash "N_8740348568509_134531374c"; 

insert
$N_8740348568509_134531374c_3 isa constant, has hash "N_8740348568509_134531374c_3", has constant-value "14", has edge-label "src_memory";
(to-node: $N_8740348568509_134531374c_3, from-node: $N_8740348568509_134531374c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 71, has bb-end 75; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 71, has bb-end 75; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349418245_134531388c isa instruction, has hash "N_8740349418245_134531388c", has il-index 73, has asm-address "0x804c93c", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_6#9 = &var_190";
(contains-instruction: $N_8740349418245_134531388c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349418245_134531388c isa instruction, has hash "N_8740349418245_134531388c"; 

insert
$N_8740349418245_134531388c_0 isa variable-ssa, has hash "N_8740349418245_134531388c_0", has var "var_1ac_6", has version 9, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349418245_134531388c_0, from-node: $N_8740349418245_134531388c) isa node-link; 

match
$N_8740349418245_134531388c isa instruction, has hash "N_8740349418245_134531388c"; 

insert
$N_8740349418245_134531388c_1 isa MLIL_ADDRESS_OF, has hash "N_8740349418245_134531388c_1", has edge-label "src";
(to-node: $N_8740349418245_134531388c_1, from-node: $N_8740349418245_134531388c) isa node-link; 

match
$N_8740349418245_134531388c_1 isa operation, has hash "N_8740349418245_134531388c_1"; 

insert
$N_8740349418245_134531388c_1_0 isa variable, has hash "N_8740349418245_134531388c_1_0", has var "var_190", has edge-label "src", has var-type "void", has var-size 256, has var-func "cgc_handle_register_user";
(to-node: $N_8740349418245_134531388c_1_0, from-node: $N_8740349418245_134531388c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 71, has bb-end 75; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 71, has bb-end 75; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349562117_134531407c isa instruction, has hash "N_8740349562117_134531407c", has il-index 74, has asm-address "0x804c94f", has operation-type "MLIL_CALL_SSA", has ins-text "eax_10#13, mem#16 = 0x804bc80(0x805013c, edx_2#2, var_1ac_6#9, 0x100, 0xa, 0x805013c) @ mem#15";
(contains-instruction: $N_8740349562117_134531407c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349562117_134531407c isa instruction, has hash "N_8740349562117_134531407c"; 

insert
$N_8740349562117_134531407c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740349562117_134531407c_0", has edge-label "output";
(to-node: $N_8740349562117_134531407c_0, from-node: $N_8740349562117_134531407c) isa node-link; 

match
$N_8740349562117_134531407c_0 isa operation, has hash "N_8740349562117_134531407c_0"; 

insert
$N_8740349562117_134531407c_0_0 isa constant, has hash "N_8740349562117_134531407c_0_0", has constant-value "16", has edge-label "dest_memory";
(to-node: $N_8740349562117_134531407c_0_0, from-node: $N_8740349562117_134531407c_0) isa node-link; 

match
$N_8740349562117_134531407c_0 isa operation, has hash "N_8740349562117_134531407c_0"; 

insert
$L_8740349562117_134531407c_0_1 isa list, has hash "L_8740349562117_134531407c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740349562117_134531407c_0_1, from-node: $N_8740349562117_134531407c_0) isa node-link; 

match
$L_8740349562117_134531407c_0_1 isa list, has hash "L_8740349562117_134531407c_0_1"; 

insert
$N_8740349562117_134531407c_0_1_0 isa variable-ssa, has hash "N_8740349562117_134531407c_0_1_0", has var "eax_10", has version 13, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349562117_134531407c_0_1_0, from-node: $L_8740349562117_134531407c_0_1) isa node-link; 

match
$N_8740349562117_134531407c isa instruction, has hash "N_8740349562117_134531407c"; 

insert
$N_8740349562117_134531407c_1 isa MLIL_CONST_PTR, has hash "N_8740349562117_134531407c_1", has edge-label "dest";
(to-node: $N_8740349562117_134531407c_1, from-node: $N_8740349562117_134531407c) isa node-link; 

match
$N_8740349562117_134531407c_1 isa operation, has hash "N_8740349562117_134531407c_1"; 

insert
$N_8740349562117_134531407c_1_0 isa constant, has hash "N_8740349562117_134531407c_1_0", has constant-value "134528128", has edge-label "constant";
(to-node: $N_8740349562117_134531407c_1_0, from-node: $N_8740349562117_134531407c_1) isa node-link; 

match
$N_8740349562117_134531407c isa instruction, has hash "N_8740349562117_134531407c"; 

insert
$L_8740349562117_134531407c_2 isa list, has hash "L_8740349562117_134531407c_2", has list-size 6, has edge-label "params";
(to-node: $L_8740349562117_134531407c_2, from-node: $N_8740349562117_134531407c) isa node-link; 

match
$L_8740349562117_134531407c_2 isa list, has hash "L_8740349562117_134531407c_2"; 

insert
$N_8740349562117_134531407c_2_0 isa MLIL_CONST, has hash "N_8740349562117_134531407c_2_0", has edge-label "0";
(to-node: $N_8740349562117_134531407c_2_0, from-node: $L_8740349562117_134531407c_2) isa node-link; 

match
$N_8740349562117_134531407c_2_0 isa operation, has hash "N_8740349562117_134531407c_2_0"; 

insert
$N_8740349562117_134531407c_2_0_0 isa constant, has hash "N_8740349562117_134531407c_2_0_0", has constant-value "134545724", has edge-label "constant";
(to-node: $N_8740349562117_134531407c_2_0_0, from-node: $N_8740349562117_134531407c_2_0) isa node-link; 

match
$L_8740349562117_134531407c_2 isa list, has hash "L_8740349562117_134531407c_2"; 

insert
$N_8740349562117_134531407c_2_1 isa MLIL_VAR_SSA, has hash "N_8740349562117_134531407c_2_1", has edge-label "1";
(to-node: $N_8740349562117_134531407c_2_1, from-node: $L_8740349562117_134531407c_2) isa node-link; 

match
$N_8740349562117_134531407c_2_1 isa operation, has hash "N_8740349562117_134531407c_2_1"; 

insert
$N_8740349562117_134531407c_2_1_0 isa variable-ssa, has hash "N_8740349562117_134531407c_2_1_0", has var "edx_2", has version 2, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349562117_134531407c_2_1_0, from-node: $N_8740349562117_134531407c_2_1) isa node-link; 

match
$L_8740349562117_134531407c_2 isa list, has hash "L_8740349562117_134531407c_2"; 

insert
$N_8740349562117_134531407c_2_2 isa MLIL_VAR_SSA, has hash "N_8740349562117_134531407c_2_2", has edge-label "2";
(to-node: $N_8740349562117_134531407c_2_2, from-node: $L_8740349562117_134531407c_2) isa node-link; 

match
$N_8740349562117_134531407c_2_2 isa operation, has hash "N_8740349562117_134531407c_2_2"; 

insert
$N_8740349562117_134531407c_2_2_0 isa variable-ssa, has hash "N_8740349562117_134531407c_2_2_0", has var "var_1ac_6", has version 9, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349562117_134531407c_2_2_0, from-node: $N_8740349562117_134531407c_2_2) isa node-link; 

match
$L_8740349562117_134531407c_2 isa list, has hash "L_8740349562117_134531407c_2"; 

insert
$N_8740349562117_134531407c_2_3 isa MLIL_CONST, has hash "N_8740349562117_134531407c_2_3", has edge-label "3";
(to-node: $N_8740349562117_134531407c_2_3, from-node: $L_8740349562117_134531407c_2) isa node-link; 

match
$N_8740349562117_134531407c_2_3 isa operation, has hash "N_8740349562117_134531407c_2_3"; 

insert
$N_8740349562117_134531407c_2_3_0 isa constant, has hash "N_8740349562117_134531407c_2_3_0", has constant-value "256", has edge-label "constant";
(to-node: $N_8740349562117_134531407c_2_3_0, from-node: $N_8740349562117_134531407c_2_3) isa node-link; 

match
$L_8740349562117_134531407c_2 isa list, has hash "L_8740349562117_134531407c_2"; 

insert
$N_8740349562117_134531407c_2_4 isa MLIL_CONST, has hash "N_8740349562117_134531407c_2_4", has edge-label "4";
(to-node: $N_8740349562117_134531407c_2_4, from-node: $L_8740349562117_134531407c_2) isa node-link; 

match
$N_8740349562117_134531407c_2_4 isa operation, has hash "N_8740349562117_134531407c_2_4"; 

insert
$N_8740349562117_134531407c_2_4_0 isa constant, has hash "N_8740349562117_134531407c_2_4_0", has constant-value "10", has edge-label "constant";
(to-node: $N_8740349562117_134531407c_2_4_0, from-node: $N_8740349562117_134531407c_2_4) isa node-link; 

match
$L_8740349562117_134531407c_2 isa list, has hash "L_8740349562117_134531407c_2"; 

insert
$N_8740349562117_134531407c_2_5 isa MLIL_CONST_PTR, has hash "N_8740349562117_134531407c_2_5", has edge-label "5";
(to-node: $N_8740349562117_134531407c_2_5, from-node: $L_8740349562117_134531407c_2) isa node-link; 

match
$N_8740349562117_134531407c_2_5 isa operation, has hash "N_8740349562117_134531407c_2_5"; 

insert
$N_8740349562117_134531407c_2_5_0 isa constant, has hash "N_8740349562117_134531407c_2_5_0", has constant-value "134545724", has edge-label "constant";
(to-node: $N_8740349562117_134531407c_2_5_0, from-node: $N_8740349562117_134531407c_2_5) isa node-link; 

match
$N_8740349562117_134531407c isa instruction, has hash "N_8740349562117_134531407c"; 

insert
$N_8740349562117_134531407c_3 isa constant, has hash "N_8740349562117_134531407c_3", has constant-value "15", has edge-label "src_memory";
(to-node: $N_8740349562117_134531407c_3, from-node: $N_8740349562117_134531407c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 71, has bb-end 75; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 71, has bb-end 75; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349647153_134531414c isa instruction, has hash "N_8740349647153_134531414c", has il-index 75, has asm-address "0x804c956", has operation-type "MLIL_IF", has ins-text "if (eax_10#13 s<= 0) then 99 @ 0x804c9c4 else 101 @ 0x804c958";
(contains-instruction: $N_8740349647153_134531414c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349647153_134531414c isa instruction, has hash "N_8740349647153_134531414c"; 

insert
$N_8740349647153_134531414c_0 isa MLIL_CMP_SLE, has hash "N_8740349647153_134531414c_0", has edge-label "condition";
(to-node: $N_8740349647153_134531414c_0, from-node: $N_8740349647153_134531414c) isa node-link; 

match
$N_8740349647153_134531414c_0 isa operation, has hash "N_8740349647153_134531414c_0"; 

insert
$N_8740349647153_134531414c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349647153_134531414c_0_0", has edge-label "left";
(to-node: $N_8740349647153_134531414c_0_0, from-node: $N_8740349647153_134531414c_0) isa node-link; 

match
$N_8740349647153_134531414c_0_0 isa operation, has hash "N_8740349647153_134531414c_0_0"; 

insert
$N_8740349647153_134531414c_0_0_0 isa variable-ssa, has hash "N_8740349647153_134531414c_0_0_0", has var "eax_10", has version 13, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349647153_134531414c_0_0_0, from-node: $N_8740349647153_134531414c_0_0) isa node-link; 

match
$N_8740349647153_134531414c_0 isa operation, has hash "N_8740349647153_134531414c_0"; 

insert
$N_8740349647153_134531414c_0_1 isa MLIL_CONST, has hash "N_8740349647153_134531414c_0_1", has edge-label "right";
(to-node: $N_8740349647153_134531414c_0_1, from-node: $N_8740349647153_134531414c_0) isa node-link; 

match
$N_8740349647153_134531414c_0_1 isa operation, has hash "N_8740349647153_134531414c_0_1"; 

insert
$N_8740349647153_134531414c_0_1_0 isa constant, has hash "N_8740349647153_134531414c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349647153_134531414c_0_1_0, from-node: $N_8740349647153_134531414c_0_1) isa node-link; 

match
$N_8740349647153_134531414c isa instruction, has hash "N_8740349647153_134531414c"; 

insert
$N_8740349647153_134531414c_1 isa constant, has hash "N_8740349647153_134531414c_1", has constant-value "99", has edge-label "true";
(to-node: $N_8740349647153_134531414c_1, from-node: $N_8740349647153_134531414c) isa node-link; 

match
$N_8740349647153_134531414c isa instruction, has hash "N_8740349647153_134531414c"; 

insert
$N_8740349647153_134531414c_2 isa constant, has hash "N_8740349647153_134531414c_2", has constant-value "101", has edge-label "false";
(to-node: $N_8740349647153_134531414c_2, from-node: $N_8740349647153_134531414c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 76, has bb-end 77; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 76, has bb-end 77; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 76, has bb-end 77; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348696781_134531514c isa instruction, has hash "N_8740348696781_134531514c", has il-index 76, has asm-address "0x804c9ba", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#5 = 0xf";
(contains-instruction: $N_8740348696781_134531514c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348696781_134531514c isa instruction, has hash "N_8740348696781_134531514c"; 

insert
$N_8740348696781_134531514c_0 isa variable-ssa, has hash "N_8740348696781_134531514c_0", has var "esi", has version 5, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348696781_134531514c_0, from-node: $N_8740348696781_134531514c) isa node-link; 

match
$N_8740348696781_134531514c isa instruction, has hash "N_8740348696781_134531514c"; 

insert
$N_8740348696781_134531514c_1 isa MLIL_CONST_PTR, has hash "N_8740348696781_134531514c_1", has edge-label "src";
(to-node: $N_8740348696781_134531514c_1, from-node: $N_8740348696781_134531514c) isa node-link; 

match
$N_8740348696781_134531514c_1 isa operation, has hash "N_8740348696781_134531514c_1"; 

insert
$N_8740348696781_134531514c_1_0 isa constant, has hash "N_8740348696781_134531514c_1_0", has constant-value "15", has edge-label "constant";
(to-node: $N_8740348696781_134531514c_1_0, from-node: $N_8740348696781_134531514c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 76, has bb-end 77; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 76, has bb-end 77; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349738213_134531519c isa instruction, has hash "N_8740349738213_134531519c", has il-index 77, has asm-address "0x804c9bf", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740349738213_134531519c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349738213_134531519c isa instruction, has hash "N_8740349738213_134531519c"; 

insert
$N_8740349738213_134531519c_0 isa constant, has hash "N_8740349738213_134531519c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740349738213_134531519c_0, from-node: $N_8740349738213_134531519c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 78, has bb-end 82; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 78, has bb-end 82; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 78, has bb-end 82; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348779209_134531317c isa instruction, has hash "N_8740348779209_134531317c", has il-index 78, has asm-address "0x804c8f5", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi_1#6 = esi_1#4 + 1";
(contains-instruction: $N_8740348779209_134531317c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348779209_134531317c isa instruction, has hash "N_8740348779209_134531317c"; 

insert
$N_8740348779209_134531317c_0 isa variable-ssa, has hash "N_8740348779209_134531317c_0", has var "esi_1", has version 6, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348779209_134531317c_0, from-node: $N_8740348779209_134531317c) isa node-link; 

match
$N_8740348779209_134531317c isa instruction, has hash "N_8740348779209_134531317c"; 

insert
$N_8740348779209_134531317c_1 isa MLIL_ADD, has hash "N_8740348779209_134531317c_1", has edge-label "src";
(to-node: $N_8740348779209_134531317c_1, from-node: $N_8740348779209_134531317c) isa node-link; 

match
$N_8740348779209_134531317c_1 isa operation, has hash "N_8740348779209_134531317c_1"; 

insert
$N_8740348779209_134531317c_1_0 isa MLIL_VAR_SSA, has hash "N_8740348779209_134531317c_1_0", has edge-label "left";
(to-node: $N_8740348779209_134531317c_1_0, from-node: $N_8740348779209_134531317c_1) isa node-link; 

match
$N_8740348779209_134531317c_1_0 isa operation, has hash "N_8740348779209_134531317c_1_0"; 

insert
$N_8740348779209_134531317c_1_0_0 isa variable-ssa, has hash "N_8740348779209_134531317c_1_0_0", has var "esi_1", has version 4, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348779209_134531317c_1_0_0, from-node: $N_8740348779209_134531317c_1_0) isa node-link; 

match
$N_8740348779209_134531317c_1 isa operation, has hash "N_8740348779209_134531317c_1"; 

insert
$N_8740348779209_134531317c_1_1 isa MLIL_CONST, has hash "N_8740348779209_134531317c_1_1", has edge-label "right";
(to-node: $N_8740348779209_134531317c_1_1, from-node: $N_8740348779209_134531317c_1) isa node-link; 

match
$N_8740348779209_134531317c_1_1 isa operation, has hash "N_8740348779209_134531317c_1_1"; 

insert
$N_8740348779209_134531317c_1_1_0 isa constant, has hash "N_8740348779209_134531317c_1_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8740348779209_134531317c_1_1_0, from-node: $N_8740348779209_134531317c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 78, has bb-end 82; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 78, has bb-end 82; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348728837_134531318c isa instruction, has hash "N_8740348728837_134531318c", has il-index 79, has asm-address "0x804c8f6", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_4#6 = &var_190";
(contains-instruction: $N_8740348728837_134531318c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348728837_134531318c isa instruction, has hash "N_8740348728837_134531318c"; 

insert
$N_8740348728837_134531318c_0 isa variable-ssa, has hash "N_8740348728837_134531318c_0", has var "var_1ac_4", has version 6, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348728837_134531318c_0, from-node: $N_8740348728837_134531318c) isa node-link; 

match
$N_8740348728837_134531318c isa instruction, has hash "N_8740348728837_134531318c"; 

insert
$N_8740348728837_134531318c_1 isa MLIL_ADDRESS_OF, has hash "N_8740348728837_134531318c_1", has edge-label "src";
(to-node: $N_8740348728837_134531318c_1, from-node: $N_8740348728837_134531318c) isa node-link; 

match
$N_8740348728837_134531318c_1 isa operation, has hash "N_8740348728837_134531318c_1"; 

insert
$N_8740348728837_134531318c_1_0 isa variable, has hash "N_8740348728837_134531318c_1_0", has var "var_190", has edge-label "src", has var-type "void", has var-size 256, has var-func "cgc_handle_register_user";
(to-node: $N_8740348728837_134531318c_1_0, from-node: $N_8740348728837_134531318c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 78, has bb-end 82; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 78, has bb-end 82; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348899845_134531321c isa instruction, has hash "N_8740348899845_134531321c", has il-index 80, has asm-address "0x804c8f9", has operation-type "MLIL_CALL_SSA", has ins-text "eax_6#8, mem#11 = 0x804aeb0(var_1ac_4#6) @ mem#10";
(contains-instruction: $N_8740348899845_134531321c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348899845_134531321c isa instruction, has hash "N_8740348899845_134531321c"; 

insert
$N_8740348899845_134531321c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348899845_134531321c_0", has edge-label "output";
(to-node: $N_8740348899845_134531321c_0, from-node: $N_8740348899845_134531321c) isa node-link; 

match
$N_8740348899845_134531321c_0 isa operation, has hash "N_8740348899845_134531321c_0"; 

insert
$N_8740348899845_134531321c_0_0 isa constant, has hash "N_8740348899845_134531321c_0_0", has constant-value "11", has edge-label "dest_memory";
(to-node: $N_8740348899845_134531321c_0_0, from-node: $N_8740348899845_134531321c_0) isa node-link; 

match
$N_8740348899845_134531321c_0 isa operation, has hash "N_8740348899845_134531321c_0"; 

insert
$L_8740348899845_134531321c_0_1 isa list, has hash "L_8740348899845_134531321c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348899845_134531321c_0_1, from-node: $N_8740348899845_134531321c_0) isa node-link; 

match
$L_8740348899845_134531321c_0_1 isa list, has hash "L_8740348899845_134531321c_0_1"; 

insert
$N_8740348899845_134531321c_0_1_0 isa variable-ssa, has hash "N_8740348899845_134531321c_0_1_0", has var "eax_6", has version 8, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348899845_134531321c_0_1_0, from-node: $L_8740348899845_134531321c_0_1) isa node-link; 

match
$N_8740348899845_134531321c isa instruction, has hash "N_8740348899845_134531321c"; 

insert
$N_8740348899845_134531321c_1 isa MLIL_CONST_PTR, has hash "N_8740348899845_134531321c_1", has edge-label "dest";
(to-node: $N_8740348899845_134531321c_1, from-node: $N_8740348899845_134531321c) isa node-link; 

match
$N_8740348899845_134531321c_1 isa operation, has hash "N_8740348899845_134531321c_1"; 

insert
$N_8740348899845_134531321c_1_0 isa constant, has hash "N_8740348899845_134531321c_1_0", has constant-value "134524592", has edge-label "constant";
(to-node: $N_8740348899845_134531321c_1_0, from-node: $N_8740348899845_134531321c_1) isa node-link; 

match
$N_8740348899845_134531321c isa instruction, has hash "N_8740348899845_134531321c"; 

insert
$L_8740348899845_134531321c_2 isa list, has hash "L_8740348899845_134531321c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740348899845_134531321c_2, from-node: $N_8740348899845_134531321c) isa node-link; 

match
$L_8740348899845_134531321c_2 isa list, has hash "L_8740348899845_134531321c_2"; 

insert
$N_8740348899845_134531321c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348899845_134531321c_2_0", has edge-label "0";
(to-node: $N_8740348899845_134531321c_2_0, from-node: $L_8740348899845_134531321c_2) isa node-link; 

match
$N_8740348899845_134531321c_2_0 isa operation, has hash "N_8740348899845_134531321c_2_0"; 

insert
$N_8740348899845_134531321c_2_0_0 isa variable-ssa, has hash "N_8740348899845_134531321c_2_0_0", has var "var_1ac_4", has version 6, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348899845_134531321c_2_0_0, from-node: $N_8740348899845_134531321c_2_0) isa node-link; 

match
$N_8740348899845_134531321c isa instruction, has hash "N_8740348899845_134531321c"; 

insert
$N_8740348899845_134531321c_3 isa constant, has hash "N_8740348899845_134531321c_3", has constant-value "10", has edge-label "src_memory";
(to-node: $N_8740348899845_134531321c_3, from-node: $N_8740348899845_134531321c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 78, has bb-end 82; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 78, has bb-end 82; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349334737_134531326c isa instruction, has hash "N_8740349334737_134531326c", has il-index 81, has asm-address "0x804c8fe", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_7#9 = eax_6#8 - 1";
(contains-instruction: $N_8740349334737_134531326c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349334737_134531326c isa instruction, has hash "N_8740349334737_134531326c"; 

insert
$N_8740349334737_134531326c_0 isa variable-ssa, has hash "N_8740349334737_134531326c_0", has var "eax_7", has version 9, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349334737_134531326c_0, from-node: $N_8740349334737_134531326c) isa node-link; 

match
$N_8740349334737_134531326c isa instruction, has hash "N_8740349334737_134531326c"; 

insert
$N_8740349334737_134531326c_1 isa MLIL_SUB, has hash "N_8740349334737_134531326c_1", has edge-label "src";
(to-node: $N_8740349334737_134531326c_1, from-node: $N_8740349334737_134531326c) isa node-link; 

match
$N_8740349334737_134531326c_1 isa operation, has hash "N_8740349334737_134531326c_1"; 

insert
$N_8740349334737_134531326c_1_0 isa MLIL_VAR_SSA, has hash "N_8740349334737_134531326c_1_0", has edge-label "left";
(to-node: $N_8740349334737_134531326c_1_0, from-node: $N_8740349334737_134531326c_1) isa node-link; 

match
$N_8740349334737_134531326c_1_0 isa operation, has hash "N_8740349334737_134531326c_1_0"; 

insert
$N_8740349334737_134531326c_1_0_0 isa variable-ssa, has hash "N_8740349334737_134531326c_1_0_0", has var "eax_6", has version 8, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349334737_134531326c_1_0_0, from-node: $N_8740349334737_134531326c_1_0) isa node-link; 

match
$N_8740349334737_134531326c_1 isa operation, has hash "N_8740349334737_134531326c_1"; 

insert
$N_8740349334737_134531326c_1_1 isa MLIL_CONST, has hash "N_8740349334737_134531326c_1_1", has edge-label "right";
(to-node: $N_8740349334737_134531326c_1_1, from-node: $N_8740349334737_134531326c_1) isa node-link; 

match
$N_8740349334737_134531326c_1_1 isa operation, has hash "N_8740349334737_134531326c_1_1"; 

insert
$N_8740349334737_134531326c_1_1_0 isa constant, has hash "N_8740349334737_134531326c_1_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8740349334737_134531326c_1_1_0, from-node: $N_8740349334737_134531326c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 78, has bb-end 82; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 78, has bb-end 82; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348108549_134531329c isa instruction, has hash "N_8740348108549_134531329c", has il-index 82, has asm-address "0x804c901", has operation-type "MLIL_IF", has ins-text "if (esi_1#6 u< eax_7#9) then 104 @ 0x0 else 105 @ 0x0";
(contains-instruction: $N_8740348108549_134531329c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348108549_134531329c isa instruction, has hash "N_8740348108549_134531329c"; 

insert
$N_8740348108549_134531329c_0 isa MLIL_CMP_ULT, has hash "N_8740348108549_134531329c_0", has edge-label "condition";
(to-node: $N_8740348108549_134531329c_0, from-node: $N_8740348108549_134531329c) isa node-link; 

match
$N_8740348108549_134531329c_0 isa operation, has hash "N_8740348108549_134531329c_0"; 

insert
$N_8740348108549_134531329c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348108549_134531329c_0_0", has edge-label "left";
(to-node: $N_8740348108549_134531329c_0_0, from-node: $N_8740348108549_134531329c_0) isa node-link; 

match
$N_8740348108549_134531329c_0_0 isa operation, has hash "N_8740348108549_134531329c_0_0"; 

insert
$N_8740348108549_134531329c_0_0_0 isa variable-ssa, has hash "N_8740348108549_134531329c_0_0_0", has var "esi_1", has version 6, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348108549_134531329c_0_0_0, from-node: $N_8740348108549_134531329c_0_0) isa node-link; 

match
$N_8740348108549_134531329c_0 isa operation, has hash "N_8740348108549_134531329c_0"; 

insert
$N_8740348108549_134531329c_0_1 isa MLIL_VAR_SSA, has hash "N_8740348108549_134531329c_0_1", has edge-label "right";
(to-node: $N_8740348108549_134531329c_0_1, from-node: $N_8740348108549_134531329c_0) isa node-link; 

match
$N_8740348108549_134531329c_0_1 isa operation, has hash "N_8740348108549_134531329c_0_1"; 

insert
$N_8740348108549_134531329c_0_1_0 isa variable-ssa, has hash "N_8740348108549_134531329c_0_1_0", has var "eax_7", has version 9, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348108549_134531329c_0_1_0, from-node: $N_8740348108549_134531329c_0_1) isa node-link; 

match
$N_8740348108549_134531329c isa instruction, has hash "N_8740348108549_134531329c"; 

insert
$N_8740348108549_134531329c_1 isa constant, has hash "N_8740348108549_134531329c_1", has constant-value "104", has edge-label "true";
(to-node: $N_8740348108549_134531329c_1, from-node: $N_8740348108549_134531329c) isa node-link; 

match
$N_8740348108549_134531329c isa instruction, has hash "N_8740348108549_134531329c"; 

insert
$N_8740348108549_134531329c_2 isa constant, has hash "N_8740348108549_134531329c_2", has constant-value "105", has edge-label "false";
(to-node: $N_8740348108549_134531329c_2, from-node: $N_8740348108549_134531329c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 83, has bb-end 94; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 83, has bb-end 94; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 83, has bb-end 94; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348304333_134532289c isa instruction, has hash "N_8740348304333_134532289c", has il-index 88, has asm-address "0x804ccc1", has operation-type "MLIL_VAR_PHI", has ins-text "ebx_7#11 = ϕ(ebx_7#9, ebx_7#10)";
(contains-instruction: $N_8740348304333_134532289c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348304333_134532289c isa instruction, has hash "N_8740348304333_134532289c"; 

insert
$N_8740348304333_134532289c_0 isa variable-ssa, has hash "N_8740348304333_134532289c_0", has var "ebx_7", has version 11, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348304333_134532289c_0, from-node: $N_8740348304333_134532289c) isa node-link; 

match
$N_8740348304333_134532289c isa instruction, has hash "N_8740348304333_134532289c"; 

insert
$L_8740348304333_134532289c_1 isa list, has hash "L_8740348304333_134532289c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348304333_134532289c_1, from-node: $N_8740348304333_134532289c) isa node-link; 

match
$L_8740348304333_134532289c_1 isa list, has hash "L_8740348304333_134532289c_1"; 

insert
$N_8740348304333_134532289c_1_0 isa variable-ssa, has hash "N_8740348304333_134532289c_1_0", has var "ebx_7", has version 9, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348304333_134532289c_1_0, from-node: $L_8740348304333_134532289c_1) isa node-link; 

match
$L_8740348304333_134532289c_1 isa list, has hash "L_8740348304333_134532289c_1"; 

insert
$N_8740348304333_134532289c_1_1 isa variable-ssa, has hash "N_8740348304333_134532289c_1_1", has var "ebx_7", has version 10, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348304333_134532289c_1_1, from-node: $L_8740348304333_134532289c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 83, has bb-end 94; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348308741_134532289c isa instruction, has hash "N_8740348308741_134532289c", has il-index 87, has asm-address "0x804ccc1", has operation-type "MLIL_VAR_PHI", has ins-text "edx_4#15 = ϕ(edx_4#13, edx_4#14)";
(contains-instruction: $N_8740348308741_134532289c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348308741_134532289c isa instruction, has hash "N_8740348308741_134532289c"; 

insert
$N_8740348308741_134532289c_0 isa variable-ssa, has hash "N_8740348308741_134532289c_0", has var "edx_4", has version 15, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348308741_134532289c_0, from-node: $N_8740348308741_134532289c) isa node-link; 

match
$N_8740348308741_134532289c isa instruction, has hash "N_8740348308741_134532289c"; 

insert
$L_8740348308741_134532289c_1 isa list, has hash "L_8740348308741_134532289c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348308741_134532289c_1, from-node: $N_8740348308741_134532289c) isa node-link; 

match
$L_8740348308741_134532289c_1 isa list, has hash "L_8740348308741_134532289c_1"; 

insert
$N_8740348308741_134532289c_1_0 isa variable-ssa, has hash "N_8740348308741_134532289c_1_0", has var "edx_4", has version 13, has edge-label "0", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348308741_134532289c_1_0, from-node: $L_8740348308741_134532289c_1) isa node-link; 

match
$L_8740348308741_134532289c_1 isa list, has hash "L_8740348308741_134532289c_1"; 

insert
$N_8740348308741_134532289c_1_1 isa variable-ssa, has hash "N_8740348308741_134532289c_1_1", has var "edx_4", has version 14, has edge-label "1", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348308741_134532289c_1_1, from-node: $L_8740348308741_134532289c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 83, has bb-end 94; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348886021_134532289c isa instruction, has hash "N_8740348886021_134532289c", has il-index 85, has asm-address "0x804ccc1", has operation-type "MLIL_VAR_PHI", has ins-text "eax_50#72 = ϕ(eax_50#62, eax_50#64, eax_50#69, eax_50#70, eax_50#71)";
(contains-instruction: $N_8740348886021_134532289c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348886021_134532289c isa instruction, has hash "N_8740348886021_134532289c"; 

insert
$N_8740348886021_134532289c_0 isa variable-ssa, has hash "N_8740348886021_134532289c_0", has var "eax_50", has version 72, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348886021_134532289c_0, from-node: $N_8740348886021_134532289c) isa node-link; 

match
$N_8740348886021_134532289c isa instruction, has hash "N_8740348886021_134532289c"; 

insert
$L_8740348886021_134532289c_1 isa list, has hash "L_8740348886021_134532289c_1", has list-size 5, has edge-label "src";
(to-node: $L_8740348886021_134532289c_1, from-node: $N_8740348886021_134532289c) isa node-link; 

match
$L_8740348886021_134532289c_1 isa list, has hash "L_8740348886021_134532289c_1"; 

insert
$N_8740348886021_134532289c_1_0 isa variable-ssa, has hash "N_8740348886021_134532289c_1_0", has var "eax_50", has version 62, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348886021_134532289c_1_0, from-node: $L_8740348886021_134532289c_1) isa node-link; 

match
$L_8740348886021_134532289c_1 isa list, has hash "L_8740348886021_134532289c_1"; 

insert
$N_8740348886021_134532289c_1_1 isa variable-ssa, has hash "N_8740348886021_134532289c_1_1", has var "eax_50", has version 64, has edge-label "1", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348886021_134532289c_1_1, from-node: $L_8740348886021_134532289c_1) isa node-link; 

match
$L_8740348886021_134532289c_1 isa list, has hash "L_8740348886021_134532289c_1"; 

insert
$N_8740348886021_134532289c_1_2 isa variable-ssa, has hash "N_8740348886021_134532289c_1_2", has var "eax_50", has version 69, has edge-label "2", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348886021_134532289c_1_2, from-node: $L_8740348886021_134532289c_1) isa node-link; 

match
$L_8740348886021_134532289c_1 isa list, has hash "L_8740348886021_134532289c_1"; 

insert
$N_8740348886021_134532289c_1_3 isa variable-ssa, has hash "N_8740348886021_134532289c_1_3", has var "eax_50", has version 70, has edge-label "3", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348886021_134532289c_1_3, from-node: $L_8740348886021_134532289c_1) isa node-link; 

match
$L_8740348886021_134532289c_1 isa list, has hash "L_8740348886021_134532289c_1"; 

insert
$N_8740348886021_134532289c_1_4 isa variable-ssa, has hash "N_8740348886021_134532289c_1_4", has var "eax_50", has version 71, has edge-label "4", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348886021_134532289c_1_4, from-node: $L_8740348886021_134532289c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 83, has bb-end 94; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348899589_134532289c isa instruction, has hash "N_8740348899589_134532289c", has il-index 86, has asm-address "0x804ccc1", has operation-type "MLIL_VAR_PHI", has ins-text "ecx_4#7 = ϕ(ecx_4#5, ecx_4#6)";
(contains-instruction: $N_8740348899589_134532289c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348899589_134532289c isa instruction, has hash "N_8740348899589_134532289c"; 

insert
$N_8740348899589_134532289c_0 isa variable-ssa, has hash "N_8740348899589_134532289c_0", has var "ecx_4", has version 7, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348899589_134532289c_0, from-node: $N_8740348899589_134532289c) isa node-link; 

match
$N_8740348899589_134532289c isa instruction, has hash "N_8740348899589_134532289c"; 

insert
$L_8740348899589_134532289c_1 isa list, has hash "L_8740348899589_134532289c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348899589_134532289c_1, from-node: $N_8740348899589_134532289c) isa node-link; 

match
$L_8740348899589_134532289c_1 isa list, has hash "L_8740348899589_134532289c_1"; 

insert
$N_8740348899589_134532289c_1_0 isa variable-ssa, has hash "N_8740348899589_134532289c_1_0", has var "ecx_4", has version 5, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348899589_134532289c_1_0, from-node: $L_8740348899589_134532289c_1) isa node-link; 

match
$L_8740348899589_134532289c_1 isa list, has hash "L_8740348899589_134532289c_1"; 

insert
$N_8740348899589_134532289c_1_1 isa variable-ssa, has hash "N_8740348899589_134532289c_1_1", has var "ecx_4", has version 6, has edge-label "1", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348899589_134532289c_1_1, from-node: $L_8740348899589_134532289c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 83, has bb-end 94; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349156869_134532289c isa instruction, has hash "N_8740349156869_134532289c", has il-index 84, has asm-address "0x804ccc1", has operation-type "MLIL_VAR_PHI", has ins-text "var_1a8_9#14 = ϕ(var_1a8_9#12, var_1a8_9#13)";
(contains-instruction: $N_8740349156869_134532289c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349156869_134532289c isa instruction, has hash "N_8740349156869_134532289c"; 

insert
$N_8740349156869_134532289c_0 isa variable-ssa, has hash "N_8740349156869_134532289c_0", has var "var_1a8_9", has version 14, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349156869_134532289c_0, from-node: $N_8740349156869_134532289c) isa node-link; 

match
$N_8740349156869_134532289c isa instruction, has hash "N_8740349156869_134532289c"; 

insert
$L_8740349156869_134532289c_1 isa list, has hash "L_8740349156869_134532289c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349156869_134532289c_1, from-node: $N_8740349156869_134532289c) isa node-link; 

match
$L_8740349156869_134532289c_1 isa list, has hash "L_8740349156869_134532289c_1"; 

insert
$N_8740349156869_134532289c_1_0 isa variable-ssa, has hash "N_8740349156869_134532289c_1_0", has var "var_1a8_9", has version 12, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349156869_134532289c_1_0, from-node: $L_8740349156869_134532289c_1) isa node-link; 

match
$L_8740349156869_134532289c_1 isa list, has hash "L_8740349156869_134532289c_1"; 

insert
$N_8740349156869_134532289c_1_1 isa variable-ssa, has hash "N_8740349156869_134532289c_1_1", has var "var_1a8_9", has version 13, has edge-label "1", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349156869_134532289c_1_1, from-node: $L_8740349156869_134532289c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 83, has bb-end 94; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349161401_134532289c isa instruction, has hash "N_8740349161401_134532289c", has il-index 83, has asm-address "0x804ccc1", has operation-type "MLIL_VAR_PHI", has ins-text "var_1ac_25#36 = ϕ(var_1ac_22#30, var_1ac_24#34, var_1ac_25#35)";
(contains-instruction: $N_8740349161401_134532289c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349161401_134532289c isa instruction, has hash "N_8740349161401_134532289c"; 

insert
$N_8740349161401_134532289c_0 isa variable-ssa, has hash "N_8740349161401_134532289c_0", has var "var_1ac_25", has version 36, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349161401_134532289c_0, from-node: $N_8740349161401_134532289c) isa node-link; 

match
$N_8740349161401_134532289c isa instruction, has hash "N_8740349161401_134532289c"; 

insert
$L_8740349161401_134532289c_1 isa list, has hash "L_8740349161401_134532289c_1", has list-size 3, has edge-label "src";
(to-node: $L_8740349161401_134532289c_1, from-node: $N_8740349161401_134532289c) isa node-link; 

match
$L_8740349161401_134532289c_1 isa list, has hash "L_8740349161401_134532289c_1"; 

insert
$N_8740349161401_134532289c_1_0 isa variable-ssa, has hash "N_8740349161401_134532289c_1_0", has var "var_1ac_22", has version 30, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349161401_134532289c_1_0, from-node: $L_8740349161401_134532289c_1) isa node-link; 

match
$L_8740349161401_134532289c_1 isa list, has hash "L_8740349161401_134532289c_1"; 

insert
$N_8740349161401_134532289c_1_1 isa variable-ssa, has hash "N_8740349161401_134532289c_1_1", has var "var_1ac_24", has version 34, has edge-label "1", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349161401_134532289c_1_1, from-node: $L_8740349161401_134532289c_1) isa node-link; 

match
$L_8740349161401_134532289c_1 isa list, has hash "L_8740349161401_134532289c_1"; 

insert
$N_8740349161401_134532289c_1_2 isa variable-ssa, has hash "N_8740349161401_134532289c_1_2", has var "var_1ac_25", has version 35, has edge-label "2", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349161401_134532289c_1_2, from-node: $L_8740349161401_134532289c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 83, has bb-end 94; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349215513_134532289c isa instruction, has hash "N_8740349215513_134532289c", has il-index 91, has asm-address "0x804ccc1", has operation-type "MLIL_VAR_PHI", has ins-text "edi#15 = ϕ(edi#11, edi#14)";
(contains-instruction: $N_8740349215513_134532289c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349215513_134532289c isa instruction, has hash "N_8740349215513_134532289c"; 

insert
$N_8740349215513_134532289c_0 isa variable-ssa, has hash "N_8740349215513_134532289c_0", has var "edi", has version 15, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349215513_134532289c_0, from-node: $N_8740349215513_134532289c) isa node-link; 

match
$N_8740349215513_134532289c isa instruction, has hash "N_8740349215513_134532289c"; 

insert
$L_8740349215513_134532289c_1 isa list, has hash "L_8740349215513_134532289c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349215513_134532289c_1, from-node: $N_8740349215513_134532289c) isa node-link; 

match
$L_8740349215513_134532289c_1 isa list, has hash "L_8740349215513_134532289c_1"; 

insert
$N_8740349215513_134532289c_1_0 isa variable-ssa, has hash "N_8740349215513_134532289c_1_0", has var "edi", has version 11, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349215513_134532289c_1_0, from-node: $L_8740349215513_134532289c_1) isa node-link; 

match
$L_8740349215513_134532289c_1 isa list, has hash "L_8740349215513_134532289c_1"; 

insert
$N_8740349215513_134532289c_1_1 isa variable-ssa, has hash "N_8740349215513_134532289c_1_1", has var "edi", has version 14, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349215513_134532289c_1_1, from-node: $L_8740349215513_134532289c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 83, has bb-end 94; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349220357_134532289c isa instruction, has hash "N_8740349220357_134532289c", has il-index 90, has asm-address "0x804ccc1", has operation-type "MLIL_VAR_PHI", has ins-text "esi#33 = ϕ(esi#31, esi#32)";
(contains-instruction: $N_8740349220357_134532289c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349220357_134532289c isa instruction, has hash "N_8740349220357_134532289c"; 

insert
$N_8740349220357_134532289c_0 isa variable-ssa, has hash "N_8740349220357_134532289c_0", has var "esi", has version 33, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349220357_134532289c_0, from-node: $N_8740349220357_134532289c) isa node-link; 

match
$N_8740349220357_134532289c isa instruction, has hash "N_8740349220357_134532289c"; 

insert
$L_8740349220357_134532289c_1 isa list, has hash "L_8740349220357_134532289c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349220357_134532289c_1, from-node: $N_8740349220357_134532289c) isa node-link; 

match
$L_8740349220357_134532289c_1 isa list, has hash "L_8740349220357_134532289c_1"; 

insert
$N_8740349220357_134532289c_1_0 isa variable-ssa, has hash "N_8740349220357_134532289c_1_0", has var "esi", has version 31, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349220357_134532289c_1_0, from-node: $L_8740349220357_134532289c_1) isa node-link; 

match
$L_8740349220357_134532289c_1 isa list, has hash "L_8740349220357_134532289c_1"; 

insert
$N_8740349220357_134532289c_1_1 isa variable-ssa, has hash "N_8740349220357_134532289c_1_1", has var "esi", has version 32, has edge-label "1", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349220357_134532289c_1_1, from-node: $L_8740349220357_134532289c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 83, has bb-end 94; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349221893_134532289c isa instruction, has hash "N_8740349221893_134532289c", has il-index 89, has asm-address "0x804ccc1", has operation-type "MLIL_VAR_PHI", has ins-text "ebp_2#11 = ϕ(ebp_2#9, ebp_2#10)";
(contains-instruction: $N_8740349221893_134532289c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349221893_134532289c isa instruction, has hash "N_8740349221893_134532289c"; 

insert
$N_8740349221893_134532289c_0 isa variable-ssa, has hash "N_8740349221893_134532289c_0", has var "ebp_2", has version 11, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349221893_134532289c_0, from-node: $N_8740349221893_134532289c) isa node-link; 

match
$N_8740349221893_134532289c isa instruction, has hash "N_8740349221893_134532289c"; 

insert
$L_8740349221893_134532289c_1 isa list, has hash "L_8740349221893_134532289c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349221893_134532289c_1, from-node: $N_8740349221893_134532289c) isa node-link; 

match
$L_8740349221893_134532289c_1 isa list, has hash "L_8740349221893_134532289c_1"; 

insert
$N_8740349221893_134532289c_1_0 isa variable-ssa, has hash "N_8740349221893_134532289c_1_0", has var "ebp_2", has version 9, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349221893_134532289c_1_0, from-node: $L_8740349221893_134532289c_1) isa node-link; 

match
$L_8740349221893_134532289c_1 isa list, has hash "L_8740349221893_134532289c_1"; 

insert
$N_8740349221893_134532289c_1_1 isa variable-ssa, has hash "N_8740349221893_134532289c_1_1", has var "ebp_2", has version 10, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349221893_134532289c_1_1, from-node: $L_8740349221893_134532289c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 83, has bb-end 94; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349333497_134532289c isa instruction, has hash "N_8740349333497_134532289c", has il-index 94, has asm-address "0x804ccc1", has operation-type "MLIL_RET", has ins-text "return eax_50#72";
(contains-instruction: $N_8740349333497_134532289c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349333497_134532289c isa instruction, has hash "N_8740349333497_134532289c"; 

insert
$L_8740349333497_134532289c_0 isa list, has hash "L_8740349333497_134532289c_0", has list-size 1, has edge-label "src";
(to-node: $L_8740349333497_134532289c_0, from-node: $N_8740349333497_134532289c) isa node-link; 

match
$L_8740349333497_134532289c_0 isa list, has hash "L_8740349333497_134532289c_0"; 

insert
$N_8740349333497_134532289c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349333497_134532289c_0_0", has edge-label "0";
(to-node: $N_8740349333497_134532289c_0_0, from-node: $L_8740349333497_134532289c_0) isa node-link; 

match
$N_8740349333497_134532289c_0_0 isa operation, has hash "N_8740349333497_134532289c_0_0"; 

insert
$N_8740349333497_134532289c_0_0_0 isa variable-ssa, has hash "N_8740349333497_134532289c_0_0_0", has var "eax_50", has version 72, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349333497_134532289c_0_0_0, from-node: $N_8740349333497_134532289c_0_0) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 83, has bb-end 94; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349427717_134532289c isa instruction, has hash "N_8740349427717_134532289c", has il-index 93, has asm-address "0x804ccc1", has operation-type "MLIL_MEM_PHI", has ins-text "mem#59 = ϕ(mem#51, mem#52, mem#57, mem#58)";
(contains-instruction: $N_8740349427717_134532289c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349427717_134532289c isa instruction, has hash "N_8740349427717_134532289c"; 

insert
$N_8740349427717_134532289c_0 isa constant, has hash "N_8740349427717_134532289c_0", has constant-value "59", has edge-label "dest_memory";
(to-node: $N_8740349427717_134532289c_0, from-node: $N_8740349427717_134532289c) isa node-link; 

match
$N_8740349427717_134532289c isa instruction, has hash "N_8740349427717_134532289c"; 

insert
$L_8740349427717_134532289c_1 isa list, has hash "L_8740349427717_134532289c_1", has list-size 4, has edge-label "src_memory";
(to-node: $L_8740349427717_134532289c_1, from-node: $N_8740349427717_134532289c) isa node-link; 

match
$L_8740349427717_134532289c_1 isa list, has hash "L_8740349427717_134532289c_1"; 

insert
$N_8740349427717_134532289c_1_0 isa constant, has hash "N_8740349427717_134532289c_1_0", has constant-value "51", has edge-label "0";
(to-node: $N_8740349427717_134532289c_1_0, from-node: $L_8740349427717_134532289c_1) isa node-link; 

match
$L_8740349427717_134532289c_1 isa list, has hash "L_8740349427717_134532289c_1"; 

insert
$N_8740349427717_134532289c_1_1 isa constant, has hash "N_8740349427717_134532289c_1_1", has constant-value "52", has edge-label "1";
(to-node: $N_8740349427717_134532289c_1_1, from-node: $L_8740349427717_134532289c_1) isa node-link; 

match
$L_8740349427717_134532289c_1 isa list, has hash "L_8740349427717_134532289c_1"; 

insert
$N_8740349427717_134532289c_1_2 isa constant, has hash "N_8740349427717_134532289c_1_2", has constant-value "57", has edge-label "2";
(to-node: $N_8740349427717_134532289c_1_2, from-node: $L_8740349427717_134532289c_1) isa node-link; 

match
$L_8740349427717_134532289c_1 isa list, has hash "L_8740349427717_134532289c_1"; 

insert
$N_8740349427717_134532289c_1_3 isa constant, has hash "N_8740349427717_134532289c_1_3", has constant-value "58", has edge-label "3";
(to-node: $N_8740349427717_134532289c_1_3, from-node: $L_8740349427717_134532289c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 83, has bb-end 94; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349428997_134532289c isa instruction, has hash "N_8740349428997_134532289c", has il-index 92, has asm-address "0x804ccc1", has operation-type "MLIL_VAR_PHI", has ins-text "cond:0_1#4 = ϕ(cond:0_1#2, cond:0_1#3)";
(contains-instruction: $N_8740349428997_134532289c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349428997_134532289c isa instruction, has hash "N_8740349428997_134532289c"; 

insert
$N_8740349428997_134532289c_0 isa variable-ssa, has hash "N_8740349428997_134532289c_0", has var "cond:0_1", has version 4, has edge-label "dest", has var-type "bool", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349428997_134532289c_0, from-node: $N_8740349428997_134532289c) isa node-link; 

match
$N_8740349428997_134532289c isa instruction, has hash "N_8740349428997_134532289c"; 

insert
$L_8740349428997_134532289c_1 isa list, has hash "L_8740349428997_134532289c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349428997_134532289c_1, from-node: $N_8740349428997_134532289c) isa node-link; 

match
$L_8740349428997_134532289c_1 isa list, has hash "L_8740349428997_134532289c_1"; 

insert
$N_8740349428997_134532289c_1_0 isa variable-ssa, has hash "N_8740349428997_134532289c_1_0", has var "cond:0_1", has version 2, has edge-label "0", has var-type "bool", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349428997_134532289c_1_0, from-node: $L_8740349428997_134532289c_1) isa node-link; 

match
$L_8740349428997_134532289c_1 isa list, has hash "L_8740349428997_134532289c_1"; 

insert
$N_8740349428997_134532289c_1_1 isa variable-ssa, has hash "N_8740349428997_134532289c_1_1", has var "cond:0_1", has version 3, has edge-label "1", has var-type "bool", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349428997_134532289c_1_1, from-node: $L_8740349428997_134532289c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 95, has bb-end 95; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 96, has bb-end 98; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 96, has bb-end 98; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 96, has bb-end 98; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349199581_134532271c isa instruction, has hash "N_8740349199581_134532271c", has il-index 96, has asm-address "0x804ccaf", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_25#35 = eax_50#70";
(contains-instruction: $N_8740349199581_134532271c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349199581_134532271c isa instruction, has hash "N_8740349199581_134532271c"; 

insert
$N_8740349199581_134532271c_0 isa variable-ssa, has hash "N_8740349199581_134532271c_0", has var "var_1ac_25", has version 35, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349199581_134532271c_0, from-node: $N_8740349199581_134532271c) isa node-link; 

match
$N_8740349199581_134532271c isa instruction, has hash "N_8740349199581_134532271c"; 

insert
$N_8740349199581_134532271c_1 isa MLIL_VAR_SSA, has hash "N_8740349199581_134532271c_1", has edge-label "src";
(to-node: $N_8740349199581_134532271c_1, from-node: $N_8740349199581_134532271c) isa node-link; 

match
$N_8740349199581_134532271c_1 isa operation, has hash "N_8740349199581_134532271c_1"; 

insert
$N_8740349199581_134532271c_1_0 isa variable-ssa, has hash "N_8740349199581_134532271c_1_0", has var "eax_50", has version 70, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349199581_134532271c_1_0, from-node: $N_8740349199581_134532271c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 96, has bb-end 98; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 96, has bb-end 98; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349681669_134532274c isa instruction, has hash "N_8740349681669_134532274c", has il-index 97, has asm-address "0x804ccb2", has operation-type "MLIL_CALL_SSA", has ins-text "eax_50#71, mem#58 = 0x804c200(var_1ac_25#35) @ mem#57";
(contains-instruction: $N_8740349681669_134532274c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349681669_134532274c isa instruction, has hash "N_8740349681669_134532274c"; 

insert
$N_8740349681669_134532274c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740349681669_134532274c_0", has edge-label "output";
(to-node: $N_8740349681669_134532274c_0, from-node: $N_8740349681669_134532274c) isa node-link; 

match
$N_8740349681669_134532274c_0 isa operation, has hash "N_8740349681669_134532274c_0"; 

insert
$N_8740349681669_134532274c_0_0 isa constant, has hash "N_8740349681669_134532274c_0_0", has constant-value "58", has edge-label "dest_memory";
(to-node: $N_8740349681669_134532274c_0_0, from-node: $N_8740349681669_134532274c_0) isa node-link; 

match
$N_8740349681669_134532274c_0 isa operation, has hash "N_8740349681669_134532274c_0"; 

insert
$L_8740349681669_134532274c_0_1 isa list, has hash "L_8740349681669_134532274c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740349681669_134532274c_0_1, from-node: $N_8740349681669_134532274c_0) isa node-link; 

match
$L_8740349681669_134532274c_0_1 isa list, has hash "L_8740349681669_134532274c_0_1"; 

insert
$N_8740349681669_134532274c_0_1_0 isa variable-ssa, has hash "N_8740349681669_134532274c_0_1_0", has var "eax_50", has version 71, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349681669_134532274c_0_1_0, from-node: $L_8740349681669_134532274c_0_1) isa node-link; 

match
$N_8740349681669_134532274c isa instruction, has hash "N_8740349681669_134532274c"; 

insert
$N_8740349681669_134532274c_1 isa MLIL_CONST_PTR, has hash "N_8740349681669_134532274c_1", has edge-label "dest";
(to-node: $N_8740349681669_134532274c_1, from-node: $N_8740349681669_134532274c) isa node-link; 

match
$N_8740349681669_134532274c_1 isa operation, has hash "N_8740349681669_134532274c_1"; 

insert
$N_8740349681669_134532274c_1_0 isa constant, has hash "N_8740349681669_134532274c_1_0", has constant-value "134529536", has edge-label "constant";
(to-node: $N_8740349681669_134532274c_1_0, from-node: $N_8740349681669_134532274c_1) isa node-link; 

match
$N_8740349681669_134532274c isa instruction, has hash "N_8740349681669_134532274c"; 

insert
$L_8740349681669_134532274c_2 isa list, has hash "L_8740349681669_134532274c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740349681669_134532274c_2, from-node: $N_8740349681669_134532274c) isa node-link; 

match
$L_8740349681669_134532274c_2 isa list, has hash "L_8740349681669_134532274c_2"; 

insert
$N_8740349681669_134532274c_2_0 isa MLIL_VAR_SSA, has hash "N_8740349681669_134532274c_2_0", has edge-label "0";
(to-node: $N_8740349681669_134532274c_2_0, from-node: $L_8740349681669_134532274c_2) isa node-link; 

match
$N_8740349681669_134532274c_2_0 isa operation, has hash "N_8740349681669_134532274c_2_0"; 

insert
$N_8740349681669_134532274c_2_0_0 isa variable-ssa, has hash "N_8740349681669_134532274c_2_0_0", has var "var_1ac_25", has version 35, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349681669_134532274c_2_0_0, from-node: $N_8740349681669_134532274c_2_0) isa node-link; 

match
$N_8740349681669_134532274c isa instruction, has hash "N_8740349681669_134532274c"; 

insert
$N_8740349681669_134532274c_3 isa constant, has hash "N_8740349681669_134532274c_3", has constant-value "57", has edge-label "src_memory";
(to-node: $N_8740349681669_134532274c_3, from-node: $N_8740349681669_134532274c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 96, has bb-end 98; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349682877_134532274c isa instruction, has hash "N_8740349682877_134532274c", has il-index 98, has asm-address "0x804ccb2", has operation-type "MLIL_GOTO", has ins-text "goto 83 @ 0x804ccc1";
(contains-instruction: $N_8740349682877_134532274c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349682877_134532274c isa instruction, has hash "N_8740349682877_134532274c"; 

insert
$N_8740349682877_134532274c_0 isa constant, has hash "N_8740349682877_134532274c_0", has constant-value "83", has edge-label "dest";
(to-node: $N_8740349682877_134532274c_0, from-node: $N_8740349682877_134532274c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 99, has bb-end 100; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 99, has bb-end 100; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 99, has bb-end 100; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349556949_134531524c isa instruction, has hash "N_8740349556949_134531524c", has il-index 99, has asm-address "0x804c9c4", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#9 = 0xf";
(contains-instruction: $N_8740349556949_134531524c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349556949_134531524c isa instruction, has hash "N_8740349556949_134531524c"; 

insert
$N_8740349556949_134531524c_0 isa variable-ssa, has hash "N_8740349556949_134531524c_0", has var "esi", has version 9, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349556949_134531524c_0, from-node: $N_8740349556949_134531524c) isa node-link; 

match
$N_8740349556949_134531524c isa instruction, has hash "N_8740349556949_134531524c"; 

insert
$N_8740349556949_134531524c_1 isa MLIL_CONST_PTR, has hash "N_8740349556949_134531524c_1", has edge-label "src";
(to-node: $N_8740349556949_134531524c_1, from-node: $N_8740349556949_134531524c) isa node-link; 

match
$N_8740349556949_134531524c_1 isa operation, has hash "N_8740349556949_134531524c_1"; 

insert
$N_8740349556949_134531524c_1_0 isa constant, has hash "N_8740349556949_134531524c_1_0", has constant-value "15", has edge-label "constant";
(to-node: $N_8740349556949_134531524c_1_0, from-node: $N_8740349556949_134531524c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 99, has bb-end 100; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 99, has bb-end 100; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348852741_134531529c isa instruction, has hash "N_8740348852741_134531529c", has il-index 100, has asm-address "0x804c9c9", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740348852741_134531529c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348852741_134531529c isa instruction, has hash "N_8740348852741_134531529c"; 

insert
$N_8740348852741_134531529c_0 isa constant, has hash "N_8740348852741_134531529c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740348852741_134531529c_0, from-node: $N_8740348852741_134531529c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 101, has bb-end 103; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 101, has bb-end 103; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 101, has bb-end 103; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348592601_134531416c isa instruction, has hash "N_8740348592601_134531416c", has il-index 101, has asm-address "0x804c958", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_7#10 = &var_190";
(contains-instruction: $N_8740348592601_134531416c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348592601_134531416c isa instruction, has hash "N_8740348592601_134531416c"; 

insert
$N_8740348592601_134531416c_0 isa variable-ssa, has hash "N_8740348592601_134531416c_0", has var "var_1ac_7", has version 10, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348592601_134531416c_0, from-node: $N_8740348592601_134531416c) isa node-link; 

match
$N_8740348592601_134531416c isa instruction, has hash "N_8740348592601_134531416c"; 

insert
$N_8740348592601_134531416c_1 isa MLIL_ADDRESS_OF, has hash "N_8740348592601_134531416c_1", has edge-label "src";
(to-node: $N_8740348592601_134531416c_1, from-node: $N_8740348592601_134531416c) isa node-link; 

match
$N_8740348592601_134531416c_1 isa operation, has hash "N_8740348592601_134531416c_1"; 

insert
$N_8740348592601_134531416c_1_0 isa variable, has hash "N_8740348592601_134531416c_1_0", has var "var_190", has edge-label "src", has var-type "void", has var-size 256, has var-func "cgc_handle_register_user";
(to-node: $N_8740348592601_134531416c_1_0, from-node: $N_8740348592601_134531416c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 101, has bb-end 103; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 101, has bb-end 103; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349003013_134531419c isa instruction, has hash "N_8740349003013_134531419c", has il-index 102, has asm-address "0x804c95b", has operation-type "MLIL_CALL_SSA", has ins-text "eax_11#14, mem#17 = 0x804aeb0(var_1ac_7#10) @ mem#16";
(contains-instruction: $N_8740349003013_134531419c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349003013_134531419c isa instruction, has hash "N_8740349003013_134531419c"; 

insert
$N_8740349003013_134531419c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740349003013_134531419c_0", has edge-label "output";
(to-node: $N_8740349003013_134531419c_0, from-node: $N_8740349003013_134531419c) isa node-link; 

match
$N_8740349003013_134531419c_0 isa operation, has hash "N_8740349003013_134531419c_0"; 

insert
$N_8740349003013_134531419c_0_0 isa constant, has hash "N_8740349003013_134531419c_0_0", has constant-value "17", has edge-label "dest_memory";
(to-node: $N_8740349003013_134531419c_0_0, from-node: $N_8740349003013_134531419c_0) isa node-link; 

match
$N_8740349003013_134531419c_0 isa operation, has hash "N_8740349003013_134531419c_0"; 

insert
$L_8740349003013_134531419c_0_1 isa list, has hash "L_8740349003013_134531419c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740349003013_134531419c_0_1, from-node: $N_8740349003013_134531419c_0) isa node-link; 

match
$L_8740349003013_134531419c_0_1 isa list, has hash "L_8740349003013_134531419c_0_1"; 

insert
$N_8740349003013_134531419c_0_1_0 isa variable-ssa, has hash "N_8740349003013_134531419c_0_1_0", has var "eax_11", has version 14, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349003013_134531419c_0_1_0, from-node: $L_8740349003013_134531419c_0_1) isa node-link; 

match
$N_8740349003013_134531419c isa instruction, has hash "N_8740349003013_134531419c"; 

insert
$N_8740349003013_134531419c_1 isa MLIL_CONST_PTR, has hash "N_8740349003013_134531419c_1", has edge-label "dest";
(to-node: $N_8740349003013_134531419c_1, from-node: $N_8740349003013_134531419c) isa node-link; 

match
$N_8740349003013_134531419c_1 isa operation, has hash "N_8740349003013_134531419c_1"; 

insert
$N_8740349003013_134531419c_1_0 isa constant, has hash "N_8740349003013_134531419c_1_0", has constant-value "134524592", has edge-label "constant";
(to-node: $N_8740349003013_134531419c_1_0, from-node: $N_8740349003013_134531419c_1) isa node-link; 

match
$N_8740349003013_134531419c isa instruction, has hash "N_8740349003013_134531419c"; 

insert
$L_8740349003013_134531419c_2 isa list, has hash "L_8740349003013_134531419c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740349003013_134531419c_2, from-node: $N_8740349003013_134531419c) isa node-link; 

match
$L_8740349003013_134531419c_2 isa list, has hash "L_8740349003013_134531419c_2"; 

insert
$N_8740349003013_134531419c_2_0 isa MLIL_VAR_SSA, has hash "N_8740349003013_134531419c_2_0", has edge-label "0";
(to-node: $N_8740349003013_134531419c_2_0, from-node: $L_8740349003013_134531419c_2) isa node-link; 

match
$N_8740349003013_134531419c_2_0 isa operation, has hash "N_8740349003013_134531419c_2_0"; 

insert
$N_8740349003013_134531419c_2_0_0 isa variable-ssa, has hash "N_8740349003013_134531419c_2_0_0", has var "var_1ac_7", has version 10, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349003013_134531419c_2_0_0, from-node: $N_8740349003013_134531419c_2_0) isa node-link; 

match
$N_8740349003013_134531419c isa instruction, has hash "N_8740349003013_134531419c"; 

insert
$N_8740349003013_134531419c_3 isa constant, has hash "N_8740349003013_134531419c_3", has constant-value "16", has edge-label "src_memory";
(to-node: $N_8740349003013_134531419c_3, from-node: $N_8740349003013_134531419c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 101, has bb-end 103; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 101, has bb-end 103; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348934889_134531427c isa instruction, has hash "N_8740348934889_134531427c", has il-index 103, has asm-address "0x804c963", has operation-type "MLIL_IF", has ins-text "if (eax_11#14 == 1) then 106 @ 0x0 else 107 @ 0x804c965";
(contains-instruction: $N_8740348934889_134531427c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348934889_134531427c isa instruction, has hash "N_8740348934889_134531427c"; 

insert
$N_8740348934889_134531427c_0 isa MLIL_CMP_E, has hash "N_8740348934889_134531427c_0", has edge-label "condition";
(to-node: $N_8740348934889_134531427c_0, from-node: $N_8740348934889_134531427c) isa node-link; 

match
$N_8740348934889_134531427c_0 isa operation, has hash "N_8740348934889_134531427c_0"; 

insert
$N_8740348934889_134531427c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348934889_134531427c_0_0", has edge-label "left";
(to-node: $N_8740348934889_134531427c_0_0, from-node: $N_8740348934889_134531427c_0) isa node-link; 

match
$N_8740348934889_134531427c_0_0 isa operation, has hash "N_8740348934889_134531427c_0_0"; 

insert
$N_8740348934889_134531427c_0_0_0 isa variable-ssa, has hash "N_8740348934889_134531427c_0_0_0", has var "eax_11", has version 14, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348934889_134531427c_0_0_0, from-node: $N_8740348934889_134531427c_0_0) isa node-link; 

match
$N_8740348934889_134531427c_0 isa operation, has hash "N_8740348934889_134531427c_0"; 

insert
$N_8740348934889_134531427c_0_1 isa MLIL_CONST, has hash "N_8740348934889_134531427c_0_1", has edge-label "right";
(to-node: $N_8740348934889_134531427c_0_1, from-node: $N_8740348934889_134531427c_0) isa node-link; 

match
$N_8740348934889_134531427c_0_1 isa operation, has hash "N_8740348934889_134531427c_0_1"; 

insert
$N_8740348934889_134531427c_0_1_0 isa constant, has hash "N_8740348934889_134531427c_0_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8740348934889_134531427c_0_1_0, from-node: $N_8740348934889_134531427c_0_1) isa node-link; 

match
$N_8740348934889_134531427c isa instruction, has hash "N_8740348934889_134531427c"; 

insert
$N_8740348934889_134531427c_1 isa constant, has hash "N_8740348934889_134531427c_1", has constant-value "106", has edge-label "true";
(to-node: $N_8740348934889_134531427c_1, from-node: $N_8740348934889_134531427c) isa node-link; 

match
$N_8740348934889_134531427c isa instruction, has hash "N_8740348934889_134531427c"; 

insert
$N_8740348934889_134531427c_2 isa constant, has hash "N_8740348934889_134531427c_2", has constant-value "107", has edge-label "false";
(to-node: $N_8740348934889_134531427c_2, from-node: $N_8740348934889_134531427c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 104, has bb-end 104; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 105, has bb-end 105; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 106, has bb-end 106; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 107, has bb-end 109; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 107, has bb-end 109; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 107, has bb-end 109; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349275889_134531429c isa instruction, has hash "N_8740349275889_134531429c", has il-index 107, has asm-address "0x804c965", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi_2#10 = 0";
(contains-instruction: $N_8740349275889_134531429c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349275889_134531429c isa instruction, has hash "N_8740349275889_134531429c"; 

insert
$N_8740349275889_134531429c_0 isa variable-ssa, has hash "N_8740349275889_134531429c_0", has var "esi_2", has version 10, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349275889_134531429c_0, from-node: $N_8740349275889_134531429c) isa node-link; 

match
$N_8740349275889_134531429c isa instruction, has hash "N_8740349275889_134531429c"; 

insert
$N_8740349275889_134531429c_1 isa MLIL_CONST, has hash "N_8740349275889_134531429c_1", has edge-label "src";
(to-node: $N_8740349275889_134531429c_1, from-node: $N_8740349275889_134531429c) isa node-link; 

match
$N_8740349275889_134531429c_1 isa operation, has hash "N_8740349275889_134531429c_1"; 

insert
$N_8740349275889_134531429c_1_0 isa constant, has hash "N_8740349275889_134531429c_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349275889_134531429c_1_0, from-node: $N_8740349275889_134531429c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 107, has bb-end 109; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 107, has bb-end 109; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348810729_134531431c isa instruction, has hash "N_8740348810729_134531431c", has il-index 108, has asm-address "0x804c967", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edi#5 = 0";
(contains-instruction: $N_8740348810729_134531431c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348810729_134531431c isa instruction, has hash "N_8740348810729_134531431c"; 

insert
$N_8740348810729_134531431c_0 isa variable-ssa, has hash "N_8740348810729_134531431c_0", has var "edi", has version 5, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348810729_134531431c_0, from-node: $N_8740348810729_134531431c) isa node-link; 

match
$N_8740348810729_134531431c isa instruction, has hash "N_8740348810729_134531431c"; 

insert
$N_8740348810729_134531431c_1 isa MLIL_CONST, has hash "N_8740348810729_134531431c_1", has edge-label "src";
(to-node: $N_8740348810729_134531431c_1, from-node: $N_8740348810729_134531431c) isa node-link; 

match
$N_8740348810729_134531431c_1 isa operation, has hash "N_8740348810729_134531431c_1"; 

insert
$N_8740348810729_134531431c_1_0 isa constant, has hash "N_8740348810729_134531431c_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348810729_134531431c_1_0, from-node: $N_8740348810729_134531431c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 107, has bb-end 109; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 107, has bb-end 109; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348168433_134531433c isa instruction, has hash "N_8740348168433_134531433c", has il-index 109, has asm-address "0x804c969", has operation-type "MLIL_GOTO", has ins-text "goto 121 @ 0x804c970";
(contains-instruction: $N_8740348168433_134531433c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348168433_134531433c isa instruction, has hash "N_8740348168433_134531433c"; 

insert
$N_8740348168433_134531433c_0 isa constant, has hash "N_8740348168433_134531433c_0", has constant-value "121", has edge-label "dest";
(to-node: $N_8740348168433_134531433c_0, from-node: $N_8740348168433_134531433c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348623109_134531475c isa instruction, has hash "N_8740348623109_134531475c", has il-index 113, has asm-address "0x804c993", has operation-type "MLIL_VAR_PHI", has ins-text "edi#6 = ϕ(edi#4, edi#5)";
(contains-instruction: $N_8740348623109_134531475c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348623109_134531475c isa instruction, has hash "N_8740348623109_134531475c"; 

insert
$N_8740348623109_134531475c_0 isa variable-ssa, has hash "N_8740348623109_134531475c_0", has var "edi", has version 6, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348623109_134531475c_0, from-node: $N_8740348623109_134531475c) isa node-link; 

match
$N_8740348623109_134531475c isa instruction, has hash "N_8740348623109_134531475c"; 

insert
$L_8740348623109_134531475c_1 isa list, has hash "L_8740348623109_134531475c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348623109_134531475c_1, from-node: $N_8740348623109_134531475c) isa node-link; 

match
$L_8740348623109_134531475c_1 isa list, has hash "L_8740348623109_134531475c_1"; 

insert
$N_8740348623109_134531475c_1_0 isa variable-ssa, has hash "N_8740348623109_134531475c_1_0", has var "edi", has version 4, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348623109_134531475c_1_0, from-node: $L_8740348623109_134531475c_1) isa node-link; 

match
$L_8740348623109_134531475c_1 isa list, has hash "L_8740348623109_134531475c_1"; 

insert
$N_8740348623109_134531475c_1_1 isa variable-ssa, has hash "N_8740348623109_134531475c_1_1", has var "edi", has version 5, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348623109_134531475c_1_1, from-node: $L_8740348623109_134531475c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348638213_134531475c isa instruction, has hash "N_8740348638213_134531475c", has il-index 112, has asm-address "0x804c993", has operation-type "MLIL_VAR_PHI", has ins-text "esi_2#14 = ϕ(esi#8, esi_2#13)";
(contains-instruction: $N_8740348638213_134531475c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348638213_134531475c isa instruction, has hash "N_8740348638213_134531475c"; 

insert
$N_8740348638213_134531475c_0 isa variable-ssa, has hash "N_8740348638213_134531475c_0", has var "esi_2", has version 14, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348638213_134531475c_0, from-node: $N_8740348638213_134531475c) isa node-link; 

match
$N_8740348638213_134531475c isa instruction, has hash "N_8740348638213_134531475c"; 

insert
$L_8740348638213_134531475c_1 isa list, has hash "L_8740348638213_134531475c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348638213_134531475c_1, from-node: $N_8740348638213_134531475c) isa node-link; 

match
$L_8740348638213_134531475c_1 isa list, has hash "L_8740348638213_134531475c_1"; 

insert
$N_8740348638213_134531475c_1_0 isa variable-ssa, has hash "N_8740348638213_134531475c_1_0", has var "esi", has version 8, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348638213_134531475c_1_0, from-node: $L_8740348638213_134531475c_1) isa node-link; 

match
$L_8740348638213_134531475c_1 isa list, has hash "L_8740348638213_134531475c_1"; 

insert
$N_8740348638213_134531475c_1_1 isa variable-ssa, has hash "N_8740348638213_134531475c_1_1", has var "esi_2", has version 13, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348638213_134531475c_1_1, from-node: $L_8740348638213_134531475c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348773529_134531475c isa instruction, has hash "N_8740348773529_134531475c", has il-index 115, has asm-address "0x804c993", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_16#21 = var_194 @ mem#21";
(contains-instruction: $N_8740348773529_134531475c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348773529_134531475c isa instruction, has hash "N_8740348773529_134531475c"; 

insert
$N_8740348773529_134531475c_0 isa variable-ssa, has hash "N_8740348773529_134531475c_0", has var "eax_16", has version 21, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348773529_134531475c_0, from-node: $N_8740348773529_134531475c) isa node-link; 

match
$N_8740348773529_134531475c isa instruction, has hash "N_8740348773529_134531475c"; 

insert
$N_8740348773529_134531475c_1 isa MLIL_VAR_ALIASED, has hash "N_8740348773529_134531475c_1", has edge-label "src";
(to-node: $N_8740348773529_134531475c_1, from-node: $N_8740348773529_134531475c) isa node-link; 

match
$N_8740348773529_134531475c_1 isa operation, has hash "N_8740348773529_134531475c_1"; 

insert
$N_8740348773529_134531475c_1_0 isa variable-ssa, has hash "N_8740348773529_134531475c_1_0", has var "var_194", has version 21, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348773529_134531475c_1_0, from-node: $N_8740348773529_134531475c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348784645_134531475c isa instruction, has hash "N_8740348784645_134531475c", has il-index 114, has asm-address "0x804c993", has operation-type "MLIL_MEM_PHI", has ins-text "mem#21 = ϕ(mem#17, mem#20)";
(contains-instruction: $N_8740348784645_134531475c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348784645_134531475c isa instruction, has hash "N_8740348784645_134531475c"; 

insert
$N_8740348784645_134531475c_0 isa constant, has hash "N_8740348784645_134531475c_0", has constant-value "21", has edge-label "dest_memory";
(to-node: $N_8740348784645_134531475c_0, from-node: $N_8740348784645_134531475c) isa node-link; 

match
$N_8740348784645_134531475c isa instruction, has hash "N_8740348784645_134531475c"; 

insert
$L_8740348784645_134531475c_1 isa list, has hash "L_8740348784645_134531475c_1", has list-size 2, has edge-label "src_memory";
(to-node: $L_8740348784645_134531475c_1, from-node: $N_8740348784645_134531475c) isa node-link; 

match
$L_8740348784645_134531475c_1 isa list, has hash "L_8740348784645_134531475c_1"; 

insert
$N_8740348784645_134531475c_1_0 isa constant, has hash "N_8740348784645_134531475c_1_0", has constant-value "17", has edge-label "0";
(to-node: $N_8740348784645_134531475c_1_0, from-node: $L_8740348784645_134531475c_1) isa node-link; 

match
$L_8740348784645_134531475c_1 isa list, has hash "L_8740348784645_134531475c_1"; 

insert
$N_8740348784645_134531475c_1_1 isa constant, has hash "N_8740348784645_134531475c_1_1", has constant-value "20", has edge-label "1";
(to-node: $N_8740348784645_134531475c_1_1, from-node: $L_8740348784645_134531475c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349179613_134531475c isa instruction, has hash "N_8740349179613_134531475c", has il-index 111, has asm-address "0x804c993", has operation-type "MLIL_VAR_PHI", has ins-text "eax_15#20 = ϕ(eax_11#14, eax_15#19)";
(contains-instruction: $N_8740349179613_134531475c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349179613_134531475c isa instruction, has hash "N_8740349179613_134531475c"; 

insert
$N_8740349179613_134531475c_0 isa variable-ssa, has hash "N_8740349179613_134531475c_0", has var "eax_15", has version 20, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349179613_134531475c_0, from-node: $N_8740349179613_134531475c) isa node-link; 

match
$N_8740349179613_134531475c isa instruction, has hash "N_8740349179613_134531475c"; 

insert
$L_8740349179613_134531475c_1 isa list, has hash "L_8740349179613_134531475c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349179613_134531475c_1, from-node: $N_8740349179613_134531475c) isa node-link; 

match
$L_8740349179613_134531475c_1 isa list, has hash "L_8740349179613_134531475c_1"; 

insert
$N_8740349179613_134531475c_1_0 isa variable-ssa, has hash "N_8740349179613_134531475c_1_0", has var "eax_11", has version 14, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349179613_134531475c_1_0, from-node: $L_8740349179613_134531475c_1) isa node-link; 

match
$L_8740349179613_134531475c_1 isa list, has hash "L_8740349179613_134531475c_1"; 

insert
$N_8740349179613_134531475c_1_1 isa variable-ssa, has hash "N_8740349179613_134531475c_1_1", has var "eax_15", has version 19, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349179613_134531475c_1_1, from-node: $L_8740349179613_134531475c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349195525_134531475c isa instruction, has hash "N_8740349195525_134531475c", has il-index 110, has asm-address "0x804c993", has operation-type "MLIL_VAR_PHI", has ins-text "var_1ac_9#14 = ϕ(var_1ac_7#10, var_1ac_9#13)";
(contains-instruction: $N_8740349195525_134531475c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349195525_134531475c isa instruction, has hash "N_8740349195525_134531475c"; 

insert
$N_8740349195525_134531475c_0 isa variable-ssa, has hash "N_8740349195525_134531475c_0", has var "var_1ac_9", has version 14, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349195525_134531475c_0, from-node: $N_8740349195525_134531475c) isa node-link; 

match
$N_8740349195525_134531475c isa instruction, has hash "N_8740349195525_134531475c"; 

insert
$L_8740349195525_134531475c_1 isa list, has hash "L_8740349195525_134531475c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349195525_134531475c_1, from-node: $N_8740349195525_134531475c) isa node-link; 

match
$L_8740349195525_134531475c_1 isa list, has hash "L_8740349195525_134531475c_1"; 

insert
$N_8740349195525_134531475c_1_0 isa variable-ssa, has hash "N_8740349195525_134531475c_1_0", has var "var_1ac_7", has version 10, has edge-label "0", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349195525_134531475c_1_0, from-node: $L_8740349195525_134531475c_1) isa node-link; 

match
$L_8740349195525_134531475c_1 isa list, has hash "L_8740349195525_134531475c_1"; 

insert
$N_8740349195525_134531475c_1_1 isa variable-ssa, has hash "N_8740349195525_134531475c_1_1", has var "var_1ac_9", has version 13, has edge-label "1", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349195525_134531475c_1_1, from-node: $L_8740349195525_134531475c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349171461_134531479c isa instruction, has hash "N_8740349171461_134531479c", has il-index 116, has asm-address "0x804c997", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1a8_2#2 = &var_190";
(contains-instruction: $N_8740349171461_134531479c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349171461_134531479c isa instruction, has hash "N_8740349171461_134531479c"; 

insert
$N_8740349171461_134531479c_0 isa variable-ssa, has hash "N_8740349171461_134531479c_0", has var "var_1a8_2", has version 2, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349171461_134531479c_0, from-node: $N_8740349171461_134531479c) isa node-link; 

match
$N_8740349171461_134531479c isa instruction, has hash "N_8740349171461_134531479c"; 

insert
$N_8740349171461_134531479c_1 isa MLIL_ADDRESS_OF, has hash "N_8740349171461_134531479c_1", has edge-label "src";
(to-node: $N_8740349171461_134531479c_1, from-node: $N_8740349171461_134531479c) isa node-link; 

match
$N_8740349171461_134531479c_1 isa operation, has hash "N_8740349171461_134531479c_1"; 

insert
$N_8740349171461_134531479c_1_0 isa variable, has hash "N_8740349171461_134531479c_1_0", has var "var_190", has edge-label "src", has var-type "void", has var-size 256, has var-func "cgc_handle_register_user";
(to-node: $N_8740349171461_134531479c_1_0, from-node: $N_8740349171461_134531479c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348738309_134531483c isa instruction, has hash "N_8740348738309_134531483c", has il-index 117, has asm-address "0x804c99b", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_10#15 = eax_16#21";
(contains-instruction: $N_8740348738309_134531483c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348738309_134531483c isa instruction, has hash "N_8740348738309_134531483c"; 

insert
$N_8740348738309_134531483c_0 isa variable-ssa, has hash "N_8740348738309_134531483c_0", has var "var_1ac_10", has version 15, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348738309_134531483c_0, from-node: $N_8740348738309_134531483c) isa node-link; 

match
$N_8740348738309_134531483c isa instruction, has hash "N_8740348738309_134531483c"; 

insert
$N_8740348738309_134531483c_1 isa MLIL_VAR_SSA, has hash "N_8740348738309_134531483c_1", has edge-label "src";
(to-node: $N_8740348738309_134531483c_1, from-node: $N_8740348738309_134531483c) isa node-link; 

match
$N_8740348738309_134531483c_1 isa operation, has hash "N_8740348738309_134531483c_1"; 

insert
$N_8740348738309_134531483c_1_0 isa variable-ssa, has hash "N_8740348738309_134531483c_1_0", has var "eax_16", has version 21, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348738309_134531483c_1_0, from-node: $N_8740348738309_134531483c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348391429_134531486c isa instruction, has hash "N_8740348391429_134531486c", has il-index 118, has asm-address "0x804c99e", has operation-type "MLIL_CALL_SSA", has ins-text "eax_17#22, mem#22 = 0x804c460(var_1ac_10#15, var_1a8_2#2) @ mem#21";
(contains-instruction: $N_8740348391429_134531486c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348391429_134531486c isa instruction, has hash "N_8740348391429_134531486c"; 

insert
$N_8740348391429_134531486c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348391429_134531486c_0", has edge-label "output";
(to-node: $N_8740348391429_134531486c_0, from-node: $N_8740348391429_134531486c) isa node-link; 

match
$N_8740348391429_134531486c_0 isa operation, has hash "N_8740348391429_134531486c_0"; 

insert
$N_8740348391429_134531486c_0_0 isa constant, has hash "N_8740348391429_134531486c_0_0", has constant-value "22", has edge-label "dest_memory";
(to-node: $N_8740348391429_134531486c_0_0, from-node: $N_8740348391429_134531486c_0) isa node-link; 

match
$N_8740348391429_134531486c_0 isa operation, has hash "N_8740348391429_134531486c_0"; 

insert
$L_8740348391429_134531486c_0_1 isa list, has hash "L_8740348391429_134531486c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348391429_134531486c_0_1, from-node: $N_8740348391429_134531486c_0) isa node-link; 

match
$L_8740348391429_134531486c_0_1 isa list, has hash "L_8740348391429_134531486c_0_1"; 

insert
$N_8740348391429_134531486c_0_1_0 isa variable-ssa, has hash "N_8740348391429_134531486c_0_1_0", has var "eax_17", has version 22, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348391429_134531486c_0_1_0, from-node: $L_8740348391429_134531486c_0_1) isa node-link; 

match
$N_8740348391429_134531486c isa instruction, has hash "N_8740348391429_134531486c"; 

insert
$N_8740348391429_134531486c_1 isa MLIL_CONST_PTR, has hash "N_8740348391429_134531486c_1", has edge-label "dest";
(to-node: $N_8740348391429_134531486c_1, from-node: $N_8740348391429_134531486c) isa node-link; 

match
$N_8740348391429_134531486c_1 isa operation, has hash "N_8740348391429_134531486c_1"; 

insert
$N_8740348391429_134531486c_1_0 isa constant, has hash "N_8740348391429_134531486c_1_0", has constant-value "134530144", has edge-label "constant";
(to-node: $N_8740348391429_134531486c_1_0, from-node: $N_8740348391429_134531486c_1) isa node-link; 

match
$N_8740348391429_134531486c isa instruction, has hash "N_8740348391429_134531486c"; 

insert
$L_8740348391429_134531486c_2 isa list, has hash "L_8740348391429_134531486c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740348391429_134531486c_2, from-node: $N_8740348391429_134531486c) isa node-link; 

match
$L_8740348391429_134531486c_2 isa list, has hash "L_8740348391429_134531486c_2"; 

insert
$N_8740348391429_134531486c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348391429_134531486c_2_0", has edge-label "0";
(to-node: $N_8740348391429_134531486c_2_0, from-node: $L_8740348391429_134531486c_2) isa node-link; 

match
$N_8740348391429_134531486c_2_0 isa operation, has hash "N_8740348391429_134531486c_2_0"; 

insert
$N_8740348391429_134531486c_2_0_0 isa variable-ssa, has hash "N_8740348391429_134531486c_2_0_0", has var "var_1ac_10", has version 15, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348391429_134531486c_2_0_0, from-node: $N_8740348391429_134531486c_2_0) isa node-link; 

match
$L_8740348391429_134531486c_2 isa list, has hash "L_8740348391429_134531486c_2"; 

insert
$N_8740348391429_134531486c_2_1 isa MLIL_VAR_SSA, has hash "N_8740348391429_134531486c_2_1", has edge-label "1";
(to-node: $N_8740348391429_134531486c_2_1, from-node: $L_8740348391429_134531486c_2) isa node-link; 

match
$N_8740348391429_134531486c_2_1 isa operation, has hash "N_8740348391429_134531486c_2_1"; 

insert
$N_8740348391429_134531486c_2_1_0 isa variable-ssa, has hash "N_8740348391429_134531486c_2_1_0", has var "var_1a8_2", has version 2, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348391429_134531486c_2_1_0, from-node: $N_8740348391429_134531486c_2_1) isa node-link; 

match
$N_8740348391429_134531486c isa instruction, has hash "N_8740348391429_134531486c"; 

insert
$N_8740348391429_134531486c_3 isa constant, has hash "N_8740348391429_134531486c_3", has constant-value "21", has edge-label "src_memory";
(to-node: $N_8740348391429_134531486c_3, from-node: $N_8740348391429_134531486c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349577093_134531491c isa instruction, has hash "N_8740349577093_134531491c", has il-index 119, has asm-address "0x804c9a3", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#15 = eax_17#22";
(contains-instruction: $N_8740349577093_134531491c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349577093_134531491c isa instruction, has hash "N_8740349577093_134531491c"; 

insert
$N_8740349577093_134531491c_0 isa variable-ssa, has hash "N_8740349577093_134531491c_0", has var "esi", has version 15, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349577093_134531491c_0, from-node: $N_8740349577093_134531491c) isa node-link; 

match
$N_8740349577093_134531491c isa instruction, has hash "N_8740349577093_134531491c"; 

insert
$N_8740349577093_134531491c_1 isa MLIL_VAR_SSA, has hash "N_8740349577093_134531491c_1", has edge-label "src";
(to-node: $N_8740349577093_134531491c_1, from-node: $N_8740349577093_134531491c) isa node-link; 

match
$N_8740349577093_134531491c_1 isa operation, has hash "N_8740349577093_134531491c_1"; 

insert
$N_8740349577093_134531491c_1_0 isa variable-ssa, has hash "N_8740349577093_134531491c_1_0", has var "eax_17", has version 22, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349577093_134531491c_1_0, from-node: $N_8740349577093_134531491c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 110, has bb-end 120; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349447173_134531495c isa instruction, has hash "N_8740349447173_134531495c", has il-index 120, has asm-address "0x804c9a7", has operation-type "MLIL_IF", has ins-text "if (esi#15 == 0) then 129 @ 0x804c9d5 else 135 @ 0x804c9a9";
(contains-instruction: $N_8740349447173_134531495c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349447173_134531495c isa instruction, has hash "N_8740349447173_134531495c"; 

insert
$N_8740349447173_134531495c_0 isa MLIL_CMP_E, has hash "N_8740349447173_134531495c_0", has edge-label "condition";
(to-node: $N_8740349447173_134531495c_0, from-node: $N_8740349447173_134531495c) isa node-link; 

match
$N_8740349447173_134531495c_0 isa operation, has hash "N_8740349447173_134531495c_0"; 

insert
$N_8740349447173_134531495c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349447173_134531495c_0_0", has edge-label "left";
(to-node: $N_8740349447173_134531495c_0_0, from-node: $N_8740349447173_134531495c_0) isa node-link; 

match
$N_8740349447173_134531495c_0_0 isa operation, has hash "N_8740349447173_134531495c_0_0"; 

insert
$N_8740349447173_134531495c_0_0_0 isa variable-ssa, has hash "N_8740349447173_134531495c_0_0_0", has var "esi", has version 15, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349447173_134531495c_0_0_0, from-node: $N_8740349447173_134531495c_0_0) isa node-link; 

match
$N_8740349447173_134531495c_0 isa operation, has hash "N_8740349447173_134531495c_0"; 

insert
$N_8740349447173_134531495c_0_1 isa MLIL_CONST, has hash "N_8740349447173_134531495c_0_1", has edge-label "right";
(to-node: $N_8740349447173_134531495c_0_1, from-node: $N_8740349447173_134531495c_0) isa node-link; 

match
$N_8740349447173_134531495c_0_1 isa operation, has hash "N_8740349447173_134531495c_0_1"; 

insert
$N_8740349447173_134531495c_0_1_0 isa constant, has hash "N_8740349447173_134531495c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349447173_134531495c_0_1_0, from-node: $N_8740349447173_134531495c_0_1) isa node-link; 

match
$N_8740349447173_134531495c isa instruction, has hash "N_8740349447173_134531495c"; 

insert
$N_8740349447173_134531495c_1 isa constant, has hash "N_8740349447173_134531495c_1", has constant-value "129", has edge-label "true";
(to-node: $N_8740349447173_134531495c_1, from-node: $N_8740349447173_134531495c) isa node-link; 

match
$N_8740349447173_134531495c isa instruction, has hash "N_8740349447173_134531495c"; 

insert
$N_8740349447173_134531495c_2 isa constant, has hash "N_8740349447173_134531495c_2", has constant-value "135", has edge-label "false";
(to-node: $N_8740349447173_134531495c_2, from-node: $N_8740349447173_134531495c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 121, has bb-end 128; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 121, has bb-end 128; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 121, has bb-end 128; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348340033_134531440c isa instruction, has hash "N_8740348340033_134531440c", has il-index 125, has asm-address "0x804c970", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_12#16 = sx.d([&var_190 + esi_2#11].b @ mem#18)";
(contains-instruction: $N_8740348340033_134531440c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348340033_134531440c isa instruction, has hash "N_8740348340033_134531440c"; 

insert
$N_8740348340033_134531440c_0 isa variable-ssa, has hash "N_8740348340033_134531440c_0", has var "eax_12", has version 16, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348340033_134531440c_0, from-node: $N_8740348340033_134531440c) isa node-link; 

match
$N_8740348340033_134531440c isa instruction, has hash "N_8740348340033_134531440c"; 

insert
$N_8740348340033_134531440c_1 isa MLIL_SX, has hash "N_8740348340033_134531440c_1", has edge-label "src";
(to-node: $N_8740348340033_134531440c_1, from-node: $N_8740348340033_134531440c) isa node-link; 

match
$N_8740348340033_134531440c_1 isa operation, has hash "N_8740348340033_134531440c_1"; 

insert
$N_8740348340033_134531440c_1_0 isa MLIL_LOAD_SSA, has hash "N_8740348340033_134531440c_1_0", has edge-label "src";
(to-node: $N_8740348340033_134531440c_1_0, from-node: $N_8740348340033_134531440c_1) isa node-link; 

match
$N_8740348340033_134531440c_1_0 isa operation, has hash "N_8740348340033_134531440c_1_0"; 

insert
$N_8740348340033_134531440c_1_0_0 isa MLIL_ADD, has hash "N_8740348340033_134531440c_1_0_0", has edge-label "src";
(to-node: $N_8740348340033_134531440c_1_0_0, from-node: $N_8740348340033_134531440c_1_0) isa node-link; 

match
$N_8740348340033_134531440c_1_0_0 isa operation, has hash "N_8740348340033_134531440c_1_0_0"; 

insert
$N_8740348340033_134531440c_1_0_0_0 isa MLIL_ADDRESS_OF, has hash "N_8740348340033_134531440c_1_0_0_0", has edge-label "left";
(to-node: $N_8740348340033_134531440c_1_0_0_0, from-node: $N_8740348340033_134531440c_1_0_0) isa node-link; 

match
$N_8740348340033_134531440c_1_0_0_0 isa operation, has hash "N_8740348340033_134531440c_1_0_0_0"; 

insert
$N_8740348340033_134531440c_1_0_0_0_0 isa variable, has hash "N_8740348340033_134531440c_1_0_0_0_0", has var "var_190", has edge-label "src", has var-type "void", has var-size 256, has var-func "cgc_handle_register_user";
(to-node: $N_8740348340033_134531440c_1_0_0_0_0, from-node: $N_8740348340033_134531440c_1_0_0_0) isa node-link; 

match
$N_8740348340033_134531440c_1_0_0 isa operation, has hash "N_8740348340033_134531440c_1_0_0"; 

insert
$N_8740348340033_134531440c_1_0_0_1 isa MLIL_VAR_SSA, has hash "N_8740348340033_134531440c_1_0_0_1", has edge-label "right";
(to-node: $N_8740348340033_134531440c_1_0_0_1, from-node: $N_8740348340033_134531440c_1_0_0) isa node-link; 

match
$N_8740348340033_134531440c_1_0_0_1 isa operation, has hash "N_8740348340033_134531440c_1_0_0_1"; 

insert
$N_8740348340033_134531440c_1_0_0_1_0 isa variable-ssa, has hash "N_8740348340033_134531440c_1_0_0_1_0", has var "esi_2", has version 11, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348340033_134531440c_1_0_0_1_0, from-node: $N_8740348340033_134531440c_1_0_0_1) isa node-link; 

match
$N_8740348340033_134531440c_1_0 isa operation, has hash "N_8740348340033_134531440c_1_0"; 

insert
$N_8740348340033_134531440c_1_0_1 isa constant, has hash "N_8740348340033_134531440c_1_0_1", has constant-value "18", has edge-label "src_memory";
(to-node: $N_8740348340033_134531440c_1_0_1, from-node: $N_8740348340033_134531440c_1_0) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 121, has bb-end 128; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348343557_134531440c isa instruction, has hash "N_8740348343557_134531440c", has il-index 124, has asm-address "0x804c970", has operation-type "MLIL_MEM_PHI", has ins-text "mem#18 = ϕ(mem#17, mem#20)";
(contains-instruction: $N_8740348343557_134531440c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348343557_134531440c isa instruction, has hash "N_8740348343557_134531440c"; 

insert
$N_8740348343557_134531440c_0 isa constant, has hash "N_8740348343557_134531440c_0", has constant-value "18", has edge-label "dest_memory";
(to-node: $N_8740348343557_134531440c_0, from-node: $N_8740348343557_134531440c) isa node-link; 

match
$N_8740348343557_134531440c isa instruction, has hash "N_8740348343557_134531440c"; 

insert
$L_8740348343557_134531440c_1 isa list, has hash "L_8740348343557_134531440c_1", has list-size 2, has edge-label "src_memory";
(to-node: $L_8740348343557_134531440c_1, from-node: $N_8740348343557_134531440c) isa node-link; 

match
$L_8740348343557_134531440c_1 isa list, has hash "L_8740348343557_134531440c_1"; 

insert
$N_8740348343557_134531440c_1_0 isa constant, has hash "N_8740348343557_134531440c_1_0", has constant-value "17", has edge-label "0";
(to-node: $N_8740348343557_134531440c_1_0, from-node: $L_8740348343557_134531440c_1) isa node-link; 

match
$L_8740348343557_134531440c_1 isa list, has hash "L_8740348343557_134531440c_1"; 

insert
$N_8740348343557_134531440c_1_1 isa constant, has hash "N_8740348343557_134531440c_1_1", has constant-value "20", has edge-label "1";
(to-node: $N_8740348343557_134531440c_1_1, from-node: $L_8740348343557_134531440c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 121, has bb-end 128; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348640005_134531440c isa instruction, has hash "N_8740348640005_134531440c", has il-index 121, has asm-address "0x804c970", has operation-type "MLIL_VAR_PHI", has ins-text "var_1ac_9#11 = ϕ(var_1ac_7#10, var_1ac_9#13)";
(contains-instruction: $N_8740348640005_134531440c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348640005_134531440c isa instruction, has hash "N_8740348640005_134531440c"; 

insert
$N_8740348640005_134531440c_0 isa variable-ssa, has hash "N_8740348640005_134531440c_0", has var "var_1ac_9", has version 11, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348640005_134531440c_0, from-node: $N_8740348640005_134531440c) isa node-link; 

match
$N_8740348640005_134531440c isa instruction, has hash "N_8740348640005_134531440c"; 

insert
$L_8740348640005_134531440c_1 isa list, has hash "L_8740348640005_134531440c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348640005_134531440c_1, from-node: $N_8740348640005_134531440c) isa node-link; 

match
$L_8740348640005_134531440c_1 isa list, has hash "L_8740348640005_134531440c_1"; 

insert
$N_8740348640005_134531440c_1_0 isa variable-ssa, has hash "N_8740348640005_134531440c_1_0", has var "var_1ac_7", has version 10, has edge-label "0", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348640005_134531440c_1_0, from-node: $L_8740348640005_134531440c_1) isa node-link; 

match
$L_8740348640005_134531440c_1 isa list, has hash "L_8740348640005_134531440c_1"; 

insert
$N_8740348640005_134531440c_1_1 isa variable-ssa, has hash "N_8740348640005_134531440c_1_1", has var "var_1ac_9", has version 13, has edge-label "1", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348640005_134531440c_1_1, from-node: $L_8740348640005_134531440c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 121, has bb-end 128; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349152261_134531440c isa instruction, has hash "N_8740349152261_134531440c", has il-index 123, has asm-address "0x804c970", has operation-type "MLIL_VAR_PHI", has ins-text "esi_2#11 = ϕ(esi_2#10, esi_2#13)";
(contains-instruction: $N_8740349152261_134531440c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349152261_134531440c isa instruction, has hash "N_8740349152261_134531440c"; 

insert
$N_8740349152261_134531440c_0 isa variable-ssa, has hash "N_8740349152261_134531440c_0", has var "esi_2", has version 11, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349152261_134531440c_0, from-node: $N_8740349152261_134531440c) isa node-link; 

match
$N_8740349152261_134531440c isa instruction, has hash "N_8740349152261_134531440c"; 

insert
$L_8740349152261_134531440c_1 isa list, has hash "L_8740349152261_134531440c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349152261_134531440c_1, from-node: $N_8740349152261_134531440c) isa node-link; 

match
$L_8740349152261_134531440c_1 isa list, has hash "L_8740349152261_134531440c_1"; 

insert
$N_8740349152261_134531440c_1_0 isa variable-ssa, has hash "N_8740349152261_134531440c_1_0", has var "esi_2", has version 10, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349152261_134531440c_1_0, from-node: $L_8740349152261_134531440c_1) isa node-link; 

match
$L_8740349152261_134531440c_1 isa list, has hash "L_8740349152261_134531440c_1"; 

insert
$N_8740349152261_134531440c_1_1 isa variable-ssa, has hash "N_8740349152261_134531440c_1_1", has var "esi_2", has version 13, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349152261_134531440c_1_1, from-node: $L_8740349152261_134531440c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 121, has bb-end 128; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349446105_134531440c isa instruction, has hash "N_8740349446105_134531440c", has il-index 122, has asm-address "0x804c970", has operation-type "MLIL_VAR_PHI", has ins-text "eax_15#15 = ϕ(eax_11#14, eax_15#19)";
(contains-instruction: $N_8740349446105_134531440c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349446105_134531440c isa instruction, has hash "N_8740349446105_134531440c"; 

insert
$N_8740349446105_134531440c_0 isa variable-ssa, has hash "N_8740349446105_134531440c_0", has var "eax_15", has version 15, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349446105_134531440c_0, from-node: $N_8740349446105_134531440c) isa node-link; 

match
$N_8740349446105_134531440c isa instruction, has hash "N_8740349446105_134531440c"; 

insert
$L_8740349446105_134531440c_1 isa list, has hash "L_8740349446105_134531440c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349446105_134531440c_1, from-node: $N_8740349446105_134531440c) isa node-link; 

match
$L_8740349446105_134531440c_1 isa list, has hash "L_8740349446105_134531440c_1"; 

insert
$N_8740349446105_134531440c_1_0 isa variable-ssa, has hash "N_8740349446105_134531440c_1_0", has var "eax_11", has version 14, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349446105_134531440c_1_0, from-node: $L_8740349446105_134531440c_1) isa node-link; 

match
$L_8740349446105_134531440c_1 isa list, has hash "L_8740349446105_134531440c_1"; 

insert
$N_8740349446105_134531440c_1_1 isa variable-ssa, has hash "N_8740349446105_134531440c_1_1", has var "eax_15", has version 19, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349446105_134531440c_1_1, from-node: $L_8740349446105_134531440c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 121, has bb-end 128; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 121, has bb-end 128; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348587337_134531445c isa instruction, has hash "N_8740348587337_134531445c", has il-index 126, has asm-address "0x804c975", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_8#12 = eax_12#16";
(contains-instruction: $N_8740348587337_134531445c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348587337_134531445c isa instruction, has hash "N_8740348587337_134531445c"; 

insert
$N_8740348587337_134531445c_0 isa variable-ssa, has hash "N_8740348587337_134531445c_0", has var "var_1ac_8", has version 12, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348587337_134531445c_0, from-node: $N_8740348587337_134531445c) isa node-link; 

match
$N_8740348587337_134531445c isa instruction, has hash "N_8740348587337_134531445c"; 

insert
$N_8740348587337_134531445c_1 isa MLIL_VAR_SSA, has hash "N_8740348587337_134531445c_1", has edge-label "src";
(to-node: $N_8740348587337_134531445c_1, from-node: $N_8740348587337_134531445c) isa node-link; 

match
$N_8740348587337_134531445c_1 isa operation, has hash "N_8740348587337_134531445c_1"; 

insert
$N_8740348587337_134531445c_1_0 isa variable-ssa, has hash "N_8740348587337_134531445c_1_0", has var "eax_12", has version 16, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348587337_134531445c_1_0, from-node: $N_8740348587337_134531445c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 121, has bb-end 128; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 121, has bb-end 128; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348871685_134531448c isa instruction, has hash "N_8740348871685_134531448c", has il-index 127, has asm-address "0x804c978", has operation-type "MLIL_CALL_SSA", has ins-text "eax_13#17, mem#19 = 0x804c250(var_1ac_8#12) @ mem#18";
(contains-instruction: $N_8740348871685_134531448c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348871685_134531448c isa instruction, has hash "N_8740348871685_134531448c"; 

insert
$N_8740348871685_134531448c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348871685_134531448c_0", has edge-label "output";
(to-node: $N_8740348871685_134531448c_0, from-node: $N_8740348871685_134531448c) isa node-link; 

match
$N_8740348871685_134531448c_0 isa operation, has hash "N_8740348871685_134531448c_0"; 

insert
$N_8740348871685_134531448c_0_0 isa constant, has hash "N_8740348871685_134531448c_0_0", has constant-value "19", has edge-label "dest_memory";
(to-node: $N_8740348871685_134531448c_0_0, from-node: $N_8740348871685_134531448c_0) isa node-link; 

match
$N_8740348871685_134531448c_0 isa operation, has hash "N_8740348871685_134531448c_0"; 

insert
$L_8740348871685_134531448c_0_1 isa list, has hash "L_8740348871685_134531448c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348871685_134531448c_0_1, from-node: $N_8740348871685_134531448c_0) isa node-link; 

match
$L_8740348871685_134531448c_0_1 isa list, has hash "L_8740348871685_134531448c_0_1"; 

insert
$N_8740348871685_134531448c_0_1_0 isa variable-ssa, has hash "N_8740348871685_134531448c_0_1_0", has var "eax_13", has version 17, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348871685_134531448c_0_1_0, from-node: $L_8740348871685_134531448c_0_1) isa node-link; 

match
$N_8740348871685_134531448c isa instruction, has hash "N_8740348871685_134531448c"; 

insert
$N_8740348871685_134531448c_1 isa MLIL_CONST_PTR, has hash "N_8740348871685_134531448c_1", has edge-label "dest";
(to-node: $N_8740348871685_134531448c_1, from-node: $N_8740348871685_134531448c) isa node-link; 

match
$N_8740348871685_134531448c_1 isa operation, has hash "N_8740348871685_134531448c_1"; 

insert
$N_8740348871685_134531448c_1_0 isa constant, has hash "N_8740348871685_134531448c_1_0", has constant-value "134529616", has edge-label "constant";
(to-node: $N_8740348871685_134531448c_1_0, from-node: $N_8740348871685_134531448c_1) isa node-link; 

match
$N_8740348871685_134531448c isa instruction, has hash "N_8740348871685_134531448c"; 

insert
$L_8740348871685_134531448c_2 isa list, has hash "L_8740348871685_134531448c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740348871685_134531448c_2, from-node: $N_8740348871685_134531448c) isa node-link; 

match
$L_8740348871685_134531448c_2 isa list, has hash "L_8740348871685_134531448c_2"; 

insert
$N_8740348871685_134531448c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348871685_134531448c_2_0", has edge-label "0";
(to-node: $N_8740348871685_134531448c_2_0, from-node: $L_8740348871685_134531448c_2) isa node-link; 

match
$N_8740348871685_134531448c_2_0 isa operation, has hash "N_8740348871685_134531448c_2_0"; 

insert
$N_8740348871685_134531448c_2_0_0 isa variable-ssa, has hash "N_8740348871685_134531448c_2_0_0", has var "var_1ac_8", has version 12, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348871685_134531448c_2_0_0, from-node: $N_8740348871685_134531448c_2_0) isa node-link; 

match
$N_8740348871685_134531448c isa instruction, has hash "N_8740348871685_134531448c"; 

insert
$N_8740348871685_134531448c_3 isa constant, has hash "N_8740348871685_134531448c_3", has constant-value "18", has edge-label "src_memory";
(to-node: $N_8740348871685_134531448c_3, from-node: $N_8740348871685_134531448c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 121, has bb-end 128; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 121, has bb-end 128; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348383569_134531455c isa instruction, has hash "N_8740348383569_134531455c", has il-index 128, has asm-address "0x804c97f", has operation-type "MLIL_IF", has ins-text "if (eax_13#17 == 0) then 137 @ 0x804ca68 else 139 @ 0x804c985";
(contains-instruction: $N_8740348383569_134531455c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348383569_134531455c isa instruction, has hash "N_8740348383569_134531455c"; 

insert
$N_8740348383569_134531455c_0 isa MLIL_CMP_E, has hash "N_8740348383569_134531455c_0", has edge-label "condition";
(to-node: $N_8740348383569_134531455c_0, from-node: $N_8740348383569_134531455c) isa node-link; 

match
$N_8740348383569_134531455c_0 isa operation, has hash "N_8740348383569_134531455c_0"; 

insert
$N_8740348383569_134531455c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348383569_134531455c_0_0", has edge-label "left";
(to-node: $N_8740348383569_134531455c_0_0, from-node: $N_8740348383569_134531455c_0) isa node-link; 

match
$N_8740348383569_134531455c_0_0 isa operation, has hash "N_8740348383569_134531455c_0_0"; 

insert
$N_8740348383569_134531455c_0_0_0 isa variable-ssa, has hash "N_8740348383569_134531455c_0_0_0", has var "eax_13", has version 17, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348383569_134531455c_0_0_0, from-node: $N_8740348383569_134531455c_0_0) isa node-link; 

match
$N_8740348383569_134531455c_0 isa operation, has hash "N_8740348383569_134531455c_0"; 

insert
$N_8740348383569_134531455c_0_1 isa MLIL_CONST, has hash "N_8740348383569_134531455c_0_1", has edge-label "right";
(to-node: $N_8740348383569_134531455c_0_1, from-node: $N_8740348383569_134531455c_0) isa node-link; 

match
$N_8740348383569_134531455c_0_1 isa operation, has hash "N_8740348383569_134531455c_0_1"; 

insert
$N_8740348383569_134531455c_0_1_0 isa constant, has hash "N_8740348383569_134531455c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348383569_134531455c_0_1_0, from-node: $N_8740348383569_134531455c_0_1) isa node-link; 

match
$N_8740348383569_134531455c isa instruction, has hash "N_8740348383569_134531455c"; 

insert
$N_8740348383569_134531455c_1 isa constant, has hash "N_8740348383569_134531455c_1", has constant-value "137", has edge-label "true";
(to-node: $N_8740348383569_134531455c_1, from-node: $N_8740348383569_134531455c) isa node-link; 

match
$N_8740348383569_134531455c isa instruction, has hash "N_8740348383569_134531455c"; 

insert
$N_8740348383569_134531455c_2 isa constant, has hash "N_8740348383569_134531455c_2", has constant-value "139", has edge-label "false";
(to-node: $N_8740348383569_134531455c_2, from-node: $N_8740348383569_134531455c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 129, has bb-end 134; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 129, has bb-end 134; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 129, has bb-end 134; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348439813_134531541c isa instruction, has hash "N_8740348439813_134531541c", has il-index 129, has asm-address "0x804c9d5", has operation-type "MLIL_CALL_SSA", has ins-text "mem#23 = 0x804afd0(eax_17#22, 0x804efc9) @ mem#22";
(contains-instruction: $N_8740348439813_134531541c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348439813_134531541c isa instruction, has hash "N_8740348439813_134531541c"; 

insert
$N_8740348439813_134531541c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348439813_134531541c_0", has edge-label "output";
(to-node: $N_8740348439813_134531541c_0, from-node: $N_8740348439813_134531541c) isa node-link; 

match
$N_8740348439813_134531541c_0 isa operation, has hash "N_8740348439813_134531541c_0"; 

insert
$N_8740348439813_134531541c_0_0 isa constant, has hash "N_8740348439813_134531541c_0_0", has constant-value "23", has edge-label "dest_memory";
(to-node: $N_8740348439813_134531541c_0_0, from-node: $N_8740348439813_134531541c_0) isa node-link; 

match
$N_8740348439813_134531541c_0 isa operation, has hash "N_8740348439813_134531541c_0"; 

insert
$L_8740348439813_134531541c_0_1 isa list, has hash "L_8740348439813_134531541c_0_1", has list-size 0, has edge-label "dest";
(to-node: $L_8740348439813_134531541c_0_1, from-node: $N_8740348439813_134531541c_0) isa node-link; 

match
$N_8740348439813_134531541c isa instruction, has hash "N_8740348439813_134531541c"; 

insert
$N_8740348439813_134531541c_1 isa MLIL_CONST_PTR, has hash "N_8740348439813_134531541c_1", has edge-label "dest";
(to-node: $N_8740348439813_134531541c_1, from-node: $N_8740348439813_134531541c) isa node-link; 

match
$N_8740348439813_134531541c_1 isa operation, has hash "N_8740348439813_134531541c_1"; 

insert
$N_8740348439813_134531541c_1_0 isa constant, has hash "N_8740348439813_134531541c_1_0", has constant-value "134524880", has edge-label "constant";
(to-node: $N_8740348439813_134531541c_1_0, from-node: $N_8740348439813_134531541c_1) isa node-link; 

match
$N_8740348439813_134531541c isa instruction, has hash "N_8740348439813_134531541c"; 

insert
$L_8740348439813_134531541c_2 isa list, has hash "L_8740348439813_134531541c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740348439813_134531541c_2, from-node: $N_8740348439813_134531541c) isa node-link; 

match
$L_8740348439813_134531541c_2 isa list, has hash "L_8740348439813_134531541c_2"; 

insert
$N_8740348439813_134531541c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348439813_134531541c_2_0", has edge-label "0";
(to-node: $N_8740348439813_134531541c_2_0, from-node: $L_8740348439813_134531541c_2) isa node-link; 

match
$N_8740348439813_134531541c_2_0 isa operation, has hash "N_8740348439813_134531541c_2_0"; 

insert
$N_8740348439813_134531541c_2_0_0 isa variable-ssa, has hash "N_8740348439813_134531541c_2_0_0", has var "eax_17", has version 22, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348439813_134531541c_2_0_0, from-node: $N_8740348439813_134531541c_2_0) isa node-link; 

match
$L_8740348439813_134531541c_2 isa list, has hash "L_8740348439813_134531541c_2"; 

insert
$N_8740348439813_134531541c_2_1 isa MLIL_CONST, has hash "N_8740348439813_134531541c_2_1", has edge-label "1";
(to-node: $N_8740348439813_134531541c_2_1, from-node: $L_8740348439813_134531541c_2) isa node-link; 

match
$N_8740348439813_134531541c_2_1 isa operation, has hash "N_8740348439813_134531541c_2_1"; 

insert
$N_8740348439813_134531541c_2_1_0 isa constant, has hash "N_8740348439813_134531541c_2_1_0", has constant-value "134541257", has edge-label "constant";
(to-node: $N_8740348439813_134531541c_2_1_0, from-node: $N_8740348439813_134531541c_2_1) isa node-link; 

match
$N_8740348439813_134531541c isa instruction, has hash "N_8740348439813_134531541c"; 

insert
$N_8740348439813_134531541c_3 isa constant, has hash "N_8740348439813_134531541c_3", has constant-value "22", has edge-label "src_memory";
(to-node: $N_8740348439813_134531541c_3, from-node: $N_8740348439813_134531541c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 129, has bb-end 134; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 129, has bb-end 134; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348962873_134531549c isa instruction, has hash "N_8740348962873_134531549c", has il-index 130, has asm-address "0x804c9dd", has operation-type "MLIL_CALL_SSA", has ins-text "edx_3#3, mem#24 = 0x8049ad0(0x8050554) @ mem#23";
(contains-instruction: $N_8740348962873_134531549c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348962873_134531549c isa instruction, has hash "N_8740348962873_134531549c"; 

insert
$N_8740348962873_134531549c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348962873_134531549c_0", has edge-label "output";
(to-node: $N_8740348962873_134531549c_0, from-node: $N_8740348962873_134531549c) isa node-link; 

match
$N_8740348962873_134531549c_0 isa operation, has hash "N_8740348962873_134531549c_0"; 

insert
$N_8740348962873_134531549c_0_0 isa constant, has hash "N_8740348962873_134531549c_0_0", has constant-value "24", has edge-label "dest_memory";
(to-node: $N_8740348962873_134531549c_0_0, from-node: $N_8740348962873_134531549c_0) isa node-link; 

match
$N_8740348962873_134531549c_0 isa operation, has hash "N_8740348962873_134531549c_0"; 

insert
$L_8740348962873_134531549c_0_1 isa list, has hash "L_8740348962873_134531549c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348962873_134531549c_0_1, from-node: $N_8740348962873_134531549c_0) isa node-link; 

match
$L_8740348962873_134531549c_0_1 isa list, has hash "L_8740348962873_134531549c_0_1"; 

insert
$N_8740348962873_134531549c_0_1_0 isa variable-ssa, has hash "N_8740348962873_134531549c_0_1_0", has var "edx_3", has version 3, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348962873_134531549c_0_1_0, from-node: $L_8740348962873_134531549c_0_1) isa node-link; 

match
$N_8740348962873_134531549c isa instruction, has hash "N_8740348962873_134531549c"; 

insert
$N_8740348962873_134531549c_1 isa MLIL_CONST_PTR, has hash "N_8740348962873_134531549c_1", has edge-label "dest";
(to-node: $N_8740348962873_134531549c_1, from-node: $N_8740348962873_134531549c) isa node-link; 

match
$N_8740348962873_134531549c_1 isa operation, has hash "N_8740348962873_134531549c_1"; 

insert
$N_8740348962873_134531549c_1_0 isa constant, has hash "N_8740348962873_134531549c_1_0", has constant-value "134519504", has edge-label "constant";
(to-node: $N_8740348962873_134531549c_1_0, from-node: $N_8740348962873_134531549c_1) isa node-link; 

match
$N_8740348962873_134531549c isa instruction, has hash "N_8740348962873_134531549c"; 

insert
$L_8740348962873_134531549c_2 isa list, has hash "L_8740348962873_134531549c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740348962873_134531549c_2, from-node: $N_8740348962873_134531549c) isa node-link; 

match
$L_8740348962873_134531549c_2 isa list, has hash "L_8740348962873_134531549c_2"; 

insert
$N_8740348962873_134531549c_2_0 isa MLIL_CONST_PTR, has hash "N_8740348962873_134531549c_2_0", has edge-label "0";
(to-node: $N_8740348962873_134531549c_2_0, from-node: $L_8740348962873_134531549c_2) isa node-link; 

match
$N_8740348962873_134531549c_2_0 isa operation, has hash "N_8740348962873_134531549c_2_0"; 

insert
$N_8740348962873_134531549c_2_0_0 isa constant, has hash "N_8740348962873_134531549c_2_0_0", has constant-value "134546772", has edge-label "constant";
(to-node: $N_8740348962873_134531549c_2_0_0, from-node: $N_8740348962873_134531549c_2_0) isa node-link; 

match
$N_8740348962873_134531549c isa instruction, has hash "N_8740348962873_134531549c"; 

insert
$N_8740348962873_134531549c_3 isa constant, has hash "N_8740348962873_134531549c_3", has constant-value "23", has edge-label "src_memory";
(to-node: $N_8740348962873_134531549c_3, from-node: $N_8740348962873_134531549c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 129, has bb-end 134; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 129, has bb-end 134; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349037829_134531563c isa instruction, has hash "N_8740349037829_134531563c", has il-index 131, has asm-address "0x804c9eb", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_11#16 = &var_190";
(contains-instruction: $N_8740349037829_134531563c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349037829_134531563c isa instruction, has hash "N_8740349037829_134531563c"; 

insert
$N_8740349037829_134531563c_0 isa variable-ssa, has hash "N_8740349037829_134531563c_0", has var "var_1ac_11", has version 16, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349037829_134531563c_0, from-node: $N_8740349037829_134531563c) isa node-link; 

match
$N_8740349037829_134531563c isa instruction, has hash "N_8740349037829_134531563c"; 

insert
$N_8740349037829_134531563c_1 isa MLIL_ADDRESS_OF, has hash "N_8740349037829_134531563c_1", has edge-label "src";
(to-node: $N_8740349037829_134531563c_1, from-node: $N_8740349037829_134531563c) isa node-link; 

match
$N_8740349037829_134531563c_1 isa operation, has hash "N_8740349037829_134531563c_1"; 

insert
$N_8740349037829_134531563c_1_0 isa variable, has hash "N_8740349037829_134531563c_1_0", has var "var_190", has edge-label "src", has var-type "void", has var-size 256, has var-func "cgc_handle_register_user";
(to-node: $N_8740349037829_134531563c_1_0, from-node: $N_8740349037829_134531563c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 129, has bb-end 134; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 129, has bb-end 134; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349565445_134531582c isa instruction, has hash "N_8740349565445_134531582c", has il-index 132, has asm-address "0x804c9fe", has operation-type "MLIL_CALL_SSA", has ins-text "eax_18#23, mem#25 = 0x804bc80(0x805013c, edx_3#3, var_1ac_11#16, 0x100, 0xa, 0x805013c) @ mem#24";
(contains-instruction: $N_8740349565445_134531582c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349565445_134531582c isa instruction, has hash "N_8740349565445_134531582c"; 

insert
$N_8740349565445_134531582c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740349565445_134531582c_0", has edge-label "output";
(to-node: $N_8740349565445_134531582c_0, from-node: $N_8740349565445_134531582c) isa node-link; 

match
$N_8740349565445_134531582c_0 isa operation, has hash "N_8740349565445_134531582c_0"; 

insert
$N_8740349565445_134531582c_0_0 isa constant, has hash "N_8740349565445_134531582c_0_0", has constant-value "25", has edge-label "dest_memory";
(to-node: $N_8740349565445_134531582c_0_0, from-node: $N_8740349565445_134531582c_0) isa node-link; 

match
$N_8740349565445_134531582c_0 isa operation, has hash "N_8740349565445_134531582c_0"; 

insert
$L_8740349565445_134531582c_0_1 isa list, has hash "L_8740349565445_134531582c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740349565445_134531582c_0_1, from-node: $N_8740349565445_134531582c_0) isa node-link; 

match
$L_8740349565445_134531582c_0_1 isa list, has hash "L_8740349565445_134531582c_0_1"; 

insert
$N_8740349565445_134531582c_0_1_0 isa variable-ssa, has hash "N_8740349565445_134531582c_0_1_0", has var "eax_18", has version 23, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349565445_134531582c_0_1_0, from-node: $L_8740349565445_134531582c_0_1) isa node-link; 

match
$N_8740349565445_134531582c isa instruction, has hash "N_8740349565445_134531582c"; 

insert
$N_8740349565445_134531582c_1 isa MLIL_CONST_PTR, has hash "N_8740349565445_134531582c_1", has edge-label "dest";
(to-node: $N_8740349565445_134531582c_1, from-node: $N_8740349565445_134531582c) isa node-link; 

match
$N_8740349565445_134531582c_1 isa operation, has hash "N_8740349565445_134531582c_1"; 

insert
$N_8740349565445_134531582c_1_0 isa constant, has hash "N_8740349565445_134531582c_1_0", has constant-value "134528128", has edge-label "constant";
(to-node: $N_8740349565445_134531582c_1_0, from-node: $N_8740349565445_134531582c_1) isa node-link; 

match
$N_8740349565445_134531582c isa instruction, has hash "N_8740349565445_134531582c"; 

insert
$L_8740349565445_134531582c_2 isa list, has hash "L_8740349565445_134531582c_2", has list-size 6, has edge-label "params";
(to-node: $L_8740349565445_134531582c_2, from-node: $N_8740349565445_134531582c) isa node-link; 

match
$L_8740349565445_134531582c_2 isa list, has hash "L_8740349565445_134531582c_2"; 

insert
$N_8740349565445_134531582c_2_0 isa MLIL_CONST, has hash "N_8740349565445_134531582c_2_0", has edge-label "0";
(to-node: $N_8740349565445_134531582c_2_0, from-node: $L_8740349565445_134531582c_2) isa node-link; 

match
$N_8740349565445_134531582c_2_0 isa operation, has hash "N_8740349565445_134531582c_2_0"; 

insert
$N_8740349565445_134531582c_2_0_0 isa constant, has hash "N_8740349565445_134531582c_2_0_0", has constant-value "134545724", has edge-label "constant";
(to-node: $N_8740349565445_134531582c_2_0_0, from-node: $N_8740349565445_134531582c_2_0) isa node-link; 

match
$L_8740349565445_134531582c_2 isa list, has hash "L_8740349565445_134531582c_2"; 

insert
$N_8740349565445_134531582c_2_1 isa MLIL_VAR_SSA, has hash "N_8740349565445_134531582c_2_1", has edge-label "1";
(to-node: $N_8740349565445_134531582c_2_1, from-node: $L_8740349565445_134531582c_2) isa node-link; 

match
$N_8740349565445_134531582c_2_1 isa operation, has hash "N_8740349565445_134531582c_2_1"; 

insert
$N_8740349565445_134531582c_2_1_0 isa variable-ssa, has hash "N_8740349565445_134531582c_2_1_0", has var "edx_3", has version 3, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349565445_134531582c_2_1_0, from-node: $N_8740349565445_134531582c_2_1) isa node-link; 

match
$L_8740349565445_134531582c_2 isa list, has hash "L_8740349565445_134531582c_2"; 

insert
$N_8740349565445_134531582c_2_2 isa MLIL_VAR_SSA, has hash "N_8740349565445_134531582c_2_2", has edge-label "2";
(to-node: $N_8740349565445_134531582c_2_2, from-node: $L_8740349565445_134531582c_2) isa node-link; 

match
$N_8740349565445_134531582c_2_2 isa operation, has hash "N_8740349565445_134531582c_2_2"; 

insert
$N_8740349565445_134531582c_2_2_0 isa variable-ssa, has hash "N_8740349565445_134531582c_2_2_0", has var "var_1ac_11", has version 16, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349565445_134531582c_2_2_0, from-node: $N_8740349565445_134531582c_2_2) isa node-link; 

match
$L_8740349565445_134531582c_2 isa list, has hash "L_8740349565445_134531582c_2"; 

insert
$N_8740349565445_134531582c_2_3 isa MLIL_CONST, has hash "N_8740349565445_134531582c_2_3", has edge-label "3";
(to-node: $N_8740349565445_134531582c_2_3, from-node: $L_8740349565445_134531582c_2) isa node-link; 

match
$N_8740349565445_134531582c_2_3 isa operation, has hash "N_8740349565445_134531582c_2_3"; 

insert
$N_8740349565445_134531582c_2_3_0 isa constant, has hash "N_8740349565445_134531582c_2_3_0", has constant-value "256", has edge-label "constant";
(to-node: $N_8740349565445_134531582c_2_3_0, from-node: $N_8740349565445_134531582c_2_3) isa node-link; 

match
$L_8740349565445_134531582c_2 isa list, has hash "L_8740349565445_134531582c_2"; 

insert
$N_8740349565445_134531582c_2_4 isa MLIL_CONST, has hash "N_8740349565445_134531582c_2_4", has edge-label "4";
(to-node: $N_8740349565445_134531582c_2_4, from-node: $L_8740349565445_134531582c_2) isa node-link; 

match
$N_8740349565445_134531582c_2_4 isa operation, has hash "N_8740349565445_134531582c_2_4"; 

insert
$N_8740349565445_134531582c_2_4_0 isa constant, has hash "N_8740349565445_134531582c_2_4_0", has constant-value "10", has edge-label "constant";
(to-node: $N_8740349565445_134531582c_2_4_0, from-node: $N_8740349565445_134531582c_2_4) isa node-link; 

match
$L_8740349565445_134531582c_2 isa list, has hash "L_8740349565445_134531582c_2"; 

insert
$N_8740349565445_134531582c_2_5 isa MLIL_CONST_PTR, has hash "N_8740349565445_134531582c_2_5", has edge-label "5";
(to-node: $N_8740349565445_134531582c_2_5, from-node: $L_8740349565445_134531582c_2) isa node-link; 

match
$N_8740349565445_134531582c_2_5 isa operation, has hash "N_8740349565445_134531582c_2_5"; 

insert
$N_8740349565445_134531582c_2_5_0 isa constant, has hash "N_8740349565445_134531582c_2_5_0", has constant-value "134545724", has edge-label "constant";
(to-node: $N_8740349565445_134531582c_2_5_0, from-node: $N_8740349565445_134531582c_2_5) isa node-link; 

match
$N_8740349565445_134531582c isa instruction, has hash "N_8740349565445_134531582c"; 

insert
$N_8740349565445_134531582c_3 isa constant, has hash "N_8740349565445_134531582c_3", has constant-value "24", has edge-label "src_memory";
(to-node: $N_8740349565445_134531582c_3, from-node: $N_8740349565445_134531582c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 129, has bb-end 134; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 129, has bb-end 134; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349691909_134531587c isa instruction, has hash "N_8740349691909_134531587c", has il-index 133, has asm-address "0x804ca03", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edi#7 = 0";
(contains-instruction: $N_8740349691909_134531587c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349691909_134531587c isa instruction, has hash "N_8740349691909_134531587c"; 

insert
$N_8740349691909_134531587c_0 isa variable-ssa, has hash "N_8740349691909_134531587c_0", has var "edi", has version 7, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349691909_134531587c_0, from-node: $N_8740349691909_134531587c) isa node-link; 

match
$N_8740349691909_134531587c isa instruction, has hash "N_8740349691909_134531587c"; 

insert
$N_8740349691909_134531587c_1 isa MLIL_CONST, has hash "N_8740349691909_134531587c_1", has edge-label "src";
(to-node: $N_8740349691909_134531587c_1, from-node: $N_8740349691909_134531587c) isa node-link; 

match
$N_8740349691909_134531587c_1 isa operation, has hash "N_8740349691909_134531587c_1"; 

insert
$N_8740349691909_134531587c_1_0 isa constant, has hash "N_8740349691909_134531587c_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349691909_134531587c_1_0, from-node: $N_8740349691909_134531587c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 129, has bb-end 134; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 129, has bb-end 134; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348687973_134531591c isa instruction, has hash "N_8740348687973_134531591c", has il-index 134, has asm-address "0x804ca07", has operation-type "MLIL_IF", has ins-text "if (eax_18#23 s< 0) then 144 @ 0x804ca72 else 146 @ 0x804ca09";
(contains-instruction: $N_8740348687973_134531591c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348687973_134531591c isa instruction, has hash "N_8740348687973_134531591c"; 

insert
$N_8740348687973_134531591c_0 isa MLIL_CMP_SLT, has hash "N_8740348687973_134531591c_0", has edge-label "condition";
(to-node: $N_8740348687973_134531591c_0, from-node: $N_8740348687973_134531591c) isa node-link; 

match
$N_8740348687973_134531591c_0 isa operation, has hash "N_8740348687973_134531591c_0"; 

insert
$N_8740348687973_134531591c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348687973_134531591c_0_0", has edge-label "left";
(to-node: $N_8740348687973_134531591c_0_0, from-node: $N_8740348687973_134531591c_0) isa node-link; 

match
$N_8740348687973_134531591c_0_0 isa operation, has hash "N_8740348687973_134531591c_0_0"; 

insert
$N_8740348687973_134531591c_0_0_0 isa variable-ssa, has hash "N_8740348687973_134531591c_0_0_0", has var "eax_18", has version 23, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348687973_134531591c_0_0_0, from-node: $N_8740348687973_134531591c_0_0) isa node-link; 

match
$N_8740348687973_134531591c_0 isa operation, has hash "N_8740348687973_134531591c_0"; 

insert
$N_8740348687973_134531591c_0_1 isa MLIL_CONST, has hash "N_8740348687973_134531591c_0_1", has edge-label "right";
(to-node: $N_8740348687973_134531591c_0_1, from-node: $N_8740348687973_134531591c_0) isa node-link; 

match
$N_8740348687973_134531591c_0_1 isa operation, has hash "N_8740348687973_134531591c_0_1"; 

insert
$N_8740348687973_134531591c_0_1_0 isa constant, has hash "N_8740348687973_134531591c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348687973_134531591c_0_1_0, from-node: $N_8740348687973_134531591c_0_1) isa node-link; 

match
$N_8740348687973_134531591c isa instruction, has hash "N_8740348687973_134531591c"; 

insert
$N_8740348687973_134531591c_1 isa constant, has hash "N_8740348687973_134531591c_1", has constant-value "144", has edge-label "true";
(to-node: $N_8740348687973_134531591c_1, from-node: $N_8740348687973_134531591c) isa node-link; 

match
$N_8740348687973_134531591c isa instruction, has hash "N_8740348687973_134531591c"; 

insert
$N_8740348687973_134531591c_2 isa constant, has hash "N_8740348687973_134531591c_2", has constant-value "146", has edge-label "false";
(to-node: $N_8740348687973_134531591c_2, from-node: $N_8740348687973_134531591c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 135, has bb-end 136; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 135, has bb-end 136; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 135, has bb-end 136; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349379169_134531497c isa instruction, has hash "N_8740349379169_134531497c", has il-index 135, has asm-address "0x804c9a9", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edi#13 = 0";
(contains-instruction: $N_8740349379169_134531497c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349379169_134531497c isa instruction, has hash "N_8740349379169_134531497c"; 

insert
$N_8740349379169_134531497c_0 isa variable-ssa, has hash "N_8740349379169_134531497c_0", has var "edi", has version 13, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349379169_134531497c_0, from-node: $N_8740349379169_134531497c) isa node-link; 

match
$N_8740349379169_134531497c isa instruction, has hash "N_8740349379169_134531497c"; 

insert
$N_8740349379169_134531497c_1 isa MLIL_CONST, has hash "N_8740349379169_134531497c_1", has edge-label "src";
(to-node: $N_8740349379169_134531497c_1, from-node: $N_8740349379169_134531497c) isa node-link; 

match
$N_8740349379169_134531497c_1 isa operation, has hash "N_8740349379169_134531497c_1"; 

insert
$N_8740349379169_134531497c_1_0 isa constant, has hash "N_8740349379169_134531497c_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349379169_134531497c_1_0, from-node: $N_8740349379169_134531497c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 135, has bb-end 136; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 135, has bb-end 136; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348162133_134531499c isa instruction, has hash "N_8740348162133_134531499c", has il-index 136, has asm-address "0x804c9ab", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740348162133_134531499c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348162133_134531499c isa instruction, has hash "N_8740348162133_134531499c"; 

insert
$N_8740348162133_134531499c_0 isa constant, has hash "N_8740348162133_134531499c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740348162133_134531499c_0, from-node: $N_8740348162133_134531499c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 137, has bb-end 138; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 137, has bb-end 138; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 137, has bb-end 138; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348660061_134531688c isa instruction, has hash "N_8740348660061_134531688c", has il-index 137, has asm-address "0x804ca68", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#12 = 0xf";
(contains-instruction: $N_8740348660061_134531688c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348660061_134531688c isa instruction, has hash "N_8740348660061_134531688c"; 

insert
$N_8740348660061_134531688c_0 isa variable-ssa, has hash "N_8740348660061_134531688c_0", has var "esi", has version 12, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348660061_134531688c_0, from-node: $N_8740348660061_134531688c) isa node-link; 

match
$N_8740348660061_134531688c isa instruction, has hash "N_8740348660061_134531688c"; 

insert
$N_8740348660061_134531688c_1 isa MLIL_CONST_PTR, has hash "N_8740348660061_134531688c_1", has edge-label "src";
(to-node: $N_8740348660061_134531688c_1, from-node: $N_8740348660061_134531688c) isa node-link; 

match
$N_8740348660061_134531688c_1 isa operation, has hash "N_8740348660061_134531688c_1"; 

insert
$N_8740348660061_134531688c_1_0 isa constant, has hash "N_8740348660061_134531688c_1_0", has constant-value "15", has edge-label "constant";
(to-node: $N_8740348660061_134531688c_1_0, from-node: $N_8740348660061_134531688c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 137, has bb-end 138; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 137, has bb-end 138; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348486765_134531693c isa instruction, has hash "N_8740348486765_134531693c", has il-index 138, has asm-address "0x804ca6d", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740348486765_134531693c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348486765_134531693c isa instruction, has hash "N_8740348486765_134531693c"; 

insert
$N_8740348486765_134531693c_0 isa constant, has hash "N_8740348486765_134531693c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740348486765_134531693c_0, from-node: $N_8740348486765_134531693c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 139, has bb-end 143; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 139, has bb-end 143; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 139, has bb-end 143; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349090661_134531461c isa instruction, has hash "N_8740349090661_134531461c", has il-index 139, has asm-address "0x804c985", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi_2#13 = esi_2#11 + 1";
(contains-instruction: $N_8740349090661_134531461c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349090661_134531461c isa instruction, has hash "N_8740349090661_134531461c"; 

insert
$N_8740349090661_134531461c_0 isa variable-ssa, has hash "N_8740349090661_134531461c_0", has var "esi_2", has version 13, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349090661_134531461c_0, from-node: $N_8740349090661_134531461c) isa node-link; 

match
$N_8740349090661_134531461c isa instruction, has hash "N_8740349090661_134531461c"; 

insert
$N_8740349090661_134531461c_1 isa MLIL_ADD, has hash "N_8740349090661_134531461c_1", has edge-label "src";
(to-node: $N_8740349090661_134531461c_1, from-node: $N_8740349090661_134531461c) isa node-link; 

match
$N_8740349090661_134531461c_1 isa operation, has hash "N_8740349090661_134531461c_1"; 

insert
$N_8740349090661_134531461c_1_0 isa MLIL_VAR_SSA, has hash "N_8740349090661_134531461c_1_0", has edge-label "left";
(to-node: $N_8740349090661_134531461c_1_0, from-node: $N_8740349090661_134531461c_1) isa node-link; 

match
$N_8740349090661_134531461c_1_0 isa operation, has hash "N_8740349090661_134531461c_1_0"; 

insert
$N_8740349090661_134531461c_1_0_0 isa variable-ssa, has hash "N_8740349090661_134531461c_1_0_0", has var "esi_2", has version 11, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349090661_134531461c_1_0_0, from-node: $N_8740349090661_134531461c_1_0) isa node-link; 

match
$N_8740349090661_134531461c_1 isa operation, has hash "N_8740349090661_134531461c_1"; 

insert
$N_8740349090661_134531461c_1_1 isa MLIL_CONST, has hash "N_8740349090661_134531461c_1_1", has edge-label "right";
(to-node: $N_8740349090661_134531461c_1_1, from-node: $N_8740349090661_134531461c_1) isa node-link; 

match
$N_8740349090661_134531461c_1_1 isa operation, has hash "N_8740349090661_134531461c_1_1"; 

insert
$N_8740349090661_134531461c_1_1_0 isa constant, has hash "N_8740349090661_134531461c_1_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8740349090661_134531461c_1_1_0, from-node: $N_8740349090661_134531461c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 139, has bb-end 143; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 139, has bb-end 143; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348413453_134531462c isa instruction, has hash "N_8740348413453_134531462c", has il-index 140, has asm-address "0x804c986", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_9#13 = &var_190";
(contains-instruction: $N_8740348413453_134531462c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348413453_134531462c isa instruction, has hash "N_8740348413453_134531462c"; 

insert
$N_8740348413453_134531462c_0 isa variable-ssa, has hash "N_8740348413453_134531462c_0", has var "var_1ac_9", has version 13, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348413453_134531462c_0, from-node: $N_8740348413453_134531462c) isa node-link; 

match
$N_8740348413453_134531462c isa instruction, has hash "N_8740348413453_134531462c"; 

insert
$N_8740348413453_134531462c_1 isa MLIL_ADDRESS_OF, has hash "N_8740348413453_134531462c_1", has edge-label "src";
(to-node: $N_8740348413453_134531462c_1, from-node: $N_8740348413453_134531462c) isa node-link; 

match
$N_8740348413453_134531462c_1 isa operation, has hash "N_8740348413453_134531462c_1"; 

insert
$N_8740348413453_134531462c_1_0 isa variable, has hash "N_8740348413453_134531462c_1_0", has var "var_190", has edge-label "src", has var-type "void", has var-size 256, has var-func "cgc_handle_register_user";
(to-node: $N_8740348413453_134531462c_1_0, from-node: $N_8740348413453_134531462c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 139, has bb-end 143; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 139, has bb-end 143; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348396805_134531465c isa instruction, has hash "N_8740348396805_134531465c", has il-index 141, has asm-address "0x804c989", has operation-type "MLIL_CALL_SSA", has ins-text "eax_14#18, mem#20 = 0x804aeb0(var_1ac_9#13) @ mem#19";
(contains-instruction: $N_8740348396805_134531465c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348396805_134531465c isa instruction, has hash "N_8740348396805_134531465c"; 

insert
$N_8740348396805_134531465c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348396805_134531465c_0", has edge-label "output";
(to-node: $N_8740348396805_134531465c_0, from-node: $N_8740348396805_134531465c) isa node-link; 

match
$N_8740348396805_134531465c_0 isa operation, has hash "N_8740348396805_134531465c_0"; 

insert
$N_8740348396805_134531465c_0_0 isa constant, has hash "N_8740348396805_134531465c_0_0", has constant-value "20", has edge-label "dest_memory";
(to-node: $N_8740348396805_134531465c_0_0, from-node: $N_8740348396805_134531465c_0) isa node-link; 

match
$N_8740348396805_134531465c_0 isa operation, has hash "N_8740348396805_134531465c_0"; 

insert
$L_8740348396805_134531465c_0_1 isa list, has hash "L_8740348396805_134531465c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348396805_134531465c_0_1, from-node: $N_8740348396805_134531465c_0) isa node-link; 

match
$L_8740348396805_134531465c_0_1 isa list, has hash "L_8740348396805_134531465c_0_1"; 

insert
$N_8740348396805_134531465c_0_1_0 isa variable-ssa, has hash "N_8740348396805_134531465c_0_1_0", has var "eax_14", has version 18, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348396805_134531465c_0_1_0, from-node: $L_8740348396805_134531465c_0_1) isa node-link; 

match
$N_8740348396805_134531465c isa instruction, has hash "N_8740348396805_134531465c"; 

insert
$N_8740348396805_134531465c_1 isa MLIL_CONST_PTR, has hash "N_8740348396805_134531465c_1", has edge-label "dest";
(to-node: $N_8740348396805_134531465c_1, from-node: $N_8740348396805_134531465c) isa node-link; 

match
$N_8740348396805_134531465c_1 isa operation, has hash "N_8740348396805_134531465c_1"; 

insert
$N_8740348396805_134531465c_1_0 isa constant, has hash "N_8740348396805_134531465c_1_0", has constant-value "134524592", has edge-label "constant";
(to-node: $N_8740348396805_134531465c_1_0, from-node: $N_8740348396805_134531465c_1) isa node-link; 

match
$N_8740348396805_134531465c isa instruction, has hash "N_8740348396805_134531465c"; 

insert
$L_8740348396805_134531465c_2 isa list, has hash "L_8740348396805_134531465c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740348396805_134531465c_2, from-node: $N_8740348396805_134531465c) isa node-link; 

match
$L_8740348396805_134531465c_2 isa list, has hash "L_8740348396805_134531465c_2"; 

insert
$N_8740348396805_134531465c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348396805_134531465c_2_0", has edge-label "0";
(to-node: $N_8740348396805_134531465c_2_0, from-node: $L_8740348396805_134531465c_2) isa node-link; 

match
$N_8740348396805_134531465c_2_0 isa operation, has hash "N_8740348396805_134531465c_2_0"; 

insert
$N_8740348396805_134531465c_2_0_0 isa variable-ssa, has hash "N_8740348396805_134531465c_2_0_0", has var "var_1ac_9", has version 13, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348396805_134531465c_2_0_0, from-node: $N_8740348396805_134531465c_2_0) isa node-link; 

match
$N_8740348396805_134531465c isa instruction, has hash "N_8740348396805_134531465c"; 

insert
$N_8740348396805_134531465c_3 isa constant, has hash "N_8740348396805_134531465c_3", has constant-value "19", has edge-label "src_memory";
(to-node: $N_8740348396805_134531465c_3, from-node: $N_8740348396805_134531465c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 139, has bb-end 143; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 139, has bb-end 143; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348955241_134531470c isa instruction, has hash "N_8740348955241_134531470c", has il-index 142, has asm-address "0x804c98e", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_15#19 = eax_14#18 - 1";
(contains-instruction: $N_8740348955241_134531470c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348955241_134531470c isa instruction, has hash "N_8740348955241_134531470c"; 

insert
$N_8740348955241_134531470c_0 isa variable-ssa, has hash "N_8740348955241_134531470c_0", has var "eax_15", has version 19, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348955241_134531470c_0, from-node: $N_8740348955241_134531470c) isa node-link; 

match
$N_8740348955241_134531470c isa instruction, has hash "N_8740348955241_134531470c"; 

insert
$N_8740348955241_134531470c_1 isa MLIL_SUB, has hash "N_8740348955241_134531470c_1", has edge-label "src";
(to-node: $N_8740348955241_134531470c_1, from-node: $N_8740348955241_134531470c) isa node-link; 

match
$N_8740348955241_134531470c_1 isa operation, has hash "N_8740348955241_134531470c_1"; 

insert
$N_8740348955241_134531470c_1_0 isa MLIL_VAR_SSA, has hash "N_8740348955241_134531470c_1_0", has edge-label "left";
(to-node: $N_8740348955241_134531470c_1_0, from-node: $N_8740348955241_134531470c_1) isa node-link; 

match
$N_8740348955241_134531470c_1_0 isa operation, has hash "N_8740348955241_134531470c_1_0"; 

insert
$N_8740348955241_134531470c_1_0_0 isa variable-ssa, has hash "N_8740348955241_134531470c_1_0_0", has var "eax_14", has version 18, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348955241_134531470c_1_0_0, from-node: $N_8740348955241_134531470c_1_0) isa node-link; 

match
$N_8740348955241_134531470c_1 isa operation, has hash "N_8740348955241_134531470c_1"; 

insert
$N_8740348955241_134531470c_1_1 isa MLIL_CONST, has hash "N_8740348955241_134531470c_1_1", has edge-label "right";
(to-node: $N_8740348955241_134531470c_1_1, from-node: $N_8740348955241_134531470c_1) isa node-link; 

match
$N_8740348955241_134531470c_1_1 isa operation, has hash "N_8740348955241_134531470c_1_1"; 

insert
$N_8740348955241_134531470c_1_1_0 isa constant, has hash "N_8740348955241_134531470c_1_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8740348955241_134531470c_1_1_0, from-node: $N_8740348955241_134531470c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 139, has bb-end 143; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 139, has bb-end 143; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348316677_134531473c isa instruction, has hash "N_8740348316677_134531473c", has il-index 143, has asm-address "0x804c991", has operation-type "MLIL_IF", has ins-text "if (esi_2#13 u< eax_15#19) then 150 @ 0x0 else 151 @ 0x0";
(contains-instruction: $N_8740348316677_134531473c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348316677_134531473c isa instruction, has hash "N_8740348316677_134531473c"; 

insert
$N_8740348316677_134531473c_0 isa MLIL_CMP_ULT, has hash "N_8740348316677_134531473c_0", has edge-label "condition";
(to-node: $N_8740348316677_134531473c_0, from-node: $N_8740348316677_134531473c) isa node-link; 

match
$N_8740348316677_134531473c_0 isa operation, has hash "N_8740348316677_134531473c_0"; 

insert
$N_8740348316677_134531473c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348316677_134531473c_0_0", has edge-label "left";
(to-node: $N_8740348316677_134531473c_0_0, from-node: $N_8740348316677_134531473c_0) isa node-link; 

match
$N_8740348316677_134531473c_0_0 isa operation, has hash "N_8740348316677_134531473c_0_0"; 

insert
$N_8740348316677_134531473c_0_0_0 isa variable-ssa, has hash "N_8740348316677_134531473c_0_0_0", has var "esi_2", has version 13, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348316677_134531473c_0_0_0, from-node: $N_8740348316677_134531473c_0_0) isa node-link; 

match
$N_8740348316677_134531473c_0 isa operation, has hash "N_8740348316677_134531473c_0"; 

insert
$N_8740348316677_134531473c_0_1 isa MLIL_VAR_SSA, has hash "N_8740348316677_134531473c_0_1", has edge-label "right";
(to-node: $N_8740348316677_134531473c_0_1, from-node: $N_8740348316677_134531473c_0) isa node-link; 

match
$N_8740348316677_134531473c_0_1 isa operation, has hash "N_8740348316677_134531473c_0_1"; 

insert
$N_8740348316677_134531473c_0_1_0 isa variable-ssa, has hash "N_8740348316677_134531473c_0_1_0", has var "eax_15", has version 19, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348316677_134531473c_0_1_0, from-node: $N_8740348316677_134531473c_0_1) isa node-link; 

match
$N_8740348316677_134531473c isa instruction, has hash "N_8740348316677_134531473c"; 

insert
$N_8740348316677_134531473c_1 isa constant, has hash "N_8740348316677_134531473c_1", has constant-value "150", has edge-label "true";
(to-node: $N_8740348316677_134531473c_1, from-node: $N_8740348316677_134531473c) isa node-link; 

match
$N_8740348316677_134531473c isa instruction, has hash "N_8740348316677_134531473c"; 

insert
$N_8740348316677_134531473c_2 isa constant, has hash "N_8740348316677_134531473c_2", has constant-value "151", has edge-label "false";
(to-node: $N_8740348316677_134531473c_2, from-node: $N_8740348316677_134531473c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 144, has bb-end 145; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 144, has bb-end 145; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 144, has bb-end 145; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349118829_134531698c isa instruction, has hash "N_8740349118829_134531698c", has il-index 144, has asm-address "0x804ca72", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#16 = 0";
(contains-instruction: $N_8740349118829_134531698c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349118829_134531698c isa instruction, has hash "N_8740349118829_134531698c"; 

insert
$N_8740349118829_134531698c_0 isa variable-ssa, has hash "N_8740349118829_134531698c_0", has var "esi", has version 16, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349118829_134531698c_0, from-node: $N_8740349118829_134531698c) isa node-link; 

match
$N_8740349118829_134531698c isa instruction, has hash "N_8740349118829_134531698c"; 

insert
$N_8740349118829_134531698c_1 isa MLIL_CONST_PTR, has hash "N_8740349118829_134531698c_1", has edge-label "src";
(to-node: $N_8740349118829_134531698c_1, from-node: $N_8740349118829_134531698c) isa node-link; 

match
$N_8740349118829_134531698c_1 isa operation, has hash "N_8740349118829_134531698c_1"; 

insert
$N_8740349118829_134531698c_1_0 isa constant, has hash "N_8740349118829_134531698c_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349118829_134531698c_1_0, from-node: $N_8740349118829_134531698c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 144, has bb-end 145; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 144, has bb-end 145; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349367301_134531700c isa instruction, has hash "N_8740349367301_134531700c", has il-index 145, has asm-address "0x804ca74", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740349367301_134531700c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349367301_134531700c isa instruction, has hash "N_8740349367301_134531700c"; 

insert
$N_8740349367301_134531700c_0 isa constant, has hash "N_8740349367301_134531700c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740349367301_134531700c_0, from-node: $N_8740349367301_134531700c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 146, has bb-end 149; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 146, has bb-end 149; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 146, has bb-end 149; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348194917_134531593c isa instruction, has hash "N_8740348194917_134531593c", has il-index 146, has asm-address "0x804ca09", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebp_1#1 = arg1#0";
(contains-instruction: $N_8740348194917_134531593c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348194917_134531593c isa instruction, has hash "N_8740348194917_134531593c"; 

insert
$N_8740348194917_134531593c_0 isa variable-ssa, has hash "N_8740348194917_134531593c_0", has var "ebp_1", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348194917_134531593c_0, from-node: $N_8740348194917_134531593c) isa node-link; 

match
$N_8740348194917_134531593c isa instruction, has hash "N_8740348194917_134531593c"; 

insert
$N_8740348194917_134531593c_1 isa MLIL_VAR_SSA, has hash "N_8740348194917_134531593c_1", has edge-label "src";
(to-node: $N_8740348194917_134531593c_1, from-node: $N_8740348194917_134531593c) isa node-link; 

match
$N_8740348194917_134531593c_1 isa operation, has hash "N_8740348194917_134531593c_1"; 

insert
$N_8740348194917_134531593c_1_0 isa variable-ssa, has hash "N_8740348194917_134531593c_1_0", has var "arg1", has version 0, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348194917_134531593c_1_0, from-node: $N_8740348194917_134531593c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 146, has bb-end 149; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 146, has bb-end 149; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348951813_134531600c isa instruction, has hash "N_8740348951813_134531600c", has il-index 147, has asm-address "0x804ca10", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_12#17 = &var_190";
(contains-instruction: $N_8740348951813_134531600c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348951813_134531600c isa instruction, has hash "N_8740348951813_134531600c"; 

insert
$N_8740348951813_134531600c_0 isa variable-ssa, has hash "N_8740348951813_134531600c_0", has var "var_1ac_12", has version 17, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348951813_134531600c_0, from-node: $N_8740348951813_134531600c) isa node-link; 

match
$N_8740348951813_134531600c isa instruction, has hash "N_8740348951813_134531600c"; 

insert
$N_8740348951813_134531600c_1 isa MLIL_ADDRESS_OF, has hash "N_8740348951813_134531600c_1", has edge-label "src";
(to-node: $N_8740348951813_134531600c_1, from-node: $N_8740348951813_134531600c) isa node-link; 

match
$N_8740348951813_134531600c_1 isa operation, has hash "N_8740348951813_134531600c_1"; 

insert
$N_8740348951813_134531600c_1_0 isa variable, has hash "N_8740348951813_134531600c_1_0", has var "var_190", has edge-label "src", has var-type "void", has var-size 256, has var-func "cgc_handle_register_user";
(to-node: $N_8740348951813_134531600c_1_0, from-node: $N_8740348951813_134531600c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 146, has bb-end 149; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 146, has bb-end 149; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349044997_134531611c isa instruction, has hash "N_8740349044997_134531611c", has il-index 148, has asm-address "0x804ca1b", has operation-type "MLIL_CALL_SSA", has ins-text "eax_19#24, mem#26 = 0x8049dd0(eax_18#23, var_1ac_12#17, 0x804f385) @ mem#25";
(contains-instruction: $N_8740349044997_134531611c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349044997_134531611c isa instruction, has hash "N_8740349044997_134531611c"; 

insert
$N_8740349044997_134531611c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740349044997_134531611c_0", has edge-label "output";
(to-node: $N_8740349044997_134531611c_0, from-node: $N_8740349044997_134531611c) isa node-link; 

match
$N_8740349044997_134531611c_0 isa operation, has hash "N_8740349044997_134531611c_0"; 

insert
$N_8740349044997_134531611c_0_0 isa constant, has hash "N_8740349044997_134531611c_0_0", has constant-value "26", has edge-label "dest_memory";
(to-node: $N_8740349044997_134531611c_0_0, from-node: $N_8740349044997_134531611c_0) isa node-link; 

match
$N_8740349044997_134531611c_0 isa operation, has hash "N_8740349044997_134531611c_0"; 

insert
$L_8740349044997_134531611c_0_1 isa list, has hash "L_8740349044997_134531611c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740349044997_134531611c_0_1, from-node: $N_8740349044997_134531611c_0) isa node-link; 

match
$L_8740349044997_134531611c_0_1 isa list, has hash "L_8740349044997_134531611c_0_1"; 

insert
$N_8740349044997_134531611c_0_1_0 isa variable-ssa, has hash "N_8740349044997_134531611c_0_1_0", has var "eax_19", has version 24, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349044997_134531611c_0_1_0, from-node: $L_8740349044997_134531611c_0_1) isa node-link; 

match
$N_8740349044997_134531611c isa instruction, has hash "N_8740349044997_134531611c"; 

insert
$N_8740349044997_134531611c_1 isa MLIL_CONST_PTR, has hash "N_8740349044997_134531611c_1", has edge-label "dest";
(to-node: $N_8740349044997_134531611c_1, from-node: $N_8740349044997_134531611c) isa node-link; 

match
$N_8740349044997_134531611c_1 isa operation, has hash "N_8740349044997_134531611c_1"; 

insert
$N_8740349044997_134531611c_1_0 isa constant, has hash "N_8740349044997_134531611c_1_0", has constant-value "134520272", has edge-label "constant";
(to-node: $N_8740349044997_134531611c_1_0, from-node: $N_8740349044997_134531611c_1) isa node-link; 

match
$N_8740349044997_134531611c isa instruction, has hash "N_8740349044997_134531611c"; 

insert
$L_8740349044997_134531611c_2 isa list, has hash "L_8740349044997_134531611c_2", has list-size 3, has edge-label "params";
(to-node: $L_8740349044997_134531611c_2, from-node: $N_8740349044997_134531611c) isa node-link; 

match
$L_8740349044997_134531611c_2 isa list, has hash "L_8740349044997_134531611c_2"; 

insert
$N_8740349044997_134531611c_2_0 isa MLIL_VAR_SSA, has hash "N_8740349044997_134531611c_2_0", has edge-label "0";
(to-node: $N_8740349044997_134531611c_2_0, from-node: $L_8740349044997_134531611c_2) isa node-link; 

match
$N_8740349044997_134531611c_2_0 isa operation, has hash "N_8740349044997_134531611c_2_0"; 

insert
$N_8740349044997_134531611c_2_0_0 isa variable-ssa, has hash "N_8740349044997_134531611c_2_0_0", has var "eax_18", has version 23, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349044997_134531611c_2_0_0, from-node: $N_8740349044997_134531611c_2_0) isa node-link; 

match
$L_8740349044997_134531611c_2 isa list, has hash "L_8740349044997_134531611c_2"; 

insert
$N_8740349044997_134531611c_2_1 isa MLIL_VAR_SSA, has hash "N_8740349044997_134531611c_2_1", has edge-label "1";
(to-node: $N_8740349044997_134531611c_2_1, from-node: $L_8740349044997_134531611c_2) isa node-link; 

match
$N_8740349044997_134531611c_2_1 isa operation, has hash "N_8740349044997_134531611c_2_1"; 

insert
$N_8740349044997_134531611c_2_1_0 isa variable-ssa, has hash "N_8740349044997_134531611c_2_1_0", has var "var_1ac_12", has version 17, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349044997_134531611c_2_1_0, from-node: $N_8740349044997_134531611c_2_1) isa node-link; 

match
$L_8740349044997_134531611c_2 isa list, has hash "L_8740349044997_134531611c_2"; 

insert
$N_8740349044997_134531611c_2_2 isa MLIL_CONST_PTR, has hash "N_8740349044997_134531611c_2_2", has edge-label "2";
(to-node: $N_8740349044997_134531611c_2_2, from-node: $L_8740349044997_134531611c_2) isa node-link; 

match
$N_8740349044997_134531611c_2_2 isa operation, has hash "N_8740349044997_134531611c_2_2"; 

insert
$N_8740349044997_134531611c_2_2_0 isa constant, has hash "N_8740349044997_134531611c_2_2_0", has constant-value "134542213", has edge-label "constant";
(to-node: $N_8740349044997_134531611c_2_2_0, from-node: $N_8740349044997_134531611c_2_2) isa node-link; 

match
$N_8740349044997_134531611c isa instruction, has hash "N_8740349044997_134531611c"; 

insert
$N_8740349044997_134531611c_3 isa constant, has hash "N_8740349044997_134531611c_3", has constant-value "25", has edge-label "src_memory";
(to-node: $N_8740349044997_134531611c_3, from-node: $N_8740349044997_134531611c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 146, has bb-end 149; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 146, has bb-end 149; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348185197_134531618c isa instruction, has hash "N_8740348185197_134531618c", has il-index 149, has asm-address "0x804ca22", has operation-type "MLIL_IF", has ins-text "if (eax_19#24 == 0) then 152 @ 0x804ca7d else 156 @ 0x804ca24";
(contains-instruction: $N_8740348185197_134531618c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348185197_134531618c isa instruction, has hash "N_8740348185197_134531618c"; 

insert
$N_8740348185197_134531618c_0 isa MLIL_CMP_E, has hash "N_8740348185197_134531618c_0", has edge-label "condition";
(to-node: $N_8740348185197_134531618c_0, from-node: $N_8740348185197_134531618c) isa node-link; 

match
$N_8740348185197_134531618c_0 isa operation, has hash "N_8740348185197_134531618c_0"; 

insert
$N_8740348185197_134531618c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348185197_134531618c_0_0", has edge-label "left";
(to-node: $N_8740348185197_134531618c_0_0, from-node: $N_8740348185197_134531618c_0) isa node-link; 

match
$N_8740348185197_134531618c_0_0 isa operation, has hash "N_8740348185197_134531618c_0_0"; 

insert
$N_8740348185197_134531618c_0_0_0 isa variable-ssa, has hash "N_8740348185197_134531618c_0_0_0", has var "eax_19", has version 24, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348185197_134531618c_0_0_0, from-node: $N_8740348185197_134531618c_0_0) isa node-link; 

match
$N_8740348185197_134531618c_0 isa operation, has hash "N_8740348185197_134531618c_0"; 

insert
$N_8740348185197_134531618c_0_1 isa MLIL_CONST, has hash "N_8740348185197_134531618c_0_1", has edge-label "right";
(to-node: $N_8740348185197_134531618c_0_1, from-node: $N_8740348185197_134531618c_0) isa node-link; 

match
$N_8740348185197_134531618c_0_1 isa operation, has hash "N_8740348185197_134531618c_0_1"; 

insert
$N_8740348185197_134531618c_0_1_0 isa constant, has hash "N_8740348185197_134531618c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348185197_134531618c_0_1_0, from-node: $N_8740348185197_134531618c_0_1) isa node-link; 

match
$N_8740348185197_134531618c isa instruction, has hash "N_8740348185197_134531618c"; 

insert
$N_8740348185197_134531618c_1 isa constant, has hash "N_8740348185197_134531618c_1", has constant-value "152", has edge-label "true";
(to-node: $N_8740348185197_134531618c_1, from-node: $N_8740348185197_134531618c) isa node-link; 

match
$N_8740348185197_134531618c isa instruction, has hash "N_8740348185197_134531618c"; 

insert
$N_8740348185197_134531618c_2 isa constant, has hash "N_8740348185197_134531618c_2", has constant-value "156", has edge-label "false";
(to-node: $N_8740348185197_134531618c_2, from-node: $N_8740348185197_134531618c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 150, has bb-end 150; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 151, has bb-end 151; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 152, has bb-end 155; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 152, has bb-end 155; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 152, has bb-end 155; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349568341_134531709c isa instruction, has hash "N_8740349568341_134531709c", has il-index 152, has asm-address "0x804ca7d", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_14#18 = &var_198";
(contains-instruction: $N_8740349568341_134531709c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349568341_134531709c isa instruction, has hash "N_8740349568341_134531709c"; 

insert
$N_8740349568341_134531709c_0 isa variable-ssa, has hash "N_8740349568341_134531709c_0", has var "var_1ac_14", has version 18, has edge-label "dest", has var-type "int32_t**", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349568341_134531709c_0, from-node: $N_8740349568341_134531709c) isa node-link; 

match
$N_8740349568341_134531709c isa instruction, has hash "N_8740349568341_134531709c"; 

insert
$N_8740349568341_134531709c_1 isa MLIL_ADDRESS_OF, has hash "N_8740349568341_134531709c_1", has edge-label "src";
(to-node: $N_8740349568341_134531709c_1, from-node: $N_8740349568341_134531709c) isa node-link; 

match
$N_8740349568341_134531709c_1 isa operation, has hash "N_8740349568341_134531709c_1"; 

insert
$N_8740349568341_134531709c_1_0 isa variable, has hash "N_8740349568341_134531709c_1_0", has var "var_198", has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349568341_134531709c_1_0, from-node: $N_8740349568341_134531709c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 152, has bb-end 155; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 152, has bb-end 155; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348956677_134531712c isa instruction, has hash "N_8740348956677_134531712c", has il-index 153, has asm-address "0x804ca80", has operation-type "MLIL_CALL_SSA", has ins-text "eax_25#25, mem#27 = 0x804c4f0(var_1ac_14#18) @ mem#26";
(contains-instruction: $N_8740348956677_134531712c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348956677_134531712c isa instruction, has hash "N_8740348956677_134531712c"; 

insert
$N_8740348956677_134531712c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348956677_134531712c_0", has edge-label "output";
(to-node: $N_8740348956677_134531712c_0, from-node: $N_8740348956677_134531712c) isa node-link; 

match
$N_8740348956677_134531712c_0 isa operation, has hash "N_8740348956677_134531712c_0"; 

insert
$N_8740348956677_134531712c_0_0 isa constant, has hash "N_8740348956677_134531712c_0_0", has constant-value "27", has edge-label "dest_memory";
(to-node: $N_8740348956677_134531712c_0_0, from-node: $N_8740348956677_134531712c_0) isa node-link; 

match
$N_8740348956677_134531712c_0 isa operation, has hash "N_8740348956677_134531712c_0"; 

insert
$L_8740348956677_134531712c_0_1 isa list, has hash "L_8740348956677_134531712c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348956677_134531712c_0_1, from-node: $N_8740348956677_134531712c_0) isa node-link; 

match
$L_8740348956677_134531712c_0_1 isa list, has hash "L_8740348956677_134531712c_0_1"; 

insert
$N_8740348956677_134531712c_0_1_0 isa variable-ssa, has hash "N_8740348956677_134531712c_0_1_0", has var "eax_25", has version 25, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348956677_134531712c_0_1_0, from-node: $L_8740348956677_134531712c_0_1) isa node-link; 

match
$N_8740348956677_134531712c isa instruction, has hash "N_8740348956677_134531712c"; 

insert
$N_8740348956677_134531712c_1 isa MLIL_CONST_PTR, has hash "N_8740348956677_134531712c_1", has edge-label "dest";
(to-node: $N_8740348956677_134531712c_1, from-node: $N_8740348956677_134531712c) isa node-link; 

match
$N_8740348956677_134531712c_1 isa operation, has hash "N_8740348956677_134531712c_1"; 

insert
$N_8740348956677_134531712c_1_0 isa constant, has hash "N_8740348956677_134531712c_1_0", has constant-value "134530288", has edge-label "constant";
(to-node: $N_8740348956677_134531712c_1_0, from-node: $N_8740348956677_134531712c_1) isa node-link; 

match
$N_8740348956677_134531712c isa instruction, has hash "N_8740348956677_134531712c"; 

insert
$L_8740348956677_134531712c_2 isa list, has hash "L_8740348956677_134531712c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740348956677_134531712c_2, from-node: $N_8740348956677_134531712c) isa node-link; 

match
$L_8740348956677_134531712c_2 isa list, has hash "L_8740348956677_134531712c_2"; 

insert
$N_8740348956677_134531712c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348956677_134531712c_2_0", has edge-label "0";
(to-node: $N_8740348956677_134531712c_2_0, from-node: $L_8740348956677_134531712c_2) isa node-link; 

match
$N_8740348956677_134531712c_2_0 isa operation, has hash "N_8740348956677_134531712c_2_0"; 

insert
$N_8740348956677_134531712c_2_0_0 isa variable-ssa, has hash "N_8740348956677_134531712c_2_0_0", has var "var_1ac_14", has version 18, has edge-label "src", has var-type "int32_t**", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348956677_134531712c_2_0_0, from-node: $N_8740348956677_134531712c_2_0) isa node-link; 

match
$N_8740348956677_134531712c isa instruction, has hash "N_8740348956677_134531712c"; 

insert
$N_8740348956677_134531712c_3 isa constant, has hash "N_8740348956677_134531712c_3", has constant-value "26", has edge-label "src_memory";
(to-node: $N_8740348956677_134531712c_3, from-node: $N_8740348956677_134531712c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 152, has bb-end 155; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 152, has bb-end 155; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348370773_134531717c isa instruction, has hash "N_8740348370773_134531717c", has il-index 154, has asm-address "0x804ca85", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#17 = eax_25#25";
(contains-instruction: $N_8740348370773_134531717c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348370773_134531717c isa instruction, has hash "N_8740348370773_134531717c"; 

insert
$N_8740348370773_134531717c_0 isa variable-ssa, has hash "N_8740348370773_134531717c_0", has var "esi", has version 17, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348370773_134531717c_0, from-node: $N_8740348370773_134531717c) isa node-link; 

match
$N_8740348370773_134531717c isa instruction, has hash "N_8740348370773_134531717c"; 

insert
$N_8740348370773_134531717c_1 isa MLIL_VAR_SSA, has hash "N_8740348370773_134531717c_1", has edge-label "src";
(to-node: $N_8740348370773_134531717c_1, from-node: $N_8740348370773_134531717c) isa node-link; 

match
$N_8740348370773_134531717c_1 isa operation, has hash "N_8740348370773_134531717c_1"; 

insert
$N_8740348370773_134531717c_1_0 isa variable-ssa, has hash "N_8740348370773_134531717c_1_0", has var "eax_25", has version 25, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348370773_134531717c_1_0, from-node: $N_8740348370773_134531717c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 152, has bb-end 155; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 152, has bb-end 155; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349028357_134531721c isa instruction, has hash "N_8740349028357_134531721c", has il-index 155, has asm-address "0x804ca89", has operation-type "MLIL_IF", has ins-text "if (esi#17 != 0) then 160 @ 0x0 else 161 @ 0x804ca96";
(contains-instruction: $N_8740349028357_134531721c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349028357_134531721c isa instruction, has hash "N_8740349028357_134531721c"; 

insert
$N_8740349028357_134531721c_0 isa MLIL_CMP_NE, has hash "N_8740349028357_134531721c_0", has edge-label "condition";
(to-node: $N_8740349028357_134531721c_0, from-node: $N_8740349028357_134531721c) isa node-link; 

match
$N_8740349028357_134531721c_0 isa operation, has hash "N_8740349028357_134531721c_0"; 

insert
$N_8740349028357_134531721c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349028357_134531721c_0_0", has edge-label "left";
(to-node: $N_8740349028357_134531721c_0_0, from-node: $N_8740349028357_134531721c_0) isa node-link; 

match
$N_8740349028357_134531721c_0_0 isa operation, has hash "N_8740349028357_134531721c_0_0"; 

insert
$N_8740349028357_134531721c_0_0_0 isa variable-ssa, has hash "N_8740349028357_134531721c_0_0_0", has var "esi", has version 17, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349028357_134531721c_0_0_0, from-node: $N_8740349028357_134531721c_0_0) isa node-link; 

match
$N_8740349028357_134531721c_0 isa operation, has hash "N_8740349028357_134531721c_0"; 

insert
$N_8740349028357_134531721c_0_1 isa MLIL_CONST, has hash "N_8740349028357_134531721c_0_1", has edge-label "right";
(to-node: $N_8740349028357_134531721c_0_1, from-node: $N_8740349028357_134531721c_0) isa node-link; 

match
$N_8740349028357_134531721c_0_1 isa operation, has hash "N_8740349028357_134531721c_0_1"; 

insert
$N_8740349028357_134531721c_0_1_0 isa constant, has hash "N_8740349028357_134531721c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349028357_134531721c_0_1_0, from-node: $N_8740349028357_134531721c_0_1) isa node-link; 

match
$N_8740349028357_134531721c isa instruction, has hash "N_8740349028357_134531721c"; 

insert
$N_8740349028357_134531721c_1 isa constant, has hash "N_8740349028357_134531721c_1", has constant-value "160", has edge-label "true";
(to-node: $N_8740349028357_134531721c_1, from-node: $N_8740349028357_134531721c) isa node-link; 

match
$N_8740349028357_134531721c isa instruction, has hash "N_8740349028357_134531721c"; 

insert
$N_8740349028357_134531721c_2 isa constant, has hash "N_8740349028357_134531721c_2", has constant-value "161", has edge-label "false";
(to-node: $N_8740349028357_134531721c_2, from-node: $N_8740349028357_134531721c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 156, has bb-end 159; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 156, has bb-end 159; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 156, has bb-end 159; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349206793_134531620c isa instruction, has hash "N_8740349206793_134531620c", has il-index 156, has asm-address "0x804ca24", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#25 = 7";
(contains-instruction: $N_8740349206793_134531620c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349206793_134531620c isa instruction, has hash "N_8740349206793_134531620c"; 

insert
$N_8740349206793_134531620c_0 isa variable-ssa, has hash "N_8740349206793_134531620c_0", has var "esi", has version 25, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349206793_134531620c_0, from-node: $N_8740349206793_134531620c) isa node-link; 

match
$N_8740349206793_134531620c isa instruction, has hash "N_8740349206793_134531620c"; 

insert
$N_8740349206793_134531620c_1 isa MLIL_CONST_PTR, has hash "N_8740349206793_134531620c_1", has edge-label "src";
(to-node: $N_8740349206793_134531620c_1, from-node: $N_8740349206793_134531620c) isa node-link; 

match
$N_8740349206793_134531620c_1 isa operation, has hash "N_8740349206793_134531620c_1"; 

insert
$N_8740349206793_134531620c_1_0 isa constant, has hash "N_8740349206793_134531620c_1_0", has constant-value "7", has edge-label "constant";
(to-node: $N_8740349206793_134531620c_1_0, from-node: $N_8740349206793_134531620c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 156, has bb-end 159; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 156, has bb-end 159; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348135017_134531625c isa instruction, has hash "N_8740348135017_134531625c", has il-index 157, has asm-address "0x804ca29", has operation-type "MLIL_SET_VAR_SSA", has ins-text "cond:0_1#1 = [ebp_1#1 + 8].d @ mem#26 == 0";
(contains-instruction: $N_8740348135017_134531625c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348135017_134531625c isa instruction, has hash "N_8740348135017_134531625c"; 

insert
$N_8740348135017_134531625c_0 isa variable-ssa, has hash "N_8740348135017_134531625c_0", has var "cond:0_1", has version 1, has edge-label "dest", has var-type "bool", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348135017_134531625c_0, from-node: $N_8740348135017_134531625c) isa node-link; 

match
$N_8740348135017_134531625c isa instruction, has hash "N_8740348135017_134531625c"; 

insert
$N_8740348135017_134531625c_1 isa MLIL_CMP_E, has hash "N_8740348135017_134531625c_1", has edge-label "src";
(to-node: $N_8740348135017_134531625c_1, from-node: $N_8740348135017_134531625c) isa node-link; 

match
$N_8740348135017_134531625c_1 isa operation, has hash "N_8740348135017_134531625c_1"; 

insert
$N_8740348135017_134531625c_1_0 isa MLIL_LOAD_SSA, has hash "N_8740348135017_134531625c_1_0", has edge-label "left";
(to-node: $N_8740348135017_134531625c_1_0, from-node: $N_8740348135017_134531625c_1) isa node-link; 

match
$N_8740348135017_134531625c_1_0 isa operation, has hash "N_8740348135017_134531625c_1_0"; 

insert
$N_8740348135017_134531625c_1_0_0 isa MLIL_ADD, has hash "N_8740348135017_134531625c_1_0_0", has edge-label "src";
(to-node: $N_8740348135017_134531625c_1_0_0, from-node: $N_8740348135017_134531625c_1_0) isa node-link; 

match
$N_8740348135017_134531625c_1_0_0 isa operation, has hash "N_8740348135017_134531625c_1_0_0"; 

insert
$N_8740348135017_134531625c_1_0_0_0 isa MLIL_VAR_SSA, has hash "N_8740348135017_134531625c_1_0_0_0", has edge-label "left";
(to-node: $N_8740348135017_134531625c_1_0_0_0, from-node: $N_8740348135017_134531625c_1_0_0) isa node-link; 

match
$N_8740348135017_134531625c_1_0_0_0 isa operation, has hash "N_8740348135017_134531625c_1_0_0_0"; 

insert
$N_8740348135017_134531625c_1_0_0_0_0 isa variable-ssa, has hash "N_8740348135017_134531625c_1_0_0_0_0", has var "ebp_1", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348135017_134531625c_1_0_0_0_0, from-node: $N_8740348135017_134531625c_1_0_0_0) isa node-link; 

match
$N_8740348135017_134531625c_1_0_0 isa operation, has hash "N_8740348135017_134531625c_1_0_0"; 

insert
$N_8740348135017_134531625c_1_0_0_1 isa MLIL_CONST, has hash "N_8740348135017_134531625c_1_0_0_1", has edge-label "right";
(to-node: $N_8740348135017_134531625c_1_0_0_1, from-node: $N_8740348135017_134531625c_1_0_0) isa node-link; 

match
$N_8740348135017_134531625c_1_0_0_1 isa operation, has hash "N_8740348135017_134531625c_1_0_0_1"; 

insert
$N_8740348135017_134531625c_1_0_0_1_0 isa constant, has hash "N_8740348135017_134531625c_1_0_0_1_0", has constant-value "8", has edge-label "constant";
(to-node: $N_8740348135017_134531625c_1_0_0_1_0, from-node: $N_8740348135017_134531625c_1_0_0_1) isa node-link; 

match
$N_8740348135017_134531625c_1_0 isa operation, has hash "N_8740348135017_134531625c_1_0"; 

insert
$N_8740348135017_134531625c_1_0_1 isa constant, has hash "N_8740348135017_134531625c_1_0_1", has constant-value "26", has edge-label "src_memory";
(to-node: $N_8740348135017_134531625c_1_0_1, from-node: $N_8740348135017_134531625c_1_0) isa node-link; 

match
$N_8740348135017_134531625c_1 isa operation, has hash "N_8740348135017_134531625c_1"; 

insert
$N_8740348135017_134531625c_1_1 isa MLIL_CONST, has hash "N_8740348135017_134531625c_1_1", has edge-label "right";
(to-node: $N_8740348135017_134531625c_1_1, from-node: $N_8740348135017_134531625c_1) isa node-link; 

match
$N_8740348135017_134531625c_1_1 isa operation, has hash "N_8740348135017_134531625c_1_1"; 

insert
$N_8740348135017_134531625c_1_1_0 isa constant, has hash "N_8740348135017_134531625c_1_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348135017_134531625c_1_1_0, from-node: $N_8740348135017_134531625c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 156, has bb-end 159; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 156, has bb-end 159; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349253197_134531629c isa instruction, has hash "N_8740349253197_134531629c", has il-index 158, has asm-address "0x804ca2d", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_20#42 = ebp_1#1";
(contains-instruction: $N_8740349253197_134531629c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349253197_134531629c isa instruction, has hash "N_8740349253197_134531629c"; 

insert
$N_8740349253197_134531629c_0 isa variable-ssa, has hash "N_8740349253197_134531629c_0", has var "eax_20", has version 42, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349253197_134531629c_0, from-node: $N_8740349253197_134531629c) isa node-link; 

match
$N_8740349253197_134531629c isa instruction, has hash "N_8740349253197_134531629c"; 

insert
$N_8740349253197_134531629c_1 isa MLIL_VAR_SSA, has hash "N_8740349253197_134531629c_1", has edge-label "src";
(to-node: $N_8740349253197_134531629c_1, from-node: $N_8740349253197_134531629c) isa node-link; 

match
$N_8740349253197_134531629c_1 isa operation, has hash "N_8740349253197_134531629c_1"; 

insert
$N_8740349253197_134531629c_1_0 isa variable-ssa, has hash "N_8740349253197_134531629c_1_0", has var "ebp_1", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349253197_134531629c_1_0, from-node: $N_8740349253197_134531629c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 156, has bb-end 159; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 156, has bb-end 159; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349013925_134531631c isa instruction, has hash "N_8740349013925_134531631c", has il-index 159, has asm-address "0x804ca2f", has operation-type "MLIL_IF", has ins-text "if (cond:0_1#1) then 167 @ 0x0 else 168 @ 0x804ca35";
(contains-instruction: $N_8740349013925_134531631c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349013925_134531631c isa instruction, has hash "N_8740349013925_134531631c"; 

insert
$N_8740349013925_134531631c_0 isa MLIL_VAR_SSA, has hash "N_8740349013925_134531631c_0", has edge-label "condition";
(to-node: $N_8740349013925_134531631c_0, from-node: $N_8740349013925_134531631c) isa node-link; 

match
$N_8740349013925_134531631c_0 isa operation, has hash "N_8740349013925_134531631c_0"; 

insert
$N_8740349013925_134531631c_0_0 isa variable-ssa, has hash "N_8740349013925_134531631c_0_0", has var "cond:0_1", has version 1, has edge-label "src", has var-type "bool", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349013925_134531631c_0_0, from-node: $N_8740349013925_134531631c_0) isa node-link; 

match
$N_8740349013925_134531631c isa instruction, has hash "N_8740349013925_134531631c"; 

insert
$N_8740349013925_134531631c_1 isa constant, has hash "N_8740349013925_134531631c_1", has constant-value "167", has edge-label "true";
(to-node: $N_8740349013925_134531631c_1, from-node: $N_8740349013925_134531631c) isa node-link; 

match
$N_8740349013925_134531631c isa instruction, has hash "N_8740349013925_134531631c"; 

insert
$N_8740349013925_134531631c_2 isa constant, has hash "N_8740349013925_134531631c_2", has constant-value "168", has edge-label "false";
(to-node: $N_8740349013925_134531631c_2, from-node: $N_8740349013925_134531631c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 160, has bb-end 160; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 161, has bb-end 166; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 161, has bb-end 166; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 161, has bb-end 166; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348915301_134531734c isa instruction, has hash "N_8740348915301_134531734c", has il-index 161, has asm-address "0x804ca96", has operation-type "MLIL_CALL_SSA", has ins-text "eax_26#26, mem#28 = 0x804afd0(eax_25#25, 0x804efd6) @ mem#27";
(contains-instruction: $N_8740348915301_134531734c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348915301_134531734c isa instruction, has hash "N_8740348915301_134531734c"; 

insert
$N_8740348915301_134531734c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348915301_134531734c_0", has edge-label "output";
(to-node: $N_8740348915301_134531734c_0, from-node: $N_8740348915301_134531734c) isa node-link; 

match
$N_8740348915301_134531734c_0 isa operation, has hash "N_8740348915301_134531734c_0"; 

insert
$N_8740348915301_134531734c_0_0 isa constant, has hash "N_8740348915301_134531734c_0_0", has constant-value "28", has edge-label "dest_memory";
(to-node: $N_8740348915301_134531734c_0_0, from-node: $N_8740348915301_134531734c_0) isa node-link; 

match
$N_8740348915301_134531734c_0 isa operation, has hash "N_8740348915301_134531734c_0"; 

insert
$L_8740348915301_134531734c_0_1 isa list, has hash "L_8740348915301_134531734c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348915301_134531734c_0_1, from-node: $N_8740348915301_134531734c_0) isa node-link; 

match
$L_8740348915301_134531734c_0_1 isa list, has hash "L_8740348915301_134531734c_0_1"; 

insert
$N_8740348915301_134531734c_0_1_0 isa variable-ssa, has hash "N_8740348915301_134531734c_0_1_0", has var "eax_26", has version 26, has edge-label "0", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348915301_134531734c_0_1_0, from-node: $L_8740348915301_134531734c_0_1) isa node-link; 

match
$N_8740348915301_134531734c isa instruction, has hash "N_8740348915301_134531734c"; 

insert
$N_8740348915301_134531734c_1 isa MLIL_CONST_PTR, has hash "N_8740348915301_134531734c_1", has edge-label "dest";
(to-node: $N_8740348915301_134531734c_1, from-node: $N_8740348915301_134531734c) isa node-link; 

match
$N_8740348915301_134531734c_1 isa operation, has hash "N_8740348915301_134531734c_1"; 

insert
$N_8740348915301_134531734c_1_0 isa constant, has hash "N_8740348915301_134531734c_1_0", has constant-value "134524880", has edge-label "constant";
(to-node: $N_8740348915301_134531734c_1_0, from-node: $N_8740348915301_134531734c_1) isa node-link; 

match
$N_8740348915301_134531734c isa instruction, has hash "N_8740348915301_134531734c"; 

insert
$L_8740348915301_134531734c_2 isa list, has hash "L_8740348915301_134531734c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740348915301_134531734c_2, from-node: $N_8740348915301_134531734c) isa node-link; 

match
$L_8740348915301_134531734c_2 isa list, has hash "L_8740348915301_134531734c_2"; 

insert
$N_8740348915301_134531734c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348915301_134531734c_2_0", has edge-label "0";
(to-node: $N_8740348915301_134531734c_2_0, from-node: $L_8740348915301_134531734c_2) isa node-link; 

match
$N_8740348915301_134531734c_2_0 isa operation, has hash "N_8740348915301_134531734c_2_0"; 

insert
$N_8740348915301_134531734c_2_0_0 isa variable-ssa, has hash "N_8740348915301_134531734c_2_0_0", has var "eax_25", has version 25, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348915301_134531734c_2_0_0, from-node: $N_8740348915301_134531734c_2_0) isa node-link; 

match
$L_8740348915301_134531734c_2 isa list, has hash "L_8740348915301_134531734c_2"; 

insert
$N_8740348915301_134531734c_2_1 isa MLIL_CONST, has hash "N_8740348915301_134531734c_2_1", has edge-label "1";
(to-node: $N_8740348915301_134531734c_2_1, from-node: $L_8740348915301_134531734c_2) isa node-link; 

match
$N_8740348915301_134531734c_2_1 isa operation, has hash "N_8740348915301_134531734c_2_1"; 

insert
$N_8740348915301_134531734c_2_1_0 isa constant, has hash "N_8740348915301_134531734c_2_1_0", has constant-value "134541270", has edge-label "constant";
(to-node: $N_8740348915301_134531734c_2_1_0, from-node: $N_8740348915301_134531734c_2_1) isa node-link; 

match
$N_8740348915301_134531734c isa instruction, has hash "N_8740348915301_134531734c"; 

insert
$N_8740348915301_134531734c_3 isa constant, has hash "N_8740348915301_134531734c_3", has constant-value "27", has edge-label "src_memory";
(to-node: $N_8740348915301_134531734c_3, from-node: $N_8740348915301_134531734c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 161, has bb-end 166; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 161, has bb-end 166; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348324201_134531746c isa instruction, has hash "N_8740348324201_134531746c", has il-index 162, has asm-address "0x804caa2", has operation-type "MLIL_CALL_SSA", has ins-text "mem#29 = 0x804afd0(eax_26#26, 0x804f2cc) @ mem#28";
(contains-instruction: $N_8740348324201_134531746c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348324201_134531746c isa instruction, has hash "N_8740348324201_134531746c"; 

insert
$N_8740348324201_134531746c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348324201_134531746c_0", has edge-label "output";
(to-node: $N_8740348324201_134531746c_0, from-node: $N_8740348324201_134531746c) isa node-link; 

match
$N_8740348324201_134531746c_0 isa operation, has hash "N_8740348324201_134531746c_0"; 

insert
$N_8740348324201_134531746c_0_0 isa constant, has hash "N_8740348324201_134531746c_0_0", has constant-value "29", has edge-label "dest_memory";
(to-node: $N_8740348324201_134531746c_0_0, from-node: $N_8740348324201_134531746c_0) isa node-link; 

match
$N_8740348324201_134531746c_0 isa operation, has hash "N_8740348324201_134531746c_0"; 

insert
$L_8740348324201_134531746c_0_1 isa list, has hash "L_8740348324201_134531746c_0_1", has list-size 0, has edge-label "dest";
(to-node: $L_8740348324201_134531746c_0_1, from-node: $N_8740348324201_134531746c_0) isa node-link; 

match
$N_8740348324201_134531746c isa instruction, has hash "N_8740348324201_134531746c"; 

insert
$N_8740348324201_134531746c_1 isa MLIL_CONST_PTR, has hash "N_8740348324201_134531746c_1", has edge-label "dest";
(to-node: $N_8740348324201_134531746c_1, from-node: $N_8740348324201_134531746c) isa node-link; 

match
$N_8740348324201_134531746c_1 isa operation, has hash "N_8740348324201_134531746c_1"; 

insert
$N_8740348324201_134531746c_1_0 isa constant, has hash "N_8740348324201_134531746c_1_0", has constant-value "134524880", has edge-label "constant";
(to-node: $N_8740348324201_134531746c_1_0, from-node: $N_8740348324201_134531746c_1) isa node-link; 

match
$N_8740348324201_134531746c isa instruction, has hash "N_8740348324201_134531746c"; 

insert
$L_8740348324201_134531746c_2 isa list, has hash "L_8740348324201_134531746c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740348324201_134531746c_2, from-node: $N_8740348324201_134531746c) isa node-link; 

match
$L_8740348324201_134531746c_2 isa list, has hash "L_8740348324201_134531746c_2"; 

insert
$N_8740348324201_134531746c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348324201_134531746c_2_0", has edge-label "0";
(to-node: $N_8740348324201_134531746c_2_0, from-node: $L_8740348324201_134531746c_2) isa node-link; 

match
$N_8740348324201_134531746c_2_0 isa operation, has hash "N_8740348324201_134531746c_2_0"; 

insert
$N_8740348324201_134531746c_2_0_0 isa variable-ssa, has hash "N_8740348324201_134531746c_2_0_0", has var "eax_26", has version 26, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348324201_134531746c_2_0_0, from-node: $N_8740348324201_134531746c_2_0) isa node-link; 

match
$L_8740348324201_134531746c_2 isa list, has hash "L_8740348324201_134531746c_2"; 

insert
$N_8740348324201_134531746c_2_1 isa MLIL_CONST, has hash "N_8740348324201_134531746c_2_1", has edge-label "1";
(to-node: $N_8740348324201_134531746c_2_1, from-node: $L_8740348324201_134531746c_2) isa node-link; 

match
$N_8740348324201_134531746c_2_1 isa operation, has hash "N_8740348324201_134531746c_2_1"; 

insert
$N_8740348324201_134531746c_2_1_0 isa constant, has hash "N_8740348324201_134531746c_2_1_0", has constant-value "134542028", has edge-label "constant";
(to-node: $N_8740348324201_134531746c_2_1_0, from-node: $N_8740348324201_134531746c_2_1) isa node-link; 

match
$N_8740348324201_134531746c isa instruction, has hash "N_8740348324201_134531746c"; 

insert
$N_8740348324201_134531746c_3 isa constant, has hash "N_8740348324201_134531746c_3", has constant-value "28", has edge-label "src_memory";
(to-node: $N_8740348324201_134531746c_3, from-node: $N_8740348324201_134531746c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 161, has bb-end 166; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 161, has bb-end 166; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349364741_134531760c isa instruction, has hash "N_8740349364741_134531760c", has il-index 163, has asm-address "0x804cab0", has operation-type "MLIL_CALL_SSA", has ins-text "edx_5#4, mem#30 = 0x8049ad0(0x8050554) @ mem#29";
(contains-instruction: $N_8740349364741_134531760c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349364741_134531760c isa instruction, has hash "N_8740349364741_134531760c"; 

insert
$N_8740349364741_134531760c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740349364741_134531760c_0", has edge-label "output";
(to-node: $N_8740349364741_134531760c_0, from-node: $N_8740349364741_134531760c) isa node-link; 

match
$N_8740349364741_134531760c_0 isa operation, has hash "N_8740349364741_134531760c_0"; 

insert
$N_8740349364741_134531760c_0_0 isa constant, has hash "N_8740349364741_134531760c_0_0", has constant-value "30", has edge-label "dest_memory";
(to-node: $N_8740349364741_134531760c_0_0, from-node: $N_8740349364741_134531760c_0) isa node-link; 

match
$N_8740349364741_134531760c_0 isa operation, has hash "N_8740349364741_134531760c_0"; 

insert
$L_8740349364741_134531760c_0_1 isa list, has hash "L_8740349364741_134531760c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740349364741_134531760c_0_1, from-node: $N_8740349364741_134531760c_0) isa node-link; 

match
$L_8740349364741_134531760c_0_1 isa list, has hash "L_8740349364741_134531760c_0_1"; 

insert
$N_8740349364741_134531760c_0_1_0 isa variable-ssa, has hash "N_8740349364741_134531760c_0_1_0", has var "edx_5", has version 4, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349364741_134531760c_0_1_0, from-node: $L_8740349364741_134531760c_0_1) isa node-link; 

match
$N_8740349364741_134531760c isa instruction, has hash "N_8740349364741_134531760c"; 

insert
$N_8740349364741_134531760c_1 isa MLIL_CONST_PTR, has hash "N_8740349364741_134531760c_1", has edge-label "dest";
(to-node: $N_8740349364741_134531760c_1, from-node: $N_8740349364741_134531760c) isa node-link; 

match
$N_8740349364741_134531760c_1 isa operation, has hash "N_8740349364741_134531760c_1"; 

insert
$N_8740349364741_134531760c_1_0 isa constant, has hash "N_8740349364741_134531760c_1_0", has constant-value "134519504", has edge-label "constant";
(to-node: $N_8740349364741_134531760c_1_0, from-node: $N_8740349364741_134531760c_1) isa node-link; 

match
$N_8740349364741_134531760c isa instruction, has hash "N_8740349364741_134531760c"; 

insert
$L_8740349364741_134531760c_2 isa list, has hash "L_8740349364741_134531760c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740349364741_134531760c_2, from-node: $N_8740349364741_134531760c) isa node-link; 

match
$L_8740349364741_134531760c_2 isa list, has hash "L_8740349364741_134531760c_2"; 

insert
$N_8740349364741_134531760c_2_0 isa MLIL_CONST_PTR, has hash "N_8740349364741_134531760c_2_0", has edge-label "0";
(to-node: $N_8740349364741_134531760c_2_0, from-node: $L_8740349364741_134531760c_2) isa node-link; 

match
$N_8740349364741_134531760c_2_0 isa operation, has hash "N_8740349364741_134531760c_2_0"; 

insert
$N_8740349364741_134531760c_2_0_0 isa constant, has hash "N_8740349364741_134531760c_2_0_0", has constant-value "134546772", has edge-label "constant";
(to-node: $N_8740349364741_134531760c_2_0_0, from-node: $N_8740349364741_134531760c_2_0) isa node-link; 

match
$N_8740349364741_134531760c isa instruction, has hash "N_8740349364741_134531760c"; 

insert
$N_8740349364741_134531760c_3 isa constant, has hash "N_8740349364741_134531760c_3", has constant-value "29", has edge-label "src_memory";
(to-node: $N_8740349364741_134531760c_3, from-node: $N_8740349364741_134531760c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 161, has bb-end 166; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 161, has bb-end 166; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348664325_134531774c isa instruction, has hash "N_8740348664325_134531774c", has il-index 164, has asm-address "0x804cabe", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_15#19 = &var_190";
(contains-instruction: $N_8740348664325_134531774c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348664325_134531774c isa instruction, has hash "N_8740348664325_134531774c"; 

insert
$N_8740348664325_134531774c_0 isa variable-ssa, has hash "N_8740348664325_134531774c_0", has var "var_1ac_15", has version 19, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348664325_134531774c_0, from-node: $N_8740348664325_134531774c) isa node-link; 

match
$N_8740348664325_134531774c isa instruction, has hash "N_8740348664325_134531774c"; 

insert
$N_8740348664325_134531774c_1 isa MLIL_ADDRESS_OF, has hash "N_8740348664325_134531774c_1", has edge-label "src";
(to-node: $N_8740348664325_134531774c_1, from-node: $N_8740348664325_134531774c) isa node-link; 

match
$N_8740348664325_134531774c_1 isa operation, has hash "N_8740348664325_134531774c_1"; 

insert
$N_8740348664325_134531774c_1_0 isa variable, has hash "N_8740348664325_134531774c_1_0", has var "var_190", has edge-label "src", has var-type "void", has var-size 256, has var-func "cgc_handle_register_user";
(to-node: $N_8740348664325_134531774c_1_0, from-node: $N_8740348664325_134531774c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 161, has bb-end 166; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 161, has bb-end 166; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348942085_134531793c isa instruction, has hash "N_8740348942085_134531793c", has il-index 165, has asm-address "0x804cad1", has operation-type "MLIL_CALL_SSA", has ins-text "eax_27#27, mem#31 = 0x804bc80(0x805013c, edx_5#4, var_1ac_15#19, 0x100, 0xa, 0x805013c) @ mem#30";
(contains-instruction: $N_8740348942085_134531793c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348942085_134531793c isa instruction, has hash "N_8740348942085_134531793c"; 

insert
$N_8740348942085_134531793c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348942085_134531793c_0", has edge-label "output";
(to-node: $N_8740348942085_134531793c_0, from-node: $N_8740348942085_134531793c) isa node-link; 

match
$N_8740348942085_134531793c_0 isa operation, has hash "N_8740348942085_134531793c_0"; 

insert
$N_8740348942085_134531793c_0_0 isa constant, has hash "N_8740348942085_134531793c_0_0", has constant-value "31", has edge-label "dest_memory";
(to-node: $N_8740348942085_134531793c_0_0, from-node: $N_8740348942085_134531793c_0) isa node-link; 

match
$N_8740348942085_134531793c_0 isa operation, has hash "N_8740348942085_134531793c_0"; 

insert
$L_8740348942085_134531793c_0_1 isa list, has hash "L_8740348942085_134531793c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348942085_134531793c_0_1, from-node: $N_8740348942085_134531793c_0) isa node-link; 

match
$L_8740348942085_134531793c_0_1 isa list, has hash "L_8740348942085_134531793c_0_1"; 

insert
$N_8740348942085_134531793c_0_1_0 isa variable-ssa, has hash "N_8740348942085_134531793c_0_1_0", has var "eax_27", has version 27, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348942085_134531793c_0_1_0, from-node: $L_8740348942085_134531793c_0_1) isa node-link; 

match
$N_8740348942085_134531793c isa instruction, has hash "N_8740348942085_134531793c"; 

insert
$N_8740348942085_134531793c_1 isa MLIL_CONST_PTR, has hash "N_8740348942085_134531793c_1", has edge-label "dest";
(to-node: $N_8740348942085_134531793c_1, from-node: $N_8740348942085_134531793c) isa node-link; 

match
$N_8740348942085_134531793c_1 isa operation, has hash "N_8740348942085_134531793c_1"; 

insert
$N_8740348942085_134531793c_1_0 isa constant, has hash "N_8740348942085_134531793c_1_0", has constant-value "134528128", has edge-label "constant";
(to-node: $N_8740348942085_134531793c_1_0, from-node: $N_8740348942085_134531793c_1) isa node-link; 

match
$N_8740348942085_134531793c isa instruction, has hash "N_8740348942085_134531793c"; 

insert
$L_8740348942085_134531793c_2 isa list, has hash "L_8740348942085_134531793c_2", has list-size 6, has edge-label "params";
(to-node: $L_8740348942085_134531793c_2, from-node: $N_8740348942085_134531793c) isa node-link; 

match
$L_8740348942085_134531793c_2 isa list, has hash "L_8740348942085_134531793c_2"; 

insert
$N_8740348942085_134531793c_2_0 isa MLIL_CONST, has hash "N_8740348942085_134531793c_2_0", has edge-label "0";
(to-node: $N_8740348942085_134531793c_2_0, from-node: $L_8740348942085_134531793c_2) isa node-link; 

match
$N_8740348942085_134531793c_2_0 isa operation, has hash "N_8740348942085_134531793c_2_0"; 

insert
$N_8740348942085_134531793c_2_0_0 isa constant, has hash "N_8740348942085_134531793c_2_0_0", has constant-value "134545724", has edge-label "constant";
(to-node: $N_8740348942085_134531793c_2_0_0, from-node: $N_8740348942085_134531793c_2_0) isa node-link; 

match
$L_8740348942085_134531793c_2 isa list, has hash "L_8740348942085_134531793c_2"; 

insert
$N_8740348942085_134531793c_2_1 isa MLIL_VAR_SSA, has hash "N_8740348942085_134531793c_2_1", has edge-label "1";
(to-node: $N_8740348942085_134531793c_2_1, from-node: $L_8740348942085_134531793c_2) isa node-link; 

match
$N_8740348942085_134531793c_2_1 isa operation, has hash "N_8740348942085_134531793c_2_1"; 

insert
$N_8740348942085_134531793c_2_1_0 isa variable-ssa, has hash "N_8740348942085_134531793c_2_1_0", has var "edx_5", has version 4, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348942085_134531793c_2_1_0, from-node: $N_8740348942085_134531793c_2_1) isa node-link; 

match
$L_8740348942085_134531793c_2 isa list, has hash "L_8740348942085_134531793c_2"; 

insert
$N_8740348942085_134531793c_2_2 isa MLIL_VAR_SSA, has hash "N_8740348942085_134531793c_2_2", has edge-label "2";
(to-node: $N_8740348942085_134531793c_2_2, from-node: $L_8740348942085_134531793c_2) isa node-link; 

match
$N_8740348942085_134531793c_2_2 isa operation, has hash "N_8740348942085_134531793c_2_2"; 

insert
$N_8740348942085_134531793c_2_2_0 isa variable-ssa, has hash "N_8740348942085_134531793c_2_2_0", has var "var_1ac_15", has version 19, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348942085_134531793c_2_2_0, from-node: $N_8740348942085_134531793c_2_2) isa node-link; 

match
$L_8740348942085_134531793c_2 isa list, has hash "L_8740348942085_134531793c_2"; 

insert
$N_8740348942085_134531793c_2_3 isa MLIL_CONST, has hash "N_8740348942085_134531793c_2_3", has edge-label "3";
(to-node: $N_8740348942085_134531793c_2_3, from-node: $L_8740348942085_134531793c_2) isa node-link; 

match
$N_8740348942085_134531793c_2_3 isa operation, has hash "N_8740348942085_134531793c_2_3"; 

insert
$N_8740348942085_134531793c_2_3_0 isa constant, has hash "N_8740348942085_134531793c_2_3_0", has constant-value "256", has edge-label "constant";
(to-node: $N_8740348942085_134531793c_2_3_0, from-node: $N_8740348942085_134531793c_2_3) isa node-link; 

match
$L_8740348942085_134531793c_2 isa list, has hash "L_8740348942085_134531793c_2"; 

insert
$N_8740348942085_134531793c_2_4 isa MLIL_CONST, has hash "N_8740348942085_134531793c_2_4", has edge-label "4";
(to-node: $N_8740348942085_134531793c_2_4, from-node: $L_8740348942085_134531793c_2) isa node-link; 

match
$N_8740348942085_134531793c_2_4 isa operation, has hash "N_8740348942085_134531793c_2_4"; 

insert
$N_8740348942085_134531793c_2_4_0 isa constant, has hash "N_8740348942085_134531793c_2_4_0", has constant-value "10", has edge-label "constant";
(to-node: $N_8740348942085_134531793c_2_4_0, from-node: $N_8740348942085_134531793c_2_4) isa node-link; 

match
$L_8740348942085_134531793c_2 isa list, has hash "L_8740348942085_134531793c_2"; 

insert
$N_8740348942085_134531793c_2_5 isa MLIL_CONST_PTR, has hash "N_8740348942085_134531793c_2_5", has edge-label "5";
(to-node: $N_8740348942085_134531793c_2_5, from-node: $L_8740348942085_134531793c_2) isa node-link; 

match
$N_8740348942085_134531793c_2_5 isa operation, has hash "N_8740348942085_134531793c_2_5"; 

insert
$N_8740348942085_134531793c_2_5_0 isa constant, has hash "N_8740348942085_134531793c_2_5_0", has constant-value "134545724", has edge-label "constant";
(to-node: $N_8740348942085_134531793c_2_5_0, from-node: $N_8740348942085_134531793c_2_5) isa node-link; 

match
$N_8740348942085_134531793c isa instruction, has hash "N_8740348942085_134531793c"; 

insert
$N_8740348942085_134531793c_3 isa constant, has hash "N_8740348942085_134531793c_3", has constant-value "30", has edge-label "src_memory";
(to-node: $N_8740348942085_134531793c_3, from-node: $N_8740348942085_134531793c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 161, has bb-end 166; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 161, has bb-end 166; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348477189_134531800c isa instruction, has hash "N_8740348477189_134531800c", has il-index 166, has asm-address "0x804cad8", has operation-type "MLIL_IF", has ins-text "if (eax_27#27 s<= 0) then 171 @ 0x804cc0d else 173 @ 0x804cade";
(contains-instruction: $N_8740348477189_134531800c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348477189_134531800c isa instruction, has hash "N_8740348477189_134531800c"; 

insert
$N_8740348477189_134531800c_0 isa MLIL_CMP_SLE, has hash "N_8740348477189_134531800c_0", has edge-label "condition";
(to-node: $N_8740348477189_134531800c_0, from-node: $N_8740348477189_134531800c) isa node-link; 

match
$N_8740348477189_134531800c_0 isa operation, has hash "N_8740348477189_134531800c_0"; 

insert
$N_8740348477189_134531800c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348477189_134531800c_0_0", has edge-label "left";
(to-node: $N_8740348477189_134531800c_0_0, from-node: $N_8740348477189_134531800c_0) isa node-link; 

match
$N_8740348477189_134531800c_0_0 isa operation, has hash "N_8740348477189_134531800c_0_0"; 

insert
$N_8740348477189_134531800c_0_0_0 isa variable-ssa, has hash "N_8740348477189_134531800c_0_0_0", has var "eax_27", has version 27, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348477189_134531800c_0_0_0, from-node: $N_8740348477189_134531800c_0_0) isa node-link; 

match
$N_8740348477189_134531800c_0 isa operation, has hash "N_8740348477189_134531800c_0"; 

insert
$N_8740348477189_134531800c_0_1 isa MLIL_CONST, has hash "N_8740348477189_134531800c_0_1", has edge-label "right";
(to-node: $N_8740348477189_134531800c_0_1, from-node: $N_8740348477189_134531800c_0) isa node-link; 

match
$N_8740348477189_134531800c_0_1 isa operation, has hash "N_8740348477189_134531800c_0_1"; 

insert
$N_8740348477189_134531800c_0_1_0 isa constant, has hash "N_8740348477189_134531800c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348477189_134531800c_0_1_0, from-node: $N_8740348477189_134531800c_0_1) isa node-link; 

match
$N_8740348477189_134531800c isa instruction, has hash "N_8740348477189_134531800c"; 

insert
$N_8740348477189_134531800c_1 isa constant, has hash "N_8740348477189_134531800c_1", has constant-value "171", has edge-label "true";
(to-node: $N_8740348477189_134531800c_1, from-node: $N_8740348477189_134531800c) isa node-link; 

match
$N_8740348477189_134531800c isa instruction, has hash "N_8740348477189_134531800c"; 

insert
$N_8740348477189_134531800c_2 isa constant, has hash "N_8740348477189_134531800c_2", has constant-value "173", has edge-label "false";
(to-node: $N_8740348477189_134531800c_2, from-node: $N_8740348477189_134531800c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 167, has bb-end 167; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 168, has bb-end 170; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 168, has bb-end 170; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 168, has bb-end 170; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349082229_134531637c isa instruction, has hash "N_8740349082229_134531637c", has il-index 168, has asm-address "0x804ca35", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebp_2#5 = 0";
(contains-instruction: $N_8740349082229_134531637c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349082229_134531637c isa instruction, has hash "N_8740349082229_134531637c"; 

insert
$N_8740349082229_134531637c_0 isa variable-ssa, has hash "N_8740349082229_134531637c_0", has var "ebp_2", has version 5, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349082229_134531637c_0, from-node: $N_8740349082229_134531637c) isa node-link; 

match
$N_8740349082229_134531637c isa instruction, has hash "N_8740349082229_134531637c"; 

insert
$N_8740349082229_134531637c_1 isa MLIL_CONST, has hash "N_8740349082229_134531637c_1", has edge-label "src";
(to-node: $N_8740349082229_134531637c_1, from-node: $N_8740349082229_134531637c) isa node-link; 

match
$N_8740349082229_134531637c_1 isa operation, has hash "N_8740349082229_134531637c_1"; 

insert
$N_8740349082229_134531637c_1_0 isa constant, has hash "N_8740349082229_134531637c_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349082229_134531637c_1_0, from-node: $N_8740349082229_134531637c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 168, has bb-end 170; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 168, has bb-end 170; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348775545_134531639c isa instruction, has hash "N_8740348775545_134531639c", has il-index 169, has asm-address "0x804ca37", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edi_1#9 = eax_20#42";
(contains-instruction: $N_8740348775545_134531639c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348775545_134531639c isa instruction, has hash "N_8740348775545_134531639c"; 

insert
$N_8740348775545_134531639c_0 isa variable-ssa, has hash "N_8740348775545_134531639c_0", has var "edi_1", has version 9, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348775545_134531639c_0, from-node: $N_8740348775545_134531639c) isa node-link; 

match
$N_8740348775545_134531639c isa instruction, has hash "N_8740348775545_134531639c"; 

insert
$N_8740348775545_134531639c_1 isa MLIL_VAR_SSA, has hash "N_8740348775545_134531639c_1", has edge-label "src";
(to-node: $N_8740348775545_134531639c_1, from-node: $N_8740348775545_134531639c) isa node-link; 

match
$N_8740348775545_134531639c_1 isa operation, has hash "N_8740348775545_134531639c_1"; 

insert
$N_8740348775545_134531639c_1_0 isa variable-ssa, has hash "N_8740348775545_134531639c_1_0", has var "eax_20", has version 42, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348775545_134531639c_1_0, from-node: $N_8740348775545_134531639c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 168, has bb-end 170; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348776197_134531639c isa instruction, has hash "N_8740348776197_134531639c", has il-index 170, has asm-address "0x804ca37", has operation-type "MLIL_GOTO", has ins-text "goto 179 @ 0x804ca39";
(contains-instruction: $N_8740348776197_134531639c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348776197_134531639c isa instruction, has hash "N_8740348776197_134531639c"; 

insert
$N_8740348776197_134531639c_0 isa constant, has hash "N_8740348776197_134531639c_0", has constant-value "179", has edge-label "dest";
(to-node: $N_8740348776197_134531639c_0, from-node: $N_8740348776197_134531639c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 171, has bb-end 172; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 171, has bb-end 172; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 171, has bb-end 172; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348932893_134532109c isa instruction, has hash "N_8740348932893_134532109c", has il-index 171, has asm-address "0x804cc0d", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#18 = 0xf";
(contains-instruction: $N_8740348932893_134532109c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348932893_134532109c isa instruction, has hash "N_8740348932893_134532109c"; 

insert
$N_8740348932893_134532109c_0 isa variable-ssa, has hash "N_8740348932893_134532109c_0", has var "esi", has version 18, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348932893_134532109c_0, from-node: $N_8740348932893_134532109c) isa node-link; 

match
$N_8740348932893_134532109c isa instruction, has hash "N_8740348932893_134532109c"; 

insert
$N_8740348932893_134532109c_1 isa MLIL_CONST_PTR, has hash "N_8740348932893_134532109c_1", has edge-label "src";
(to-node: $N_8740348932893_134532109c_1, from-node: $N_8740348932893_134532109c) isa node-link; 

match
$N_8740348932893_134532109c_1 isa operation, has hash "N_8740348932893_134532109c_1"; 

insert
$N_8740348932893_134532109c_1_0 isa constant, has hash "N_8740348932893_134532109c_1_0", has constant-value "15", has edge-label "constant";
(to-node: $N_8740348932893_134532109c_1_0, from-node: $N_8740348932893_134532109c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 171, has bb-end 172; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 171, has bb-end 172; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349747717_134532114c isa instruction, has hash "N_8740349747717_134532114c", has il-index 172, has asm-address "0x804cc12", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740349747717_134532114c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349747717_134532114c isa instruction, has hash "N_8740349747717_134532114c"; 

insert
$N_8740349747717_134532114c_0 isa constant, has hash "N_8740349747717_134532114c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740349747717_134532114c_0, from-node: $N_8740349747717_134532114c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 173, has bb-end 178; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 173, has bb-end 178; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 173, has bb-end 178; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349388153_134531806c isa instruction, has hash "N_8740349388153_134531806c", has il-index 173, has asm-address "0x804cade", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_28#28 = var_198 @ mem#31";
(contains-instruction: $N_8740349388153_134531806c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349388153_134531806c isa instruction, has hash "N_8740349388153_134531806c"; 

insert
$N_8740349388153_134531806c_0 isa variable-ssa, has hash "N_8740349388153_134531806c_0", has var "eax_28", has version 28, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349388153_134531806c_0, from-node: $N_8740349388153_134531806c) isa node-link; 

match
$N_8740349388153_134531806c isa instruction, has hash "N_8740349388153_134531806c"; 

insert
$N_8740349388153_134531806c_1 isa MLIL_VAR_ALIASED, has hash "N_8740349388153_134531806c_1", has edge-label "src";
(to-node: $N_8740349388153_134531806c_1, from-node: $N_8740349388153_134531806c) isa node-link; 

match
$N_8740349388153_134531806c_1 isa operation, has hash "N_8740349388153_134531806c_1"; 

insert
$N_8740349388153_134531806c_1_0 isa variable-ssa, has hash "N_8740349388153_134531806c_1_0", has var "var_198", has version 31, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349388153_134531806c_1_0, from-node: $N_8740349388153_134531806c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 173, has bb-end 178; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 173, has bb-end 178; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349116677_134531810c isa instruction, has hash "N_8740349116677_134531810c", has il-index 174, has asm-address "0x804cae2", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1a8_4#3 = &var_190";
(contains-instruction: $N_8740349116677_134531810c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349116677_134531810c isa instruction, has hash "N_8740349116677_134531810c"; 

insert
$N_8740349116677_134531810c_0 isa variable-ssa, has hash "N_8740349116677_134531810c_0", has var "var_1a8_4", has version 3, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349116677_134531810c_0, from-node: $N_8740349116677_134531810c) isa node-link; 

match
$N_8740349116677_134531810c isa instruction, has hash "N_8740349116677_134531810c"; 

insert
$N_8740349116677_134531810c_1 isa MLIL_ADDRESS_OF, has hash "N_8740349116677_134531810c_1", has edge-label "src";
(to-node: $N_8740349116677_134531810c_1, from-node: $N_8740349116677_134531810c) isa node-link; 

match
$N_8740349116677_134531810c_1 isa operation, has hash "N_8740349116677_134531810c_1"; 

insert
$N_8740349116677_134531810c_1_0 isa variable, has hash "N_8740349116677_134531810c_1_0", has var "var_190", has edge-label "src", has var-type "void", has var-size 256, has var-func "cgc_handle_register_user";
(to-node: $N_8740349116677_134531810c_1_0, from-node: $N_8740349116677_134531810c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 173, has bb-end 178; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 173, has bb-end 178; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348470533_134531814c isa instruction, has hash "N_8740348470533_134531814c", has il-index 175, has asm-address "0x804cae6", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_16#20 = eax_28#28";
(contains-instruction: $N_8740348470533_134531814c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348470533_134531814c isa instruction, has hash "N_8740348470533_134531814c"; 

insert
$N_8740348470533_134531814c_0 isa variable-ssa, has hash "N_8740348470533_134531814c_0", has var "var_1ac_16", has version 20, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348470533_134531814c_0, from-node: $N_8740348470533_134531814c) isa node-link; 

match
$N_8740348470533_134531814c isa instruction, has hash "N_8740348470533_134531814c"; 

insert
$N_8740348470533_134531814c_1 isa MLIL_VAR_SSA, has hash "N_8740348470533_134531814c_1", has edge-label "src";
(to-node: $N_8740348470533_134531814c_1, from-node: $N_8740348470533_134531814c) isa node-link; 

match
$N_8740348470533_134531814c_1 isa operation, has hash "N_8740348470533_134531814c_1"; 

insert
$N_8740348470533_134531814c_1_0 isa variable-ssa, has hash "N_8740348470533_134531814c_1_0", has var "eax_28", has version 28, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348470533_134531814c_1_0, from-node: $N_8740348470533_134531814c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 173, has bb-end 178; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 173, has bb-end 178; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348104709_134531817c isa instruction, has hash "N_8740348104709_134531817c", has il-index 176, has asm-address "0x804cae9", has operation-type "MLIL_CALL_SSA", has ins-text "eax_29#29, mem#32 = 0x804c660(var_1ac_16#20, var_1a8_4#3) @ mem#31";
(contains-instruction: $N_8740348104709_134531817c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348104709_134531817c isa instruction, has hash "N_8740348104709_134531817c"; 

insert
$N_8740348104709_134531817c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348104709_134531817c_0", has edge-label "output";
(to-node: $N_8740348104709_134531817c_0, from-node: $N_8740348104709_134531817c) isa node-link; 

match
$N_8740348104709_134531817c_0 isa operation, has hash "N_8740348104709_134531817c_0"; 

insert
$N_8740348104709_134531817c_0_0 isa constant, has hash "N_8740348104709_134531817c_0_0", has constant-value "32", has edge-label "dest_memory";
(to-node: $N_8740348104709_134531817c_0_0, from-node: $N_8740348104709_134531817c_0) isa node-link; 

match
$N_8740348104709_134531817c_0 isa operation, has hash "N_8740348104709_134531817c_0"; 

insert
$L_8740348104709_134531817c_0_1 isa list, has hash "L_8740348104709_134531817c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348104709_134531817c_0_1, from-node: $N_8740348104709_134531817c_0) isa node-link; 

match
$L_8740348104709_134531817c_0_1 isa list, has hash "L_8740348104709_134531817c_0_1"; 

insert
$N_8740348104709_134531817c_0_1_0 isa variable-ssa, has hash "N_8740348104709_134531817c_0_1_0", has var "eax_29", has version 29, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348104709_134531817c_0_1_0, from-node: $L_8740348104709_134531817c_0_1) isa node-link; 

match
$N_8740348104709_134531817c isa instruction, has hash "N_8740348104709_134531817c"; 

insert
$N_8740348104709_134531817c_1 isa MLIL_CONST_PTR, has hash "N_8740348104709_134531817c_1", has edge-label "dest";
(to-node: $N_8740348104709_134531817c_1, from-node: $N_8740348104709_134531817c) isa node-link; 

match
$N_8740348104709_134531817c_1 isa operation, has hash "N_8740348104709_134531817c_1"; 

insert
$N_8740348104709_134531817c_1_0 isa constant, has hash "N_8740348104709_134531817c_1_0", has constant-value "134530656", has edge-label "constant";
(to-node: $N_8740348104709_134531817c_1_0, from-node: $N_8740348104709_134531817c_1) isa node-link; 

match
$N_8740348104709_134531817c isa instruction, has hash "N_8740348104709_134531817c"; 

insert
$L_8740348104709_134531817c_2 isa list, has hash "L_8740348104709_134531817c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740348104709_134531817c_2, from-node: $N_8740348104709_134531817c) isa node-link; 

match
$L_8740348104709_134531817c_2 isa list, has hash "L_8740348104709_134531817c_2"; 

insert
$N_8740348104709_134531817c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348104709_134531817c_2_0", has edge-label "0";
(to-node: $N_8740348104709_134531817c_2_0, from-node: $L_8740348104709_134531817c_2) isa node-link; 

match
$N_8740348104709_134531817c_2_0 isa operation, has hash "N_8740348104709_134531817c_2_0"; 

insert
$N_8740348104709_134531817c_2_0_0 isa variable-ssa, has hash "N_8740348104709_134531817c_2_0_0", has var "var_1ac_16", has version 20, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348104709_134531817c_2_0_0, from-node: $N_8740348104709_134531817c_2_0) isa node-link; 

match
$L_8740348104709_134531817c_2 isa list, has hash "L_8740348104709_134531817c_2"; 

insert
$N_8740348104709_134531817c_2_1 isa MLIL_VAR_SSA, has hash "N_8740348104709_134531817c_2_1", has edge-label "1";
(to-node: $N_8740348104709_134531817c_2_1, from-node: $L_8740348104709_134531817c_2) isa node-link; 

match
$N_8740348104709_134531817c_2_1 isa operation, has hash "N_8740348104709_134531817c_2_1"; 

insert
$N_8740348104709_134531817c_2_1_0 isa variable-ssa, has hash "N_8740348104709_134531817c_2_1_0", has var "var_1a8_4", has version 3, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348104709_134531817c_2_1_0, from-node: $N_8740348104709_134531817c_2_1) isa node-link; 

match
$N_8740348104709_134531817c isa instruction, has hash "N_8740348104709_134531817c"; 

insert
$N_8740348104709_134531817c_3 isa constant, has hash "N_8740348104709_134531817c_3", has constant-value "31", has edge-label "src_memory";
(to-node: $N_8740348104709_134531817c_3, from-node: $N_8740348104709_134531817c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 173, has bb-end 178; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 173, has bb-end 178; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348494121_134531822c isa instruction, has hash "N_8740348494121_134531822c", has il-index 177, has asm-address "0x804caee", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#19 = eax_29#29";
(contains-instruction: $N_8740348494121_134531822c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348494121_134531822c isa instruction, has hash "N_8740348494121_134531822c"; 

insert
$N_8740348494121_134531822c_0 isa variable-ssa, has hash "N_8740348494121_134531822c_0", has var "esi", has version 19, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348494121_134531822c_0, from-node: $N_8740348494121_134531822c) isa node-link; 

match
$N_8740348494121_134531822c isa instruction, has hash "N_8740348494121_134531822c"; 

insert
$N_8740348494121_134531822c_1 isa MLIL_VAR_SSA, has hash "N_8740348494121_134531822c_1", has edge-label "src";
(to-node: $N_8740348494121_134531822c_1, from-node: $N_8740348494121_134531822c) isa node-link; 

match
$N_8740348494121_134531822c_1 isa operation, has hash "N_8740348494121_134531822c_1"; 

insert
$N_8740348494121_134531822c_1_0 isa variable-ssa, has hash "N_8740348494121_134531822c_1_0", has var "eax_29", has version 29, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348494121_134531822c_1_0, from-node: $N_8740348494121_134531822c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 173, has bb-end 178; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 173, has bb-end 178; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349004549_134531826c isa instruction, has hash "N_8740349004549_134531826c", has il-index 178, has asm-address "0x804caf2", has operation-type "MLIL_IF", has ins-text "if (esi#19 != 0) then 191 @ 0x0 else 192 @ 0x804caff";
(contains-instruction: $N_8740349004549_134531826c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349004549_134531826c isa instruction, has hash "N_8740349004549_134531826c"; 

insert
$N_8740349004549_134531826c_0 isa MLIL_CMP_NE, has hash "N_8740349004549_134531826c_0", has edge-label "condition";
(to-node: $N_8740349004549_134531826c_0, from-node: $N_8740349004549_134531826c) isa node-link; 

match
$N_8740349004549_134531826c_0 isa operation, has hash "N_8740349004549_134531826c_0"; 

insert
$N_8740349004549_134531826c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349004549_134531826c_0_0", has edge-label "left";
(to-node: $N_8740349004549_134531826c_0_0, from-node: $N_8740349004549_134531826c_0) isa node-link; 

match
$N_8740349004549_134531826c_0_0 isa operation, has hash "N_8740349004549_134531826c_0_0"; 

insert
$N_8740349004549_134531826c_0_0_0 isa variable-ssa, has hash "N_8740349004549_134531826c_0_0_0", has var "esi", has version 19, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349004549_134531826c_0_0_0, from-node: $N_8740349004549_134531826c_0_0) isa node-link; 

match
$N_8740349004549_134531826c_0 isa operation, has hash "N_8740349004549_134531826c_0"; 

insert
$N_8740349004549_134531826c_0_1 isa MLIL_CONST, has hash "N_8740349004549_134531826c_0_1", has edge-label "right";
(to-node: $N_8740349004549_134531826c_0_1, from-node: $N_8740349004549_134531826c_0) isa node-link; 

match
$N_8740349004549_134531826c_0_1 isa operation, has hash "N_8740349004549_134531826c_0_1"; 

insert
$N_8740349004549_134531826c_0_1_0 isa constant, has hash "N_8740349004549_134531826c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349004549_134531826c_0_1_0, from-node: $N_8740349004549_134531826c_0_1) isa node-link; 

match
$N_8740349004549_134531826c isa instruction, has hash "N_8740349004549_134531826c"; 

insert
$N_8740349004549_134531826c_1 isa constant, has hash "N_8740349004549_134531826c_1", has constant-value "191", has edge-label "true";
(to-node: $N_8740349004549_134531826c_1, from-node: $N_8740349004549_134531826c) isa node-link; 

match
$N_8740349004549_134531826c isa instruction, has hash "N_8740349004549_134531826c"; 

insert
$N_8740349004549_134531826c_2 isa constant, has hash "N_8740349004549_134531826c_2", has constant-value "192", has edge-label "false";
(to-node: $N_8740349004549_134531826c_2, from-node: $N_8740349004549_134531826c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348143401_134531641c isa instruction, has hash "N_8740348143401_134531641c", has il-index 180, has asm-address "0x804ca39", has operation-type "MLIL_VAR_PHI", has ins-text "var_1a8_3#5 = ϕ(var_1a8_2#2, var_1a8_3#6)";
(contains-instruction: $N_8740348143401_134531641c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348143401_134531641c isa instruction, has hash "N_8740348143401_134531641c"; 

insert
$N_8740348143401_134531641c_0 isa variable-ssa, has hash "N_8740348143401_134531641c_0", has var "var_1a8_3", has version 5, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348143401_134531641c_0, from-node: $N_8740348143401_134531641c) isa node-link; 

match
$N_8740348143401_134531641c isa instruction, has hash "N_8740348143401_134531641c"; 

insert
$L_8740348143401_134531641c_1 isa list, has hash "L_8740348143401_134531641c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348143401_134531641c_1, from-node: $N_8740348143401_134531641c) isa node-link; 

match
$L_8740348143401_134531641c_1 isa list, has hash "L_8740348143401_134531641c_1"; 

insert
$N_8740348143401_134531641c_1_0 isa variable-ssa, has hash "N_8740348143401_134531641c_1_0", has var "var_1a8_2", has version 2, has edge-label "0", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348143401_134531641c_1_0, from-node: $L_8740348143401_134531641c_1) isa node-link; 

match
$L_8740348143401_134531641c_1 isa list, has hash "L_8740348143401_134531641c_1"; 

insert
$N_8740348143401_134531641c_1_1 isa variable-ssa, has hash "N_8740348143401_134531641c_1_1", has var "var_1a8_3", has version 6, has edge-label "1", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348143401_134531641c_1_1, from-node: $L_8740348143401_134531641c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348269333_134531641c isa instruction, has hash "N_8740348269333_134531641c", has il-index 184, has asm-address "0x804ca39", has operation-type "MLIL_MEM_PHI", has ins-text "mem#41 = ϕ(mem#26, mem#42)";
(contains-instruction: $N_8740348269333_134531641c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348269333_134531641c isa instruction, has hash "N_8740348269333_134531641c"; 

insert
$N_8740348269333_134531641c_0 isa constant, has hash "N_8740348269333_134531641c_0", has constant-value "41", has edge-label "dest_memory";
(to-node: $N_8740348269333_134531641c_0, from-node: $N_8740348269333_134531641c) isa node-link; 

match
$N_8740348269333_134531641c isa instruction, has hash "N_8740348269333_134531641c"; 

insert
$L_8740348269333_134531641c_1 isa list, has hash "L_8740348269333_134531641c_1", has list-size 2, has edge-label "src_memory";
(to-node: $L_8740348269333_134531641c_1, from-node: $N_8740348269333_134531641c) isa node-link; 

match
$L_8740348269333_134531641c_1 isa list, has hash "L_8740348269333_134531641c_1"; 

insert
$N_8740348269333_134531641c_1_0 isa constant, has hash "N_8740348269333_134531641c_1_0", has constant-value "26", has edge-label "0";
(to-node: $N_8740348269333_134531641c_1_0, from-node: $L_8740348269333_134531641c_1) isa node-link; 

match
$L_8740348269333_134531641c_1 isa list, has hash "L_8740348269333_134531641c_1"; 

insert
$N_8740348269333_134531641c_1_1 isa constant, has hash "N_8740348269333_134531641c_1_1", has constant-value "42", has edge-label "1";
(to-node: $N_8740348269333_134531641c_1_1, from-node: $L_8740348269333_134531641c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348273169_134531641c isa instruction, has hash "N_8740348273169_134531641c", has il-index 183, has asm-address "0x804ca39", has operation-type "MLIL_VAR_PHI", has ins-text "ebp_2#6 = ϕ(ebp_2#5, ebp_2#7)";
(contains-instruction: $N_8740348273169_134531641c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348273169_134531641c isa instruction, has hash "N_8740348273169_134531641c"; 

insert
$N_8740348273169_134531641c_0 isa variable-ssa, has hash "N_8740348273169_134531641c_0", has var "ebp_2", has version 6, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348273169_134531641c_0, from-node: $N_8740348273169_134531641c) isa node-link; 

match
$N_8740348273169_134531641c isa instruction, has hash "N_8740348273169_134531641c"; 

insert
$L_8740348273169_134531641c_1 isa list, has hash "L_8740348273169_134531641c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348273169_134531641c_1, from-node: $N_8740348273169_134531641c) isa node-link; 

match
$L_8740348273169_134531641c_1 isa list, has hash "L_8740348273169_134531641c_1"; 

insert
$N_8740348273169_134531641c_1_0 isa variable-ssa, has hash "N_8740348273169_134531641c_1_0", has var "ebp_2", has version 5, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348273169_134531641c_1_0, from-node: $L_8740348273169_134531641c_1) isa node-link; 

match
$L_8740348273169_134531641c_1 isa list, has hash "L_8740348273169_134531641c_1"; 

insert
$N_8740348273169_134531641c_1_1 isa variable-ssa, has hash "N_8740348273169_134531641c_1_1", has var "ebp_2", has version 7, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348273169_134531641c_1_1, from-node: $L_8740348273169_134531641c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348773105_134531641c isa instruction, has hash "N_8740348773105_134531641c", has il-index 185, has asm-address "0x804ca39", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_21#44 = [edi_1#9 + 0x20].d @ mem#41";
(contains-instruction: $N_8740348773105_134531641c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348773105_134531641c isa instruction, has hash "N_8740348773105_134531641c"; 

insert
$N_8740348773105_134531641c_0 isa variable-ssa, has hash "N_8740348773105_134531641c_0", has var "eax_21", has version 44, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348773105_134531641c_0, from-node: $N_8740348773105_134531641c) isa node-link; 

match
$N_8740348773105_134531641c isa instruction, has hash "N_8740348773105_134531641c"; 

insert
$N_8740348773105_134531641c_1 isa MLIL_LOAD_SSA, has hash "N_8740348773105_134531641c_1", has edge-label "src";
(to-node: $N_8740348773105_134531641c_1, from-node: $N_8740348773105_134531641c) isa node-link; 

match
$N_8740348773105_134531641c_1 isa operation, has hash "N_8740348773105_134531641c_1"; 

insert
$N_8740348773105_134531641c_1_0 isa MLIL_ADD, has hash "N_8740348773105_134531641c_1_0", has edge-label "src";
(to-node: $N_8740348773105_134531641c_1_0, from-node: $N_8740348773105_134531641c_1) isa node-link; 

match
$N_8740348773105_134531641c_1_0 isa operation, has hash "N_8740348773105_134531641c_1_0"; 

insert
$N_8740348773105_134531641c_1_0_0 isa MLIL_VAR_SSA, has hash "N_8740348773105_134531641c_1_0_0", has edge-label "left";
(to-node: $N_8740348773105_134531641c_1_0_0, from-node: $N_8740348773105_134531641c_1_0) isa node-link; 

match
$N_8740348773105_134531641c_1_0_0 isa operation, has hash "N_8740348773105_134531641c_1_0_0"; 

insert
$N_8740348773105_134531641c_1_0_0_0 isa variable-ssa, has hash "N_8740348773105_134531641c_1_0_0_0", has var "edi_1", has version 9, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348773105_134531641c_1_0_0_0, from-node: $N_8740348773105_134531641c_1_0_0) isa node-link; 

match
$N_8740348773105_134531641c_1_0 isa operation, has hash "N_8740348773105_134531641c_1_0"; 

insert
$N_8740348773105_134531641c_1_0_1 isa MLIL_CONST, has hash "N_8740348773105_134531641c_1_0_1", has edge-label "right";
(to-node: $N_8740348773105_134531641c_1_0_1, from-node: $N_8740348773105_134531641c_1_0) isa node-link; 

match
$N_8740348773105_134531641c_1_0_1 isa operation, has hash "N_8740348773105_134531641c_1_0_1"; 

insert
$N_8740348773105_134531641c_1_0_1_0 isa constant, has hash "N_8740348773105_134531641c_1_0_1_0", has constant-value "32", has edge-label "constant";
(to-node: $N_8740348773105_134531641c_1_0_1_0, from-node: $N_8740348773105_134531641c_1_0_1) isa node-link; 

match
$N_8740348773105_134531641c_1 isa operation, has hash "N_8740348773105_134531641c_1"; 

insert
$N_8740348773105_134531641c_1_1 isa constant, has hash "N_8740348773105_134531641c_1_1", has constant-value "41", has edge-label "src_memory";
(to-node: $N_8740348773105_134531641c_1_1, from-node: $N_8740348773105_134531641c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348841477_134531641c isa instruction, has hash "N_8740348841477_134531641c", has il-index 181, has asm-address "0x804ca39", has operation-type "MLIL_VAR_PHI", has ins-text "eax_24#43 = ϕ(eax_20#42, eax_24#50)";
(contains-instruction: $N_8740348841477_134531641c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348841477_134531641c isa instruction, has hash "N_8740348841477_134531641c"; 

insert
$N_8740348841477_134531641c_0 isa variable-ssa, has hash "N_8740348841477_134531641c_0", has var "eax_24", has version 43, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348841477_134531641c_0, from-node: $N_8740348841477_134531641c) isa node-link; 

match
$N_8740348841477_134531641c isa instruction, has hash "N_8740348841477_134531641c"; 

insert
$L_8740348841477_134531641c_1 isa list, has hash "L_8740348841477_134531641c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348841477_134531641c_1, from-node: $N_8740348841477_134531641c) isa node-link; 

match
$L_8740348841477_134531641c_1 isa list, has hash "L_8740348841477_134531641c_1"; 

insert
$N_8740348841477_134531641c_1_0 isa variable-ssa, has hash "N_8740348841477_134531641c_1_0", has var "eax_20", has version 42, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348841477_134531641c_1_0, from-node: $L_8740348841477_134531641c_1) isa node-link; 

match
$L_8740348841477_134531641c_1 isa list, has hash "L_8740348841477_134531641c_1"; 

insert
$N_8740348841477_134531641c_1_1 isa variable-ssa, has hash "N_8740348841477_134531641c_1_1", has var "eax_24", has version 50, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348841477_134531641c_1_1, from-node: $L_8740348841477_134531641c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348841733_134531641c isa instruction, has hash "N_8740348841733_134531641c", has il-index 182, has asm-address "0x804ca39", has operation-type "MLIL_VAR_PHI", has ins-text "edx_4#11 = ϕ(edx_3#3, edx_4#12)";
(contains-instruction: $N_8740348841733_134531641c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348841733_134531641c isa instruction, has hash "N_8740348841733_134531641c"; 

insert
$N_8740348841733_134531641c_0 isa variable-ssa, has hash "N_8740348841733_134531641c_0", has var "edx_4", has version 11, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348841733_134531641c_0, from-node: $N_8740348841733_134531641c) isa node-link; 

match
$N_8740348841733_134531641c isa instruction, has hash "N_8740348841733_134531641c"; 

insert
$L_8740348841733_134531641c_1 isa list, has hash "L_8740348841733_134531641c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348841733_134531641c_1, from-node: $N_8740348841733_134531641c) isa node-link; 

match
$L_8740348841733_134531641c_1 isa list, has hash "L_8740348841733_134531641c_1"; 

insert
$N_8740348841733_134531641c_1_0 isa variable-ssa, has hash "N_8740348841733_134531641c_1_0", has var "edx_3", has version 3, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348841733_134531641c_1_0, from-node: $L_8740348841733_134531641c_1) isa node-link; 

match
$L_8740348841733_134531641c_1 isa list, has hash "L_8740348841733_134531641c_1"; 

insert
$N_8740348841733_134531641c_1_1 isa variable-ssa, has hash "N_8740348841733_134531641c_1_1", has var "edx_4", has version 12, has edge-label "1", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348841733_134531641c_1_1, from-node: $L_8740348841733_134531641c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348945157_134531641c isa instruction, has hash "N_8740348945157_134531641c", has il-index 179, has asm-address "0x804ca39", has operation-type "MLIL_VAR_PHI", has ins-text "var_1ac_13#23 = ϕ(var_1ac_12#17, var_1ac_13#24)";
(contains-instruction: $N_8740348945157_134531641c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348945157_134531641c isa instruction, has hash "N_8740348945157_134531641c"; 

insert
$N_8740348945157_134531641c_0 isa variable-ssa, has hash "N_8740348945157_134531641c_0", has var "var_1ac_13", has version 23, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348945157_134531641c_0, from-node: $N_8740348945157_134531641c) isa node-link; 

match
$N_8740348945157_134531641c isa instruction, has hash "N_8740348945157_134531641c"; 

insert
$L_8740348945157_134531641c_1 isa list, has hash "L_8740348945157_134531641c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348945157_134531641c_1, from-node: $N_8740348945157_134531641c) isa node-link; 

match
$L_8740348945157_134531641c_1 isa list, has hash "L_8740348945157_134531641c_1"; 

insert
$N_8740348945157_134531641c_1_0 isa variable-ssa, has hash "N_8740348945157_134531641c_1_0", has var "var_1ac_12", has version 17, has edge-label "0", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348945157_134531641c_1_0, from-node: $L_8740348945157_134531641c_1) isa node-link; 

match
$L_8740348945157_134531641c_1 isa list, has hash "L_8740348945157_134531641c_1"; 

insert
$N_8740348945157_134531641c_1_1 isa variable-ssa, has hash "N_8740348945157_134531641c_1_1", has var "var_1ac_13", has version 24, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348945157_134531641c_1_1, from-node: $L_8740348945157_134531641c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349686481_134531644c isa instruction, has hash "N_8740349686481_134531644c", has il-index 186, has asm-address "0x804ca3c", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_22#45 = [eax_21#44 + (ebp_2#6 << 2)].d @ mem#41";
(contains-instruction: $N_8740349686481_134531644c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349686481_134531644c isa instruction, has hash "N_8740349686481_134531644c"; 

insert
$N_8740349686481_134531644c_0 isa variable-ssa, has hash "N_8740349686481_134531644c_0", has var "eax_22", has version 45, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349686481_134531644c_0, from-node: $N_8740349686481_134531644c) isa node-link; 

match
$N_8740349686481_134531644c isa instruction, has hash "N_8740349686481_134531644c"; 

insert
$N_8740349686481_134531644c_1 isa MLIL_LOAD_SSA, has hash "N_8740349686481_134531644c_1", has edge-label "src";
(to-node: $N_8740349686481_134531644c_1, from-node: $N_8740349686481_134531644c) isa node-link; 

match
$N_8740349686481_134531644c_1 isa operation, has hash "N_8740349686481_134531644c_1"; 

insert
$N_8740349686481_134531644c_1_0 isa MLIL_ADD, has hash "N_8740349686481_134531644c_1_0", has edge-label "src";
(to-node: $N_8740349686481_134531644c_1_0, from-node: $N_8740349686481_134531644c_1) isa node-link; 

match
$N_8740349686481_134531644c_1_0 isa operation, has hash "N_8740349686481_134531644c_1_0"; 

insert
$N_8740349686481_134531644c_1_0_0 isa MLIL_VAR_SSA, has hash "N_8740349686481_134531644c_1_0_0", has edge-label "left";
(to-node: $N_8740349686481_134531644c_1_0_0, from-node: $N_8740349686481_134531644c_1_0) isa node-link; 

match
$N_8740349686481_134531644c_1_0_0 isa operation, has hash "N_8740349686481_134531644c_1_0_0"; 

insert
$N_8740349686481_134531644c_1_0_0_0 isa variable-ssa, has hash "N_8740349686481_134531644c_1_0_0_0", has var "eax_21", has version 44, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349686481_134531644c_1_0_0_0, from-node: $N_8740349686481_134531644c_1_0_0) isa node-link; 

match
$N_8740349686481_134531644c_1_0 isa operation, has hash "N_8740349686481_134531644c_1_0"; 

insert
$N_8740349686481_134531644c_1_0_1 isa MLIL_LSL, has hash "N_8740349686481_134531644c_1_0_1", has edge-label "right";
(to-node: $N_8740349686481_134531644c_1_0_1, from-node: $N_8740349686481_134531644c_1_0) isa node-link; 

match
$N_8740349686481_134531644c_1_0_1 isa operation, has hash "N_8740349686481_134531644c_1_0_1"; 

insert
$N_8740349686481_134531644c_1_0_1_0 isa MLIL_VAR_SSA, has hash "N_8740349686481_134531644c_1_0_1_0", has edge-label "left";
(to-node: $N_8740349686481_134531644c_1_0_1_0, from-node: $N_8740349686481_134531644c_1_0_1) isa node-link; 

match
$N_8740349686481_134531644c_1_0_1_0 isa operation, has hash "N_8740349686481_134531644c_1_0_1_0"; 

insert
$N_8740349686481_134531644c_1_0_1_0_0 isa variable-ssa, has hash "N_8740349686481_134531644c_1_0_1_0_0", has var "ebp_2", has version 6, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349686481_134531644c_1_0_1_0_0, from-node: $N_8740349686481_134531644c_1_0_1_0) isa node-link; 

match
$N_8740349686481_134531644c_1_0_1 isa operation, has hash "N_8740349686481_134531644c_1_0_1"; 

insert
$N_8740349686481_134531644c_1_0_1_1 isa MLIL_CONST, has hash "N_8740349686481_134531644c_1_0_1_1", has edge-label "right";
(to-node: $N_8740349686481_134531644c_1_0_1_1, from-node: $N_8740349686481_134531644c_1_0_1) isa node-link; 

match
$N_8740349686481_134531644c_1_0_1_1 isa operation, has hash "N_8740349686481_134531644c_1_0_1_1"; 

insert
$N_8740349686481_134531644c_1_0_1_1_0 isa constant, has hash "N_8740349686481_134531644c_1_0_1_1_0", has constant-value "2", has edge-label "constant";
(to-node: $N_8740349686481_134531644c_1_0_1_1_0, from-node: $N_8740349686481_134531644c_1_0_1_1) isa node-link; 

match
$N_8740349686481_134531644c_1 isa operation, has hash "N_8740349686481_134531644c_1"; 

insert
$N_8740349686481_134531644c_1_1 isa constant, has hash "N_8740349686481_134531644c_1_1", has constant-value "41", has edge-label "src_memory";
(to-node: $N_8740349686481_134531644c_1_1, from-node: $N_8740349686481_134531644c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348557557_134531647c isa instruction, has hash "N_8740348557557_134531647c", has il-index 187, has asm-address "0x804ca3f", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1a8_3#6 = &var_190";
(contains-instruction: $N_8740348557557_134531647c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348557557_134531647c isa instruction, has hash "N_8740348557557_134531647c"; 

insert
$N_8740348557557_134531647c_0 isa variable-ssa, has hash "N_8740348557557_134531647c_0", has var "var_1a8_3", has version 6, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348557557_134531647c_0, from-node: $N_8740348557557_134531647c) isa node-link; 

match
$N_8740348557557_134531647c isa instruction, has hash "N_8740348557557_134531647c"; 

insert
$N_8740348557557_134531647c_1 isa MLIL_ADDRESS_OF, has hash "N_8740348557557_134531647c_1", has edge-label "src";
(to-node: $N_8740348557557_134531647c_1, from-node: $N_8740348557557_134531647c) isa node-link; 

match
$N_8740348557557_134531647c_1 isa operation, has hash "N_8740348557557_134531647c_1"; 

insert
$N_8740348557557_134531647c_1_0 isa variable, has hash "N_8740348557557_134531647c_1_0", has var "var_190", has edge-label "src", has var-type "void", has var-size 256, has var-func "cgc_handle_register_user";
(to-node: $N_8740348557557_134531647c_1_0, from-node: $N_8740348557557_134531647c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349698069_134531651c isa instruction, has hash "N_8740349698069_134531651c", has il-index 188, has asm-address "0x804ca43", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_13#24 = eax_22#45";
(contains-instruction: $N_8740349698069_134531651c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349698069_134531651c isa instruction, has hash "N_8740349698069_134531651c"; 

insert
$N_8740349698069_134531651c_0 isa variable-ssa, has hash "N_8740349698069_134531651c_0", has var "var_1ac_13", has version 24, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349698069_134531651c_0, from-node: $N_8740349698069_134531651c) isa node-link; 

match
$N_8740349698069_134531651c isa instruction, has hash "N_8740349698069_134531651c"; 

insert
$N_8740349698069_134531651c_1 isa MLIL_VAR_SSA, has hash "N_8740349698069_134531651c_1", has edge-label "src";
(to-node: $N_8740349698069_134531651c_1, from-node: $N_8740349698069_134531651c) isa node-link; 

match
$N_8740349698069_134531651c_1 isa operation, has hash "N_8740349698069_134531651c_1"; 

insert
$N_8740349698069_134531651c_1_0 isa variable-ssa, has hash "N_8740349698069_134531651c_1_0", has var "eax_22", has version 45, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349698069_134531651c_1_0, from-node: $N_8740349698069_134531651c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348340229_134531662c isa instruction, has hash "N_8740348340229_134531662c", has il-index 189, has asm-address "0x804ca4e", has operation-type "MLIL_CALL_SSA", has ins-text "eax_23#46, edx_4#12, mem#42 = 0x804ba70(var_1ac_13#24, var_1a8_3#6, 0x20) @ mem#41";
(contains-instruction: $N_8740348340229_134531662c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348340229_134531662c isa instruction, has hash "N_8740348340229_134531662c"; 

insert
$N_8740348340229_134531662c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348340229_134531662c_0", has edge-label "output";
(to-node: $N_8740348340229_134531662c_0, from-node: $N_8740348340229_134531662c) isa node-link; 

match
$N_8740348340229_134531662c_0 isa operation, has hash "N_8740348340229_134531662c_0"; 

insert
$N_8740348340229_134531662c_0_0 isa constant, has hash "N_8740348340229_134531662c_0_0", has constant-value "42", has edge-label "dest_memory";
(to-node: $N_8740348340229_134531662c_0_0, from-node: $N_8740348340229_134531662c_0) isa node-link; 

match
$N_8740348340229_134531662c_0 isa operation, has hash "N_8740348340229_134531662c_0"; 

insert
$L_8740348340229_134531662c_0_1 isa list, has hash "L_8740348340229_134531662c_0_1", has list-size 2, has edge-label "dest";
(to-node: $L_8740348340229_134531662c_0_1, from-node: $N_8740348340229_134531662c_0) isa node-link; 

match
$L_8740348340229_134531662c_0_1 isa list, has hash "L_8740348340229_134531662c_0_1"; 

insert
$N_8740348340229_134531662c_0_1_0 isa variable-ssa, has hash "N_8740348340229_134531662c_0_1_0", has var "eax_23", has version 46, has edge-label "0", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348340229_134531662c_0_1_0, from-node: $L_8740348340229_134531662c_0_1) isa node-link; 

match
$L_8740348340229_134531662c_0_1 isa list, has hash "L_8740348340229_134531662c_0_1"; 

insert
$N_8740348340229_134531662c_0_1_1 isa variable-ssa, has hash "N_8740348340229_134531662c_0_1_1", has var "edx_4", has version 12, has edge-label "1", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348340229_134531662c_0_1_1, from-node: $L_8740348340229_134531662c_0_1) isa node-link; 

match
$N_8740348340229_134531662c isa instruction, has hash "N_8740348340229_134531662c"; 

insert
$N_8740348340229_134531662c_1 isa MLIL_CONST_PTR, has hash "N_8740348340229_134531662c_1", has edge-label "dest";
(to-node: $N_8740348340229_134531662c_1, from-node: $N_8740348340229_134531662c) isa node-link; 

match
$N_8740348340229_134531662c_1 isa operation, has hash "N_8740348340229_134531662c_1"; 

insert
$N_8740348340229_134531662c_1_0 isa constant, has hash "N_8740348340229_134531662c_1_0", has constant-value "134527600", has edge-label "constant";
(to-node: $N_8740348340229_134531662c_1_0, from-node: $N_8740348340229_134531662c_1) isa node-link; 

match
$N_8740348340229_134531662c isa instruction, has hash "N_8740348340229_134531662c"; 

insert
$L_8740348340229_134531662c_2 isa list, has hash "L_8740348340229_134531662c_2", has list-size 3, has edge-label "params";
(to-node: $L_8740348340229_134531662c_2, from-node: $N_8740348340229_134531662c) isa node-link; 

match
$L_8740348340229_134531662c_2 isa list, has hash "L_8740348340229_134531662c_2"; 

insert
$N_8740348340229_134531662c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348340229_134531662c_2_0", has edge-label "0";
(to-node: $N_8740348340229_134531662c_2_0, from-node: $L_8740348340229_134531662c_2) isa node-link; 

match
$N_8740348340229_134531662c_2_0 isa operation, has hash "N_8740348340229_134531662c_2_0"; 

insert
$N_8740348340229_134531662c_2_0_0 isa variable-ssa, has hash "N_8740348340229_134531662c_2_0_0", has var "var_1ac_13", has version 24, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348340229_134531662c_2_0_0, from-node: $N_8740348340229_134531662c_2_0) isa node-link; 

match
$L_8740348340229_134531662c_2 isa list, has hash "L_8740348340229_134531662c_2"; 

insert
$N_8740348340229_134531662c_2_1 isa MLIL_VAR_SSA, has hash "N_8740348340229_134531662c_2_1", has edge-label "1";
(to-node: $N_8740348340229_134531662c_2_1, from-node: $L_8740348340229_134531662c_2) isa node-link; 

match
$N_8740348340229_134531662c_2_1 isa operation, has hash "N_8740348340229_134531662c_2_1"; 

insert
$N_8740348340229_134531662c_2_1_0 isa variable-ssa, has hash "N_8740348340229_134531662c_2_1_0", has var "var_1a8_3", has version 6, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348340229_134531662c_2_1_0, from-node: $N_8740348340229_134531662c_2_1) isa node-link; 

match
$L_8740348340229_134531662c_2 isa list, has hash "L_8740348340229_134531662c_2"; 

insert
$N_8740348340229_134531662c_2_2 isa MLIL_CONST, has hash "N_8740348340229_134531662c_2_2", has edge-label "2";
(to-node: $N_8740348340229_134531662c_2_2, from-node: $L_8740348340229_134531662c_2) isa node-link; 

match
$N_8740348340229_134531662c_2_2 isa operation, has hash "N_8740348340229_134531662c_2_2"; 

insert
$N_8740348340229_134531662c_2_2_0 isa constant, has hash "N_8740348340229_134531662c_2_2_0", has constant-value "32", has edge-label "constant";
(to-node: $N_8740348340229_134531662c_2_2_0, from-node: $N_8740348340229_134531662c_2_2) isa node-link; 

match
$N_8740348340229_134531662c isa instruction, has hash "N_8740348340229_134531662c"; 

insert
$N_8740348340229_134531662c_3 isa constant, has hash "N_8740348340229_134531662c_3", has constant-value "41", has edge-label "src_memory";
(to-node: $N_8740348340229_134531662c_3, from-node: $N_8740348340229_134531662c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 179, has bb-end 190; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349363473_134531669c isa instruction, has hash "N_8740349363473_134531669c", has il-index 190, has asm-address "0x804ca55", has operation-type "MLIL_IF", has ins-text "if (eax_23#46 == 0) then 197 @ 0x804cbb2 else 202 @ 0x804ca5b";
(contains-instruction: $N_8740349363473_134531669c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349363473_134531669c isa instruction, has hash "N_8740349363473_134531669c"; 

insert
$N_8740349363473_134531669c_0 isa MLIL_CMP_E, has hash "N_8740349363473_134531669c_0", has edge-label "condition";
(to-node: $N_8740349363473_134531669c_0, from-node: $N_8740349363473_134531669c) isa node-link; 

match
$N_8740349363473_134531669c_0 isa operation, has hash "N_8740349363473_134531669c_0"; 

insert
$N_8740349363473_134531669c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349363473_134531669c_0_0", has edge-label "left";
(to-node: $N_8740349363473_134531669c_0_0, from-node: $N_8740349363473_134531669c_0) isa node-link; 

match
$N_8740349363473_134531669c_0_0 isa operation, has hash "N_8740349363473_134531669c_0_0"; 

insert
$N_8740349363473_134531669c_0_0_0 isa variable-ssa, has hash "N_8740349363473_134531669c_0_0_0", has var "eax_23", has version 46, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349363473_134531669c_0_0_0, from-node: $N_8740349363473_134531669c_0_0) isa node-link; 

match
$N_8740349363473_134531669c_0 isa operation, has hash "N_8740349363473_134531669c_0"; 

insert
$N_8740349363473_134531669c_0_1 isa MLIL_CONST, has hash "N_8740349363473_134531669c_0_1", has edge-label "right";
(to-node: $N_8740349363473_134531669c_0_1, from-node: $N_8740349363473_134531669c_0) isa node-link; 

match
$N_8740349363473_134531669c_0_1 isa operation, has hash "N_8740349363473_134531669c_0_1"; 

insert
$N_8740349363473_134531669c_0_1_0 isa constant, has hash "N_8740349363473_134531669c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740349363473_134531669c_0_1_0, from-node: $N_8740349363473_134531669c_0_1) isa node-link; 

match
$N_8740349363473_134531669c isa instruction, has hash "N_8740349363473_134531669c"; 

insert
$N_8740349363473_134531669c_1 isa constant, has hash "N_8740349363473_134531669c_1", has constant-value "197", has edge-label "true";
(to-node: $N_8740349363473_134531669c_1, from-node: $N_8740349363473_134531669c) isa node-link; 

match
$N_8740349363473_134531669c isa instruction, has hash "N_8740349363473_134531669c"; 

insert
$N_8740349363473_134531669c_2 isa constant, has hash "N_8740349363473_134531669c_2", has constant-value "202", has edge-label "false";
(to-node: $N_8740349363473_134531669c_2, from-node: $N_8740349363473_134531669c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 191, has bb-end 191; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 192, has bb-end 196; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 192, has bb-end 196; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 192, has bb-end 196; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348294285_134531839c isa instruction, has hash "N_8740348294285_134531839c", has il-index 192, has asm-address "0x804caff", has operation-type "MLIL_CALL_SSA", has ins-text "mem#33 = 0x804afd0(eax_29#29, 0x804effe) @ mem#32";
(contains-instruction: $N_8740348294285_134531839c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348294285_134531839c isa instruction, has hash "N_8740348294285_134531839c"; 

insert
$N_8740348294285_134531839c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348294285_134531839c_0", has edge-label "output";
(to-node: $N_8740348294285_134531839c_0, from-node: $N_8740348294285_134531839c) isa node-link; 

match
$N_8740348294285_134531839c_0 isa operation, has hash "N_8740348294285_134531839c_0"; 

insert
$N_8740348294285_134531839c_0_0 isa constant, has hash "N_8740348294285_134531839c_0_0", has constant-value "33", has edge-label "dest_memory";
(to-node: $N_8740348294285_134531839c_0_0, from-node: $N_8740348294285_134531839c_0) isa node-link; 

match
$N_8740348294285_134531839c_0 isa operation, has hash "N_8740348294285_134531839c_0"; 

insert
$L_8740348294285_134531839c_0_1 isa list, has hash "L_8740348294285_134531839c_0_1", has list-size 0, has edge-label "dest";
(to-node: $L_8740348294285_134531839c_0_1, from-node: $N_8740348294285_134531839c_0) isa node-link; 

match
$N_8740348294285_134531839c isa instruction, has hash "N_8740348294285_134531839c"; 

insert
$N_8740348294285_134531839c_1 isa MLIL_CONST_PTR, has hash "N_8740348294285_134531839c_1", has edge-label "dest";
(to-node: $N_8740348294285_134531839c_1, from-node: $N_8740348294285_134531839c) isa node-link; 

match
$N_8740348294285_134531839c_1 isa operation, has hash "N_8740348294285_134531839c_1"; 

insert
$N_8740348294285_134531839c_1_0 isa constant, has hash "N_8740348294285_134531839c_1_0", has constant-value "134524880", has edge-label "constant";
(to-node: $N_8740348294285_134531839c_1_0, from-node: $N_8740348294285_134531839c_1) isa node-link; 

match
$N_8740348294285_134531839c isa instruction, has hash "N_8740348294285_134531839c"; 

insert
$L_8740348294285_134531839c_2 isa list, has hash "L_8740348294285_134531839c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740348294285_134531839c_2, from-node: $N_8740348294285_134531839c) isa node-link; 

match
$L_8740348294285_134531839c_2 isa list, has hash "L_8740348294285_134531839c_2"; 

insert
$N_8740348294285_134531839c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348294285_134531839c_2_0", has edge-label "0";
(to-node: $N_8740348294285_134531839c_2_0, from-node: $L_8740348294285_134531839c_2) isa node-link; 

match
$N_8740348294285_134531839c_2_0 isa operation, has hash "N_8740348294285_134531839c_2_0"; 

insert
$N_8740348294285_134531839c_2_0_0 isa variable-ssa, has hash "N_8740348294285_134531839c_2_0_0", has var "eax_29", has version 29, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348294285_134531839c_2_0_0, from-node: $N_8740348294285_134531839c_2_0) isa node-link; 

match
$L_8740348294285_134531839c_2 isa list, has hash "L_8740348294285_134531839c_2"; 

insert
$N_8740348294285_134531839c_2_1 isa MLIL_CONST, has hash "N_8740348294285_134531839c_2_1", has edge-label "1";
(to-node: $N_8740348294285_134531839c_2_1, from-node: $L_8740348294285_134531839c_2) isa node-link; 

match
$N_8740348294285_134531839c_2_1 isa operation, has hash "N_8740348294285_134531839c_2_1"; 

insert
$N_8740348294285_134531839c_2_1_0 isa constant, has hash "N_8740348294285_134531839c_2_1_0", has constant-value "134541310", has edge-label "constant";
(to-node: $N_8740348294285_134531839c_2_1_0, from-node: $N_8740348294285_134531839c_2_1) isa node-link; 

match
$N_8740348294285_134531839c isa instruction, has hash "N_8740348294285_134531839c"; 

insert
$N_8740348294285_134531839c_3 isa constant, has hash "N_8740348294285_134531839c_3", has constant-value "32", has edge-label "src_memory";
(to-node: $N_8740348294285_134531839c_3, from-node: $N_8740348294285_134531839c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 192, has bb-end 196; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 192, has bb-end 196; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348351257_134531847c isa instruction, has hash "N_8740348351257_134531847c", has il-index 193, has asm-address "0x804cb07", has operation-type "MLIL_CALL_SSA", has ins-text "edx_6#5, mem#34 = 0x8049ad0(0x8050554) @ mem#33";
(contains-instruction: $N_8740348351257_134531847c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348351257_134531847c isa instruction, has hash "N_8740348351257_134531847c"; 

insert
$N_8740348351257_134531847c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348351257_134531847c_0", has edge-label "output";
(to-node: $N_8740348351257_134531847c_0, from-node: $N_8740348351257_134531847c) isa node-link; 

match
$N_8740348351257_134531847c_0 isa operation, has hash "N_8740348351257_134531847c_0"; 

insert
$N_8740348351257_134531847c_0_0 isa constant, has hash "N_8740348351257_134531847c_0_0", has constant-value "34", has edge-label "dest_memory";
(to-node: $N_8740348351257_134531847c_0_0, from-node: $N_8740348351257_134531847c_0) isa node-link; 

match
$N_8740348351257_134531847c_0 isa operation, has hash "N_8740348351257_134531847c_0"; 

insert
$L_8740348351257_134531847c_0_1 isa list, has hash "L_8740348351257_134531847c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348351257_134531847c_0_1, from-node: $N_8740348351257_134531847c_0) isa node-link; 

match
$L_8740348351257_134531847c_0_1 isa list, has hash "L_8740348351257_134531847c_0_1"; 

insert
$N_8740348351257_134531847c_0_1_0 isa variable-ssa, has hash "N_8740348351257_134531847c_0_1_0", has var "edx_6", has version 5, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348351257_134531847c_0_1_0, from-node: $L_8740348351257_134531847c_0_1) isa node-link; 

match
$N_8740348351257_134531847c isa instruction, has hash "N_8740348351257_134531847c"; 

insert
$N_8740348351257_134531847c_1 isa MLIL_CONST_PTR, has hash "N_8740348351257_134531847c_1", has edge-label "dest";
(to-node: $N_8740348351257_134531847c_1, from-node: $N_8740348351257_134531847c) isa node-link; 

match
$N_8740348351257_134531847c_1 isa operation, has hash "N_8740348351257_134531847c_1"; 

insert
$N_8740348351257_134531847c_1_0 isa constant, has hash "N_8740348351257_134531847c_1_0", has constant-value "134519504", has edge-label "constant";
(to-node: $N_8740348351257_134531847c_1_0, from-node: $N_8740348351257_134531847c_1) isa node-link; 

match
$N_8740348351257_134531847c isa instruction, has hash "N_8740348351257_134531847c"; 

insert
$L_8740348351257_134531847c_2 isa list, has hash "L_8740348351257_134531847c_2", has list-size 1, has edge-label "params";
(to-node: $L_8740348351257_134531847c_2, from-node: $N_8740348351257_134531847c) isa node-link; 

match
$L_8740348351257_134531847c_2 isa list, has hash "L_8740348351257_134531847c_2"; 

insert
$N_8740348351257_134531847c_2_0 isa MLIL_CONST_PTR, has hash "N_8740348351257_134531847c_2_0", has edge-label "0";
(to-node: $N_8740348351257_134531847c_2_0, from-node: $L_8740348351257_134531847c_2) isa node-link; 

match
$N_8740348351257_134531847c_2_0 isa operation, has hash "N_8740348351257_134531847c_2_0"; 

insert
$N_8740348351257_134531847c_2_0_0 isa constant, has hash "N_8740348351257_134531847c_2_0_0", has constant-value "134546772", has edge-label "constant";
(to-node: $N_8740348351257_134531847c_2_0_0, from-node: $N_8740348351257_134531847c_2_0) isa node-link; 

match
$N_8740348351257_134531847c isa instruction, has hash "N_8740348351257_134531847c"; 

insert
$N_8740348351257_134531847c_3 isa constant, has hash "N_8740348351257_134531847c_3", has constant-value "33", has edge-label "src_memory";
(to-node: $N_8740348351257_134531847c_3, from-node: $N_8740348351257_134531847c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 192, has bb-end 196; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 192, has bb-end 196; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348888593_134531868c isa instruction, has hash "N_8740348888593_134531868c", has il-index 194, has asm-address "0x804cb1c", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_17#21 = &var_90";
(contains-instruction: $N_8740348888593_134531868c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348888593_134531868c isa instruction, has hash "N_8740348888593_134531868c"; 

insert
$N_8740348888593_134531868c_0 isa variable-ssa, has hash "N_8740348888593_134531868c_0", has var "var_1ac_17", has version 21, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348888593_134531868c_0, from-node: $N_8740348888593_134531868c) isa node-link; 

match
$N_8740348888593_134531868c isa instruction, has hash "N_8740348888593_134531868c"; 

insert
$N_8740348888593_134531868c_1 isa MLIL_ADDRESS_OF, has hash "N_8740348888593_134531868c_1", has edge-label "src";
(to-node: $N_8740348888593_134531868c_1, from-node: $N_8740348888593_134531868c) isa node-link; 

match
$N_8740348888593_134531868c_1 isa operation, has hash "N_8740348888593_134531868c_1"; 

insert
$N_8740348888593_134531868c_1_0 isa variable, has hash "N_8740348888593_134531868c_1_0", has var "var_90", has edge-label "src", has var-type "void", has var-size 128, has var-func "cgc_handle_register_user";
(to-node: $N_8740348888593_134531868c_1_0, from-node: $N_8740348888593_134531868c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 192, has bb-end 196; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 192, has bb-end 196; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348961029_134531887c isa instruction, has hash "N_8740348961029_134531887c", has il-index 195, has asm-address "0x804cb2f", has operation-type "MLIL_CALL_SSA", has ins-text "eax_30#30, mem#35 = 0x804bc80(0x805013c, edx_6#5, var_1ac_17#21, 0x80, 0xa, 0x805013c) @ mem#34";
(contains-instruction: $N_8740348961029_134531887c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348961029_134531887c isa instruction, has hash "N_8740348961029_134531887c"; 

insert
$N_8740348961029_134531887c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348961029_134531887c_0", has edge-label "output";
(to-node: $N_8740348961029_134531887c_0, from-node: $N_8740348961029_134531887c) isa node-link; 

match
$N_8740348961029_134531887c_0 isa operation, has hash "N_8740348961029_134531887c_0"; 

insert
$N_8740348961029_134531887c_0_0 isa constant, has hash "N_8740348961029_134531887c_0_0", has constant-value "35", has edge-label "dest_memory";
(to-node: $N_8740348961029_134531887c_0_0, from-node: $N_8740348961029_134531887c_0) isa node-link; 

match
$N_8740348961029_134531887c_0 isa operation, has hash "N_8740348961029_134531887c_0"; 

insert
$L_8740348961029_134531887c_0_1 isa list, has hash "L_8740348961029_134531887c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348961029_134531887c_0_1, from-node: $N_8740348961029_134531887c_0) isa node-link; 

match
$L_8740348961029_134531887c_0_1 isa list, has hash "L_8740348961029_134531887c_0_1"; 

insert
$N_8740348961029_134531887c_0_1_0 isa variable-ssa, has hash "N_8740348961029_134531887c_0_1_0", has var "eax_30", has version 30, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348961029_134531887c_0_1_0, from-node: $L_8740348961029_134531887c_0_1) isa node-link; 

match
$N_8740348961029_134531887c isa instruction, has hash "N_8740348961029_134531887c"; 

insert
$N_8740348961029_134531887c_1 isa MLIL_CONST_PTR, has hash "N_8740348961029_134531887c_1", has edge-label "dest";
(to-node: $N_8740348961029_134531887c_1, from-node: $N_8740348961029_134531887c) isa node-link; 

match
$N_8740348961029_134531887c_1 isa operation, has hash "N_8740348961029_134531887c_1"; 

insert
$N_8740348961029_134531887c_1_0 isa constant, has hash "N_8740348961029_134531887c_1_0", has constant-value "134528128", has edge-label "constant";
(to-node: $N_8740348961029_134531887c_1_0, from-node: $N_8740348961029_134531887c_1) isa node-link; 

match
$N_8740348961029_134531887c isa instruction, has hash "N_8740348961029_134531887c"; 

insert
$L_8740348961029_134531887c_2 isa list, has hash "L_8740348961029_134531887c_2", has list-size 6, has edge-label "params";
(to-node: $L_8740348961029_134531887c_2, from-node: $N_8740348961029_134531887c) isa node-link; 

match
$L_8740348961029_134531887c_2 isa list, has hash "L_8740348961029_134531887c_2"; 

insert
$N_8740348961029_134531887c_2_0 isa MLIL_CONST, has hash "N_8740348961029_134531887c_2_0", has edge-label "0";
(to-node: $N_8740348961029_134531887c_2_0, from-node: $L_8740348961029_134531887c_2) isa node-link; 

match
$N_8740348961029_134531887c_2_0 isa operation, has hash "N_8740348961029_134531887c_2_0"; 

insert
$N_8740348961029_134531887c_2_0_0 isa constant, has hash "N_8740348961029_134531887c_2_0_0", has constant-value "134545724", has edge-label "constant";
(to-node: $N_8740348961029_134531887c_2_0_0, from-node: $N_8740348961029_134531887c_2_0) isa node-link; 

match
$L_8740348961029_134531887c_2 isa list, has hash "L_8740348961029_134531887c_2"; 

insert
$N_8740348961029_134531887c_2_1 isa MLIL_VAR_SSA, has hash "N_8740348961029_134531887c_2_1", has edge-label "1";
(to-node: $N_8740348961029_134531887c_2_1, from-node: $L_8740348961029_134531887c_2) isa node-link; 

match
$N_8740348961029_134531887c_2_1 isa operation, has hash "N_8740348961029_134531887c_2_1"; 

insert
$N_8740348961029_134531887c_2_1_0 isa variable-ssa, has hash "N_8740348961029_134531887c_2_1_0", has var "edx_6", has version 5, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348961029_134531887c_2_1_0, from-node: $N_8740348961029_134531887c_2_1) isa node-link; 

match
$L_8740348961029_134531887c_2 isa list, has hash "L_8740348961029_134531887c_2"; 

insert
$N_8740348961029_134531887c_2_2 isa MLIL_VAR_SSA, has hash "N_8740348961029_134531887c_2_2", has edge-label "2";
(to-node: $N_8740348961029_134531887c_2_2, from-node: $L_8740348961029_134531887c_2) isa node-link; 

match
$N_8740348961029_134531887c_2_2 isa operation, has hash "N_8740348961029_134531887c_2_2"; 

insert
$N_8740348961029_134531887c_2_2_0 isa variable-ssa, has hash "N_8740348961029_134531887c_2_2_0", has var "var_1ac_17", has version 21, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348961029_134531887c_2_2_0, from-node: $N_8740348961029_134531887c_2_2) isa node-link; 

match
$L_8740348961029_134531887c_2 isa list, has hash "L_8740348961029_134531887c_2"; 

insert
$N_8740348961029_134531887c_2_3 isa MLIL_CONST, has hash "N_8740348961029_134531887c_2_3", has edge-label "3";
(to-node: $N_8740348961029_134531887c_2_3, from-node: $L_8740348961029_134531887c_2) isa node-link; 

match
$N_8740348961029_134531887c_2_3 isa operation, has hash "N_8740348961029_134531887c_2_3"; 

insert
$N_8740348961029_134531887c_2_3_0 isa constant, has hash "N_8740348961029_134531887c_2_3_0", has constant-value "128", has edge-label "constant";
(to-node: $N_8740348961029_134531887c_2_3_0, from-node: $N_8740348961029_134531887c_2_3) isa node-link; 

match
$L_8740348961029_134531887c_2 isa list, has hash "L_8740348961029_134531887c_2"; 

insert
$N_8740348961029_134531887c_2_4 isa MLIL_CONST, has hash "N_8740348961029_134531887c_2_4", has edge-label "4";
(to-node: $N_8740348961029_134531887c_2_4, from-node: $L_8740348961029_134531887c_2) isa node-link; 

match
$N_8740348961029_134531887c_2_4 isa operation, has hash "N_8740348961029_134531887c_2_4"; 

insert
$N_8740348961029_134531887c_2_4_0 isa constant, has hash "N_8740348961029_134531887c_2_4_0", has constant-value "10", has edge-label "constant";
(to-node: $N_8740348961029_134531887c_2_4_0, from-node: $N_8740348961029_134531887c_2_4) isa node-link; 

match
$L_8740348961029_134531887c_2 isa list, has hash "L_8740348961029_134531887c_2"; 

insert
$N_8740348961029_134531887c_2_5 isa MLIL_CONST_PTR, has hash "N_8740348961029_134531887c_2_5", has edge-label "5";
(to-node: $N_8740348961029_134531887c_2_5, from-node: $L_8740348961029_134531887c_2) isa node-link; 

match
$N_8740348961029_134531887c_2_5 isa operation, has hash "N_8740348961029_134531887c_2_5"; 

insert
$N_8740348961029_134531887c_2_5_0 isa constant, has hash "N_8740348961029_134531887c_2_5_0", has constant-value "134545724", has edge-label "constant";
(to-node: $N_8740348961029_134531887c_2_5_0, from-node: $N_8740348961029_134531887c_2_5) isa node-link; 

match
$N_8740348961029_134531887c isa instruction, has hash "N_8740348961029_134531887c"; 

insert
$N_8740348961029_134531887c_3 isa constant, has hash "N_8740348961029_134531887c_3", has constant-value "34", has edge-label "src_memory";
(to-node: $N_8740348961029_134531887c_3, from-node: $N_8740348961029_134531887c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 192, has bb-end 196; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 192, has bb-end 196; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348160265_134531894c isa instruction, has hash "N_8740348160265_134531894c", has il-index 196, has asm-address "0x804cb36", has operation-type "MLIL_IF", has ins-text "if (eax_30#30 s<= 0) then 205 @ 0x804cc76 else 207 @ 0x804cb3c";
(contains-instruction: $N_8740348160265_134531894c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348160265_134531894c isa instruction, has hash "N_8740348160265_134531894c"; 

insert
$N_8740348160265_134531894c_0 isa MLIL_CMP_SLE, has hash "N_8740348160265_134531894c_0", has edge-label "condition";
(to-node: $N_8740348160265_134531894c_0, from-node: $N_8740348160265_134531894c) isa node-link; 

match
$N_8740348160265_134531894c_0 isa operation, has hash "N_8740348160265_134531894c_0"; 

insert
$N_8740348160265_134531894c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348160265_134531894c_0_0", has edge-label "left";
(to-node: $N_8740348160265_134531894c_0_0, from-node: $N_8740348160265_134531894c_0) isa node-link; 

match
$N_8740348160265_134531894c_0_0 isa operation, has hash "N_8740348160265_134531894c_0_0"; 

insert
$N_8740348160265_134531894c_0_0_0 isa variable-ssa, has hash "N_8740348160265_134531894c_0_0_0", has var "eax_30", has version 30, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348160265_134531894c_0_0_0, from-node: $N_8740348160265_134531894c_0_0) isa node-link; 

match
$N_8740348160265_134531894c_0 isa operation, has hash "N_8740348160265_134531894c_0"; 

insert
$N_8740348160265_134531894c_0_1 isa MLIL_CONST, has hash "N_8740348160265_134531894c_0_1", has edge-label "right";
(to-node: $N_8740348160265_134531894c_0_1, from-node: $N_8740348160265_134531894c_0) isa node-link; 

match
$N_8740348160265_134531894c_0_1 isa operation, has hash "N_8740348160265_134531894c_0_1"; 

insert
$N_8740348160265_134531894c_0_1_0 isa constant, has hash "N_8740348160265_134531894c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348160265_134531894c_0_1_0, from-node: $N_8740348160265_134531894c_0_1) isa node-link; 

match
$N_8740348160265_134531894c isa instruction, has hash "N_8740348160265_134531894c"; 

insert
$N_8740348160265_134531894c_1 isa constant, has hash "N_8740348160265_134531894c_1", has constant-value "205", has edge-label "true";
(to-node: $N_8740348160265_134531894c_1, from-node: $N_8740348160265_134531894c) isa node-link; 

match
$N_8740348160265_134531894c isa instruction, has hash "N_8740348160265_134531894c"; 

insert
$N_8740348160265_134531894c_2 isa constant, has hash "N_8740348160265_134531894c_2", has constant-value "207", has edge-label "false";
(to-node: $N_8740348160265_134531894c_2, from-node: $N_8740348160265_134531894c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 197, has bb-end 201; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 197, has bb-end 201; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 197, has bb-end 201; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348692757_134532018c isa instruction, has hash "N_8740348692757_134532018c", has il-index 197, has asm-address "0x804cbb2", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_40#47 = [edi_1#9 + 0x20].d @ mem#42";
(contains-instruction: $N_8740348692757_134532018c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348692757_134532018c isa instruction, has hash "N_8740348692757_134532018c"; 

insert
$N_8740348692757_134532018c_0 isa variable-ssa, has hash "N_8740348692757_134532018c_0", has var "eax_40", has version 47, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348692757_134532018c_0, from-node: $N_8740348692757_134532018c) isa node-link; 

match
$N_8740348692757_134532018c isa instruction, has hash "N_8740348692757_134532018c"; 

insert
$N_8740348692757_134532018c_1 isa MLIL_LOAD_SSA, has hash "N_8740348692757_134532018c_1", has edge-label "src";
(to-node: $N_8740348692757_134532018c_1, from-node: $N_8740348692757_134532018c) isa node-link; 

match
$N_8740348692757_134532018c_1 isa operation, has hash "N_8740348692757_134532018c_1"; 

insert
$N_8740348692757_134532018c_1_0 isa MLIL_ADD, has hash "N_8740348692757_134532018c_1_0", has edge-label "src";
(to-node: $N_8740348692757_134532018c_1_0, from-node: $N_8740348692757_134532018c_1) isa node-link; 

match
$N_8740348692757_134532018c_1_0 isa operation, has hash "N_8740348692757_134532018c_1_0"; 

insert
$N_8740348692757_134532018c_1_0_0 isa MLIL_VAR_SSA, has hash "N_8740348692757_134532018c_1_0_0", has edge-label "left";
(to-node: $N_8740348692757_134532018c_1_0_0, from-node: $N_8740348692757_134532018c_1_0) isa node-link; 

match
$N_8740348692757_134532018c_1_0_0 isa operation, has hash "N_8740348692757_134532018c_1_0_0"; 

insert
$N_8740348692757_134532018c_1_0_0_0 isa variable-ssa, has hash "N_8740348692757_134532018c_1_0_0_0", has var "edi_1", has version 9, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348692757_134532018c_1_0_0_0, from-node: $N_8740348692757_134532018c_1_0_0) isa node-link; 

match
$N_8740348692757_134532018c_1_0 isa operation, has hash "N_8740348692757_134532018c_1_0"; 

insert
$N_8740348692757_134532018c_1_0_1 isa MLIL_CONST, has hash "N_8740348692757_134532018c_1_0_1", has edge-label "right";
(to-node: $N_8740348692757_134532018c_1_0_1, from-node: $N_8740348692757_134532018c_1_0) isa node-link; 

match
$N_8740348692757_134532018c_1_0_1 isa operation, has hash "N_8740348692757_134532018c_1_0_1"; 

insert
$N_8740348692757_134532018c_1_0_1_0 isa constant, has hash "N_8740348692757_134532018c_1_0_1_0", has constant-value "32", has edge-label "constant";
(to-node: $N_8740348692757_134532018c_1_0_1_0, from-node: $N_8740348692757_134532018c_1_0_1) isa node-link; 

match
$N_8740348692757_134532018c_1 isa operation, has hash "N_8740348692757_134532018c_1"; 

insert
$N_8740348692757_134532018c_1_1 isa constant, has hash "N_8740348692757_134532018c_1_1", has constant-value "42", has edge-label "src_memory";
(to-node: $N_8740348692757_134532018c_1_1, from-node: $N_8740348692757_134532018c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 197, has bb-end 201; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 197, has bb-end 201; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349460869_134532021c isa instruction, has hash "N_8740349460869_134532021c", has il-index 198, has asm-address "0x804cbb5", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_41#48 = [eax_40#47 + (ebp_2#6 << 2)].d @ mem#42";
(contains-instruction: $N_8740349460869_134532021c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349460869_134532021c isa instruction, has hash "N_8740349460869_134532021c"; 

insert
$N_8740349460869_134532021c_0 isa variable-ssa, has hash "N_8740349460869_134532021c_0", has var "eax_41", has version 48, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349460869_134532021c_0, from-node: $N_8740349460869_134532021c) isa node-link; 

match
$N_8740349460869_134532021c isa instruction, has hash "N_8740349460869_134532021c"; 

insert
$N_8740349460869_134532021c_1 isa MLIL_LOAD_SSA, has hash "N_8740349460869_134532021c_1", has edge-label "src";
(to-node: $N_8740349460869_134532021c_1, from-node: $N_8740349460869_134532021c) isa node-link; 

match
$N_8740349460869_134532021c_1 isa operation, has hash "N_8740349460869_134532021c_1"; 

insert
$N_8740349460869_134532021c_1_0 isa MLIL_ADD, has hash "N_8740349460869_134532021c_1_0", has edge-label "src";
(to-node: $N_8740349460869_134532021c_1_0, from-node: $N_8740349460869_134532021c_1) isa node-link; 

match
$N_8740349460869_134532021c_1_0 isa operation, has hash "N_8740349460869_134532021c_1_0"; 

insert
$N_8740349460869_134532021c_1_0_0 isa MLIL_VAR_SSA, has hash "N_8740349460869_134532021c_1_0_0", has edge-label "left";
(to-node: $N_8740349460869_134532021c_1_0_0, from-node: $N_8740349460869_134532021c_1_0) isa node-link; 

match
$N_8740349460869_134532021c_1_0_0 isa operation, has hash "N_8740349460869_134532021c_1_0_0"; 

insert
$N_8740349460869_134532021c_1_0_0_0 isa variable-ssa, has hash "N_8740349460869_134532021c_1_0_0_0", has var "eax_40", has version 47, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349460869_134532021c_1_0_0_0, from-node: $N_8740349460869_134532021c_1_0_0) isa node-link; 

match
$N_8740349460869_134532021c_1_0 isa operation, has hash "N_8740349460869_134532021c_1_0"; 

insert
$N_8740349460869_134532021c_1_0_1 isa MLIL_LSL, has hash "N_8740349460869_134532021c_1_0_1", has edge-label "right";
(to-node: $N_8740349460869_134532021c_1_0_1, from-node: $N_8740349460869_134532021c_1_0) isa node-link; 

match
$N_8740349460869_134532021c_1_0_1 isa operation, has hash "N_8740349460869_134532021c_1_0_1"; 

insert
$N_8740349460869_134532021c_1_0_1_0 isa MLIL_VAR_SSA, has hash "N_8740349460869_134532021c_1_0_1_0", has edge-label "left";
(to-node: $N_8740349460869_134532021c_1_0_1_0, from-node: $N_8740349460869_134532021c_1_0_1) isa node-link; 

match
$N_8740349460869_134532021c_1_0_1_0 isa operation, has hash "N_8740349460869_134532021c_1_0_1_0"; 

insert
$N_8740349460869_134532021c_1_0_1_0_0 isa variable-ssa, has hash "N_8740349460869_134532021c_1_0_1_0_0", has var "ebp_2", has version 6, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349460869_134532021c_1_0_1_0_0, from-node: $N_8740349460869_134532021c_1_0_1_0) isa node-link; 

match
$N_8740349460869_134532021c_1_0_1 isa operation, has hash "N_8740349460869_134532021c_1_0_1"; 

insert
$N_8740349460869_134532021c_1_0_1_1 isa MLIL_CONST, has hash "N_8740349460869_134532021c_1_0_1_1", has edge-label "right";
(to-node: $N_8740349460869_134532021c_1_0_1_1, from-node: $N_8740349460869_134532021c_1_0_1) isa node-link; 

match
$N_8740349460869_134532021c_1_0_1_1 isa operation, has hash "N_8740349460869_134532021c_1_0_1_1"; 

insert
$N_8740349460869_134532021c_1_0_1_1_0 isa constant, has hash "N_8740349460869_134532021c_1_0_1_1_0", has constant-value "2", has edge-label "constant";
(to-node: $N_8740349460869_134532021c_1_0_1_1_0, from-node: $N_8740349460869_134532021c_1_0_1_1) isa node-link; 

match
$N_8740349460869_134532021c_1 isa operation, has hash "N_8740349460869_134532021c_1"; 

insert
$N_8740349460869_134532021c_1_1 isa constant, has hash "N_8740349460869_134532021c_1_1", has constant-value "42", has edge-label "src_memory";
(to-node: $N_8740349460869_134532021c_1_1, from-node: $N_8740349460869_134532021c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 197, has bb-end 201; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 197, has bb-end 201; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348674585_134532024c isa instruction, has hash "N_8740348674585_134532024c", has il-index 199, has asm-address "0x804cbb8", has operation-type "MLIL_SET_VAR_ALIASED", has ins-text "var_198 @ mem#42 -> mem#43 = eax_41#48";
(contains-instruction: $N_8740348674585_134532024c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348674585_134532024c isa instruction, has hash "N_8740348674585_134532024c"; 

insert
$N_8740348674585_134532024c_0 isa variable-ssa, has hash "N_8740348674585_134532024c_0", has var "var_198", has version 43, has edge-label "prev", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348674585_134532024c_0, from-node: $N_8740348674585_134532024c) isa node-link; 

match
$N_8740348674585_134532024c isa instruction, has hash "N_8740348674585_134532024c"; 

insert
$N_8740348674585_134532024c_1 isa variable-ssa, has hash "N_8740348674585_134532024c_1", has var "var_198", has version 42, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348674585_134532024c_1, from-node: $N_8740348674585_134532024c) isa node-link; 

match
$N_8740348674585_134532024c isa instruction, has hash "N_8740348674585_134532024c"; 

insert
$N_8740348674585_134532024c_2 isa MLIL_VAR_SSA, has hash "N_8740348674585_134532024c_2", has edge-label "unimplemented";
(to-node: $N_8740348674585_134532024c_2, from-node: $N_8740348674585_134532024c) isa node-link; 

match
$N_8740348674585_134532024c_2 isa operation, has hash "N_8740348674585_134532024c_2"; 

insert
$N_8740348674585_134532024c_2_0 isa variable-ssa, has hash "N_8740348674585_134532024c_2_0", has var "eax_41", has version 48, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348674585_134532024c_2_0, from-node: $N_8740348674585_134532024c_2) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 197, has bb-end 201; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 197, has bb-end 201; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348676129_134532028c isa instruction, has hash "N_8740348676129_134532028c", has il-index 201, has asm-address "0x804cbbc", has operation-type "MLIL_GOTO", has ins-text "goto 213 @ 0x804cbbf";
(contains-instruction: $N_8740348676129_134532028c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348676129_134532028c isa instruction, has hash "N_8740348676129_134532028c"; 

insert
$N_8740348676129_134532028c_0 isa constant, has hash "N_8740348676129_134532028c_0", has constant-value "213", has edge-label "dest";
(to-node: $N_8740348676129_134532028c_0, from-node: $N_8740348676129_134532028c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 197, has bb-end 201; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349464613_134532028c isa instruction, has hash "N_8740349464613_134532028c", has il-index 200, has asm-address "0x804cbbc", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_24#49 = [edi_1#9 + 8].d @ mem#43";
(contains-instruction: $N_8740349464613_134532028c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349464613_134532028c isa instruction, has hash "N_8740349464613_134532028c"; 

insert
$N_8740349464613_134532028c_0 isa variable-ssa, has hash "N_8740349464613_134532028c_0", has var "eax_24", has version 49, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349464613_134532028c_0, from-node: $N_8740349464613_134532028c) isa node-link; 

match
$N_8740349464613_134532028c isa instruction, has hash "N_8740349464613_134532028c"; 

insert
$N_8740349464613_134532028c_1 isa MLIL_LOAD_SSA, has hash "N_8740349464613_134532028c_1", has edge-label "src";
(to-node: $N_8740349464613_134532028c_1, from-node: $N_8740349464613_134532028c) isa node-link; 

match
$N_8740349464613_134532028c_1 isa operation, has hash "N_8740349464613_134532028c_1"; 

insert
$N_8740349464613_134532028c_1_0 isa MLIL_ADD, has hash "N_8740349464613_134532028c_1_0", has edge-label "src";
(to-node: $N_8740349464613_134532028c_1_0, from-node: $N_8740349464613_134532028c_1) isa node-link; 

match
$N_8740349464613_134532028c_1_0 isa operation, has hash "N_8740349464613_134532028c_1_0"; 

insert
$N_8740349464613_134532028c_1_0_0 isa MLIL_VAR_SSA, has hash "N_8740349464613_134532028c_1_0_0", has edge-label "left";
(to-node: $N_8740349464613_134532028c_1_0_0, from-node: $N_8740349464613_134532028c_1_0) isa node-link; 

match
$N_8740349464613_134532028c_1_0_0 isa operation, has hash "N_8740349464613_134532028c_1_0_0"; 

insert
$N_8740349464613_134532028c_1_0_0_0 isa variable-ssa, has hash "N_8740349464613_134532028c_1_0_0_0", has var "edi_1", has version 9, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349464613_134532028c_1_0_0_0, from-node: $N_8740349464613_134532028c_1_0_0) isa node-link; 

match
$N_8740349464613_134532028c_1_0 isa operation, has hash "N_8740349464613_134532028c_1_0"; 

insert
$N_8740349464613_134532028c_1_0_1 isa MLIL_CONST, has hash "N_8740349464613_134532028c_1_0_1", has edge-label "right";
(to-node: $N_8740349464613_134532028c_1_0_1, from-node: $N_8740349464613_134532028c_1_0) isa node-link; 

match
$N_8740349464613_134532028c_1_0_1 isa operation, has hash "N_8740349464613_134532028c_1_0_1"; 

insert
$N_8740349464613_134532028c_1_0_1_0 isa constant, has hash "N_8740349464613_134532028c_1_0_1_0", has constant-value "8", has edge-label "constant";
(to-node: $N_8740349464613_134532028c_1_0_1_0, from-node: $N_8740349464613_134532028c_1_0_1) isa node-link; 

match
$N_8740349464613_134532028c_1 isa operation, has hash "N_8740349464613_134532028c_1"; 

insert
$N_8740349464613_134532028c_1_1 isa constant, has hash "N_8740349464613_134532028c_1_1", has constant-value "43", has edge-label "src_memory";
(to-node: $N_8740349464613_134532028c_1_1, from-node: $N_8740349464613_134532028c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 202, has bb-end 204; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 202, has bb-end 204; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 202, has bb-end 204; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349341957_134531675c isa instruction, has hash "N_8740349341957_134531675c", has il-index 202, has asm-address "0x804ca5b", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebp_2#7 = ebp_2#6 + 1";
(contains-instruction: $N_8740349341957_134531675c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349341957_134531675c isa instruction, has hash "N_8740349341957_134531675c"; 

insert
$N_8740349341957_134531675c_0 isa variable-ssa, has hash "N_8740349341957_134531675c_0", has var "ebp_2", has version 7, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349341957_134531675c_0, from-node: $N_8740349341957_134531675c) isa node-link; 

match
$N_8740349341957_134531675c isa instruction, has hash "N_8740349341957_134531675c"; 

insert
$N_8740349341957_134531675c_1 isa MLIL_ADD, has hash "N_8740349341957_134531675c_1", has edge-label "src";
(to-node: $N_8740349341957_134531675c_1, from-node: $N_8740349341957_134531675c) isa node-link; 

match
$N_8740349341957_134531675c_1 isa operation, has hash "N_8740349341957_134531675c_1"; 

insert
$N_8740349341957_134531675c_1_0 isa MLIL_VAR_SSA, has hash "N_8740349341957_134531675c_1_0", has edge-label "left";
(to-node: $N_8740349341957_134531675c_1_0, from-node: $N_8740349341957_134531675c_1) isa node-link; 

match
$N_8740349341957_134531675c_1_0 isa operation, has hash "N_8740349341957_134531675c_1_0"; 

insert
$N_8740349341957_134531675c_1_0_0 isa variable-ssa, has hash "N_8740349341957_134531675c_1_0_0", has var "ebp_2", has version 6, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349341957_134531675c_1_0_0, from-node: $N_8740349341957_134531675c_1_0) isa node-link; 

match
$N_8740349341957_134531675c_1 isa operation, has hash "N_8740349341957_134531675c_1"; 

insert
$N_8740349341957_134531675c_1_1 isa MLIL_CONST, has hash "N_8740349341957_134531675c_1_1", has edge-label "right";
(to-node: $N_8740349341957_134531675c_1_1, from-node: $N_8740349341957_134531675c_1) isa node-link; 

match
$N_8740349341957_134531675c_1_1 isa operation, has hash "N_8740349341957_134531675c_1_1"; 

insert
$N_8740349341957_134531675c_1_1_0 isa constant, has hash "N_8740349341957_134531675c_1_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8740349341957_134531675c_1_1_0, from-node: $N_8740349341957_134531675c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 202, has bb-end 204; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 202, has bb-end 204; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349224453_134531676c isa instruction, has hash "N_8740349224453_134531676c", has il-index 203, has asm-address "0x804ca5c", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_24#50 = [edi_1#9 + 8].d @ mem#42";
(contains-instruction: $N_8740349224453_134531676c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349224453_134531676c isa instruction, has hash "N_8740349224453_134531676c"; 

insert
$N_8740349224453_134531676c_0 isa variable-ssa, has hash "N_8740349224453_134531676c_0", has var "eax_24", has version 50, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349224453_134531676c_0, from-node: $N_8740349224453_134531676c) isa node-link; 

match
$N_8740349224453_134531676c isa instruction, has hash "N_8740349224453_134531676c"; 

insert
$N_8740349224453_134531676c_1 isa MLIL_LOAD_SSA, has hash "N_8740349224453_134531676c_1", has edge-label "src";
(to-node: $N_8740349224453_134531676c_1, from-node: $N_8740349224453_134531676c) isa node-link; 

match
$N_8740349224453_134531676c_1 isa operation, has hash "N_8740349224453_134531676c_1"; 

insert
$N_8740349224453_134531676c_1_0 isa MLIL_ADD, has hash "N_8740349224453_134531676c_1_0", has edge-label "src";
(to-node: $N_8740349224453_134531676c_1_0, from-node: $N_8740349224453_134531676c_1) isa node-link; 

match
$N_8740349224453_134531676c_1_0 isa operation, has hash "N_8740349224453_134531676c_1_0"; 

insert
$N_8740349224453_134531676c_1_0_0 isa MLIL_VAR_SSA, has hash "N_8740349224453_134531676c_1_0_0", has edge-label "left";
(to-node: $N_8740349224453_134531676c_1_0_0, from-node: $N_8740349224453_134531676c_1_0) isa node-link; 

match
$N_8740349224453_134531676c_1_0_0 isa operation, has hash "N_8740349224453_134531676c_1_0_0"; 

insert
$N_8740349224453_134531676c_1_0_0_0 isa variable-ssa, has hash "N_8740349224453_134531676c_1_0_0_0", has var "edi_1", has version 9, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349224453_134531676c_1_0_0_0, from-node: $N_8740349224453_134531676c_1_0_0) isa node-link; 

match
$N_8740349224453_134531676c_1_0 isa operation, has hash "N_8740349224453_134531676c_1_0"; 

insert
$N_8740349224453_134531676c_1_0_1 isa MLIL_CONST, has hash "N_8740349224453_134531676c_1_0_1", has edge-label "right";
(to-node: $N_8740349224453_134531676c_1_0_1, from-node: $N_8740349224453_134531676c_1_0) isa node-link; 

match
$N_8740349224453_134531676c_1_0_1 isa operation, has hash "N_8740349224453_134531676c_1_0_1"; 

insert
$N_8740349224453_134531676c_1_0_1_0 isa constant, has hash "N_8740349224453_134531676c_1_0_1_0", has constant-value "8", has edge-label "constant";
(to-node: $N_8740349224453_134531676c_1_0_1_0, from-node: $N_8740349224453_134531676c_1_0_1) isa node-link; 

match
$N_8740349224453_134531676c_1 isa operation, has hash "N_8740349224453_134531676c_1"; 

insert
$N_8740349224453_134531676c_1_1 isa constant, has hash "N_8740349224453_134531676c_1_1", has constant-value "42", has edge-label "src_memory";
(to-node: $N_8740349224453_134531676c_1_1, from-node: $N_8740349224453_134531676c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 202, has bb-end 204; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 202, has bb-end 204; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349678861_134531681c isa instruction, has hash "N_8740349678861_134531681c", has il-index 204, has asm-address "0x804ca61", has operation-type "MLIL_IF", has ins-text "if (ebp_2#7 u< eax_24#50) then 218 @ 0x0 else 219 @ 0x804ca63";
(contains-instruction: $N_8740349678861_134531681c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349678861_134531681c isa instruction, has hash "N_8740349678861_134531681c"; 

insert
$N_8740349678861_134531681c_0 isa MLIL_CMP_ULT, has hash "N_8740349678861_134531681c_0", has edge-label "condition";
(to-node: $N_8740349678861_134531681c_0, from-node: $N_8740349678861_134531681c) isa node-link; 

match
$N_8740349678861_134531681c_0 isa operation, has hash "N_8740349678861_134531681c_0"; 

insert
$N_8740349678861_134531681c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349678861_134531681c_0_0", has edge-label "left";
(to-node: $N_8740349678861_134531681c_0_0, from-node: $N_8740349678861_134531681c_0) isa node-link; 

match
$N_8740349678861_134531681c_0_0 isa operation, has hash "N_8740349678861_134531681c_0_0"; 

insert
$N_8740349678861_134531681c_0_0_0 isa variable-ssa, has hash "N_8740349678861_134531681c_0_0_0", has var "ebp_2", has version 7, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349678861_134531681c_0_0_0, from-node: $N_8740349678861_134531681c_0_0) isa node-link; 

match
$N_8740349678861_134531681c_0 isa operation, has hash "N_8740349678861_134531681c_0"; 

insert
$N_8740349678861_134531681c_0_1 isa MLIL_VAR_SSA, has hash "N_8740349678861_134531681c_0_1", has edge-label "right";
(to-node: $N_8740349678861_134531681c_0_1, from-node: $N_8740349678861_134531681c_0) isa node-link; 

match
$N_8740349678861_134531681c_0_1 isa operation, has hash "N_8740349678861_134531681c_0_1"; 

insert
$N_8740349678861_134531681c_0_1_0 isa variable-ssa, has hash "N_8740349678861_134531681c_0_1_0", has var "eax_24", has version 50, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349678861_134531681c_0_1_0, from-node: $N_8740349678861_134531681c_0_1) isa node-link; 

match
$N_8740349678861_134531681c isa instruction, has hash "N_8740349678861_134531681c"; 

insert
$N_8740349678861_134531681c_1 isa constant, has hash "N_8740349678861_134531681c_1", has constant-value "218", has edge-label "true";
(to-node: $N_8740349678861_134531681c_1, from-node: $N_8740349678861_134531681c) isa node-link; 

match
$N_8740349678861_134531681c isa instruction, has hash "N_8740349678861_134531681c"; 

insert
$N_8740349678861_134531681c_2 isa constant, has hash "N_8740349678861_134531681c_2", has constant-value "219", has edge-label "false";
(to-node: $N_8740349678861_134531681c_2, from-node: $N_8740349678861_134531681c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 205, has bb-end 206; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 205, has bb-end 206; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 205, has bb-end 206; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349265457_134532214c isa instruction, has hash "N_8740349265457_134532214c", has il-index 206, has asm-address "0x804cc76", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740349265457_134532214c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349265457_134532214c isa instruction, has hash "N_8740349265457_134532214c"; 

insert
$N_8740349265457_134532214c_0 isa constant, has hash "N_8740349265457_134532214c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740349265457_134532214c_0, from-node: $N_8740349265457_134532214c) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 205, has bb-end 206; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349273653_134532214c isa instruction, has hash "N_8740349273653_134532214c", has il-index 205, has asm-address "0x804cc76", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#20 = 0xf";
(contains-instruction: $N_8740349273653_134532214c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349273653_134532214c isa instruction, has hash "N_8740349273653_134532214c"; 

insert
$N_8740349273653_134532214c_0 isa variable-ssa, has hash "N_8740349273653_134532214c_0", has var "esi", has version 20, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349273653_134532214c_0, from-node: $N_8740349273653_134532214c) isa node-link; 

match
$N_8740349273653_134532214c isa instruction, has hash "N_8740349273653_134532214c"; 

insert
$N_8740349273653_134532214c_1 isa MLIL_CONST_PTR, has hash "N_8740349273653_134532214c_1", has edge-label "src";
(to-node: $N_8740349273653_134532214c_1, from-node: $N_8740349273653_134532214c) isa node-link; 

match
$N_8740349273653_134532214c_1 isa operation, has hash "N_8740349273653_134532214c_1"; 

insert
$N_8740349273653_134532214c_1_0 isa constant, has hash "N_8740349273653_134532214c_1_0", has constant-value "15", has edge-label "constant";
(to-node: $N_8740349273653_134532214c_1_0, from-node: $N_8740349273653_134532214c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 207, has bb-end 212; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 207, has bb-end 212; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 207, has bb-end 212; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348865313_134531900c isa instruction, has hash "N_8740348865313_134531900c", has il-index 207, has asm-address "0x804cb3c", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_31#31 = var_198 @ mem#35";
(contains-instruction: $N_8740348865313_134531900c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348865313_134531900c isa instruction, has hash "N_8740348865313_134531900c"; 

insert
$N_8740348865313_134531900c_0 isa variable-ssa, has hash "N_8740348865313_134531900c_0", has var "eax_31", has version 31, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348865313_134531900c_0, from-node: $N_8740348865313_134531900c) isa node-link; 

match
$N_8740348865313_134531900c isa instruction, has hash "N_8740348865313_134531900c"; 

insert
$N_8740348865313_134531900c_1 isa MLIL_VAR_ALIASED, has hash "N_8740348865313_134531900c_1", has edge-label "src";
(to-node: $N_8740348865313_134531900c_1, from-node: $N_8740348865313_134531900c) isa node-link; 

match
$N_8740348865313_134531900c_1 isa operation, has hash "N_8740348865313_134531900c_1"; 

insert
$N_8740348865313_134531900c_1_0 isa variable-ssa, has hash "N_8740348865313_134531900c_1_0", has var "var_198", has version 35, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348865313_134531900c_1_0, from-node: $N_8740348865313_134531900c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 207, has bb-end 212; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 207, has bb-end 212; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348695301_134531904c isa instruction, has hash "N_8740348695301_134531904c", has il-index 208, has asm-address "0x804cb40", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1a8_5#4 = &var_90";
(contains-instruction: $N_8740348695301_134531904c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348695301_134531904c isa instruction, has hash "N_8740348695301_134531904c"; 

insert
$N_8740348695301_134531904c_0 isa variable-ssa, has hash "N_8740348695301_134531904c_0", has var "var_1a8_5", has version 4, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348695301_134531904c_0, from-node: $N_8740348695301_134531904c) isa node-link; 

match
$N_8740348695301_134531904c isa instruction, has hash "N_8740348695301_134531904c"; 

insert
$N_8740348695301_134531904c_1 isa MLIL_ADDRESS_OF, has hash "N_8740348695301_134531904c_1", has edge-label "src";
(to-node: $N_8740348695301_134531904c_1, from-node: $N_8740348695301_134531904c) isa node-link; 

match
$N_8740348695301_134531904c_1 isa operation, has hash "N_8740348695301_134531904c_1"; 

insert
$N_8740348695301_134531904c_1_0 isa variable, has hash "N_8740348695301_134531904c_1_0", has var "var_90", has edge-label "src", has var-type "void", has var-size 128, has var-func "cgc_handle_register_user";
(to-node: $N_8740348695301_134531904c_1_0, from-node: $N_8740348695301_134531904c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 207, has bb-end 212; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 207, has bb-end 212; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348854789_134531908c isa instruction, has hash "N_8740348854789_134531908c", has il-index 209, has asm-address "0x804cb44", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_18#22 = eax_31#31";
(contains-instruction: $N_8740348854789_134531908c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348854789_134531908c isa instruction, has hash "N_8740348854789_134531908c"; 

insert
$N_8740348854789_134531908c_0 isa variable-ssa, has hash "N_8740348854789_134531908c_0", has var "var_1ac_18", has version 22, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348854789_134531908c_0, from-node: $N_8740348854789_134531908c) isa node-link; 

match
$N_8740348854789_134531908c isa instruction, has hash "N_8740348854789_134531908c"; 

insert
$N_8740348854789_134531908c_1 isa MLIL_VAR_SSA, has hash "N_8740348854789_134531908c_1", has edge-label "src";
(to-node: $N_8740348854789_134531908c_1, from-node: $N_8740348854789_134531908c) isa node-link; 

match
$N_8740348854789_134531908c_1 isa operation, has hash "N_8740348854789_134531908c_1"; 

insert
$N_8740348854789_134531908c_1_0 isa variable-ssa, has hash "N_8740348854789_134531908c_1_0", has var "eax_31", has version 31, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348854789_134531908c_1_0, from-node: $N_8740348854789_134531908c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 207, has bb-end 212; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 207, has bb-end 212; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348858633_134531911c isa instruction, has hash "N_8740348858633_134531911c", has il-index 210, has asm-address "0x804cb47", has operation-type "MLIL_CALL_SSA", has ins-text "eax_32#32, mem#36 = 0x804c6c0(var_1ac_18#22, var_1a8_5#4) @ mem#35";
(contains-instruction: $N_8740348858633_134531911c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348858633_134531911c isa instruction, has hash "N_8740348858633_134531911c"; 

insert
$N_8740348858633_134531911c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348858633_134531911c_0", has edge-label "output";
(to-node: $N_8740348858633_134531911c_0, from-node: $N_8740348858633_134531911c) isa node-link; 

match
$N_8740348858633_134531911c_0 isa operation, has hash "N_8740348858633_134531911c_0"; 

insert
$N_8740348858633_134531911c_0_0 isa constant, has hash "N_8740348858633_134531911c_0_0", has constant-value "36", has edge-label "dest_memory";
(to-node: $N_8740348858633_134531911c_0_0, from-node: $N_8740348858633_134531911c_0) isa node-link; 

match
$N_8740348858633_134531911c_0 isa operation, has hash "N_8740348858633_134531911c_0"; 

insert
$L_8740348858633_134531911c_0_1 isa list, has hash "L_8740348858633_134531911c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348858633_134531911c_0_1, from-node: $N_8740348858633_134531911c_0) isa node-link; 

match
$L_8740348858633_134531911c_0_1 isa list, has hash "L_8740348858633_134531911c_0_1"; 

insert
$N_8740348858633_134531911c_0_1_0 isa variable-ssa, has hash "N_8740348858633_134531911c_0_1_0", has var "eax_32", has version 32, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348858633_134531911c_0_1_0, from-node: $L_8740348858633_134531911c_0_1) isa node-link; 

match
$N_8740348858633_134531911c isa instruction, has hash "N_8740348858633_134531911c"; 

insert
$N_8740348858633_134531911c_1 isa MLIL_CONST_PTR, has hash "N_8740348858633_134531911c_1", has edge-label "dest";
(to-node: $N_8740348858633_134531911c_1, from-node: $N_8740348858633_134531911c) isa node-link; 

match
$N_8740348858633_134531911c_1 isa operation, has hash "N_8740348858633_134531911c_1"; 

insert
$N_8740348858633_134531911c_1_0 isa constant, has hash "N_8740348858633_134531911c_1_0", has constant-value "134530752", has edge-label "constant";
(to-node: $N_8740348858633_134531911c_1_0, from-node: $N_8740348858633_134531911c_1) isa node-link; 

match
$N_8740348858633_134531911c isa instruction, has hash "N_8740348858633_134531911c"; 

insert
$L_8740348858633_134531911c_2 isa list, has hash "L_8740348858633_134531911c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740348858633_134531911c_2, from-node: $N_8740348858633_134531911c) isa node-link; 

match
$L_8740348858633_134531911c_2 isa list, has hash "L_8740348858633_134531911c_2"; 

insert
$N_8740348858633_134531911c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348858633_134531911c_2_0", has edge-label "0";
(to-node: $N_8740348858633_134531911c_2_0, from-node: $L_8740348858633_134531911c_2) isa node-link; 

match
$N_8740348858633_134531911c_2_0 isa operation, has hash "N_8740348858633_134531911c_2_0"; 

insert
$N_8740348858633_134531911c_2_0_0 isa variable-ssa, has hash "N_8740348858633_134531911c_2_0_0", has var "var_1ac_18", has version 22, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348858633_134531911c_2_0_0, from-node: $N_8740348858633_134531911c_2_0) isa node-link; 

match
$L_8740348858633_134531911c_2 isa list, has hash "L_8740348858633_134531911c_2"; 

insert
$N_8740348858633_134531911c_2_1 isa MLIL_VAR_SSA, has hash "N_8740348858633_134531911c_2_1", has edge-label "1";
(to-node: $N_8740348858633_134531911c_2_1, from-node: $L_8740348858633_134531911c_2) isa node-link; 

match
$N_8740348858633_134531911c_2_1 isa operation, has hash "N_8740348858633_134531911c_2_1"; 

insert
$N_8740348858633_134531911c_2_1_0 isa variable-ssa, has hash "N_8740348858633_134531911c_2_1_0", has var "var_1a8_5", has version 4, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348858633_134531911c_2_1_0, from-node: $N_8740348858633_134531911c_2_1) isa node-link; 

match
$N_8740348858633_134531911c isa instruction, has hash "N_8740348858633_134531911c"; 

insert
$N_8740348858633_134531911c_3 isa constant, has hash "N_8740348858633_134531911c_3", has constant-value "35", has edge-label "src_memory";
(to-node: $N_8740348858633_134531911c_3, from-node: $N_8740348858633_134531911c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 207, has bb-end 212; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 207, has bb-end 212; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348603973_134531916c isa instruction, has hash "N_8740348603973_134531916c", has il-index 211, has asm-address "0x804cb4c", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#21 = eax_32#32";
(contains-instruction: $N_8740348603973_134531916c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348603973_134531916c isa instruction, has hash "N_8740348603973_134531916c"; 

insert
$N_8740348603973_134531916c_0 isa variable-ssa, has hash "N_8740348603973_134531916c_0", has var "esi", has version 21, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348603973_134531916c_0, from-node: $N_8740348603973_134531916c) isa node-link; 

match
$N_8740348603973_134531916c isa instruction, has hash "N_8740348603973_134531916c"; 

insert
$N_8740348603973_134531916c_1 isa MLIL_VAR_SSA, has hash "N_8740348603973_134531916c_1", has edge-label "src";
(to-node: $N_8740348603973_134531916c_1, from-node: $N_8740348603973_134531916c) isa node-link; 

match
$N_8740348603973_134531916c_1 isa operation, has hash "N_8740348603973_134531916c_1"; 

insert
$N_8740348603973_134531916c_1_0 isa variable-ssa, has hash "N_8740348603973_134531916c_1_0", has var "eax_32", has version 32, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348603973_134531916c_1_0, from-node: $N_8740348603973_134531916c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 207, has bb-end 212; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 207, has bb-end 212; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348714245_134531920c isa instruction, has hash "N_8740348714245_134531920c", has il-index 212, has asm-address "0x804cb50", has operation-type "MLIL_IF", has ins-text "if (esi#21 != 0) then 220 @ 0x0 else 221 @ 0x804cb56";
(contains-instruction: $N_8740348714245_134531920c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348714245_134531920c isa instruction, has hash "N_8740348714245_134531920c"; 

insert
$N_8740348714245_134531920c_0 isa MLIL_CMP_NE, has hash "N_8740348714245_134531920c_0", has edge-label "condition";
(to-node: $N_8740348714245_134531920c_0, from-node: $N_8740348714245_134531920c) isa node-link; 

match
$N_8740348714245_134531920c_0 isa operation, has hash "N_8740348714245_134531920c_0"; 

insert
$N_8740348714245_134531920c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348714245_134531920c_0_0", has edge-label "left";
(to-node: $N_8740348714245_134531920c_0_0, from-node: $N_8740348714245_134531920c_0) isa node-link; 

match
$N_8740348714245_134531920c_0_0 isa operation, has hash "N_8740348714245_134531920c_0_0"; 

insert
$N_8740348714245_134531920c_0_0_0 isa variable-ssa, has hash "N_8740348714245_134531920c_0_0_0", has var "esi", has version 21, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348714245_134531920c_0_0_0, from-node: $N_8740348714245_134531920c_0_0) isa node-link; 

match
$N_8740348714245_134531920c_0 isa operation, has hash "N_8740348714245_134531920c_0"; 

insert
$N_8740348714245_134531920c_0_1 isa MLIL_CONST, has hash "N_8740348714245_134531920c_0_1", has edge-label "right";
(to-node: $N_8740348714245_134531920c_0_1, from-node: $N_8740348714245_134531920c_0) isa node-link; 

match
$N_8740348714245_134531920c_0_1 isa operation, has hash "N_8740348714245_134531920c_0_1"; 

insert
$N_8740348714245_134531920c_0_1_0 isa constant, has hash "N_8740348714245_134531920c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348714245_134531920c_0_1_0, from-node: $N_8740348714245_134531920c_0_1) isa node-link; 

match
$N_8740348714245_134531920c isa instruction, has hash "N_8740348714245_134531920c"; 

insert
$N_8740348714245_134531920c_1 isa constant, has hash "N_8740348714245_134531920c_1", has constant-value "220", has edge-label "true";
(to-node: $N_8740348714245_134531920c_1, from-node: $N_8740348714245_134531920c) isa node-link; 

match
$N_8740348714245_134531920c isa instruction, has hash "N_8740348714245_134531920c"; 

insert
$N_8740348714245_134531920c_2 isa constant, has hash "N_8740348714245_134531920c_2", has constant-value "221", has edge-label "false";
(to-node: $N_8740348714245_134531920c_2, from-node: $N_8740348714245_134531920c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 213, has bb-end 217; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 213, has bb-end 217; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 213, has bb-end 217; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348126997_134532031c isa instruction, has hash "N_8740348126997_134532031c", has il-index 214, has asm-address "0x804cbbf", has operation-type "MLIL_VAR_PHI", has ins-text "ebp_2#8 = ϕ(ebp_2#6, ebp_2#7)";
(contains-instruction: $N_8740348126997_134532031c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348126997_134532031c isa instruction, has hash "N_8740348126997_134532031c"; 

insert
$N_8740348126997_134532031c_0 isa variable-ssa, has hash "N_8740348126997_134532031c_0", has var "ebp_2", has version 8, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348126997_134532031c_0, from-node: $N_8740348126997_134532031c) isa node-link; 

match
$N_8740348126997_134532031c isa instruction, has hash "N_8740348126997_134532031c"; 

insert
$L_8740348126997_134532031c_1 isa list, has hash "L_8740348126997_134532031c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348126997_134532031c_1, from-node: $N_8740348126997_134532031c) isa node-link; 

match
$L_8740348126997_134532031c_1 isa list, has hash "L_8740348126997_134532031c_1"; 

insert
$N_8740348126997_134532031c_1_0 isa variable-ssa, has hash "N_8740348126997_134532031c_1_0", has var "ebp_2", has version 6, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348126997_134532031c_1_0, from-node: $L_8740348126997_134532031c_1) isa node-link; 

match
$L_8740348126997_134532031c_1 isa list, has hash "L_8740348126997_134532031c_1"; 

insert
$N_8740348126997_134532031c_1_1 isa variable-ssa, has hash "N_8740348126997_134532031c_1_1", has var "ebp_2", has version 7, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348126997_134532031c_1_1, from-node: $L_8740348126997_134532031c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 213, has bb-end 217; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348459205_134532031c isa instruction, has hash "N_8740348459205_134532031c", has il-index 216, has asm-address "0x804cbbf", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edi#10 = 0";
(contains-instruction: $N_8740348459205_134532031c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348459205_134532031c isa instruction, has hash "N_8740348459205_134532031c"; 

insert
$N_8740348459205_134532031c_0 isa variable-ssa, has hash "N_8740348459205_134532031c_0", has var "edi", has version 10, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348459205_134532031c_0, from-node: $N_8740348459205_134532031c) isa node-link; 

match
$N_8740348459205_134532031c isa instruction, has hash "N_8740348459205_134532031c"; 

insert
$N_8740348459205_134532031c_1 isa MLIL_CONST, has hash "N_8740348459205_134532031c_1", has edge-label "src";
(to-node: $N_8740348459205_134532031c_1, from-node: $N_8740348459205_134532031c) isa node-link; 

match
$N_8740348459205_134532031c_1 isa operation, has hash "N_8740348459205_134532031c_1"; 

insert
$N_8740348459205_134532031c_1_0 isa constant, has hash "N_8740348459205_134532031c_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348459205_134532031c_1_0, from-node: $N_8740348459205_134532031c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 213, has bb-end 217; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348493325_134532031c isa instruction, has hash "N_8740348493325_134532031c", has il-index 213, has asm-address "0x804cbbf", has operation-type "MLIL_VAR_PHI", has ins-text "eax_24#51 = ϕ(eax_24#49, eax_24#50)";
(contains-instruction: $N_8740348493325_134532031c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348493325_134532031c isa instruction, has hash "N_8740348493325_134532031c"; 

insert
$N_8740348493325_134532031c_0 isa variable-ssa, has hash "N_8740348493325_134532031c_0", has var "eax_24", has version 51, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348493325_134532031c_0, from-node: $N_8740348493325_134532031c) isa node-link; 

match
$N_8740348493325_134532031c isa instruction, has hash "N_8740348493325_134532031c"; 

insert
$L_8740348493325_134532031c_1 isa list, has hash "L_8740348493325_134532031c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348493325_134532031c_1, from-node: $N_8740348493325_134532031c) isa node-link; 

match
$L_8740348493325_134532031c_1 isa list, has hash "L_8740348493325_134532031c_1"; 

insert
$N_8740348493325_134532031c_1_0 isa variable-ssa, has hash "N_8740348493325_134532031c_1_0", has var "eax_24", has version 49, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348493325_134532031c_1_0, from-node: $L_8740348493325_134532031c_1) isa node-link; 

match
$L_8740348493325_134532031c_1 isa list, has hash "L_8740348493325_134532031c_1"; 

insert
$N_8740348493325_134532031c_1_1 isa variable-ssa, has hash "N_8740348493325_134532031c_1_1", has var "eax_24", has version 50, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348493325_134532031c_1_1, from-node: $L_8740348493325_134532031c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 213, has bb-end 217; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349135365_134532031c isa instruction, has hash "N_8740349135365_134532031c", has il-index 215, has asm-address "0x804cbbf", has operation-type "MLIL_MEM_PHI", has ins-text "mem#44 = ϕ(mem#42, mem#43)";
(contains-instruction: $N_8740349135365_134532031c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349135365_134532031c isa instruction, has hash "N_8740349135365_134532031c"; 

insert
$N_8740349135365_134532031c_0 isa constant, has hash "N_8740349135365_134532031c_0", has constant-value "44", has edge-label "dest_memory";
(to-node: $N_8740349135365_134532031c_0, from-node: $N_8740349135365_134532031c) isa node-link; 

match
$N_8740349135365_134532031c isa instruction, has hash "N_8740349135365_134532031c"; 

insert
$L_8740349135365_134532031c_1 isa list, has hash "L_8740349135365_134532031c_1", has list-size 2, has edge-label "src_memory";
(to-node: $L_8740349135365_134532031c_1, from-node: $N_8740349135365_134532031c) isa node-link; 

match
$L_8740349135365_134532031c_1 isa list, has hash "L_8740349135365_134532031c_1"; 

insert
$N_8740349135365_134532031c_1_0 isa constant, has hash "N_8740349135365_134532031c_1_0", has constant-value "42", has edge-label "0";
(to-node: $N_8740349135365_134532031c_1_0, from-node: $L_8740349135365_134532031c_1) isa node-link; 

match
$L_8740349135365_134532031c_1 isa list, has hash "L_8740349135365_134532031c_1"; 

insert
$N_8740349135365_134532031c_1_1 isa constant, has hash "N_8740349135365_134532031c_1_1", has constant-value "43", has edge-label "1";
(to-node: $N_8740349135365_134532031c_1_1, from-node: $L_8740349135365_134532031c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 213, has bb-end 217; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 213, has bb-end 217; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349416937_134532035c isa instruction, has hash "N_8740349416937_134532035c", has il-index 217, has asm-address "0x804cbc3", has operation-type "MLIL_IF", has ins-text "if (ebp_2#8 == eax_24#51) then 224 @ 0x0 else 225 @ 0x0";
(contains-instruction: $N_8740349416937_134532035c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349416937_134532035c isa instruction, has hash "N_8740349416937_134532035c"; 

insert
$N_8740349416937_134532035c_0 isa MLIL_CMP_E, has hash "N_8740349416937_134532035c_0", has edge-label "condition";
(to-node: $N_8740349416937_134532035c_0, from-node: $N_8740349416937_134532035c) isa node-link; 

match
$N_8740349416937_134532035c_0 isa operation, has hash "N_8740349416937_134532035c_0"; 

insert
$N_8740349416937_134532035c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349416937_134532035c_0_0", has edge-label "left";
(to-node: $N_8740349416937_134532035c_0_0, from-node: $N_8740349416937_134532035c_0) isa node-link; 

match
$N_8740349416937_134532035c_0_0 isa operation, has hash "N_8740349416937_134532035c_0_0"; 

insert
$N_8740349416937_134532035c_0_0_0 isa variable-ssa, has hash "N_8740349416937_134532035c_0_0_0", has var "ebp_2", has version 8, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349416937_134532035c_0_0_0, from-node: $N_8740349416937_134532035c_0_0) isa node-link; 

match
$N_8740349416937_134532035c_0 isa operation, has hash "N_8740349416937_134532035c_0"; 

insert
$N_8740349416937_134532035c_0_1 isa MLIL_VAR_SSA, has hash "N_8740349416937_134532035c_0_1", has edge-label "right";
(to-node: $N_8740349416937_134532035c_0_1, from-node: $N_8740349416937_134532035c_0) isa node-link; 

match
$N_8740349416937_134532035c_0_1 isa operation, has hash "N_8740349416937_134532035c_0_1"; 

insert
$N_8740349416937_134532035c_0_1_0 isa variable-ssa, has hash "N_8740349416937_134532035c_0_1_0", has var "eax_24", has version 51, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349416937_134532035c_0_1_0, from-node: $N_8740349416937_134532035c_0_1) isa node-link; 

match
$N_8740349416937_134532035c isa instruction, has hash "N_8740349416937_134532035c"; 

insert
$N_8740349416937_134532035c_1 isa constant, has hash "N_8740349416937_134532035c_1", has constant-value "224", has edge-label "true";
(to-node: $N_8740349416937_134532035c_1, from-node: $N_8740349416937_134532035c) isa node-link; 

match
$N_8740349416937_134532035c isa instruction, has hash "N_8740349416937_134532035c"; 

insert
$N_8740349416937_134532035c_2 isa constant, has hash "N_8740349416937_134532035c_2", has constant-value "225", has edge-label "false";
(to-node: $N_8740349416937_134532035c_2, from-node: $N_8740349416937_134532035c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 218, has bb-end 218; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 219, has bb-end 219; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 219, has bb-end 219; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 219, has bb-end 219; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348143665_134531683c isa instruction, has hash "N_8740348143665_134531683c", has il-index 219, has asm-address "0x804ca63", has operation-type "MLIL_GOTO", has ins-text "goto 213 @ 0x804cbbf";
(contains-instruction: $N_8740348143665_134531683c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348143665_134531683c isa instruction, has hash "N_8740348143665_134531683c"; 

insert
$N_8740348143665_134531683c_0 isa constant, has hash "N_8740348143665_134531683c_0", has constant-value "213", has edge-label "dest";
(to-node: $N_8740348143665_134531683c_0, from-node: $N_8740348143665_134531683c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 220, has bb-end 220; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 221, has bb-end 223; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 221, has bb-end 223; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 221, has bb-end 223; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349166301_134531926c isa instruction, has hash "N_8740349166301_134531926c", has il-index 221, has asm-address "0x804cb56", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_1#1 = var_198 @ mem#36";
(contains-instruction: $N_8740349166301_134531926c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349166301_134531926c isa instruction, has hash "N_8740349166301_134531926c"; 

insert
$N_8740349166301_134531926c_0 isa variable-ssa, has hash "N_8740349166301_134531926c_0", has var "ecx_1", has version 1, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349166301_134531926c_0, from-node: $N_8740349166301_134531926c) isa node-link; 

match
$N_8740349166301_134531926c isa instruction, has hash "N_8740349166301_134531926c"; 

insert
$N_8740349166301_134531926c_1 isa MLIL_VAR_ALIASED, has hash "N_8740349166301_134531926c_1", has edge-label "src";
(to-node: $N_8740349166301_134531926c_1, from-node: $N_8740349166301_134531926c) isa node-link; 

match
$N_8740349166301_134531926c_1 isa operation, has hash "N_8740349166301_134531926c_1"; 

insert
$N_8740349166301_134531926c_1_0 isa variable-ssa, has hash "N_8740349166301_134531926c_1_0", has var "var_198", has version 36, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349166301_134531926c_1_0, from-node: $N_8740349166301_134531926c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 221, has bb-end 223; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 221, has bb-end 223; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348980997_134531930c isa instruction, has hash "N_8740348980997_134531930c", has il-index 222, has asm-address "0x804cb5a", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi_3#22 = 0";
(contains-instruction: $N_8740348980997_134531930c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348980997_134531930c isa instruction, has hash "N_8740348980997_134531930c"; 

insert
$N_8740348980997_134531930c_0 isa variable-ssa, has hash "N_8740348980997_134531930c_0", has var "esi_3", has version 22, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348980997_134531930c_0, from-node: $N_8740348980997_134531930c) isa node-link; 

match
$N_8740348980997_134531930c isa instruction, has hash "N_8740348980997_134531930c"; 

insert
$N_8740348980997_134531930c_1 isa MLIL_CONST, has hash "N_8740348980997_134531930c_1", has edge-label "src";
(to-node: $N_8740348980997_134531930c_1, from-node: $N_8740348980997_134531930c) isa node-link; 

match
$N_8740348980997_134531930c_1 isa operation, has hash "N_8740348980997_134531930c_1"; 

insert
$N_8740348980997_134531930c_1_0 isa constant, has hash "N_8740348980997_134531930c_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348980997_134531930c_1_0, from-node: $N_8740348980997_134531930c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 221, has bb-end 223; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 221, has bb-end 223; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348675853_134531932c isa instruction, has hash "N_8740348675853_134531932c", has il-index 223, has asm-address "0x804cb5c", has operation-type "MLIL_GOTO", has ins-text "goto 226 @ 0x804cb61";
(contains-instruction: $N_8740348675853_134531932c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348675853_134531932c isa instruction, has hash "N_8740348675853_134531932c"; 

insert
$N_8740348675853_134531932c_0 isa constant, has hash "N_8740348675853_134531932c_0", has constant-value "226", has edge-label "dest";
(to-node: $N_8740348675853_134531932c_0, from-node: $N_8740348675853_134531932c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 224, has bb-end 224; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 225, has bb-end 225; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348697605_134531937c isa instruction, has hash "N_8740348697605_134531937c", has il-index 228, has asm-address "0x804cb61", has operation-type "MLIL_VAR_PHI", has ins-text "ebx_6#1 = ϕ(ebx#0, ebx_6#7)";
(contains-instruction: $N_8740348697605_134531937c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348697605_134531937c isa instruction, has hash "N_8740348697605_134531937c"; 

insert
$N_8740348697605_134531937c_0 isa variable-ssa, has hash "N_8740348697605_134531937c_0", has var "ebx_6", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348697605_134531937c_0, from-node: $N_8740348697605_134531937c) isa node-link; 

match
$N_8740348697605_134531937c isa instruction, has hash "N_8740348697605_134531937c"; 

insert
$L_8740348697605_134531937c_1 isa list, has hash "L_8740348697605_134531937c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348697605_134531937c_1, from-node: $N_8740348697605_134531937c) isa node-link; 

match
$L_8740348697605_134531937c_1 isa list, has hash "L_8740348697605_134531937c_1"; 

insert
$N_8740348697605_134531937c_1_0 isa variable-ssa, has hash "N_8740348697605_134531937c_1_0", has var "ebx", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348697605_134531937c_1_0, from-node: $L_8740348697605_134531937c_1) isa node-link; 

match
$L_8740348697605_134531937c_1 isa list, has hash "L_8740348697605_134531937c_1"; 

insert
$N_8740348697605_134531937c_1_1 isa variable-ssa, has hash "N_8740348697605_134531937c_1_1", has var "ebx_6", has version 7, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348697605_134531937c_1_1, from-node: $L_8740348697605_134531937c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348700893_134531937c isa instruction, has hash "N_8740348700893_134531937c", has il-index 227, has asm-address "0x804cb61", has operation-type "MLIL_VAR_PHI", has ins-text "edx_4#6 = ϕ(edx_6#5, edx_4#10)";
(contains-instruction: $N_8740348700893_134531937c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348700893_134531937c isa instruction, has hash "N_8740348700893_134531937c"; 

insert
$N_8740348700893_134531937c_0 isa variable-ssa, has hash "N_8740348700893_134531937c_0", has var "edx_4", has version 6, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348700893_134531937c_0, from-node: $N_8740348700893_134531937c) isa node-link; 

match
$N_8740348700893_134531937c isa instruction, has hash "N_8740348700893_134531937c"; 

insert
$L_8740348700893_134531937c_1 isa list, has hash "L_8740348700893_134531937c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348700893_134531937c_1, from-node: $N_8740348700893_134531937c) isa node-link; 

match
$L_8740348700893_134531937c_1 isa list, has hash "L_8740348700893_134531937c_1"; 

insert
$N_8740348700893_134531937c_1_0 isa variable-ssa, has hash "N_8740348700893_134531937c_1_0", has var "edx_6", has version 5, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348700893_134531937c_1_0, from-node: $L_8740348700893_134531937c_1) isa node-link; 

match
$L_8740348700893_134531937c_1 isa list, has hash "L_8740348700893_134531937c_1"; 

insert
$N_8740348700893_134531937c_1_1 isa variable-ssa, has hash "N_8740348700893_134531937c_1_1", has var "edx_4", has version 10, has edge-label "1", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348700893_134531937c_1_1, from-node: $L_8740348700893_134531937c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348700901_134531937c isa instruction, has hash "N_8740348700901_134531937c", has il-index 226, has asm-address "0x804cb61", has operation-type "MLIL_VAR_PHI", has ins-text "eax_38#33 = ϕ(eax_32#32, eax_38#40)";
(contains-instruction: $N_8740348700901_134531937c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348700901_134531937c isa instruction, has hash "N_8740348700901_134531937c"; 

insert
$N_8740348700901_134531937c_0 isa variable-ssa, has hash "N_8740348700901_134531937c_0", has var "eax_38", has version 33, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348700901_134531937c_0, from-node: $N_8740348700901_134531937c) isa node-link; 

match
$N_8740348700901_134531937c isa instruction, has hash "N_8740348700901_134531937c"; 

insert
$L_8740348700901_134531937c_1 isa list, has hash "L_8740348700901_134531937c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348700901_134531937c_1, from-node: $N_8740348700901_134531937c) isa node-link; 

match
$L_8740348700901_134531937c_1 isa list, has hash "L_8740348700901_134531937c_1"; 

insert
$N_8740348700901_134531937c_1_0 isa variable-ssa, has hash "N_8740348700901_134531937c_1_0", has var "eax_32", has version 32, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348700901_134531937c_1_0, from-node: $L_8740348700901_134531937c_1) isa node-link; 

match
$L_8740348700901_134531937c_1 isa list, has hash "L_8740348700901_134531937c_1"; 

insert
$N_8740348700901_134531937c_1_1 isa variable-ssa, has hash "N_8740348700901_134531937c_1_1", has var "eax_38", has version 40, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348700901_134531937c_1_1, from-node: $L_8740348700901_134531937c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348717193_134531937c isa instruction, has hash "N_8740348717193_134531937c", has il-index 232, has asm-address "0x804cb61", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_33#34 = [0x8051fe8].d @ mem#37";
(contains-instruction: $N_8740348717193_134531937c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348717193_134531937c isa instruction, has hash "N_8740348717193_134531937c"; 

insert
$N_8740348717193_134531937c_0 isa variable-ssa, has hash "N_8740348717193_134531937c_0", has var "eax_33", has version 34, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348717193_134531937c_0, from-node: $N_8740348717193_134531937c) isa node-link; 

match
$N_8740348717193_134531937c isa instruction, has hash "N_8740348717193_134531937c"; 

insert
$N_8740348717193_134531937c_1 isa MLIL_LOAD_SSA, has hash "N_8740348717193_134531937c_1", has edge-label "src";
(to-node: $N_8740348717193_134531937c_1, from-node: $N_8740348717193_134531937c) isa node-link; 

match
$N_8740348717193_134531937c_1 isa operation, has hash "N_8740348717193_134531937c_1"; 

insert
$N_8740348717193_134531937c_1_0 isa MLIL_CONST_PTR, has hash "N_8740348717193_134531937c_1_0", has edge-label "src";
(to-node: $N_8740348717193_134531937c_1_0, from-node: $N_8740348717193_134531937c_1) isa node-link; 

match
$N_8740348717193_134531937c_1_0 isa operation, has hash "N_8740348717193_134531937c_1_0"; 

insert
$N_8740348717193_134531937c_1_0_0 isa constant, has hash "N_8740348717193_134531937c_1_0_0", has constant-value "134553576", has edge-label "constant";
(to-node: $N_8740348717193_134531937c_1_0_0, from-node: $N_8740348717193_134531937c_1_0) isa node-link; 

match
$N_8740348717193_134531937c_1 isa operation, has hash "N_8740348717193_134531937c_1"; 

insert
$N_8740348717193_134531937c_1_1 isa constant, has hash "N_8740348717193_134531937c_1_1", has constant-value "37", has edge-label "src_memory";
(to-node: $N_8740348717193_134531937c_1_1, from-node: $N_8740348717193_134531937c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349026053_134531937c isa instruction, has hash "N_8740349026053_134531937c", has il-index 229, has asm-address "0x804cb61", has operation-type "MLIL_VAR_PHI", has ins-text "ebp_4#2 = ϕ(ebp_1#1, ebp_4#4)";
(contains-instruction: $N_8740349026053_134531937c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349026053_134531937c isa instruction, has hash "N_8740349026053_134531937c"; 

insert
$N_8740349026053_134531937c_0 isa variable-ssa, has hash "N_8740349026053_134531937c_0", has var "ebp_4", has version 2, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349026053_134531937c_0, from-node: $N_8740349026053_134531937c) isa node-link; 

match
$N_8740349026053_134531937c isa instruction, has hash "N_8740349026053_134531937c"; 

insert
$L_8740349026053_134531937c_1 isa list, has hash "L_8740349026053_134531937c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349026053_134531937c_1, from-node: $N_8740349026053_134531937c) isa node-link; 

match
$L_8740349026053_134531937c_1 isa list, has hash "L_8740349026053_134531937c_1"; 

insert
$N_8740349026053_134531937c_1_0 isa variable-ssa, has hash "N_8740349026053_134531937c_1_0", has var "ebp_1", has version 1, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349026053_134531937c_1_0, from-node: $L_8740349026053_134531937c_1) isa node-link; 

match
$L_8740349026053_134531937c_1 isa list, has hash "L_8740349026053_134531937c_1"; 

insert
$N_8740349026053_134531937c_1_1 isa variable-ssa, has hash "N_8740349026053_134531937c_1_1", has var "ebp_4", has version 4, has edge-label "1", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349026053_134531937c_1_1, from-node: $L_8740349026053_134531937c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349395973_134531937c isa instruction, has hash "N_8740349395973_134531937c", has il-index 231, has asm-address "0x804cb61", has operation-type "MLIL_MEM_PHI", has ins-text "mem#37 = ϕ(mem#36, mem#39)";
(contains-instruction: $N_8740349395973_134531937c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349395973_134531937c isa instruction, has hash "N_8740349395973_134531937c"; 

insert
$N_8740349395973_134531937c_0 isa constant, has hash "N_8740349395973_134531937c_0", has constant-value "37", has edge-label "dest_memory";
(to-node: $N_8740349395973_134531937c_0, from-node: $N_8740349395973_134531937c) isa node-link; 

match
$N_8740349395973_134531937c isa instruction, has hash "N_8740349395973_134531937c"; 

insert
$L_8740349395973_134531937c_1 isa list, has hash "L_8740349395973_134531937c_1", has list-size 2, has edge-label "src_memory";
(to-node: $L_8740349395973_134531937c_1, from-node: $N_8740349395973_134531937c) isa node-link; 

match
$L_8740349395973_134531937c_1 isa list, has hash "L_8740349395973_134531937c_1"; 

insert
$N_8740349395973_134531937c_1_0 isa constant, has hash "N_8740349395973_134531937c_1_0", has constant-value "36", has edge-label "0";
(to-node: $N_8740349395973_134531937c_1_0, from-node: $L_8740349395973_134531937c_1) isa node-link; 

match
$L_8740349395973_134531937c_1 isa list, has hash "L_8740349395973_134531937c_1"; 

insert
$N_8740349395973_134531937c_1_1 isa constant, has hash "N_8740349395973_134531937c_1_1", has constant-value "39", has edge-label "1";
(to-node: $N_8740349395973_134531937c_1_1, from-node: $L_8740349395973_134531937c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349402117_134531937c isa instruction, has hash "N_8740349402117_134531937c", has il-index 230, has asm-address "0x804cb61", has operation-type "MLIL_VAR_PHI", has ins-text "esi_3#23 = ϕ(esi_3#22, esi_3#24)";
(contains-instruction: $N_8740349402117_134531937c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349402117_134531937c isa instruction, has hash "N_8740349402117_134531937c"; 

insert
$N_8740349402117_134531937c_0 isa variable-ssa, has hash "N_8740349402117_134531937c_0", has var "esi_3", has version 23, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349402117_134531937c_0, from-node: $N_8740349402117_134531937c) isa node-link; 

match
$N_8740349402117_134531937c isa instruction, has hash "N_8740349402117_134531937c"; 

insert
$L_8740349402117_134531937c_1 isa list, has hash "L_8740349402117_134531937c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349402117_134531937c_1, from-node: $N_8740349402117_134531937c) isa node-link; 

match
$L_8740349402117_134531937c_1 isa list, has hash "L_8740349402117_134531937c_1"; 

insert
$N_8740349402117_134531937c_1_0 isa variable-ssa, has hash "N_8740349402117_134531937c_1_0", has var "esi_3", has version 22, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349402117_134531937c_1_0, from-node: $L_8740349402117_134531937c_1) isa node-link; 

match
$L_8740349402117_134531937c_1 isa list, has hash "L_8740349402117_134531937c_1"; 

insert
$N_8740349402117_134531937c_1_1 isa variable-ssa, has hash "N_8740349402117_134531937c_1_1", has var "esi_3", has version 24, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349402117_134531937c_1_1, from-node: $L_8740349402117_134531937c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349583505_134531942c isa instruction, has hash "N_8740349583505_134531942c", has il-index 233, has asm-address "0x804cb66", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebx_1#2 = eax_33#34";
(contains-instruction: $N_8740349583505_134531942c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349583505_134531942c isa instruction, has hash "N_8740349583505_134531942c"; 

insert
$N_8740349583505_134531942c_0 isa variable-ssa, has hash "N_8740349583505_134531942c_0", has var "ebx_1", has version 2, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349583505_134531942c_0, from-node: $N_8740349583505_134531942c) isa node-link; 

match
$N_8740349583505_134531942c isa instruction, has hash "N_8740349583505_134531942c"; 

insert
$N_8740349583505_134531942c_1 isa MLIL_VAR_SSA, has hash "N_8740349583505_134531942c_1", has edge-label "src";
(to-node: $N_8740349583505_134531942c_1, from-node: $N_8740349583505_134531942c) isa node-link; 

match
$N_8740349583505_134531942c_1 isa operation, has hash "N_8740349583505_134531942c_1"; 

insert
$N_8740349583505_134531942c_1_0 isa variable-ssa, has hash "N_8740349583505_134531942c_1_0", has var "eax_33", has version 34, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349583505_134531942c_1_0, from-node: $N_8740349583505_134531942c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348567813_134531944c isa instruction, has hash "N_8740348567813_134531944c", has il-index 234, has asm-address "0x804cb68", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebx_2#3 = ebx_1#2 u>> 0x1f";
(contains-instruction: $N_8740348567813_134531944c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348567813_134531944c isa instruction, has hash "N_8740348567813_134531944c"; 

insert
$N_8740348567813_134531944c_0 isa variable-ssa, has hash "N_8740348567813_134531944c_0", has var "ebx_2", has version 3, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348567813_134531944c_0, from-node: $N_8740348567813_134531944c) isa node-link; 

match
$N_8740348567813_134531944c isa instruction, has hash "N_8740348567813_134531944c"; 

insert
$N_8740348567813_134531944c_1 isa MLIL_LSR, has hash "N_8740348567813_134531944c_1", has edge-label "src";
(to-node: $N_8740348567813_134531944c_1, from-node: $N_8740348567813_134531944c) isa node-link; 

match
$N_8740348567813_134531944c_1 isa operation, has hash "N_8740348567813_134531944c_1"; 

insert
$N_8740348567813_134531944c_1_0 isa MLIL_VAR_SSA, has hash "N_8740348567813_134531944c_1_0", has edge-label "left";
(to-node: $N_8740348567813_134531944c_1_0, from-node: $N_8740348567813_134531944c_1) isa node-link; 

match
$N_8740348567813_134531944c_1_0 isa operation, has hash "N_8740348567813_134531944c_1_0"; 

insert
$N_8740348567813_134531944c_1_0_0 isa variable-ssa, has hash "N_8740348567813_134531944c_1_0_0", has var "ebx_1", has version 2, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348567813_134531944c_1_0_0, from-node: $N_8740348567813_134531944c_1_0) isa node-link; 

match
$N_8740348567813_134531944c_1 isa operation, has hash "N_8740348567813_134531944c_1"; 

insert
$N_8740348567813_134531944c_1_1 isa MLIL_CONST, has hash "N_8740348567813_134531944c_1_1", has edge-label "right";
(to-node: $N_8740348567813_134531944c_1_1, from-node: $N_8740348567813_134531944c_1) isa node-link; 

match
$N_8740348567813_134531944c_1_1 isa operation, has hash "N_8740348567813_134531944c_1_1"; 

insert
$N_8740348567813_134531944c_1_1_0 isa constant, has hash "N_8740348567813_134531944c_1_1_0", has constant-value "31", has edge-label "constant";
(to-node: $N_8740348567813_134531944c_1_1_0, from-node: $N_8740348567813_134531944c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348855557_134531947c isa instruction, has hash "N_8740348855557_134531947c", has il-index 235, has asm-address "0x804cb6b", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edx_7#7 = eax_33#34";
(contains-instruction: $N_8740348855557_134531947c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348855557_134531947c isa instruction, has hash "N_8740348855557_134531947c"; 

insert
$N_8740348855557_134531947c_0 isa variable-ssa, has hash "N_8740348855557_134531947c_0", has var "edx_7", has version 7, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348855557_134531947c_0, from-node: $N_8740348855557_134531947c) isa node-link; 

match
$N_8740348855557_134531947c isa instruction, has hash "N_8740348855557_134531947c"; 

insert
$N_8740348855557_134531947c_1 isa MLIL_VAR_SSA, has hash "N_8740348855557_134531947c_1", has edge-label "src";
(to-node: $N_8740348855557_134531947c_1, from-node: $N_8740348855557_134531947c) isa node-link; 

match
$N_8740348855557_134531947c_1 isa operation, has hash "N_8740348855557_134531947c_1"; 

insert
$N_8740348855557_134531947c_1_0 isa variable-ssa, has hash "N_8740348855557_134531947c_1_0", has var "eax_33", has version 34, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348855557_134531947c_1_0, from-node: $N_8740348855557_134531947c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348814085_134531949c isa instruction, has hash "N_8740348814085_134531949c", has il-index 236, has asm-address "0x804cb6d", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edx_8#8 = edx_7#7 u>> 0x1e";
(contains-instruction: $N_8740348814085_134531949c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348814085_134531949c isa instruction, has hash "N_8740348814085_134531949c"; 

insert
$N_8740348814085_134531949c_0 isa variable-ssa, has hash "N_8740348814085_134531949c_0", has var "edx_8", has version 8, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348814085_134531949c_0, from-node: $N_8740348814085_134531949c) isa node-link; 

match
$N_8740348814085_134531949c isa instruction, has hash "N_8740348814085_134531949c"; 

insert
$N_8740348814085_134531949c_1 isa MLIL_LSR, has hash "N_8740348814085_134531949c_1", has edge-label "src";
(to-node: $N_8740348814085_134531949c_1, from-node: $N_8740348814085_134531949c) isa node-link; 

match
$N_8740348814085_134531949c_1 isa operation, has hash "N_8740348814085_134531949c_1"; 

insert
$N_8740348814085_134531949c_1_0 isa MLIL_VAR_SSA, has hash "N_8740348814085_134531949c_1_0", has edge-label "left";
(to-node: $N_8740348814085_134531949c_1_0, from-node: $N_8740348814085_134531949c_1) isa node-link; 

match
$N_8740348814085_134531949c_1_0 isa operation, has hash "N_8740348814085_134531949c_1_0"; 

insert
$N_8740348814085_134531949c_1_0_0 isa variable-ssa, has hash "N_8740348814085_134531949c_1_0_0", has var "edx_7", has version 7, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348814085_134531949c_1_0_0, from-node: $N_8740348814085_134531949c_1_0) isa node-link; 

match
$N_8740348814085_134531949c_1 isa operation, has hash "N_8740348814085_134531949c_1"; 

insert
$N_8740348814085_134531949c_1_1 isa MLIL_CONST, has hash "N_8740348814085_134531949c_1_1", has edge-label "right";
(to-node: $N_8740348814085_134531949c_1_1, from-node: $N_8740348814085_134531949c_1) isa node-link; 

match
$N_8740348814085_134531949c_1_1 isa operation, has hash "N_8740348814085_134531949c_1_1"; 

insert
$N_8740348814085_134531949c_1_1_0 isa constant, has hash "N_8740348814085_134531949c_1_1_0", has constant-value "30", has edge-label "constant";
(to-node: $N_8740348814085_134531949c_1_1_0, from-node: $N_8740348814085_134531949c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349571077_134531952c isa instruction, has hash "N_8740349571077_134531952c", has il-index 237, has asm-address "0x804cb70", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebp_3#3 = eax_33#34";
(contains-instruction: $N_8740349571077_134531952c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349571077_134531952c isa instruction, has hash "N_8740349571077_134531952c"; 

insert
$N_8740349571077_134531952c_0 isa variable-ssa, has hash "N_8740349571077_134531952c_0", has var "ebp_3", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349571077_134531952c_0, from-node: $N_8740349571077_134531952c) isa node-link; 

match
$N_8740349571077_134531952c isa instruction, has hash "N_8740349571077_134531952c"; 

insert
$N_8740349571077_134531952c_1 isa MLIL_VAR_SSA, has hash "N_8740349571077_134531952c_1", has edge-label "src";
(to-node: $N_8740349571077_134531952c_1, from-node: $N_8740349571077_134531952c) isa node-link; 

match
$N_8740349571077_134531952c_1 isa operation, has hash "N_8740349571077_134531952c_1"; 

insert
$N_8740349571077_134531952c_1_0 isa variable-ssa, has hash "N_8740349571077_134531952c_1_0", has var "eax_33", has version 34, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349571077_134531952c_1_0, from-node: $N_8740349571077_134531952c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348628485_134531954c isa instruction, has hash "N_8740348628485_134531954c", has il-index 238, has asm-address "0x804cb72", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebp_4#4 = ebp_3#3 u>> 0xa";
(contains-instruction: $N_8740348628485_134531954c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348628485_134531954c isa instruction, has hash "N_8740348628485_134531954c"; 

insert
$N_8740348628485_134531954c_0 isa variable-ssa, has hash "N_8740348628485_134531954c_0", has var "ebp_4", has version 4, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348628485_134531954c_0, from-node: $N_8740348628485_134531954c) isa node-link; 

match
$N_8740348628485_134531954c isa instruction, has hash "N_8740348628485_134531954c"; 

insert
$N_8740348628485_134531954c_1 isa MLIL_LSR, has hash "N_8740348628485_134531954c_1", has edge-label "src";
(to-node: $N_8740348628485_134531954c_1, from-node: $N_8740348628485_134531954c) isa node-link; 

match
$N_8740348628485_134531954c_1 isa operation, has hash "N_8740348628485_134531954c_1"; 

insert
$N_8740348628485_134531954c_1_0 isa MLIL_VAR_SSA, has hash "N_8740348628485_134531954c_1_0", has edge-label "left";
(to-node: $N_8740348628485_134531954c_1_0, from-node: $N_8740348628485_134531954c_1) isa node-link; 

match
$N_8740348628485_134531954c_1_0 isa operation, has hash "N_8740348628485_134531954c_1_0"; 

insert
$N_8740348628485_134531954c_1_0_0 isa variable-ssa, has hash "N_8740348628485_134531954c_1_0_0", has var "ebp_3", has version 3, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348628485_134531954c_1_0_0, from-node: $N_8740348628485_134531954c_1_0) isa node-link; 

match
$N_8740348628485_134531954c_1 isa operation, has hash "N_8740348628485_134531954c_1"; 

insert
$N_8740348628485_134531954c_1_1 isa MLIL_CONST, has hash "N_8740348628485_134531954c_1_1", has edge-label "right";
(to-node: $N_8740348628485_134531954c_1_1, from-node: $N_8740348628485_134531954c_1) isa node-link; 

match
$N_8740348628485_134531954c_1_1 isa operation, has hash "N_8740348628485_134531954c_1_1"; 

insert
$N_8740348628485_134531954c_1_1_0 isa constant, has hash "N_8740348628485_134531954c_1_1_0", has constant-value "10", has edge-label "constant";
(to-node: $N_8740348628485_134531954c_1_1_0, from-node: $N_8740348628485_134531954c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349163013_134531957c isa instruction, has hash "N_8740349163013_134531957c", has il-index 239, has asm-address "0x804cb75", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebx_3#4 = ebx_2#3 ^ eax_33#34";
(contains-instruction: $N_8740349163013_134531957c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349163013_134531957c isa instruction, has hash "N_8740349163013_134531957c"; 

insert
$N_8740349163013_134531957c_0 isa variable-ssa, has hash "N_8740349163013_134531957c_0", has var "ebx_3", has version 4, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349163013_134531957c_0, from-node: $N_8740349163013_134531957c) isa node-link; 

match
$N_8740349163013_134531957c isa instruction, has hash "N_8740349163013_134531957c"; 

insert
$N_8740349163013_134531957c_1 isa MLIL_XOR, has hash "N_8740349163013_134531957c_1", has edge-label "src";
(to-node: $N_8740349163013_134531957c_1, from-node: $N_8740349163013_134531957c) isa node-link; 

match
$N_8740349163013_134531957c_1 isa operation, has hash "N_8740349163013_134531957c_1"; 

insert
$N_8740349163013_134531957c_1_0 isa MLIL_VAR_SSA, has hash "N_8740349163013_134531957c_1_0", has edge-label "left";
(to-node: $N_8740349163013_134531957c_1_0, from-node: $N_8740349163013_134531957c_1) isa node-link; 

match
$N_8740349163013_134531957c_1_0 isa operation, has hash "N_8740349163013_134531957c_1_0"; 

insert
$N_8740349163013_134531957c_1_0_0 isa variable-ssa, has hash "N_8740349163013_134531957c_1_0_0", has var "ebx_2", has version 3, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349163013_134531957c_1_0_0, from-node: $N_8740349163013_134531957c_1_0) isa node-link; 

match
$N_8740349163013_134531957c_1 isa operation, has hash "N_8740349163013_134531957c_1"; 

insert
$N_8740349163013_134531957c_1_1 isa MLIL_VAR_SSA, has hash "N_8740349163013_134531957c_1_1", has edge-label "right";
(to-node: $N_8740349163013_134531957c_1_1, from-node: $N_8740349163013_134531957c_1) isa node-link; 

match
$N_8740349163013_134531957c_1_1 isa operation, has hash "N_8740349163013_134531957c_1_1"; 

insert
$N_8740349163013_134531957c_1_1_0 isa variable-ssa, has hash "N_8740349163013_134531957c_1_1_0", has var "eax_33", has version 34, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349163013_134531957c_1_1_0, from-node: $N_8740349163013_134531957c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348143365_134531959c isa instruction, has hash "N_8740348143365_134531959c", has il-index 240, has asm-address "0x804cb77", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebx_4#5 = ebx_3#4 ^ ebp_4#4";
(contains-instruction: $N_8740348143365_134531959c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348143365_134531959c isa instruction, has hash "N_8740348143365_134531959c"; 

insert
$N_8740348143365_134531959c_0 isa variable-ssa, has hash "N_8740348143365_134531959c_0", has var "ebx_4", has version 5, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348143365_134531959c_0, from-node: $N_8740348143365_134531959c) isa node-link; 

match
$N_8740348143365_134531959c isa instruction, has hash "N_8740348143365_134531959c"; 

insert
$N_8740348143365_134531959c_1 isa MLIL_XOR, has hash "N_8740348143365_134531959c_1", has edge-label "src";
(to-node: $N_8740348143365_134531959c_1, from-node: $N_8740348143365_134531959c) isa node-link; 

match
$N_8740348143365_134531959c_1 isa operation, has hash "N_8740348143365_134531959c_1"; 

insert
$N_8740348143365_134531959c_1_0 isa MLIL_VAR_SSA, has hash "N_8740348143365_134531959c_1_0", has edge-label "left";
(to-node: $N_8740348143365_134531959c_1_0, from-node: $N_8740348143365_134531959c_1) isa node-link; 

match
$N_8740348143365_134531959c_1_0 isa operation, has hash "N_8740348143365_134531959c_1_0"; 

insert
$N_8740348143365_134531959c_1_0_0 isa variable-ssa, has hash "N_8740348143365_134531959c_1_0_0", has var "ebx_3", has version 4, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348143365_134531959c_1_0_0, from-node: $N_8740348143365_134531959c_1_0) isa node-link; 

match
$N_8740348143365_134531959c_1 isa operation, has hash "N_8740348143365_134531959c_1"; 

insert
$N_8740348143365_134531959c_1_1 isa MLIL_VAR_SSA, has hash "N_8740348143365_134531959c_1_1", has edge-label "right";
(to-node: $N_8740348143365_134531959c_1_1, from-node: $N_8740348143365_134531959c_1) isa node-link; 

match
$N_8740348143365_134531959c_1_1 isa operation, has hash "N_8740348143365_134531959c_1_1"; 

insert
$N_8740348143365_134531959c_1_1_0 isa variable-ssa, has hash "N_8740348143365_134531959c_1_1_0", has var "ebp_4", has version 4, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348143365_134531959c_1_1_0, from-node: $N_8740348143365_134531959c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348699397_134531961c isa instruction, has hash "N_8740348699397_134531961c", has il-index 241, has asm-address "0x804cb79", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebx_5#6 = ebx_4#5 ^ edx_8#8";
(contains-instruction: $N_8740348699397_134531961c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348699397_134531961c isa instruction, has hash "N_8740348699397_134531961c"; 

insert
$N_8740348699397_134531961c_0 isa variable-ssa, has hash "N_8740348699397_134531961c_0", has var "ebx_5", has version 6, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348699397_134531961c_0, from-node: $N_8740348699397_134531961c) isa node-link; 

match
$N_8740348699397_134531961c isa instruction, has hash "N_8740348699397_134531961c"; 

insert
$N_8740348699397_134531961c_1 isa MLIL_XOR, has hash "N_8740348699397_134531961c_1", has edge-label "src";
(to-node: $N_8740348699397_134531961c_1, from-node: $N_8740348699397_134531961c) isa node-link; 

match
$N_8740348699397_134531961c_1 isa operation, has hash "N_8740348699397_134531961c_1"; 

insert
$N_8740348699397_134531961c_1_0 isa MLIL_VAR_SSA, has hash "N_8740348699397_134531961c_1_0", has edge-label "left";
(to-node: $N_8740348699397_134531961c_1_0, from-node: $N_8740348699397_134531961c_1) isa node-link; 

match
$N_8740348699397_134531961c_1_0 isa operation, has hash "N_8740348699397_134531961c_1_0"; 

insert
$N_8740348699397_134531961c_1_0_0 isa variable-ssa, has hash "N_8740348699397_134531961c_1_0_0", has var "ebx_4", has version 5, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348699397_134531961c_1_0_0, from-node: $N_8740348699397_134531961c_1_0) isa node-link; 

match
$N_8740348699397_134531961c_1 isa operation, has hash "N_8740348699397_134531961c_1"; 

insert
$N_8740348699397_134531961c_1_1 isa MLIL_VAR_SSA, has hash "N_8740348699397_134531961c_1_1", has edge-label "right";
(to-node: $N_8740348699397_134531961c_1_1, from-node: $N_8740348699397_134531961c_1) isa node-link; 

match
$N_8740348699397_134531961c_1_1 isa operation, has hash "N_8740348699397_134531961c_1_1"; 

insert
$N_8740348699397_134531961c_1_1_0 isa variable-ssa, has hash "N_8740348699397_134531961c_1_1_0", has var "edx_8", has version 8, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348699397_134531961c_1_1_0, from-node: $N_8740348699397_134531961c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349522949_134531963c isa instruction, has hash "N_8740349522949_134531963c", has il-index 242, has asm-address "0x804cb7b", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebx_6#7 = (ebx_5#6 << 0x1f) | (eax_33#34 u>> 0xffffffff)";
(contains-instruction: $N_8740349522949_134531963c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349522949_134531963c isa instruction, has hash "N_8740349522949_134531963c"; 

insert
$N_8740349522949_134531963c_0 isa variable-ssa, has hash "N_8740349522949_134531963c_0", has var "ebx_6", has version 7, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349522949_134531963c_0, from-node: $N_8740349522949_134531963c) isa node-link; 

match
$N_8740349522949_134531963c isa instruction, has hash "N_8740349522949_134531963c"; 

insert
$N_8740349522949_134531963c_1 isa MLIL_OR, has hash "N_8740349522949_134531963c_1", has edge-label "src";
(to-node: $N_8740349522949_134531963c_1, from-node: $N_8740349522949_134531963c) isa node-link; 

match
$N_8740349522949_134531963c_1 isa operation, has hash "N_8740349522949_134531963c_1"; 

insert
$N_8740349522949_134531963c_1_0 isa MLIL_LSL, has hash "N_8740349522949_134531963c_1_0", has edge-label "left";
(to-node: $N_8740349522949_134531963c_1_0, from-node: $N_8740349522949_134531963c_1) isa node-link; 

match
$N_8740349522949_134531963c_1_0 isa operation, has hash "N_8740349522949_134531963c_1_0"; 

insert
$N_8740349522949_134531963c_1_0_0 isa MLIL_VAR_SSA, has hash "N_8740349522949_134531963c_1_0_0", has edge-label "left";
(to-node: $N_8740349522949_134531963c_1_0_0, from-node: $N_8740349522949_134531963c_1_0) isa node-link; 

match
$N_8740349522949_134531963c_1_0_0 isa operation, has hash "N_8740349522949_134531963c_1_0_0"; 

insert
$N_8740349522949_134531963c_1_0_0_0 isa variable-ssa, has hash "N_8740349522949_134531963c_1_0_0_0", has var "ebx_5", has version 6, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349522949_134531963c_1_0_0_0, from-node: $N_8740349522949_134531963c_1_0_0) isa node-link; 

match
$N_8740349522949_134531963c_1_0 isa operation, has hash "N_8740349522949_134531963c_1_0"; 

insert
$N_8740349522949_134531963c_1_0_1 isa MLIL_CONST, has hash "N_8740349522949_134531963c_1_0_1", has edge-label "right";
(to-node: $N_8740349522949_134531963c_1_0_1, from-node: $N_8740349522949_134531963c_1_0) isa node-link; 

match
$N_8740349522949_134531963c_1_0_1 isa operation, has hash "N_8740349522949_134531963c_1_0_1"; 

insert
$N_8740349522949_134531963c_1_0_1_0 isa constant, has hash "N_8740349522949_134531963c_1_0_1_0", has constant-value "31", has edge-label "constant";
(to-node: $N_8740349522949_134531963c_1_0_1_0, from-node: $N_8740349522949_134531963c_1_0_1) isa node-link; 

match
$N_8740349522949_134531963c_1 isa operation, has hash "N_8740349522949_134531963c_1"; 

insert
$N_8740349522949_134531963c_1_1 isa MLIL_LSR, has hash "N_8740349522949_134531963c_1_1", has edge-label "right";
(to-node: $N_8740349522949_134531963c_1_1, from-node: $N_8740349522949_134531963c_1) isa node-link; 

match
$N_8740349522949_134531963c_1_1 isa operation, has hash "N_8740349522949_134531963c_1_1"; 

insert
$N_8740349522949_134531963c_1_1_0 isa MLIL_VAR_SSA, has hash "N_8740349522949_134531963c_1_1_0", has edge-label "left";
(to-node: $N_8740349522949_134531963c_1_1_0, from-node: $N_8740349522949_134531963c_1_1) isa node-link; 

match
$N_8740349522949_134531963c_1_1_0 isa operation, has hash "N_8740349522949_134531963c_1_1_0"; 

insert
$N_8740349522949_134531963c_1_1_0_0 isa variable-ssa, has hash "N_8740349522949_134531963c_1_1_0_0", has var "eax_33", has version 34, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349522949_134531963c_1_1_0_0, from-node: $N_8740349522949_134531963c_1_1_0) isa node-link; 

match
$N_8740349522949_134531963c_1_1 isa operation, has hash "N_8740349522949_134531963c_1_1"; 

insert
$N_8740349522949_134531963c_1_1_1 isa MLIL_CONST, has hash "N_8740349522949_134531963c_1_1_1", has edge-label "right";
(to-node: $N_8740349522949_134531963c_1_1_1, from-node: $N_8740349522949_134531963c_1_1) isa node-link; 

match
$N_8740349522949_134531963c_1_1_1 isa operation, has hash "N_8740349522949_134531963c_1_1_1"; 

insert
$N_8740349522949_134531963c_1_1_1_0 isa constant, has hash "N_8740349522949_134531963c_1_1_1_0", has constant-value "4294967295", has edge-label "constant";
(to-node: $N_8740349522949_134531963c_1_1_1_0, from-node: $N_8740349522949_134531963c_1_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349182469_134531967c isa instruction, has hash "N_8740349182469_134531967c", has il-index 243, has asm-address "0x804cb7f", has operation-type "MLIL_STORE_SSA", has ins-text "[0x8051fe8].d = ebx_6#7 @ mem#37 -> mem#38";
(contains-instruction: $N_8740349182469_134531967c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349182469_134531967c isa instruction, has hash "N_8740349182469_134531967c"; 

insert
$N_8740349182469_134531967c_0 isa MLIL_CONST_PTR, has hash "N_8740349182469_134531967c_0", has edge-label "dest";
(to-node: $N_8740349182469_134531967c_0, from-node: $N_8740349182469_134531967c) isa node-link; 

match
$N_8740349182469_134531967c_0 isa operation, has hash "N_8740349182469_134531967c_0"; 

insert
$N_8740349182469_134531967c_0_0 isa constant, has hash "N_8740349182469_134531967c_0_0", has constant-value "134553576", has edge-label "constant";
(to-node: $N_8740349182469_134531967c_0_0, from-node: $N_8740349182469_134531967c_0) isa node-link; 

match
$N_8740349182469_134531967c isa instruction, has hash "N_8740349182469_134531967c"; 

insert
$N_8740349182469_134531967c_1 isa constant, has hash "N_8740349182469_134531967c_1", has constant-value "38", has edge-label "dest_memory";
(to-node: $N_8740349182469_134531967c_1, from-node: $N_8740349182469_134531967c) isa node-link; 

match
$N_8740349182469_134531967c isa instruction, has hash "N_8740349182469_134531967c"; 

insert
$N_8740349182469_134531967c_2 isa constant, has hash "N_8740349182469_134531967c_2", has constant-value "37", has edge-label "src_memory";
(to-node: $N_8740349182469_134531967c_2, from-node: $N_8740349182469_134531967c) isa node-link; 

match
$N_8740349182469_134531967c isa instruction, has hash "N_8740349182469_134531967c"; 

insert
$N_8740349182469_134531967c_3 isa MLIL_VAR_SSA, has hash "N_8740349182469_134531967c_3", has edge-label "src";
(to-node: $N_8740349182469_134531967c_3, from-node: $N_8740349182469_134531967c) isa node-link; 

match
$N_8740349182469_134531967c_3 isa operation, has hash "N_8740349182469_134531967c_3"; 

insert
$N_8740349182469_134531967c_3_0 isa variable-ssa, has hash "N_8740349182469_134531967c_3_0", has var "ebx_6", has version 7, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349182469_134531967c_3_0, from-node: $N_8740349182469_134531967c_3) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349123589_134531973c isa instruction, has hash "N_8740349123589_134531973c", has il-index 244, has asm-address "0x804cb85", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_34#35 = ebx_6#7";
(contains-instruction: $N_8740349123589_134531973c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349123589_134531973c isa instruction, has hash "N_8740349123589_134531973c"; 

insert
$N_8740349123589_134531973c_0 isa variable-ssa, has hash "N_8740349123589_134531973c_0", has var "eax_34", has version 35, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349123589_134531973c_0, from-node: $N_8740349123589_134531973c) isa node-link; 

match
$N_8740349123589_134531973c isa instruction, has hash "N_8740349123589_134531973c"; 

insert
$N_8740349123589_134531973c_1 isa MLIL_VAR_SSA, has hash "N_8740349123589_134531973c_1", has edge-label "src";
(to-node: $N_8740349123589_134531973c_1, from-node: $N_8740349123589_134531973c) isa node-link; 

match
$N_8740349123589_134531973c_1 isa operation, has hash "N_8740349123589_134531973c_1"; 

insert
$N_8740349123589_134531973c_1_0 isa variable-ssa, has hash "N_8740349123589_134531973c_1_0", has var "ebx_6", has version 7, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349123589_134531973c_1_0, from-node: $N_8740349123589_134531973c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349356293_134531975c isa instruction, has hash "N_8740349356293_134531975c", has il-index 245, has asm-address "0x804cb87", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_35#36 = eax_34#35 u>> 1";
(contains-instruction: $N_8740349356293_134531975c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349356293_134531975c isa instruction, has hash "N_8740349356293_134531975c"; 

insert
$N_8740349356293_134531975c_0 isa variable-ssa, has hash "N_8740349356293_134531975c_0", has var "eax_35", has version 36, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349356293_134531975c_0, from-node: $N_8740349356293_134531975c) isa node-link; 

match
$N_8740349356293_134531975c isa instruction, has hash "N_8740349356293_134531975c"; 

insert
$N_8740349356293_134531975c_1 isa MLIL_LSR, has hash "N_8740349356293_134531975c_1", has edge-label "src";
(to-node: $N_8740349356293_134531975c_1, from-node: $N_8740349356293_134531975c) isa node-link; 

match
$N_8740349356293_134531975c_1 isa operation, has hash "N_8740349356293_134531975c_1"; 

insert
$N_8740349356293_134531975c_1_0 isa MLIL_VAR_SSA, has hash "N_8740349356293_134531975c_1_0", has edge-label "left";
(to-node: $N_8740349356293_134531975c_1_0, from-node: $N_8740349356293_134531975c_1) isa node-link; 

match
$N_8740349356293_134531975c_1_0 isa operation, has hash "N_8740349356293_134531975c_1_0"; 

insert
$N_8740349356293_134531975c_1_0_0 isa variable-ssa, has hash "N_8740349356293_134531975c_1_0_0", has var "eax_34", has version 35, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349356293_134531975c_1_0_0, from-node: $N_8740349356293_134531975c_1_0) isa node-link; 

match
$N_8740349356293_134531975c_1 isa operation, has hash "N_8740349356293_134531975c_1"; 

insert
$N_8740349356293_134531975c_1_1 isa MLIL_CONST, has hash "N_8740349356293_134531975c_1_1", has edge-label "right";
(to-node: $N_8740349356293_134531975c_1_1, from-node: $N_8740349356293_134531975c_1) isa node-link; 

match
$N_8740349356293_134531975c_1_1 isa operation, has hash "N_8740349356293_134531975c_1_1"; 

insert
$N_8740349356293_134531975c_1_1_0 isa constant, has hash "N_8740349356293_134531975c_1_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8740349356293_134531975c_1_1_0, from-node: $N_8740349356293_134531975c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349291525_134531977c isa instruction, has hash "N_8740349291525_134531977c", has il-index 246, has asm-address "0x804cb89", has operation-type "MLIL_SET_VAR_SPLIT_SSA", has ins-text "edx_9#9:eax_36#37 = mulu.dp.d(eax_35#36, 0x84210843)";
(contains-instruction: $N_8740349291525_134531977c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349291525_134531977c isa instruction, has hash "N_8740349291525_134531977c"; 

insert
$N_8740349291525_134531977c_0 isa variable-ssa, has hash "N_8740349291525_134531977c_0", has var "edx_9", has version 9, has edge-label "high", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349291525_134531977c_0, from-node: $N_8740349291525_134531977c) isa node-link; 

match
$N_8740349291525_134531977c isa instruction, has hash "N_8740349291525_134531977c"; 

insert
$N_8740349291525_134531977c_1 isa variable-ssa, has hash "N_8740349291525_134531977c_1", has var "eax_36", has version 37, has edge-label "low", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349291525_134531977c_1, from-node: $N_8740349291525_134531977c) isa node-link; 

match
$N_8740349291525_134531977c isa instruction, has hash "N_8740349291525_134531977c"; 

insert
$N_8740349291525_134531977c_2 isa MLIL_MULU_DP, has hash "N_8740349291525_134531977c_2", has edge-label "src";
(to-node: $N_8740349291525_134531977c_2, from-node: $N_8740349291525_134531977c) isa node-link; 

match
$N_8740349291525_134531977c_2 isa operation, has hash "N_8740349291525_134531977c_2"; 

insert
$N_8740349291525_134531977c_2_0 isa MLIL_VAR_SSA, has hash "N_8740349291525_134531977c_2_0", has edge-label "left";
(to-node: $N_8740349291525_134531977c_2_0, from-node: $N_8740349291525_134531977c_2) isa node-link; 

match
$N_8740349291525_134531977c_2_0 isa operation, has hash "N_8740349291525_134531977c_2_0"; 

insert
$N_8740349291525_134531977c_2_0_0 isa variable-ssa, has hash "N_8740349291525_134531977c_2_0_0", has var "eax_35", has version 36, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349291525_134531977c_2_0_0, from-node: $N_8740349291525_134531977c_2_0) isa node-link; 

match
$N_8740349291525_134531977c_2 isa operation, has hash "N_8740349291525_134531977c_2"; 

insert
$N_8740349291525_134531977c_2_1 isa MLIL_CONST, has hash "N_8740349291525_134531977c_2_1", has edge-label "right";
(to-node: $N_8740349291525_134531977c_2_1, from-node: $N_8740349291525_134531977c_2) isa node-link; 

match
$N_8740349291525_134531977c_2_1 isa operation, has hash "N_8740349291525_134531977c_2_1"; 

insert
$N_8740349291525_134531977c_2_1_0 isa constant, has hash "N_8740349291525_134531977c_2_1_0", has constant-value "2216757315", has edge-label "constant";
(to-node: $N_8740349291525_134531977c_2_1_0, from-node: $N_8740349291525_134531977c_2_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348795653_134531979c isa instruction, has hash "N_8740348795653_134531979c", has il-index 247, has asm-address "0x804cb8b", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edx_4#10 = edx_9#9 u>> 4";
(contains-instruction: $N_8740348795653_134531979c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348795653_134531979c isa instruction, has hash "N_8740348795653_134531979c"; 

insert
$N_8740348795653_134531979c_0 isa variable-ssa, has hash "N_8740348795653_134531979c_0", has var "edx_4", has version 10, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348795653_134531979c_0, from-node: $N_8740348795653_134531979c) isa node-link; 

match
$N_8740348795653_134531979c isa instruction, has hash "N_8740348795653_134531979c"; 

insert
$N_8740348795653_134531979c_1 isa MLIL_LSR, has hash "N_8740348795653_134531979c_1", has edge-label "src";
(to-node: $N_8740348795653_134531979c_1, from-node: $N_8740348795653_134531979c) isa node-link; 

match
$N_8740348795653_134531979c_1 isa operation, has hash "N_8740348795653_134531979c_1"; 

insert
$N_8740348795653_134531979c_1_0 isa MLIL_VAR_SSA, has hash "N_8740348795653_134531979c_1_0", has edge-label "left";
(to-node: $N_8740348795653_134531979c_1_0, from-node: $N_8740348795653_134531979c_1) isa node-link; 

match
$N_8740348795653_134531979c_1_0 isa operation, has hash "N_8740348795653_134531979c_1_0"; 

insert
$N_8740348795653_134531979c_1_0_0 isa variable-ssa, has hash "N_8740348795653_134531979c_1_0_0", has var "edx_9", has version 9, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348795653_134531979c_1_0_0, from-node: $N_8740348795653_134531979c_1_0) isa node-link; 

match
$N_8740348795653_134531979c_1 isa operation, has hash "N_8740348795653_134531979c_1"; 

insert
$N_8740348795653_134531979c_1_1 isa MLIL_CONST, has hash "N_8740348795653_134531979c_1_1", has edge-label "right";
(to-node: $N_8740348795653_134531979c_1_1, from-node: $N_8740348795653_134531979c_1) isa node-link; 

match
$N_8740348795653_134531979c_1_1 isa operation, has hash "N_8740348795653_134531979c_1_1"; 

insert
$N_8740348795653_134531979c_1_1_0 isa constant, has hash "N_8740348795653_134531979c_1_1_0", has constant-value "4", has edge-label "constant";
(to-node: $N_8740348795653_134531979c_1_1_0, from-node: $N_8740348795653_134531979c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349274885_134531982c isa instruction, has hash "N_8740349274885_134531982c", has il-index 248, has asm-address "0x804cb8e", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_37#38 = edx_4#10 * 0x3e";
(contains-instruction: $N_8740349274885_134531982c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349274885_134531982c isa instruction, has hash "N_8740349274885_134531982c"; 

insert
$N_8740349274885_134531982c_0 isa variable-ssa, has hash "N_8740349274885_134531982c_0", has var "eax_37", has version 38, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349274885_134531982c_0, from-node: $N_8740349274885_134531982c) isa node-link; 

match
$N_8740349274885_134531982c isa instruction, has hash "N_8740349274885_134531982c"; 

insert
$N_8740349274885_134531982c_1 isa MLIL_MUL, has hash "N_8740349274885_134531982c_1", has edge-label "src";
(to-node: $N_8740349274885_134531982c_1, from-node: $N_8740349274885_134531982c) isa node-link; 

match
$N_8740349274885_134531982c_1 isa operation, has hash "N_8740349274885_134531982c_1"; 

insert
$N_8740349274885_134531982c_1_0 isa MLIL_VAR_SSA, has hash "N_8740349274885_134531982c_1_0", has edge-label "left";
(to-node: $N_8740349274885_134531982c_1_0, from-node: $N_8740349274885_134531982c_1) isa node-link; 

match
$N_8740349274885_134531982c_1_0 isa operation, has hash "N_8740349274885_134531982c_1_0"; 

insert
$N_8740349274885_134531982c_1_0_0 isa variable-ssa, has hash "N_8740349274885_134531982c_1_0_0", has var "edx_4", has version 10, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349274885_134531982c_1_0_0, from-node: $N_8740349274885_134531982c_1_0) isa node-link; 

match
$N_8740349274885_134531982c_1 isa operation, has hash "N_8740349274885_134531982c_1"; 

insert
$N_8740349274885_134531982c_1_1 isa MLIL_CONST, has hash "N_8740349274885_134531982c_1_1", has edge-label "right";
(to-node: $N_8740349274885_134531982c_1_1, from-node: $N_8740349274885_134531982c_1) isa node-link; 

match
$N_8740349274885_134531982c_1_1 isa operation, has hash "N_8740349274885_134531982c_1_1"; 

insert
$N_8740349274885_134531982c_1_1_0 isa constant, has hash "N_8740349274885_134531982c_1_1_0", has constant-value "62", has edge-label "constant";
(to-node: $N_8740349274885_134531982c_1_1_0, from-node: $N_8740349274885_134531982c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348187141_134531985c isa instruction, has hash "N_8740348187141_134531985c", has il-index 249, has asm-address "0x804cb91", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_38#39 = neg.d(eax_37#38)";
(contains-instruction: $N_8740348187141_134531985c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348187141_134531985c isa instruction, has hash "N_8740348187141_134531985c"; 

insert
$N_8740348187141_134531985c_0 isa variable-ssa, has hash "N_8740348187141_134531985c_0", has var "eax_38", has version 39, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348187141_134531985c_0, from-node: $N_8740348187141_134531985c) isa node-link; 

match
$N_8740348187141_134531985c isa instruction, has hash "N_8740348187141_134531985c"; 

insert
$N_8740348187141_134531985c_1 isa MLIL_NEG, has hash "N_8740348187141_134531985c_1", has edge-label "src";
(to-node: $N_8740348187141_134531985c_1, from-node: $N_8740348187141_134531985c) isa node-link; 

match
$N_8740348187141_134531985c_1 isa operation, has hash "N_8740348187141_134531985c_1"; 

insert
$N_8740348187141_134531985c_1_0 isa MLIL_VAR_SSA, has hash "N_8740348187141_134531985c_1_0", has edge-label "src";
(to-node: $N_8740348187141_134531985c_1_0, from-node: $N_8740348187141_134531985c_1) isa node-link; 

match
$N_8740348187141_134531985c_1_0 isa operation, has hash "N_8740348187141_134531985c_1_0"; 

insert
$N_8740348187141_134531985c_1_0_0 isa variable-ssa, has hash "N_8740348187141_134531985c_1_0_0", has var "eax_37", has version 38, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348187141_134531985c_1_0_0, from-node: $N_8740348187141_134531985c_1_0) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348893013_134531987c isa instruction, has hash "N_8740348893013_134531987c", has il-index 250, has asm-address "0x804cb93", has operation-type "MLIL_SET_VAR_SSA_FIELD", has ins-text "eax_38#40.al = [ebx_6#7 + eax_38#39 + 0x804ef00].b @ mem#38 @ eax_38#39";
(contains-instruction: $N_8740348893013_134531987c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348893013_134531987c isa instruction, has hash "N_8740348893013_134531987c"; 

insert
$N_8740348893013_134531987c_0 isa variable-ssa, has hash "N_8740348893013_134531987c_0", has var "eax_38", has version 40, has edge-label "prev", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348893013_134531987c_0, from-node: $N_8740348893013_134531987c) isa node-link; 

match
$N_8740348893013_134531987c isa instruction, has hash "N_8740348893013_134531987c"; 

insert
$N_8740348893013_134531987c_1 isa variable-ssa, has hash "N_8740348893013_134531987c_1", has var "eax_38", has version 39, has edge-label "offset", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348893013_134531987c_1, from-node: $N_8740348893013_134531987c) isa node-link; 

match
$N_8740348893013_134531987c isa instruction, has hash "N_8740348893013_134531987c"; 

insert
$N_8740348893013_134531987c_2 isa constant, has hash "N_8740348893013_134531987c_2", has constant-value "0", has edge-label "src";
(to-node: $N_8740348893013_134531987c_2, from-node: $N_8740348893013_134531987c) isa node-link; 

match
$N_8740348893013_134531987c isa instruction, has hash "N_8740348893013_134531987c"; 

insert
$N_8740348893013_134531987c_3 isa MLIL_LOAD_SSA, has hash "N_8740348893013_134531987c_3", has edge-label "unimplemented";
(to-node: $N_8740348893013_134531987c_3, from-node: $N_8740348893013_134531987c) isa node-link; 

match
$N_8740348893013_134531987c_3 isa operation, has hash "N_8740348893013_134531987c_3"; 

insert
$N_8740348893013_134531987c_3_0 isa MLIL_ADD, has hash "N_8740348893013_134531987c_3_0", has edge-label "src";
(to-node: $N_8740348893013_134531987c_3_0, from-node: $N_8740348893013_134531987c_3) isa node-link; 

match
$N_8740348893013_134531987c_3_0 isa operation, has hash "N_8740348893013_134531987c_3_0"; 

insert
$N_8740348893013_134531987c_3_0_0 isa MLIL_ADD, has hash "N_8740348893013_134531987c_3_0_0", has edge-label "left";
(to-node: $N_8740348893013_134531987c_3_0_0, from-node: $N_8740348893013_134531987c_3_0) isa node-link; 

match
$N_8740348893013_134531987c_3_0_0 isa operation, has hash "N_8740348893013_134531987c_3_0_0"; 

insert
$N_8740348893013_134531987c_3_0_0_0 isa MLIL_VAR_SSA, has hash "N_8740348893013_134531987c_3_0_0_0", has edge-label "left";
(to-node: $N_8740348893013_134531987c_3_0_0_0, from-node: $N_8740348893013_134531987c_3_0_0) isa node-link; 

match
$N_8740348893013_134531987c_3_0_0_0 isa operation, has hash "N_8740348893013_134531987c_3_0_0_0"; 

insert
$N_8740348893013_134531987c_3_0_0_0_0 isa variable-ssa, has hash "N_8740348893013_134531987c_3_0_0_0_0", has var "ebx_6", has version 7, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348893013_134531987c_3_0_0_0_0, from-node: $N_8740348893013_134531987c_3_0_0_0) isa node-link; 

match
$N_8740348893013_134531987c_3_0_0 isa operation, has hash "N_8740348893013_134531987c_3_0_0"; 

insert
$N_8740348893013_134531987c_3_0_0_1 isa MLIL_VAR_SSA, has hash "N_8740348893013_134531987c_3_0_0_1", has edge-label "right";
(to-node: $N_8740348893013_134531987c_3_0_0_1, from-node: $N_8740348893013_134531987c_3_0_0) isa node-link; 

match
$N_8740348893013_134531987c_3_0_0_1 isa operation, has hash "N_8740348893013_134531987c_3_0_0_1"; 

insert
$N_8740348893013_134531987c_3_0_0_1_0 isa variable-ssa, has hash "N_8740348893013_134531987c_3_0_0_1_0", has var "eax_38", has version 39, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348893013_134531987c_3_0_0_1_0, from-node: $N_8740348893013_134531987c_3_0_0_1) isa node-link; 

match
$N_8740348893013_134531987c_3_0 isa operation, has hash "N_8740348893013_134531987c_3_0"; 

insert
$N_8740348893013_134531987c_3_0_1 isa MLIL_CONST, has hash "N_8740348893013_134531987c_3_0_1", has edge-label "right";
(to-node: $N_8740348893013_134531987c_3_0_1, from-node: $N_8740348893013_134531987c_3_0) isa node-link; 

match
$N_8740348893013_134531987c_3_0_1 isa operation, has hash "N_8740348893013_134531987c_3_0_1"; 

insert
$N_8740348893013_134531987c_3_0_1_0 isa constant, has hash "N_8740348893013_134531987c_3_0_1_0", has constant-value "134541056", has edge-label "constant";
(to-node: $N_8740348893013_134531987c_3_0_1_0, from-node: $N_8740348893013_134531987c_3_0_1) isa node-link; 

match
$N_8740348893013_134531987c_3 isa operation, has hash "N_8740348893013_134531987c_3"; 

insert
$N_8740348893013_134531987c_3_1 isa constant, has hash "N_8740348893013_134531987c_3_1", has constant-value "38", has edge-label "src_memory";
(to-node: $N_8740348893013_134531987c_3_1, from-node: $N_8740348893013_134531987c_3) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348801381_134531994c isa instruction, has hash "N_8740348801381_134531994c", has il-index 251, has asm-address "0x804cb9a", has operation-type "MLIL_STORE_SSA", has ins-text "[ecx_1#1 + esi_3#23].b = eax_38#40.al @ mem#38 -> mem#39";
(contains-instruction: $N_8740348801381_134531994c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348801381_134531994c isa instruction, has hash "N_8740348801381_134531994c"; 

insert
$N_8740348801381_134531994c_0 isa MLIL_ADD, has hash "N_8740348801381_134531994c_0", has edge-label "dest";
(to-node: $N_8740348801381_134531994c_0, from-node: $N_8740348801381_134531994c) isa node-link; 

match
$N_8740348801381_134531994c_0 isa operation, has hash "N_8740348801381_134531994c_0"; 

insert
$N_8740348801381_134531994c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348801381_134531994c_0_0", has edge-label "left";
(to-node: $N_8740348801381_134531994c_0_0, from-node: $N_8740348801381_134531994c_0) isa node-link; 

match
$N_8740348801381_134531994c_0_0 isa operation, has hash "N_8740348801381_134531994c_0_0"; 

insert
$N_8740348801381_134531994c_0_0_0 isa variable-ssa, has hash "N_8740348801381_134531994c_0_0_0", has var "ecx_1", has version 1, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348801381_134531994c_0_0_0, from-node: $N_8740348801381_134531994c_0_0) isa node-link; 

match
$N_8740348801381_134531994c_0 isa operation, has hash "N_8740348801381_134531994c_0"; 

insert
$N_8740348801381_134531994c_0_1 isa MLIL_VAR_SSA, has hash "N_8740348801381_134531994c_0_1", has edge-label "right";
(to-node: $N_8740348801381_134531994c_0_1, from-node: $N_8740348801381_134531994c_0) isa node-link; 

match
$N_8740348801381_134531994c_0_1 isa operation, has hash "N_8740348801381_134531994c_0_1"; 

insert
$N_8740348801381_134531994c_0_1_0 isa variable-ssa, has hash "N_8740348801381_134531994c_0_1_0", has var "esi_3", has version 23, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348801381_134531994c_0_1_0, from-node: $N_8740348801381_134531994c_0_1) isa node-link; 

match
$N_8740348801381_134531994c isa instruction, has hash "N_8740348801381_134531994c"; 

insert
$N_8740348801381_134531994c_1 isa constant, has hash "N_8740348801381_134531994c_1", has constant-value "39", has edge-label "dest_memory";
(to-node: $N_8740348801381_134531994c_1, from-node: $N_8740348801381_134531994c) isa node-link; 

match
$N_8740348801381_134531994c isa instruction, has hash "N_8740348801381_134531994c"; 

insert
$N_8740348801381_134531994c_2 isa constant, has hash "N_8740348801381_134531994c_2", has constant-value "38", has edge-label "src_memory";
(to-node: $N_8740348801381_134531994c_2, from-node: $N_8740348801381_134531994c) isa node-link; 

match
$N_8740348801381_134531994c isa instruction, has hash "N_8740348801381_134531994c"; 

insert
$N_8740348801381_134531994c_3 isa MLIL_VAR_SSA_FIELD, has hash "N_8740348801381_134531994c_3", has edge-label "src";
(to-node: $N_8740348801381_134531994c_3, from-node: $N_8740348801381_134531994c) isa node-link; 

match
$N_8740348801381_134531994c_3 isa operation, has hash "N_8740348801381_134531994c_3"; 

insert
$N_8740348801381_134531994c_3_0 isa variable-ssa, has hash "N_8740348801381_134531994c_3_0", has var "eax_38", has version 40, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348801381_134531994c_3_0, from-node: $N_8740348801381_134531994c_3) isa node-link; 

match
$N_8740348801381_134531994c_3 isa operation, has hash "N_8740348801381_134531994c_3"; 

insert
$N_8740348801381_134531994c_3_1 isa constant, has hash "N_8740348801381_134531994c_3_1", has constant-value "0", has edge-label "offset";
(to-node: $N_8740348801381_134531994c_3_1, from-node: $N_8740348801381_134531994c_3) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348132217_134531997c isa instruction, has hash "N_8740348132217_134531997c", has il-index 252, has asm-address "0x804cb9d", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi_3#24 = esi_3#23 + 1";
(contains-instruction: $N_8740348132217_134531997c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348132217_134531997c isa instruction, has hash "N_8740348132217_134531997c"; 

insert
$N_8740348132217_134531997c_0 isa variable-ssa, has hash "N_8740348132217_134531997c_0", has var "esi_3", has version 24, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348132217_134531997c_0, from-node: $N_8740348132217_134531997c) isa node-link; 

match
$N_8740348132217_134531997c isa instruction, has hash "N_8740348132217_134531997c"; 

insert
$N_8740348132217_134531997c_1 isa MLIL_ADD, has hash "N_8740348132217_134531997c_1", has edge-label "src";
(to-node: $N_8740348132217_134531997c_1, from-node: $N_8740348132217_134531997c) isa node-link; 

match
$N_8740348132217_134531997c_1 isa operation, has hash "N_8740348132217_134531997c_1"; 

insert
$N_8740348132217_134531997c_1_0 isa MLIL_VAR_SSA, has hash "N_8740348132217_134531997c_1_0", has edge-label "left";
(to-node: $N_8740348132217_134531997c_1_0, from-node: $N_8740348132217_134531997c_1) isa node-link; 

match
$N_8740348132217_134531997c_1_0 isa operation, has hash "N_8740348132217_134531997c_1_0"; 

insert
$N_8740348132217_134531997c_1_0_0 isa variable-ssa, has hash "N_8740348132217_134531997c_1_0_0", has var "esi_3", has version 23, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348132217_134531997c_1_0_0, from-node: $N_8740348132217_134531997c_1_0) isa node-link; 

match
$N_8740348132217_134531997c_1 isa operation, has hash "N_8740348132217_134531997c_1"; 

insert
$N_8740348132217_134531997c_1_1 isa MLIL_CONST, has hash "N_8740348132217_134531997c_1_1", has edge-label "right";
(to-node: $N_8740348132217_134531997c_1_1, from-node: $N_8740348132217_134531997c_1) isa node-link; 

match
$N_8740348132217_134531997c_1_1 isa operation, has hash "N_8740348132217_134531997c_1_1"; 

insert
$N_8740348132217_134531997c_1_1_0 isa constant, has hash "N_8740348132217_134531997c_1_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8740348132217_134531997c_1_1_0, from-node: $N_8740348132217_134531997c_1_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 226, has bb-end 253; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349181701_134532001c isa instruction, has hash "N_8740349181701_134532001c", has il-index 253, has asm-address "0x804cba1", has operation-type "MLIL_IF", has ins-text "if (esi_3#24 != 0x20) then 272 @ 0x0 else 273 @ 0x804cba3";
(contains-instruction: $N_8740349181701_134532001c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349181701_134532001c isa instruction, has hash "N_8740349181701_134532001c"; 

insert
$N_8740349181701_134532001c_0 isa MLIL_CMP_NE, has hash "N_8740349181701_134532001c_0", has edge-label "condition";
(to-node: $N_8740349181701_134532001c_0, from-node: $N_8740349181701_134532001c) isa node-link; 

match
$N_8740349181701_134532001c_0 isa operation, has hash "N_8740349181701_134532001c_0"; 

insert
$N_8740349181701_134532001c_0_0 isa MLIL_VAR_SSA, has hash "N_8740349181701_134532001c_0_0", has edge-label "left";
(to-node: $N_8740349181701_134532001c_0_0, from-node: $N_8740349181701_134532001c_0) isa node-link; 

match
$N_8740349181701_134532001c_0_0 isa operation, has hash "N_8740349181701_134532001c_0_0"; 

insert
$N_8740349181701_134532001c_0_0_0 isa variable-ssa, has hash "N_8740349181701_134532001c_0_0_0", has var "esi_3", has version 24, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349181701_134532001c_0_0_0, from-node: $N_8740349181701_134532001c_0_0) isa node-link; 

match
$N_8740349181701_134532001c_0 isa operation, has hash "N_8740349181701_134532001c_0"; 

insert
$N_8740349181701_134532001c_0_1 isa MLIL_CONST, has hash "N_8740349181701_134532001c_0_1", has edge-label "right";
(to-node: $N_8740349181701_134532001c_0_1, from-node: $N_8740349181701_134532001c_0) isa node-link; 

match
$N_8740349181701_134532001c_0_1 isa operation, has hash "N_8740349181701_134532001c_0_1"; 

insert
$N_8740349181701_134532001c_0_1_0 isa constant, has hash "N_8740349181701_134532001c_0_1_0", has constant-value "32", has edge-label "constant";
(to-node: $N_8740349181701_134532001c_0_1_0, from-node: $N_8740349181701_134532001c_0_1) isa node-link; 

match
$N_8740349181701_134532001c isa instruction, has hash "N_8740349181701_134532001c"; 

insert
$N_8740349181701_134532001c_1 isa constant, has hash "N_8740349181701_134532001c_1", has constant-value "272", has edge-label "true";
(to-node: $N_8740349181701_134532001c_1, from-node: $N_8740349181701_134532001c) isa node-link; 

match
$N_8740349181701_134532001c isa instruction, has hash "N_8740349181701_134532001c"; 

insert
$N_8740349181701_134532001c_2 isa constant, has hash "N_8740349181701_134532001c_2", has constant-value "273", has edge-label "false";
(to-node: $N_8740349181701_134532001c_2, from-node: $N_8740349181701_134532001c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348109829_134532041c isa instruction, has hash "N_8740348109829_134532041c", has il-index 255, has asm-address "0x804cbc9", has operation-type "MLIL_VAR_PHI", has ins-text "var_1a8_3#7 = ϕ(var_1a8_5#4, var_1a8_3#6)";
(contains-instruction: $N_8740348109829_134532041c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348109829_134532041c isa instruction, has hash "N_8740348109829_134532041c"; 

insert
$N_8740348109829_134532041c_0 isa variable-ssa, has hash "N_8740348109829_134532041c_0", has var "var_1a8_3", has version 7, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348109829_134532041c_0, from-node: $N_8740348109829_134532041c) isa node-link; 

match
$N_8740348109829_134532041c isa instruction, has hash "N_8740348109829_134532041c"; 

insert
$L_8740348109829_134532041c_1 isa list, has hash "L_8740348109829_134532041c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348109829_134532041c_1, from-node: $N_8740348109829_134532041c) isa node-link; 

match
$L_8740348109829_134532041c_1 isa list, has hash "L_8740348109829_134532041c_1"; 

insert
$N_8740348109829_134532041c_1_0 isa variable-ssa, has hash "N_8740348109829_134532041c_1_0", has var "var_1a8_5", has version 4, has edge-label "0", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348109829_134532041c_1_0, from-node: $L_8740348109829_134532041c_1) isa node-link; 

match
$L_8740348109829_134532041c_1 isa list, has hash "L_8740348109829_134532041c_1"; 

insert
$N_8740348109829_134532041c_1_1 isa variable-ssa, has hash "N_8740348109829_134532041c_1_1", has var "var_1a8_3", has version 6, has edge-label "1", has var-type "void*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348109829_134532041c_1_1, from-node: $L_8740348109829_134532041c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348215709_134532041c isa instruction, has hash "N_8740348215709_134532041c", has il-index 265, has asm-address "0x804cbc9", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_42#53 = var_194 @ mem#45";
(contains-instruction: $N_8740348215709_134532041c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348215709_134532041c isa instruction, has hash "N_8740348215709_134532041c"; 

insert
$N_8740348215709_134532041c_0 isa variable-ssa, has hash "N_8740348215709_134532041c_0", has var "eax_42", has version 53, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348215709_134532041c_0, from-node: $N_8740348215709_134532041c) isa node-link; 

match
$N_8740348215709_134532041c isa instruction, has hash "N_8740348215709_134532041c"; 

insert
$N_8740348215709_134532041c_1 isa MLIL_VAR_ALIASED, has hash "N_8740348215709_134532041c_1", has edge-label "src";
(to-node: $N_8740348215709_134532041c_1, from-node: $N_8740348215709_134532041c) isa node-link; 

match
$N_8740348215709_134532041c_1 isa operation, has hash "N_8740348215709_134532041c_1"; 

insert
$N_8740348215709_134532041c_1_0 isa variable-ssa, has hash "N_8740348215709_134532041c_1_0", has var "var_194", has version 45, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348215709_134532041c_1_0, from-node: $N_8740348215709_134532041c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348217861_134532041c isa instruction, has hash "N_8740348217861_134532041c", has il-index 264, has asm-address "0x804cbc9", has operation-type "MLIL_MEM_PHI", has ins-text "mem#45 = ϕ(mem#40, mem#44)";
(contains-instruction: $N_8740348217861_134532041c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348217861_134532041c isa instruction, has hash "N_8740348217861_134532041c"; 

insert
$N_8740348217861_134532041c_0 isa constant, has hash "N_8740348217861_134532041c_0", has constant-value "45", has edge-label "dest_memory";
(to-node: $N_8740348217861_134532041c_0, from-node: $N_8740348217861_134532041c) isa node-link; 

match
$N_8740348217861_134532041c isa instruction, has hash "N_8740348217861_134532041c"; 

insert
$L_8740348217861_134532041c_1 isa list, has hash "L_8740348217861_134532041c_1", has list-size 2, has edge-label "src_memory";
(to-node: $L_8740348217861_134532041c_1, from-node: $N_8740348217861_134532041c) isa node-link; 

match
$L_8740348217861_134532041c_1 isa list, has hash "L_8740348217861_134532041c_1"; 

insert
$N_8740348217861_134532041c_1_0 isa constant, has hash "N_8740348217861_134532041c_1_0", has constant-value "40", has edge-label "0";
(to-node: $N_8740348217861_134532041c_1_0, from-node: $L_8740348217861_134532041c_1) isa node-link; 

match
$L_8740348217861_134532041c_1 isa list, has hash "L_8740348217861_134532041c_1"; 

insert
$N_8740348217861_134532041c_1_1 isa constant, has hash "N_8740348217861_134532041c_1_1", has constant-value "44", has edge-label "1";
(to-node: $N_8740348217861_134532041c_1_1, from-node: $L_8740348217861_134532041c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348278789_134532041c isa instruction, has hash "N_8740348278789_134532041c", has il-index 258, has asm-address "0x804cbc9", has operation-type "MLIL_VAR_PHI", has ins-text "edx_4#13 = ϕ(edx_4#10, edx_4#12)";
(contains-instruction: $N_8740348278789_134532041c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348278789_134532041c isa instruction, has hash "N_8740348278789_134532041c"; 

insert
$N_8740348278789_134532041c_0 isa variable-ssa, has hash "N_8740348278789_134532041c_0", has var "edx_4", has version 13, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348278789_134532041c_0, from-node: $N_8740348278789_134532041c) isa node-link; 

match
$N_8740348278789_134532041c isa instruction, has hash "N_8740348278789_134532041c"; 

insert
$L_8740348278789_134532041c_1 isa list, has hash "L_8740348278789_134532041c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348278789_134532041c_1, from-node: $N_8740348278789_134532041c) isa node-link; 

match
$L_8740348278789_134532041c_1 isa list, has hash "L_8740348278789_134532041c_1"; 

insert
$N_8740348278789_134532041c_1_0 isa variable-ssa, has hash "N_8740348278789_134532041c_1_0", has var "edx_4", has version 10, has edge-label "0", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348278789_134532041c_1_0, from-node: $L_8740348278789_134532041c_1) isa node-link; 

match
$L_8740348278789_134532041c_1 isa list, has hash "L_8740348278789_134532041c_1"; 

insert
$N_8740348278789_134532041c_1_1 isa variable-ssa, has hash "N_8740348278789_134532041c_1_1", has var "edx_4", has version 12, has edge-label "1", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348278789_134532041c_1_1, from-node: $L_8740348278789_134532041c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348285189_134532041c isa instruction, has hash "N_8740348285189_134532041c", has il-index 259, has asm-address "0x804cbc9", has operation-type "MLIL_VAR_PHI", has ins-text "ebx_6#8 = ϕ(ebx#0, ebx_6#7)";
(contains-instruction: $N_8740348285189_134532041c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348285189_134532041c isa instruction, has hash "N_8740348285189_134532041c"; 

insert
$N_8740348285189_134532041c_0 isa variable-ssa, has hash "N_8740348285189_134532041c_0", has var "ebx_6", has version 8, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348285189_134532041c_0, from-node: $N_8740348285189_134532041c) isa node-link; 

match
$N_8740348285189_134532041c isa instruction, has hash "N_8740348285189_134532041c"; 

insert
$L_8740348285189_134532041c_1 isa list, has hash "L_8740348285189_134532041c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348285189_134532041c_1, from-node: $N_8740348285189_134532041c) isa node-link; 

match
$L_8740348285189_134532041c_1 isa list, has hash "L_8740348285189_134532041c_1"; 

insert
$N_8740348285189_134532041c_1_0 isa variable-ssa, has hash "N_8740348285189_134532041c_1_0", has var "ebx", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348285189_134532041c_1_0, from-node: $L_8740348285189_134532041c_1) isa node-link; 

match
$L_8740348285189_134532041c_1 isa list, has hash "L_8740348285189_134532041c_1"; 

insert
$N_8740348285189_134532041c_1_1 isa variable-ssa, has hash "N_8740348285189_134532041c_1_1", has var "ebx_6", has version 7, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348285189_134532041c_1_1, from-node: $L_8740348285189_134532041c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348288017_134532041c isa instruction, has hash "N_8740348288017_134532041c", has il-index 260, has asm-address "0x804cbc9", has operation-type "MLIL_VAR_PHI", has ins-text "ebp_2#9 = ϕ(ebp_4#4, ebp_2#8)";
(contains-instruction: $N_8740348288017_134532041c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348288017_134532041c isa instruction, has hash "N_8740348288017_134532041c"; 

insert
$N_8740348288017_134532041c_0 isa variable-ssa, has hash "N_8740348288017_134532041c_0", has var "ebp_2", has version 9, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348288017_134532041c_0, from-node: $N_8740348288017_134532041c) isa node-link; 

match
$N_8740348288017_134532041c isa instruction, has hash "N_8740348288017_134532041c"; 

insert
$L_8740348288017_134532041c_1 isa list, has hash "L_8740348288017_134532041c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348288017_134532041c_1, from-node: $N_8740348288017_134532041c) isa node-link; 

match
$L_8740348288017_134532041c_1 isa list, has hash "L_8740348288017_134532041c_1"; 

insert
$N_8740348288017_134532041c_1_0 isa variable-ssa, has hash "N_8740348288017_134532041c_1_0", has var "ebp_4", has version 4, has edge-label "0", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348288017_134532041c_1_0, from-node: $L_8740348288017_134532041c_1) isa node-link; 

match
$L_8740348288017_134532041c_1 isa list, has hash "L_8740348288017_134532041c_1"; 

insert
$N_8740348288017_134532041c_1_1 isa variable-ssa, has hash "N_8740348288017_134532041c_1_1", has var "ebp_2", has version 8, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348288017_134532041c_1_1, from-node: $L_8740348288017_134532041c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348336901_134532041c isa instruction, has hash "N_8740348336901_134532041c", has il-index 254, has asm-address "0x804cbc9", has operation-type "MLIL_VAR_PHI", has ins-text "var_1ac_13#25 = ϕ(var_1ac_18#22, var_1ac_13#24)";
(contains-instruction: $N_8740348336901_134532041c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348336901_134532041c isa instruction, has hash "N_8740348336901_134532041c"; 

insert
$N_8740348336901_134532041c_0 isa variable-ssa, has hash "N_8740348336901_134532041c_0", has var "var_1ac_13", has version 25, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348336901_134532041c_0, from-node: $N_8740348336901_134532041c) isa node-link; 

match
$N_8740348336901_134532041c isa instruction, has hash "N_8740348336901_134532041c"; 

insert
$L_8740348336901_134532041c_1 isa list, has hash "L_8740348336901_134532041c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348336901_134532041c_1, from-node: $N_8740348336901_134532041c) isa node-link; 

match
$L_8740348336901_134532041c_1 isa list, has hash "L_8740348336901_134532041c_1"; 

insert
$N_8740348336901_134532041c_1_0 isa variable-ssa, has hash "N_8740348336901_134532041c_1_0", has var "var_1ac_18", has version 22, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348336901_134532041c_1_0, from-node: $L_8740348336901_134532041c_1) isa node-link; 

match
$L_8740348336901_134532041c_1 isa list, has hash "L_8740348336901_134532041c_1"; 

insert
$N_8740348336901_134532041c_1_1 isa variable-ssa, has hash "N_8740348336901_134532041c_1_1", has var "var_1ac_13", has version 24, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348336901_134532041c_1_1, from-node: $L_8740348336901_134532041c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348378629_134532041c isa instruction, has hash "N_8740348378629_134532041c", has il-index 261, has asm-address "0x804cbc9", has operation-type "MLIL_VAR_PHI", has ins-text "esi#26 = ϕ(esi_3#24, esi#25)";
(contains-instruction: $N_8740348378629_134532041c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348378629_134532041c isa instruction, has hash "N_8740348378629_134532041c"; 

insert
$N_8740348378629_134532041c_0 isa variable-ssa, has hash "N_8740348378629_134532041c_0", has var "esi", has version 26, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348378629_134532041c_0, from-node: $N_8740348378629_134532041c) isa node-link; 

match
$N_8740348378629_134532041c isa instruction, has hash "N_8740348378629_134532041c"; 

insert
$L_8740348378629_134532041c_1 isa list, has hash "L_8740348378629_134532041c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348378629_134532041c_1, from-node: $N_8740348378629_134532041c) isa node-link; 

match
$L_8740348378629_134532041c_1 isa list, has hash "L_8740348378629_134532041c_1"; 

insert
$N_8740348378629_134532041c_1_0 isa variable-ssa, has hash "N_8740348378629_134532041c_1_0", has var "esi_3", has version 24, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348378629_134532041c_1_0, from-node: $L_8740348378629_134532041c_1) isa node-link; 

match
$L_8740348378629_134532041c_1 isa list, has hash "L_8740348378629_134532041c_1"; 

insert
$N_8740348378629_134532041c_1_1 isa variable-ssa, has hash "N_8740348378629_134532041c_1_1", has var "esi", has version 25, has edge-label "1", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348378629_134532041c_1_1, from-node: $L_8740348378629_134532041c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348935429_134532041c isa instruction, has hash "N_8740348935429_134532041c", has il-index 263, has asm-address "0x804cbc9", has operation-type "MLIL_VAR_PHI", has ins-text "cond:0_1#2 = ϕ(cond:0#0, cond:0_1#1)";
(contains-instruction: $N_8740348935429_134532041c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348935429_134532041c isa instruction, has hash "N_8740348935429_134532041c"; 

insert
$N_8740348935429_134532041c_0 isa variable-ssa, has hash "N_8740348935429_134532041c_0", has var "cond:0_1", has version 2, has edge-label "dest", has var-type "bool", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348935429_134532041c_0, from-node: $N_8740348935429_134532041c) isa node-link; 

match
$N_8740348935429_134532041c isa instruction, has hash "N_8740348935429_134532041c"; 

insert
$L_8740348935429_134532041c_1 isa list, has hash "L_8740348935429_134532041c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348935429_134532041c_1, from-node: $N_8740348935429_134532041c) isa node-link; 

match
$L_8740348935429_134532041c_1 isa list, has hash "L_8740348935429_134532041c_1"; 

insert
$N_8740348935429_134532041c_1_0 isa variable-ssa, has hash "N_8740348935429_134532041c_1_0", has var "cond:0", has version 0, has edge-label "0", has var-type "bool", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348935429_134532041c_1_0, from-node: $L_8740348935429_134532041c_1) isa node-link; 

match
$L_8740348935429_134532041c_1 isa list, has hash "L_8740348935429_134532041c_1"; 

insert
$N_8740348935429_134532041c_1_1 isa variable-ssa, has hash "N_8740348935429_134532041c_1_1", has var "cond:0_1", has version 1, has edge-label "1", has var-type "bool", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348935429_134532041c_1_1, from-node: $L_8740348935429_134532041c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348949509_134532041c isa instruction, has hash "N_8740348949509_134532041c", has il-index 262, has asm-address "0x804cbc9", has operation-type "MLIL_VAR_PHI", has ins-text "edi#11 = ϕ(edi#8, edi#10)";
(contains-instruction: $N_8740348949509_134532041c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348949509_134532041c isa instruction, has hash "N_8740348949509_134532041c"; 

insert
$N_8740348949509_134532041c_0 isa variable-ssa, has hash "N_8740348949509_134532041c_0", has var "edi", has version 11, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348949509_134532041c_0, from-node: $N_8740348949509_134532041c) isa node-link; 

match
$N_8740348949509_134532041c isa instruction, has hash "N_8740348949509_134532041c"; 

insert
$L_8740348949509_134532041c_1 isa list, has hash "L_8740348949509_134532041c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348949509_134532041c_1, from-node: $N_8740348949509_134532041c) isa node-link; 

match
$L_8740348949509_134532041c_1 isa list, has hash "L_8740348949509_134532041c_1"; 

insert
$N_8740348949509_134532041c_1_0 isa variable-ssa, has hash "N_8740348949509_134532041c_1_0", has var "edi", has version 8, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348949509_134532041c_1_0, from-node: $L_8740348949509_134532041c_1) isa node-link; 

match
$L_8740348949509_134532041c_1 isa list, has hash "L_8740348949509_134532041c_1"; 

insert
$N_8740348949509_134532041c_1_1 isa variable-ssa, has hash "N_8740348949509_134532041c_1_1", has var "edi", has version 10, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348949509_134532041c_1_1, from-node: $L_8740348949509_134532041c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349360901_134532041c isa instruction, has hash "N_8740349360901_134532041c", has il-index 256, has asm-address "0x804cbc9", has operation-type "MLIL_VAR_PHI", has ins-text "eax_24#52 = ϕ(eax_39#41, eax_24#51)";
(contains-instruction: $N_8740349360901_134532041c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349360901_134532041c isa instruction, has hash "N_8740349360901_134532041c"; 

insert
$N_8740349360901_134532041c_0 isa variable-ssa, has hash "N_8740349360901_134532041c_0", has var "eax_24", has version 52, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349360901_134532041c_0, from-node: $N_8740349360901_134532041c) isa node-link; 

match
$N_8740349360901_134532041c isa instruction, has hash "N_8740349360901_134532041c"; 

insert
$L_8740349360901_134532041c_1 isa list, has hash "L_8740349360901_134532041c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349360901_134532041c_1, from-node: $N_8740349360901_134532041c) isa node-link; 

match
$L_8740349360901_134532041c_1 isa list, has hash "L_8740349360901_134532041c_1"; 

insert
$N_8740349360901_134532041c_1_0 isa variable-ssa, has hash "N_8740349360901_134532041c_1_0", has var "eax_39", has version 41, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349360901_134532041c_1_0, from-node: $L_8740349360901_134532041c_1) isa node-link; 

match
$L_8740349360901_134532041c_1 isa list, has hash "L_8740349360901_134532041c_1"; 

insert
$N_8740349360901_134532041c_1_1 isa variable-ssa, has hash "N_8740349360901_134532041c_1_1", has var "eax_24", has version 51, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349360901_134532041c_1_1, from-node: $L_8740349360901_134532041c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349363577_134532041c isa instruction, has hash "N_8740349363577_134532041c", has il-index 257, has asm-address "0x804cbc9", has operation-type "MLIL_VAR_PHI", has ins-text "ecx_1#2 = ϕ(ecx#0, ecx_1#1)";
(contains-instruction: $N_8740349363577_134532041c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349363577_134532041c isa instruction, has hash "N_8740349363577_134532041c"; 

insert
$N_8740349363577_134532041c_0 isa variable-ssa, has hash "N_8740349363577_134532041c_0", has var "ecx_1", has version 2, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349363577_134532041c_0, from-node: $N_8740349363577_134532041c) isa node-link; 

match
$N_8740349363577_134532041c isa instruction, has hash "N_8740349363577_134532041c"; 

insert
$L_8740349363577_134532041c_1 isa list, has hash "L_8740349363577_134532041c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349363577_134532041c_1, from-node: $N_8740349363577_134532041c) isa node-link; 

match
$L_8740349363577_134532041c_1 isa list, has hash "L_8740349363577_134532041c_1"; 

insert
$N_8740349363577_134532041c_1_0 isa variable-ssa, has hash "N_8740349363577_134532041c_1_0", has var "ecx", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349363577_134532041c_1_0, from-node: $L_8740349363577_134532041c_1) isa node-link; 

match
$L_8740349363577_134532041c_1 isa list, has hash "L_8740349363577_134532041c_1"; 

insert
$N_8740349363577_134532041c_1_1 isa variable-ssa, has hash "N_8740349363577_134532041c_1_1", has var "ecx_1", has version 1, has edge-label "1", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349363577_134532041c_1_1, from-node: $L_8740349363577_134532041c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349688837_134532045c isa instruction, has hash "N_8740349688837_134532045c", has il-index 266, has asm-address "0x804cbcd", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1a8_6#8 = eax_42#53";
(contains-instruction: $N_8740349688837_134532045c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349688837_134532045c isa instruction, has hash "N_8740349688837_134532045c"; 

insert
$N_8740349688837_134532045c_0 isa variable-ssa, has hash "N_8740349688837_134532045c_0", has var "var_1a8_6", has version 8, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349688837_134532045c_0, from-node: $N_8740349688837_134532045c) isa node-link; 

match
$N_8740349688837_134532045c isa instruction, has hash "N_8740349688837_134532045c"; 

insert
$N_8740349688837_134532045c_1 isa MLIL_VAR_SSA, has hash "N_8740349688837_134532045c_1", has edge-label "src";
(to-node: $N_8740349688837_134532045c_1, from-node: $N_8740349688837_134532045c) isa node-link; 

match
$N_8740349688837_134532045c_1 isa operation, has hash "N_8740349688837_134532045c_1"; 

insert
$N_8740349688837_134532045c_1_0 isa variable-ssa, has hash "N_8740349688837_134532045c_1_0", has var "eax_42", has version 53, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349688837_134532045c_1_0, from-node: $N_8740349688837_134532045c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349674069_134532049c isa instruction, has hash "N_8740349674069_134532049c", has il-index 267, has asm-address "0x804cbd1", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ebx_7#9 = arg1#0";
(contains-instruction: $N_8740349674069_134532049c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349674069_134532049c isa instruction, has hash "N_8740349674069_134532049c"; 

insert
$N_8740349674069_134532049c_0 isa variable-ssa, has hash "N_8740349674069_134532049c_0", has var "ebx_7", has version 9, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349674069_134532049c_0, from-node: $N_8740349674069_134532049c) isa node-link; 

match
$N_8740349674069_134532049c isa instruction, has hash "N_8740349674069_134532049c"; 

insert
$N_8740349674069_134532049c_1 isa MLIL_VAR_SSA, has hash "N_8740349674069_134532049c_1", has edge-label "src";
(to-node: $N_8740349674069_134532049c_1, from-node: $N_8740349674069_134532049c) isa node-link; 

match
$N_8740349674069_134532049c_1 isa operation, has hash "N_8740349674069_134532049c_1"; 

insert
$N_8740349674069_134532049c_1_0 isa variable-ssa, has hash "N_8740349674069_134532049c_1_0", has var "arg1", has version 0, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349674069_134532049c_1_0, from-node: $N_8740349674069_134532049c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348719365_134532056c isa instruction, has hash "N_8740348719365_134532056c", has il-index 268, has asm-address "0x804cbd8", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_19#26 = ebx_7#9";
(contains-instruction: $N_8740348719365_134532056c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348719365_134532056c isa instruction, has hash "N_8740348719365_134532056c"; 

insert
$N_8740348719365_134532056c_0 isa variable-ssa, has hash "N_8740348719365_134532056c_0", has var "var_1ac_19", has version 26, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348719365_134532056c_0, from-node: $N_8740348719365_134532056c) isa node-link; 

match
$N_8740348719365_134532056c isa instruction, has hash "N_8740348719365_134532056c"; 

insert
$N_8740348719365_134532056c_1 isa MLIL_VAR_SSA, has hash "N_8740348719365_134532056c_1", has edge-label "src";
(to-node: $N_8740348719365_134532056c_1, from-node: $N_8740348719365_134532056c) isa node-link; 

match
$N_8740348719365_134532056c_1 isa operation, has hash "N_8740348719365_134532056c_1"; 

insert
$N_8740348719365_134532056c_1_0 isa variable-ssa, has hash "N_8740348719365_134532056c_1_0", has var "ebx_7", has version 9, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348719365_134532056c_1_0, from-node: $N_8740348719365_134532056c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349110533_134532059c isa instruction, has hash "N_8740349110533_134532059c", has il-index 269, has asm-address "0x804cbdb", has operation-type "MLIL_CALL_SSA", has ins-text "eax_43#54, mem#46 = 0x804df60(eax_42#53, edx_4#13, var_1ac_19#26, var_1a8_6#8) @ mem#45";
(contains-instruction: $N_8740349110533_134532059c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349110533_134532059c isa instruction, has hash "N_8740349110533_134532059c"; 

insert
$N_8740349110533_134532059c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740349110533_134532059c_0", has edge-label "output";
(to-node: $N_8740349110533_134532059c_0, from-node: $N_8740349110533_134532059c) isa node-link; 

match
$N_8740349110533_134532059c_0 isa operation, has hash "N_8740349110533_134532059c_0"; 

insert
$N_8740349110533_134532059c_0_0 isa constant, has hash "N_8740349110533_134532059c_0_0", has constant-value "46", has edge-label "dest_memory";
(to-node: $N_8740349110533_134532059c_0_0, from-node: $N_8740349110533_134532059c_0) isa node-link; 

match
$N_8740349110533_134532059c_0 isa operation, has hash "N_8740349110533_134532059c_0"; 

insert
$L_8740349110533_134532059c_0_1 isa list, has hash "L_8740349110533_134532059c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740349110533_134532059c_0_1, from-node: $N_8740349110533_134532059c_0) isa node-link; 

match
$L_8740349110533_134532059c_0_1 isa list, has hash "L_8740349110533_134532059c_0_1"; 

insert
$N_8740349110533_134532059c_0_1_0 isa variable-ssa, has hash "N_8740349110533_134532059c_0_1_0", has var "eax_43", has version 54, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349110533_134532059c_0_1_0, from-node: $L_8740349110533_134532059c_0_1) isa node-link; 

match
$N_8740349110533_134532059c isa instruction, has hash "N_8740349110533_134532059c"; 

insert
$N_8740349110533_134532059c_1 isa MLIL_CONST_PTR, has hash "N_8740349110533_134532059c_1", has edge-label "dest";
(to-node: $N_8740349110533_134532059c_1, from-node: $N_8740349110533_134532059c) isa node-link; 

match
$N_8740349110533_134532059c_1 isa operation, has hash "N_8740349110533_134532059c_1"; 

insert
$N_8740349110533_134532059c_1_0 isa constant, has hash "N_8740349110533_134532059c_1_0", has constant-value "134537056", has edge-label "constant";
(to-node: $N_8740349110533_134532059c_1_0, from-node: $N_8740349110533_134532059c_1) isa node-link; 

match
$N_8740349110533_134532059c isa instruction, has hash "N_8740349110533_134532059c"; 

insert
$L_8740349110533_134532059c_2 isa list, has hash "L_8740349110533_134532059c_2", has list-size 4, has edge-label "params";
(to-node: $L_8740349110533_134532059c_2, from-node: $N_8740349110533_134532059c) isa node-link; 

match
$L_8740349110533_134532059c_2 isa list, has hash "L_8740349110533_134532059c_2"; 

insert
$N_8740349110533_134532059c_2_0 isa MLIL_VAR_SSA, has hash "N_8740349110533_134532059c_2_0", has edge-label "0";
(to-node: $N_8740349110533_134532059c_2_0, from-node: $L_8740349110533_134532059c_2) isa node-link; 

match
$N_8740349110533_134532059c_2_0 isa operation, has hash "N_8740349110533_134532059c_2_0"; 

insert
$N_8740349110533_134532059c_2_0_0 isa variable-ssa, has hash "N_8740349110533_134532059c_2_0_0", has var "eax_42", has version 53, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349110533_134532059c_2_0_0, from-node: $N_8740349110533_134532059c_2_0) isa node-link; 

match
$L_8740349110533_134532059c_2 isa list, has hash "L_8740349110533_134532059c_2"; 

insert
$N_8740349110533_134532059c_2_1 isa MLIL_VAR_SSA, has hash "N_8740349110533_134532059c_2_1", has edge-label "1";
(to-node: $N_8740349110533_134532059c_2_1, from-node: $L_8740349110533_134532059c_2) isa node-link; 

match
$N_8740349110533_134532059c_2_1 isa operation, has hash "N_8740349110533_134532059c_2_1"; 

insert
$N_8740349110533_134532059c_2_1_0 isa variable-ssa, has hash "N_8740349110533_134532059c_2_1_0", has var "edx_4", has version 13, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349110533_134532059c_2_1_0, from-node: $N_8740349110533_134532059c_2_1) isa node-link; 

match
$L_8740349110533_134532059c_2 isa list, has hash "L_8740349110533_134532059c_2"; 

insert
$N_8740349110533_134532059c_2_2 isa MLIL_VAR_SSA, has hash "N_8740349110533_134532059c_2_2", has edge-label "2";
(to-node: $N_8740349110533_134532059c_2_2, from-node: $L_8740349110533_134532059c_2) isa node-link; 

match
$N_8740349110533_134532059c_2_2 isa operation, has hash "N_8740349110533_134532059c_2_2"; 

insert
$N_8740349110533_134532059c_2_2_0 isa variable-ssa, has hash "N_8740349110533_134532059c_2_2_0", has var "var_1ac_19", has version 26, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349110533_134532059c_2_2_0, from-node: $N_8740349110533_134532059c_2_2) isa node-link; 

match
$L_8740349110533_134532059c_2 isa list, has hash "L_8740349110533_134532059c_2"; 

insert
$N_8740349110533_134532059c_2_3 isa MLIL_VAR_SSA, has hash "N_8740349110533_134532059c_2_3", has edge-label "3";
(to-node: $N_8740349110533_134532059c_2_3, from-node: $L_8740349110533_134532059c_2) isa node-link; 

match
$N_8740349110533_134532059c_2_3 isa operation, has hash "N_8740349110533_134532059c_2_3"; 

insert
$N_8740349110533_134532059c_2_3_0 isa variable-ssa, has hash "N_8740349110533_134532059c_2_3_0", has var "var_1a8_6", has version 8, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349110533_134532059c_2_3_0, from-node: $N_8740349110533_134532059c_2_3) isa node-link; 

match
$N_8740349110533_134532059c isa instruction, has hash "N_8740349110533_134532059c"; 

insert
$N_8740349110533_134532059c_3 isa constant, has hash "N_8740349110533_134532059c_3", has constant-value "45", has edge-label "src_memory";
(to-node: $N_8740349110533_134532059c_3, from-node: $N_8740349110533_134532059c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348355965_134532064c isa instruction, has hash "N_8740348355965_134532064c", has il-index 270, has asm-address "0x804cbe0", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#27 = eax_43#54";
(contains-instruction: $N_8740348355965_134532064c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348355965_134532064c isa instruction, has hash "N_8740348355965_134532064c"; 

insert
$N_8740348355965_134532064c_0 isa variable-ssa, has hash "N_8740348355965_134532064c_0", has var "esi", has version 27, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348355965_134532064c_0, from-node: $N_8740348355965_134532064c) isa node-link; 

match
$N_8740348355965_134532064c isa instruction, has hash "N_8740348355965_134532064c"; 

insert
$N_8740348355965_134532064c_1 isa MLIL_VAR_SSA, has hash "N_8740348355965_134532064c_1", has edge-label "src";
(to-node: $N_8740348355965_134532064c_1, from-node: $N_8740348355965_134532064c) isa node-link; 

match
$N_8740348355965_134532064c_1 isa operation, has hash "N_8740348355965_134532064c_1"; 

insert
$N_8740348355965_134532064c_1_0 isa variable-ssa, has hash "N_8740348355965_134532064c_1_0", has var "eax_43", has version 54, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348355965_134532064c_1_0, from-node: $N_8740348355965_134532064c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 254, has bb-end 271; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348500997_134532068c isa instruction, has hash "N_8740348500997_134532068c", has il-index 271, has asm-address "0x804cbe4", has operation-type "MLIL_IF", has ins-text "if (esi#27 != 0) then 277 @ 0x0 else 278 @ 0x804cbea";
(contains-instruction: $N_8740348500997_134532068c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348500997_134532068c isa instruction, has hash "N_8740348500997_134532068c"; 

insert
$N_8740348500997_134532068c_0 isa MLIL_CMP_NE, has hash "N_8740348500997_134532068c_0", has edge-label "condition";
(to-node: $N_8740348500997_134532068c_0, from-node: $N_8740348500997_134532068c) isa node-link; 

match
$N_8740348500997_134532068c_0 isa operation, has hash "N_8740348500997_134532068c_0"; 

insert
$N_8740348500997_134532068c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348500997_134532068c_0_0", has edge-label "left";
(to-node: $N_8740348500997_134532068c_0_0, from-node: $N_8740348500997_134532068c_0) isa node-link; 

match
$N_8740348500997_134532068c_0_0 isa operation, has hash "N_8740348500997_134532068c_0_0"; 

insert
$N_8740348500997_134532068c_0_0_0 isa variable-ssa, has hash "N_8740348500997_134532068c_0_0_0", has var "esi", has version 27, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348500997_134532068c_0_0_0, from-node: $N_8740348500997_134532068c_0_0) isa node-link; 

match
$N_8740348500997_134532068c_0 isa operation, has hash "N_8740348500997_134532068c_0"; 

insert
$N_8740348500997_134532068c_0_1 isa MLIL_CONST, has hash "N_8740348500997_134532068c_0_1", has edge-label "right";
(to-node: $N_8740348500997_134532068c_0_1, from-node: $N_8740348500997_134532068c_0) isa node-link; 

match
$N_8740348500997_134532068c_0_1 isa operation, has hash "N_8740348500997_134532068c_0_1"; 

insert
$N_8740348500997_134532068c_0_1_0 isa constant, has hash "N_8740348500997_134532068c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348500997_134532068c_0_1_0, from-node: $N_8740348500997_134532068c_0_1) isa node-link; 

match
$N_8740348500997_134532068c isa instruction, has hash "N_8740348500997_134532068c"; 

insert
$N_8740348500997_134532068c_1 isa constant, has hash "N_8740348500997_134532068c_1", has constant-value "277", has edge-label "true";
(to-node: $N_8740348500997_134532068c_1, from-node: $N_8740348500997_134532068c) isa node-link; 

match
$N_8740348500997_134532068c isa instruction, has hash "N_8740348500997_134532068c"; 

insert
$N_8740348500997_134532068c_2 isa constant, has hash "N_8740348500997_134532068c_2", has constant-value "278", has edge-label "false";
(to-node: $N_8740348500997_134532068c_2, from-node: $N_8740348500997_134532068c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 272, has bb-end 272; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 273, has bb-end 276; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 273, has bb-end 276; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 273, has bb-end 276; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349030309_134532003c isa instruction, has hash "N_8740349030309_134532003c", has il-index 273, has asm-address "0x804cba3", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_39#41 = var_198 @ mem#39";
(contains-instruction: $N_8740349030309_134532003c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349030309_134532003c isa instruction, has hash "N_8740349030309_134532003c"; 

insert
$N_8740349030309_134532003c_0 isa variable-ssa, has hash "N_8740349030309_134532003c_0", has var "eax_39", has version 41, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349030309_134532003c_0, from-node: $N_8740349030309_134532003c) isa node-link; 

match
$N_8740349030309_134532003c isa instruction, has hash "N_8740349030309_134532003c"; 

insert
$N_8740349030309_134532003c_1 isa MLIL_VAR_ALIASED, has hash "N_8740349030309_134532003c_1", has edge-label "src";
(to-node: $N_8740349030309_134532003c_1, from-node: $N_8740349030309_134532003c) isa node-link; 

match
$N_8740349030309_134532003c_1 isa operation, has hash "N_8740349030309_134532003c_1"; 

insert
$N_8740349030309_134532003c_1_0 isa variable-ssa, has hash "N_8740349030309_134532003c_1_0", has var "var_198", has version 39, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349030309_134532003c_1_0, from-node: $N_8740349030309_134532003c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 273, has bb-end 276; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 273, has bb-end 276; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348589829_134532007c isa instruction, has hash "N_8740348589829_134532007c", has il-index 274, has asm-address "0x804cba7", has operation-type "MLIL_STORE_SSA", has ins-text "[eax_39#41 + 0x20].b = 0 @ mem#39 -> mem#40";
(contains-instruction: $N_8740348589829_134532007c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348589829_134532007c isa instruction, has hash "N_8740348589829_134532007c"; 

insert
$N_8740348589829_134532007c_0 isa MLIL_ADD, has hash "N_8740348589829_134532007c_0", has edge-label "dest";
(to-node: $N_8740348589829_134532007c_0, from-node: $N_8740348589829_134532007c) isa node-link; 

match
$N_8740348589829_134532007c_0 isa operation, has hash "N_8740348589829_134532007c_0"; 

insert
$N_8740348589829_134532007c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348589829_134532007c_0_0", has edge-label "left";
(to-node: $N_8740348589829_134532007c_0_0, from-node: $N_8740348589829_134532007c_0) isa node-link; 

match
$N_8740348589829_134532007c_0_0 isa operation, has hash "N_8740348589829_134532007c_0_0"; 

insert
$N_8740348589829_134532007c_0_0_0 isa variable-ssa, has hash "N_8740348589829_134532007c_0_0_0", has var "eax_39", has version 41, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348589829_134532007c_0_0_0, from-node: $N_8740348589829_134532007c_0_0) isa node-link; 

match
$N_8740348589829_134532007c_0 isa operation, has hash "N_8740348589829_134532007c_0"; 

insert
$N_8740348589829_134532007c_0_1 isa MLIL_CONST, has hash "N_8740348589829_134532007c_0_1", has edge-label "right";
(to-node: $N_8740348589829_134532007c_0_1, from-node: $N_8740348589829_134532007c_0) isa node-link; 

match
$N_8740348589829_134532007c_0_1 isa operation, has hash "N_8740348589829_134532007c_0_1"; 

insert
$N_8740348589829_134532007c_0_1_0 isa constant, has hash "N_8740348589829_134532007c_0_1_0", has constant-value "32", has edge-label "constant";
(to-node: $N_8740348589829_134532007c_0_1_0, from-node: $N_8740348589829_134532007c_0_1) isa node-link; 

match
$N_8740348589829_134532007c isa instruction, has hash "N_8740348589829_134532007c"; 

insert
$N_8740348589829_134532007c_1 isa constant, has hash "N_8740348589829_134532007c_1", has constant-value "40", has edge-label "dest_memory";
(to-node: $N_8740348589829_134532007c_1, from-node: $N_8740348589829_134532007c) isa node-link; 

match
$N_8740348589829_134532007c isa instruction, has hash "N_8740348589829_134532007c"; 

insert
$N_8740348589829_134532007c_2 isa constant, has hash "N_8740348589829_134532007c_2", has constant-value "39", has edge-label "src_memory";
(to-node: $N_8740348589829_134532007c_2, from-node: $N_8740348589829_134532007c) isa node-link; 

match
$N_8740348589829_134532007c isa instruction, has hash "N_8740348589829_134532007c"; 

insert
$N_8740348589829_134532007c_3 isa MLIL_CONST, has hash "N_8740348589829_134532007c_3", has edge-label "src";
(to-node: $N_8740348589829_134532007c_3, from-node: $N_8740348589829_134532007c) isa node-link; 

match
$N_8740348589829_134532007c_3 isa operation, has hash "N_8740348589829_134532007c_3"; 

insert
$N_8740348589829_134532007c_3_0 isa constant, has hash "N_8740348589829_134532007c_3_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348589829_134532007c_3_0, from-node: $N_8740348589829_134532007c_3) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 273, has bb-end 276; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 273, has bb-end 276; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349130881_134532011c isa instruction, has hash "N_8740349130881_134532011c", has il-index 275, has asm-address "0x804cbab", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edi#8 = 1";
(contains-instruction: $N_8740349130881_134532011c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349130881_134532011c isa instruction, has hash "N_8740349130881_134532011c"; 

insert
$N_8740349130881_134532011c_0 isa variable-ssa, has hash "N_8740349130881_134532011c_0", has var "edi", has version 8, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349130881_134532011c_0, from-node: $N_8740349130881_134532011c) isa node-link; 

match
$N_8740349130881_134532011c isa instruction, has hash "N_8740349130881_134532011c"; 

insert
$N_8740349130881_134532011c_1 isa MLIL_CONST, has hash "N_8740349130881_134532011c_1", has edge-label "src";
(to-node: $N_8740349130881_134532011c_1, from-node: $N_8740349130881_134532011c) isa node-link; 

match
$N_8740349130881_134532011c_1 isa operation, has hash "N_8740349130881_134532011c_1"; 

insert
$N_8740349130881_134532011c_1_0 isa constant, has hash "N_8740349130881_134532011c_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8740349130881_134532011c_1_0, from-node: $N_8740349130881_134532011c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 273, has bb-end 276; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 273, has bb-end 276; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348852741_134532016c isa instruction, has hash "N_8740348852741_134532016c", has il-index 276, has asm-address "0x804cbb0", has operation-type "MLIL_GOTO", has ins-text "goto 254 @ 0x804cbc9";
(contains-instruction: $N_8740348852741_134532016c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348852741_134532016c isa instruction, has hash "N_8740348852741_134532016c"; 

insert
$N_8740348852741_134532016c_0 isa constant, has hash "N_8740348852741_134532016c_0", has constant-value "254", has edge-label "dest";
(to-node: $N_8740348852741_134532016c_0, from-node: $N_8740348852741_134532016c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 277, has bb-end 277; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 278, has bb-end 279; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 278, has bb-end 279; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 278, has bb-end 279; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348942217_134532074c isa instruction, has hash "N_8740348942217_134532074c", has il-index 278, has asm-address "0x804cbea", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_2#3 = ebx_7#9";
(contains-instruction: $N_8740348942217_134532074c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348942217_134532074c isa instruction, has hash "N_8740348942217_134532074c"; 

insert
$N_8740348942217_134532074c_0 isa variable-ssa, has hash "N_8740348942217_134532074c_0", has var "ecx_2", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348942217_134532074c_0, from-node: $N_8740348942217_134532074c) isa node-link; 

match
$N_8740348942217_134532074c isa instruction, has hash "N_8740348942217_134532074c"; 

insert
$N_8740348942217_134532074c_1 isa MLIL_VAR_SSA, has hash "N_8740348942217_134532074c_1", has edge-label "src";
(to-node: $N_8740348942217_134532074c_1, from-node: $N_8740348942217_134532074c) isa node-link; 

match
$N_8740348942217_134532074c_1 isa operation, has hash "N_8740348942217_134532074c_1"; 

insert
$N_8740348942217_134532074c_1_0 isa variable-ssa, has hash "N_8740348942217_134532074c_1_0", has var "ebx_7", has version 9, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348942217_134532074c_1_0, from-node: $N_8740348942217_134532074c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 278, has bb-end 279; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 278, has bb-end 279; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348619273_134532078c isa instruction, has hash "N_8740348619273_134532078c", has il-index 279, has asm-address "0x804cbee", has operation-type "MLIL_IF", has ins-text "if (edi#11 == 0) then 280 @ 0x0 else 281 @ 0x804cbf0";
(contains-instruction: $N_8740348619273_134532078c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348619273_134532078c isa instruction, has hash "N_8740348619273_134532078c"; 

insert
$N_8740348619273_134532078c_0 isa MLIL_CMP_E, has hash "N_8740348619273_134532078c_0", has edge-label "condition";
(to-node: $N_8740348619273_134532078c_0, from-node: $N_8740348619273_134532078c) isa node-link; 

match
$N_8740348619273_134532078c_0 isa operation, has hash "N_8740348619273_134532078c_0"; 

insert
$N_8740348619273_134532078c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348619273_134532078c_0_0", has edge-label "left";
(to-node: $N_8740348619273_134532078c_0_0, from-node: $N_8740348619273_134532078c_0) isa node-link; 

match
$N_8740348619273_134532078c_0_0 isa operation, has hash "N_8740348619273_134532078c_0_0"; 

insert
$N_8740348619273_134532078c_0_0_0 isa variable-ssa, has hash "N_8740348619273_134532078c_0_0_0", has var "edi", has version 11, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348619273_134532078c_0_0_0, from-node: $N_8740348619273_134532078c_0_0) isa node-link; 

match
$N_8740348619273_134532078c_0 isa operation, has hash "N_8740348619273_134532078c_0"; 

insert
$N_8740348619273_134532078c_0_1 isa MLIL_CONST, has hash "N_8740348619273_134532078c_0_1", has edge-label "right";
(to-node: $N_8740348619273_134532078c_0_1, from-node: $N_8740348619273_134532078c_0) isa node-link; 

match
$N_8740348619273_134532078c_0_1 isa operation, has hash "N_8740348619273_134532078c_0_1"; 

insert
$N_8740348619273_134532078c_0_1_0 isa constant, has hash "N_8740348619273_134532078c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348619273_134532078c_0_1_0, from-node: $N_8740348619273_134532078c_0_1) isa node-link; 

match
$N_8740348619273_134532078c isa instruction, has hash "N_8740348619273_134532078c"; 

insert
$N_8740348619273_134532078c_1 isa constant, has hash "N_8740348619273_134532078c_1", has constant-value "280", has edge-label "true";
(to-node: $N_8740348619273_134532078c_1, from-node: $N_8740348619273_134532078c) isa node-link; 

match
$N_8740348619273_134532078c isa instruction, has hash "N_8740348619273_134532078c"; 

insert
$N_8740348619273_134532078c_2 isa constant, has hash "N_8740348619273_134532078c_2", has constant-value "281", has edge-label "false";
(to-node: $N_8740348619273_134532078c_2, from-node: $N_8740348619273_134532078c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 280, has bb-end 280; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 281, has bb-end 286; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 281, has bb-end 286; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 281, has bb-end 286; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349595265_134532080c isa instruction, has hash "N_8740349595265_134532080c", has il-index 281, has asm-address "0x804cbf0", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_44#55 = var_198 @ mem#46";
(contains-instruction: $N_8740349595265_134532080c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349595265_134532080c isa instruction, has hash "N_8740349595265_134532080c"; 

insert
$N_8740349595265_134532080c_0 isa variable-ssa, has hash "N_8740349595265_134532080c_0", has var "eax_44", has version 55, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349595265_134532080c_0, from-node: $N_8740349595265_134532080c) isa node-link; 

match
$N_8740349595265_134532080c isa instruction, has hash "N_8740349595265_134532080c"; 

insert
$N_8740349595265_134532080c_1 isa MLIL_VAR_ALIASED, has hash "N_8740349595265_134532080c_1", has edge-label "src";
(to-node: $N_8740349595265_134532080c_1, from-node: $N_8740349595265_134532080c) isa node-link; 

match
$N_8740349595265_134532080c_1 isa operation, has hash "N_8740349595265_134532080c_1"; 

insert
$N_8740349595265_134532080c_1_0 isa variable-ssa, has hash "N_8740349595265_134532080c_1_0", has var "var_198", has version 46, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349595265_134532080c_1_0, from-node: $N_8740349595265_134532080c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 281, has bb-end 286; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 281, has bb-end 286; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349722325_134532084c isa instruction, has hash "N_8740349722325_134532084c", has il-index 282, has asm-address "0x804cbf4", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1a8_7#9 = eax_44#55";
(contains-instruction: $N_8740349722325_134532084c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349722325_134532084c isa instruction, has hash "N_8740349722325_134532084c"; 

insert
$N_8740349722325_134532084c_0 isa variable-ssa, has hash "N_8740349722325_134532084c_0", has var "var_1a8_7", has version 9, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349722325_134532084c_0, from-node: $N_8740349722325_134532084c) isa node-link; 

match
$N_8740349722325_134532084c isa instruction, has hash "N_8740349722325_134532084c"; 

insert
$N_8740349722325_134532084c_1 isa MLIL_VAR_SSA, has hash "N_8740349722325_134532084c_1", has edge-label "src";
(to-node: $N_8740349722325_134532084c_1, from-node: $N_8740349722325_134532084c) isa node-link; 

match
$N_8740349722325_134532084c_1 isa operation, has hash "N_8740349722325_134532084c_1"; 

insert
$N_8740349722325_134532084c_1_0 isa variable-ssa, has hash "N_8740349722325_134532084c_1_0", has var "eax_44", has version 55, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349722325_134532084c_1_0, from-node: $N_8740349722325_134532084c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 281, has bb-end 286; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 281, has bb-end 286; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348546053_134532088c isa instruction, has hash "N_8740348546053_134532088c", has il-index 283, has asm-address "0x804cbf8", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_20#27 = ecx_2#3";
(contains-instruction: $N_8740348546053_134532088c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348546053_134532088c isa instruction, has hash "N_8740348546053_134532088c"; 

insert
$N_8740348546053_134532088c_0 isa variable-ssa, has hash "N_8740348546053_134532088c_0", has var "var_1ac_20", has version 27, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348546053_134532088c_0, from-node: $N_8740348546053_134532088c) isa node-link; 

match
$N_8740348546053_134532088c isa instruction, has hash "N_8740348546053_134532088c"; 

insert
$N_8740348546053_134532088c_1 isa MLIL_VAR_SSA, has hash "N_8740348546053_134532088c_1", has edge-label "src";
(to-node: $N_8740348546053_134532088c_1, from-node: $N_8740348546053_134532088c) isa node-link; 

match
$N_8740348546053_134532088c_1 isa operation, has hash "N_8740348546053_134532088c_1"; 

insert
$N_8740348546053_134532088c_1_0 isa variable-ssa, has hash "N_8740348546053_134532088c_1_0", has var "ecx_2", has version 3, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348546053_134532088c_1_0, from-node: $N_8740348546053_134532088c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 281, has bb-end 286; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 281, has bb-end 286; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348923397_134532091c isa instruction, has hash "N_8740348923397_134532091c", has il-index 284, has asm-address "0x804cbfb", has operation-type "MLIL_CALL_SSA", has ins-text "eax_45#56, mem#47 = 0x804e090(var_1ac_20#27, var_1a8_7#9) @ mem#46";
(contains-instruction: $N_8740348923397_134532091c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348923397_134532091c isa instruction, has hash "N_8740348923397_134532091c"; 

insert
$N_8740348923397_134532091c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348923397_134532091c_0", has edge-label "output";
(to-node: $N_8740348923397_134532091c_0, from-node: $N_8740348923397_134532091c) isa node-link; 

match
$N_8740348923397_134532091c_0 isa operation, has hash "N_8740348923397_134532091c_0"; 

insert
$N_8740348923397_134532091c_0_0 isa constant, has hash "N_8740348923397_134532091c_0_0", has constant-value "47", has edge-label "dest_memory";
(to-node: $N_8740348923397_134532091c_0_0, from-node: $N_8740348923397_134532091c_0) isa node-link; 

match
$N_8740348923397_134532091c_0 isa operation, has hash "N_8740348923397_134532091c_0"; 

insert
$L_8740348923397_134532091c_0_1 isa list, has hash "L_8740348923397_134532091c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348923397_134532091c_0_1, from-node: $N_8740348923397_134532091c_0) isa node-link; 

match
$L_8740348923397_134532091c_0_1 isa list, has hash "L_8740348923397_134532091c_0_1"; 

insert
$N_8740348923397_134532091c_0_1_0 isa variable-ssa, has hash "N_8740348923397_134532091c_0_1_0", has var "eax_45", has version 56, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348923397_134532091c_0_1_0, from-node: $L_8740348923397_134532091c_0_1) isa node-link; 

match
$N_8740348923397_134532091c isa instruction, has hash "N_8740348923397_134532091c"; 

insert
$N_8740348923397_134532091c_1 isa MLIL_CONST_PTR, has hash "N_8740348923397_134532091c_1", has edge-label "dest";
(to-node: $N_8740348923397_134532091c_1, from-node: $N_8740348923397_134532091c) isa node-link; 

match
$N_8740348923397_134532091c_1 isa operation, has hash "N_8740348923397_134532091c_1"; 

insert
$N_8740348923397_134532091c_1_0 isa constant, has hash "N_8740348923397_134532091c_1_0", has constant-value "134537360", has edge-label "constant";
(to-node: $N_8740348923397_134532091c_1_0, from-node: $N_8740348923397_134532091c_1) isa node-link; 

match
$N_8740348923397_134532091c isa instruction, has hash "N_8740348923397_134532091c"; 

insert
$L_8740348923397_134532091c_2 isa list, has hash "L_8740348923397_134532091c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740348923397_134532091c_2, from-node: $N_8740348923397_134532091c) isa node-link; 

match
$L_8740348923397_134532091c_2 isa list, has hash "L_8740348923397_134532091c_2"; 

insert
$N_8740348923397_134532091c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348923397_134532091c_2_0", has edge-label "0";
(to-node: $N_8740348923397_134532091c_2_0, from-node: $L_8740348923397_134532091c_2) isa node-link; 

match
$N_8740348923397_134532091c_2_0 isa operation, has hash "N_8740348923397_134532091c_2_0"; 

insert
$N_8740348923397_134532091c_2_0_0 isa variable-ssa, has hash "N_8740348923397_134532091c_2_0_0", has var "var_1ac_20", has version 27, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348923397_134532091c_2_0_0, from-node: $N_8740348923397_134532091c_2_0) isa node-link; 

match
$L_8740348923397_134532091c_2 isa list, has hash "L_8740348923397_134532091c_2"; 

insert
$N_8740348923397_134532091c_2_1 isa MLIL_VAR_SSA, has hash "N_8740348923397_134532091c_2_1", has edge-label "1";
(to-node: $N_8740348923397_134532091c_2_1, from-node: $L_8740348923397_134532091c_2) isa node-link; 

match
$N_8740348923397_134532091c_2_1 isa operation, has hash "N_8740348923397_134532091c_2_1"; 

insert
$N_8740348923397_134532091c_2_1_0 isa variable-ssa, has hash "N_8740348923397_134532091c_2_1_0", has var "var_1a8_7", has version 9, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348923397_134532091c_2_1_0, from-node: $N_8740348923397_134532091c_2_1) isa node-link; 

match
$N_8740348923397_134532091c isa instruction, has hash "N_8740348923397_134532091c"; 

insert
$N_8740348923397_134532091c_3 isa constant, has hash "N_8740348923397_134532091c_3", has constant-value "46", has edge-label "src_memory";
(to-node: $N_8740348923397_134532091c_3, from-node: $N_8740348923397_134532091c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 281, has bb-end 286; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 281, has bb-end 286; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348234101_134532096c isa instruction, has hash "N_8740348234101_134532096c", has il-index 285, has asm-address "0x804cc00", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#28 = eax_45#56";
(contains-instruction: $N_8740348234101_134532096c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348234101_134532096c isa instruction, has hash "N_8740348234101_134532096c"; 

insert
$N_8740348234101_134532096c_0 isa variable-ssa, has hash "N_8740348234101_134532096c_0", has var "esi", has version 28, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348234101_134532096c_0, from-node: $N_8740348234101_134532096c) isa node-link; 

match
$N_8740348234101_134532096c isa instruction, has hash "N_8740348234101_134532096c"; 

insert
$N_8740348234101_134532096c_1 isa MLIL_VAR_SSA, has hash "N_8740348234101_134532096c_1", has edge-label "src";
(to-node: $N_8740348234101_134532096c_1, from-node: $N_8740348234101_134532096c) isa node-link; 

match
$N_8740348234101_134532096c_1 isa operation, has hash "N_8740348234101_134532096c_1"; 

insert
$N_8740348234101_134532096c_1_0 isa variable-ssa, has hash "N_8740348234101_134532096c_1_0", has var "eax_45", has version 56, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348234101_134532096c_1_0, from-node: $N_8740348234101_134532096c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 281, has bb-end 286; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 281, has bb-end 286; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348213929_134532100c isa instruction, has hash "N_8740348213929_134532100c", has il-index 286, has asm-address "0x804cc04", has operation-type "MLIL_IF", has ins-text "if (esi#28 == 0) then 299 @ 0x0 else 300 @ 0x804cc06";
(contains-instruction: $N_8740348213929_134532100c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348213929_134532100c isa instruction, has hash "N_8740348213929_134532100c"; 

insert
$N_8740348213929_134532100c_0 isa MLIL_CMP_E, has hash "N_8740348213929_134532100c_0", has edge-label "condition";
(to-node: $N_8740348213929_134532100c_0, from-node: $N_8740348213929_134532100c) isa node-link; 

match
$N_8740348213929_134532100c_0 isa operation, has hash "N_8740348213929_134532100c_0"; 

insert
$N_8740348213929_134532100c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348213929_134532100c_0_0", has edge-label "left";
(to-node: $N_8740348213929_134532100c_0_0, from-node: $N_8740348213929_134532100c_0) isa node-link; 

match
$N_8740348213929_134532100c_0_0 isa operation, has hash "N_8740348213929_134532100c_0_0"; 

insert
$N_8740348213929_134532100c_0_0_0 isa variable-ssa, has hash "N_8740348213929_134532100c_0_0_0", has var "esi", has version 28, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348213929_134532100c_0_0_0, from-node: $N_8740348213929_134532100c_0_0) isa node-link; 

match
$N_8740348213929_134532100c_0 isa operation, has hash "N_8740348213929_134532100c_0"; 

insert
$N_8740348213929_134532100c_0_1 isa MLIL_CONST, has hash "N_8740348213929_134532100c_0_1", has edge-label "right";
(to-node: $N_8740348213929_134532100c_0_1, from-node: $N_8740348213929_134532100c_0) isa node-link; 

match
$N_8740348213929_134532100c_0_1 isa operation, has hash "N_8740348213929_134532100c_0_1"; 

insert
$N_8740348213929_134532100c_0_1_0 isa constant, has hash "N_8740348213929_134532100c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348213929_134532100c_0_1_0, from-node: $N_8740348213929_134532100c_0_1) isa node-link; 

match
$N_8740348213929_134532100c isa instruction, has hash "N_8740348213929_134532100c"; 

insert
$N_8740348213929_134532100c_1 isa constant, has hash "N_8740348213929_134532100c_1", has constant-value "299", has edge-label "true";
(to-node: $N_8740348213929_134532100c_1, from-node: $N_8740348213929_134532100c) isa node-link; 

match
$N_8740348213929_134532100c isa instruction, has hash "N_8740348213929_134532100c"; 

insert
$N_8740348213929_134532100c_2 isa constant, has hash "N_8740348213929_134532100c_2", has constant-value "300", has edge-label "false";
(to-node: $N_8740348213929_134532100c_2, from-node: $N_8740348213929_134532100c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348320773_134532116c isa instruction, has hash "N_8740348320773_134532116c", has il-index 289, has asm-address "0x804cc14", has operation-type "MLIL_VAR_PHI", has ins-text "eax_45#57 = ϕ(eax_43#54, eax_45#56)";
(contains-instruction: $N_8740348320773_134532116c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348320773_134532116c isa instruction, has hash "N_8740348320773_134532116c"; 

insert
$N_8740348320773_134532116c_0 isa variable-ssa, has hash "N_8740348320773_134532116c_0", has var "eax_45", has version 57, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348320773_134532116c_0, from-node: $N_8740348320773_134532116c) isa node-link; 

match
$N_8740348320773_134532116c isa instruction, has hash "N_8740348320773_134532116c"; 

insert
$L_8740348320773_134532116c_1 isa list, has hash "L_8740348320773_134532116c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348320773_134532116c_1, from-node: $N_8740348320773_134532116c) isa node-link; 

match
$L_8740348320773_134532116c_1 isa list, has hash "L_8740348320773_134532116c_1"; 

insert
$N_8740348320773_134532116c_1_0 isa variable-ssa, has hash "N_8740348320773_134532116c_1_0", has var "eax_43", has version 54, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348320773_134532116c_1_0, from-node: $L_8740348320773_134532116c_1) isa node-link; 

match
$L_8740348320773_134532116c_1 isa list, has hash "L_8740348320773_134532116c_1"; 

insert
$N_8740348320773_134532116c_1_1 isa variable-ssa, has hash "N_8740348320773_134532116c_1_1", has var "eax_45", has version 56, has edge-label "1", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348320773_134532116c_1_1, from-node: $L_8740348320773_134532116c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348711429_134532116c isa instruction, has hash "N_8740348711429_134532116c", has il-index 290, has asm-address "0x804cc14", has operation-type "MLIL_VAR_PHI", has ins-text "esi#29 = ϕ(esi#27, esi#28)";
(contains-instruction: $N_8740348711429_134532116c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348711429_134532116c isa instruction, has hash "N_8740348711429_134532116c"; 

insert
$N_8740348711429_134532116c_0 isa variable-ssa, has hash "N_8740348711429_134532116c_0", has var "esi", has version 29, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348711429_134532116c_0, from-node: $N_8740348711429_134532116c) isa node-link; 

match
$N_8740348711429_134532116c isa instruction, has hash "N_8740348711429_134532116c"; 

insert
$L_8740348711429_134532116c_1 isa list, has hash "L_8740348711429_134532116c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348711429_134532116c_1, from-node: $N_8740348711429_134532116c) isa node-link; 

match
$L_8740348711429_134532116c_1 isa list, has hash "L_8740348711429_134532116c_1"; 

insert
$N_8740348711429_134532116c_1_0 isa variable-ssa, has hash "N_8740348711429_134532116c_1_0", has var "esi", has version 27, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348711429_134532116c_1_0, from-node: $L_8740348711429_134532116c_1) isa node-link; 

match
$L_8740348711429_134532116c_1 isa list, has hash "L_8740348711429_134532116c_1"; 

insert
$N_8740348711429_134532116c_1_1 isa variable-ssa, has hash "N_8740348711429_134532116c_1_1", has var "esi", has version 28, has edge-label "1", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348711429_134532116c_1_1, from-node: $L_8740348711429_134532116c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348719365_134532116c isa instruction, has hash "N_8740348719365_134532116c", has il-index 291, has asm-address "0x804cc14", has operation-type "MLIL_MEM_PHI", has ins-text "mem#48 = ϕ(mem#46, mem#47)";
(contains-instruction: $N_8740348719365_134532116c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348719365_134532116c isa instruction, has hash "N_8740348719365_134532116c"; 

insert
$N_8740348719365_134532116c_0 isa constant, has hash "N_8740348719365_134532116c_0", has constant-value "48", has edge-label "dest_memory";
(to-node: $N_8740348719365_134532116c_0, from-node: $N_8740348719365_134532116c) isa node-link; 

match
$N_8740348719365_134532116c isa instruction, has hash "N_8740348719365_134532116c"; 

insert
$L_8740348719365_134532116c_1 isa list, has hash "L_8740348719365_134532116c_1", has list-size 2, has edge-label "src_memory";
(to-node: $L_8740348719365_134532116c_1, from-node: $N_8740348719365_134532116c) isa node-link; 

match
$L_8740348719365_134532116c_1 isa list, has hash "L_8740348719365_134532116c_1"; 

insert
$N_8740348719365_134532116c_1_0 isa constant, has hash "N_8740348719365_134532116c_1_0", has constant-value "46", has edge-label "0";
(to-node: $N_8740348719365_134532116c_1_0, from-node: $L_8740348719365_134532116c_1) isa node-link; 

match
$L_8740348719365_134532116c_1 isa list, has hash "L_8740348719365_134532116c_1"; 

insert
$N_8740348719365_134532116c_1_1 isa constant, has hash "N_8740348719365_134532116c_1_1", has constant-value "47", has edge-label "1";
(to-node: $N_8740348719365_134532116c_1_1, from-node: $L_8740348719365_134532116c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348847901_134532116c isa instruction, has hash "N_8740348847901_134532116c", has il-index 292, has asm-address "0x804cc14", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_46#58 = var_198 @ mem#48";
(contains-instruction: $N_8740348847901_134532116c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348847901_134532116c isa instruction, has hash "N_8740348847901_134532116c"; 

insert
$N_8740348847901_134532116c_0 isa variable-ssa, has hash "N_8740348847901_134532116c_0", has var "eax_46", has version 58, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348847901_134532116c_0, from-node: $N_8740348847901_134532116c) isa node-link; 

match
$N_8740348847901_134532116c isa instruction, has hash "N_8740348847901_134532116c"; 

insert
$N_8740348847901_134532116c_1 isa MLIL_VAR_ALIASED, has hash "N_8740348847901_134532116c_1", has edge-label "src";
(to-node: $N_8740348847901_134532116c_1, from-node: $N_8740348847901_134532116c) isa node-link; 

match
$N_8740348847901_134532116c_1 isa operation, has hash "N_8740348847901_134532116c_1"; 

insert
$N_8740348847901_134532116c_1_0 isa variable-ssa, has hash "N_8740348847901_134532116c_1_0", has var "var_198", has version 48, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348847901_134532116c_1_0, from-node: $N_8740348847901_134532116c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348965237_134532116c isa instruction, has hash "N_8740348965237_134532116c", has il-index 288, has asm-address "0x804cc14", has operation-type "MLIL_VAR_PHI", has ins-text "var_1a8_7#10 = ϕ(var_1a8_6#8, var_1a8_7#9)";
(contains-instruction: $N_8740348965237_134532116c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348965237_134532116c isa instruction, has hash "N_8740348965237_134532116c"; 

insert
$N_8740348965237_134532116c_0 isa variable-ssa, has hash "N_8740348965237_134532116c_0", has var "var_1a8_7", has version 10, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348965237_134532116c_0, from-node: $N_8740348965237_134532116c) isa node-link; 

match
$N_8740348965237_134532116c isa instruction, has hash "N_8740348965237_134532116c"; 

insert
$L_8740348965237_134532116c_1 isa list, has hash "L_8740348965237_134532116c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740348965237_134532116c_1, from-node: $N_8740348965237_134532116c) isa node-link; 

match
$L_8740348965237_134532116c_1 isa list, has hash "L_8740348965237_134532116c_1"; 

insert
$N_8740348965237_134532116c_1_0 isa variable-ssa, has hash "N_8740348965237_134532116c_1_0", has var "var_1a8_6", has version 8, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348965237_134532116c_1_0, from-node: $L_8740348965237_134532116c_1) isa node-link; 

match
$L_8740348965237_134532116c_1 isa list, has hash "L_8740348965237_134532116c_1"; 

insert
$N_8740348965237_134532116c_1_1 isa variable-ssa, has hash "N_8740348965237_134532116c_1_1", has var "var_1a8_7", has version 9, has edge-label "1", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348965237_134532116c_1_1, from-node: $L_8740348965237_134532116c_1) isa node-link; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349190661_134532116c isa instruction, has hash "N_8740349190661_134532116c", has il-index 287, has asm-address "0x804cc14", has operation-type "MLIL_VAR_PHI", has ins-text "var_1ac_20#28 = ϕ(var_1ac_19#26, var_1ac_20#27)";
(contains-instruction: $N_8740349190661_134532116c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349190661_134532116c isa instruction, has hash "N_8740349190661_134532116c"; 

insert
$N_8740349190661_134532116c_0 isa variable-ssa, has hash "N_8740349190661_134532116c_0", has var "var_1ac_20", has version 28, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349190661_134532116c_0, from-node: $N_8740349190661_134532116c) isa node-link; 

match
$N_8740349190661_134532116c isa instruction, has hash "N_8740349190661_134532116c"; 

insert
$L_8740349190661_134532116c_1 isa list, has hash "L_8740349190661_134532116c_1", has list-size 2, has edge-label "src";
(to-node: $L_8740349190661_134532116c_1, from-node: $N_8740349190661_134532116c) isa node-link; 

match
$L_8740349190661_134532116c_1 isa list, has hash "L_8740349190661_134532116c_1"; 

insert
$N_8740349190661_134532116c_1_0 isa variable-ssa, has hash "N_8740349190661_134532116c_1_0", has var "var_1ac_19", has version 26, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349190661_134532116c_1_0, from-node: $L_8740349190661_134532116c_1) isa node-link; 

match
$L_8740349190661_134532116c_1 isa list, has hash "L_8740349190661_134532116c_1"; 

insert
$N_8740349190661_134532116c_1_1 isa variable-ssa, has hash "N_8740349190661_134532116c_1_1", has var "var_1ac_20", has version 27, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349190661_134532116c_1_1, from-node: $L_8740349190661_134532116c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349303045_134532120c isa instruction, has hash "N_8740349303045_134532120c", has il-index 293, has asm-address "0x804cc18", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_3#4 = var_194 @ mem#48";
(contains-instruction: $N_8740349303045_134532120c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349303045_134532120c isa instruction, has hash "N_8740349303045_134532120c"; 

insert
$N_8740349303045_134532120c_0 isa variable-ssa, has hash "N_8740349303045_134532120c_0", has var "ecx_3", has version 4, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349303045_134532120c_0, from-node: $N_8740349303045_134532120c) isa node-link; 

match
$N_8740349303045_134532120c isa instruction, has hash "N_8740349303045_134532120c"; 

insert
$N_8740349303045_134532120c_1 isa MLIL_VAR_ALIASED, has hash "N_8740349303045_134532120c_1", has edge-label "src";
(to-node: $N_8740349303045_134532120c_1, from-node: $N_8740349303045_134532120c) isa node-link; 

match
$N_8740349303045_134532120c_1 isa operation, has hash "N_8740349303045_134532120c_1"; 

insert
$N_8740349303045_134532120c_1_0 isa variable-ssa, has hash "N_8740349303045_134532120c_1_0", has var "var_194", has version 48, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349303045_134532120c_1_0, from-node: $N_8740349303045_134532120c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348524553_134532124c isa instruction, has hash "N_8740348524553_134532124c", has il-index 294, has asm-address "0x804cc1c", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1a8_8#11 = ecx_3#4";
(contains-instruction: $N_8740348524553_134532124c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348524553_134532124c isa instruction, has hash "N_8740348524553_134532124c"; 

insert
$N_8740348524553_134532124c_0 isa variable-ssa, has hash "N_8740348524553_134532124c_0", has var "var_1a8_8", has version 11, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348524553_134532124c_0, from-node: $N_8740348524553_134532124c) isa node-link; 

match
$N_8740348524553_134532124c isa instruction, has hash "N_8740348524553_134532124c"; 

insert
$N_8740348524553_134532124c_1 isa MLIL_VAR_SSA, has hash "N_8740348524553_134532124c_1", has edge-label "src";
(to-node: $N_8740348524553_134532124c_1, from-node: $N_8740348524553_134532124c) isa node-link; 

match
$N_8740348524553_134532124c_1 isa operation, has hash "N_8740348524553_134532124c_1"; 

insert
$N_8740348524553_134532124c_1_0 isa variable-ssa, has hash "N_8740348524553_134532124c_1_0", has var "ecx_3", has version 4, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348524553_134532124c_1_0, from-node: $N_8740348524553_134532124c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348183053_134532128c isa instruction, has hash "N_8740348183053_134532128c", has il-index 295, has asm-address "0x804cc20", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_21#29 = eax_46#58";
(contains-instruction: $N_8740348183053_134532128c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348183053_134532128c isa instruction, has hash "N_8740348183053_134532128c"; 

insert
$N_8740348183053_134532128c_0 isa variable-ssa, has hash "N_8740348183053_134532128c_0", has var "var_1ac_21", has version 29, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348183053_134532128c_0, from-node: $N_8740348183053_134532128c) isa node-link; 

match
$N_8740348183053_134532128c isa instruction, has hash "N_8740348183053_134532128c"; 

insert
$N_8740348183053_134532128c_1 isa MLIL_VAR_SSA, has hash "N_8740348183053_134532128c_1", has edge-label "src";
(to-node: $N_8740348183053_134532128c_1, from-node: $N_8740348183053_134532128c) isa node-link; 

match
$N_8740348183053_134532128c_1 isa operation, has hash "N_8740348183053_134532128c_1"; 

insert
$N_8740348183053_134532128c_1_0 isa variable-ssa, has hash "N_8740348183053_134532128c_1_0", has var "eax_46", has version 58, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348183053_134532128c_1_0, from-node: $N_8740348183053_134532128c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348952325_134532131c isa instruction, has hash "N_8740348952325_134532131c", has il-index 296, has asm-address "0x804cc23", has operation-type "MLIL_CALL_SSA", has ins-text "eax_47#59, mem#49 = 0x804c570(var_1ac_21#29, var_1a8_8#11) @ mem#48";
(contains-instruction: $N_8740348952325_134532131c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348952325_134532131c isa instruction, has hash "N_8740348952325_134532131c"; 

insert
$N_8740348952325_134532131c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348952325_134532131c_0", has edge-label "output";
(to-node: $N_8740348952325_134532131c_0, from-node: $N_8740348952325_134532131c) isa node-link; 

match
$N_8740348952325_134532131c_0 isa operation, has hash "N_8740348952325_134532131c_0"; 

insert
$N_8740348952325_134532131c_0_0 isa constant, has hash "N_8740348952325_134532131c_0_0", has constant-value "49", has edge-label "dest_memory";
(to-node: $N_8740348952325_134532131c_0_0, from-node: $N_8740348952325_134532131c_0) isa node-link; 

match
$N_8740348952325_134532131c_0 isa operation, has hash "N_8740348952325_134532131c_0"; 

insert
$L_8740348952325_134532131c_0_1 isa list, has hash "L_8740348952325_134532131c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348952325_134532131c_0_1, from-node: $N_8740348952325_134532131c_0) isa node-link; 

match
$L_8740348952325_134532131c_0_1 isa list, has hash "L_8740348952325_134532131c_0_1"; 

insert
$N_8740348952325_134532131c_0_1_0 isa variable-ssa, has hash "N_8740348952325_134532131c_0_1_0", has var "eax_47", has version 59, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348952325_134532131c_0_1_0, from-node: $L_8740348952325_134532131c_0_1) isa node-link; 

match
$N_8740348952325_134532131c isa instruction, has hash "N_8740348952325_134532131c"; 

insert
$N_8740348952325_134532131c_1 isa MLIL_CONST_PTR, has hash "N_8740348952325_134532131c_1", has edge-label "dest";
(to-node: $N_8740348952325_134532131c_1, from-node: $N_8740348952325_134532131c) isa node-link; 

match
$N_8740348952325_134532131c_1 isa operation, has hash "N_8740348952325_134532131c_1"; 

insert
$N_8740348952325_134532131c_1_0 isa constant, has hash "N_8740348952325_134532131c_1_0", has constant-value "134530416", has edge-label "constant";
(to-node: $N_8740348952325_134532131c_1_0, from-node: $N_8740348952325_134532131c_1) isa node-link; 

match
$N_8740348952325_134532131c isa instruction, has hash "N_8740348952325_134532131c"; 

insert
$L_8740348952325_134532131c_2 isa list, has hash "L_8740348952325_134532131c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740348952325_134532131c_2, from-node: $N_8740348952325_134532131c) isa node-link; 

match
$L_8740348952325_134532131c_2 isa list, has hash "L_8740348952325_134532131c_2"; 

insert
$N_8740348952325_134532131c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348952325_134532131c_2_0", has edge-label "0";
(to-node: $N_8740348952325_134532131c_2_0, from-node: $L_8740348952325_134532131c_2) isa node-link; 

match
$N_8740348952325_134532131c_2_0 isa operation, has hash "N_8740348952325_134532131c_2_0"; 

insert
$N_8740348952325_134532131c_2_0_0 isa variable-ssa, has hash "N_8740348952325_134532131c_2_0_0", has var "var_1ac_21", has version 29, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348952325_134532131c_2_0_0, from-node: $N_8740348952325_134532131c_2_0) isa node-link; 

match
$L_8740348952325_134532131c_2 isa list, has hash "L_8740348952325_134532131c_2"; 

insert
$N_8740348952325_134532131c_2_1 isa MLIL_VAR_SSA, has hash "N_8740348952325_134532131c_2_1", has edge-label "1";
(to-node: $N_8740348952325_134532131c_2_1, from-node: $L_8740348952325_134532131c_2) isa node-link; 

match
$N_8740348952325_134532131c_2_1 isa operation, has hash "N_8740348952325_134532131c_2_1"; 

insert
$N_8740348952325_134532131c_2_1_0 isa variable-ssa, has hash "N_8740348952325_134532131c_2_1_0", has var "var_1a8_8", has version 11, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348952325_134532131c_2_1_0, from-node: $N_8740348952325_134532131c_2_1) isa node-link; 

match
$N_8740348952325_134532131c isa instruction, has hash "N_8740348952325_134532131c"; 

insert
$N_8740348952325_134532131c_3 isa constant, has hash "N_8740348952325_134532131c_3", has constant-value "48", has edge-label "src_memory";
(to-node: $N_8740348952325_134532131c_3, from-node: $N_8740348952325_134532131c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348153005_134532136c isa instruction, has hash "N_8740348153005_134532136c", has il-index 297, has asm-address "0x804cc28", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#30 = eax_47#59";
(contains-instruction: $N_8740348153005_134532136c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348153005_134532136c isa instruction, has hash "N_8740348153005_134532136c"; 

insert
$N_8740348153005_134532136c_0 isa variable-ssa, has hash "N_8740348153005_134532136c_0", has var "esi", has version 30, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348153005_134532136c_0, from-node: $N_8740348153005_134532136c) isa node-link; 

match
$N_8740348153005_134532136c isa instruction, has hash "N_8740348153005_134532136c"; 

insert
$N_8740348153005_134532136c_1 isa MLIL_VAR_SSA, has hash "N_8740348153005_134532136c_1", has edge-label "src";
(to-node: $N_8740348153005_134532136c_1, from-node: $N_8740348153005_134532136c) isa node-link; 

match
$N_8740348153005_134532136c_1 isa operation, has hash "N_8740348153005_134532136c_1"; 

insert
$N_8740348153005_134532136c_1_0 isa variable-ssa, has hash "N_8740348153005_134532136c_1_0", has var "eax_47", has version 59, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348153005_134532136c_1_0, from-node: $N_8740348153005_134532136c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 287, has bb-end 298; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348380677_134532140c isa instruction, has hash "N_8740348380677_134532140c", has il-index 298, has asm-address "0x804cc2c", has operation-type "MLIL_IF", has ins-text "if (esi#30 != 0) then 302 @ 0x0 else 303 @ 0x804cc2e";
(contains-instruction: $N_8740348380677_134532140c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348380677_134532140c isa instruction, has hash "N_8740348380677_134532140c"; 

insert
$N_8740348380677_134532140c_0 isa MLIL_CMP_NE, has hash "N_8740348380677_134532140c_0", has edge-label "condition";
(to-node: $N_8740348380677_134532140c_0, from-node: $N_8740348380677_134532140c) isa node-link; 

match
$N_8740348380677_134532140c_0 isa operation, has hash "N_8740348380677_134532140c_0"; 

insert
$N_8740348380677_134532140c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348380677_134532140c_0_0", has edge-label "left";
(to-node: $N_8740348380677_134532140c_0_0, from-node: $N_8740348380677_134532140c_0) isa node-link; 

match
$N_8740348380677_134532140c_0_0 isa operation, has hash "N_8740348380677_134532140c_0_0"; 

insert
$N_8740348380677_134532140c_0_0_0 isa variable-ssa, has hash "N_8740348380677_134532140c_0_0_0", has var "esi", has version 30, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348380677_134532140c_0_0_0, from-node: $N_8740348380677_134532140c_0_0) isa node-link; 

match
$N_8740348380677_134532140c_0 isa operation, has hash "N_8740348380677_134532140c_0"; 

insert
$N_8740348380677_134532140c_0_1 isa MLIL_CONST, has hash "N_8740348380677_134532140c_0_1", has edge-label "right";
(to-node: $N_8740348380677_134532140c_0_1, from-node: $N_8740348380677_134532140c_0) isa node-link; 

match
$N_8740348380677_134532140c_0_1 isa operation, has hash "N_8740348380677_134532140c_0_1"; 

insert
$N_8740348380677_134532140c_0_1_0 isa constant, has hash "N_8740348380677_134532140c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348380677_134532140c_0_1_0, from-node: $N_8740348380677_134532140c_0_1) isa node-link; 

match
$N_8740348380677_134532140c isa instruction, has hash "N_8740348380677_134532140c"; 

insert
$N_8740348380677_134532140c_1 isa constant, has hash "N_8740348380677_134532140c_1", has constant-value "302", has edge-label "true";
(to-node: $N_8740348380677_134532140c_1, from-node: $N_8740348380677_134532140c) isa node-link; 

match
$N_8740348380677_134532140c isa instruction, has hash "N_8740348380677_134532140c"; 

insert
$N_8740348380677_134532140c_2 isa constant, has hash "N_8740348380677_134532140c_2", has constant-value "303", has edge-label "false";
(to-node: $N_8740348380677_134532140c_2, from-node: $N_8740348380677_134532140c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 299, has bb-end 299; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 300, has bb-end 301; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 300, has bb-end 301; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 300, has bb-end 301; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349224749_134532102c isa instruction, has hash "N_8740349224749_134532102c", has il-index 300, has asm-address "0x804cc06", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edi#12 = 1";
(contains-instruction: $N_8740349224749_134532102c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349224749_134532102c isa instruction, has hash "N_8740349224749_134532102c"; 

insert
$N_8740349224749_134532102c_0 isa variable-ssa, has hash "N_8740349224749_134532102c_0", has var "edi", has version 12, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349224749_134532102c_0, from-node: $N_8740349224749_134532102c) isa node-link; 

match
$N_8740349224749_134532102c isa instruction, has hash "N_8740349224749_134532102c"; 

insert
$N_8740349224749_134532102c_1 isa MLIL_CONST, has hash "N_8740349224749_134532102c_1", has edge-label "src";
(to-node: $N_8740349224749_134532102c_1, from-node: $N_8740349224749_134532102c) isa node-link; 

match
$N_8740349224749_134532102c_1 isa operation, has hash "N_8740349224749_134532102c_1"; 

insert
$N_8740349224749_134532102c_1_0 isa constant, has hash "N_8740349224749_134532102c_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8740349224749_134532102c_1_0, from-node: $N_8740349224749_134532102c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 300, has bb-end 301; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 300, has bb-end 301; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348945673_134532107c isa instruction, has hash "N_8740348945673_134532107c", has il-index 301, has asm-address "0x804cc0b", has operation-type "MLIL_GOTO", has ins-text "goto 14 @ 0x804cc7b";
(contains-instruction: $N_8740348945673_134532107c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348945673_134532107c isa instruction, has hash "N_8740348945673_134532107c"; 

insert
$N_8740348945673_134532107c_0 isa constant, has hash "N_8740348945673_134532107c_0", has constant-value "14", has edge-label "dest";
(to-node: $N_8740348945673_134532107c_0, from-node: $N_8740348945673_134532107c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 302, has bb-end 302; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 303, has bb-end 309; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 303, has bb-end 309; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 303, has bb-end 309; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348729085_134532142c isa instruction, has hash "N_8740348729085_134532142c", has il-index 303, has asm-address "0x804cc2e", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_48#60 = var_194 @ mem#49";
(contains-instruction: $N_8740348729085_134532142c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348729085_134532142c isa instruction, has hash "N_8740348729085_134532142c"; 

insert
$N_8740348729085_134532142c_0 isa variable-ssa, has hash "N_8740348729085_134532142c_0", has var "eax_48", has version 60, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348729085_134532142c_0, from-node: $N_8740348729085_134532142c) isa node-link; 

match
$N_8740348729085_134532142c isa instruction, has hash "N_8740348729085_134532142c"; 

insert
$N_8740348729085_134532142c_1 isa MLIL_VAR_ALIASED, has hash "N_8740348729085_134532142c_1", has edge-label "src";
(to-node: $N_8740348729085_134532142c_1, from-node: $N_8740348729085_134532142c) isa node-link; 

match
$N_8740348729085_134532142c_1 isa operation, has hash "N_8740348729085_134532142c_1"; 

insert
$N_8740348729085_134532142c_1_0 isa variable-ssa, has hash "N_8740348729085_134532142c_1_0", has var "var_194", has version 49, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348729085_134532142c_1_0, from-node: $N_8740348729085_134532142c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 303, has bb-end 309; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 303, has bb-end 309; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348285189_134532146c isa instruction, has hash "N_8740348285189_134532146c", has il-index 304, has asm-address "0x804cc32", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_4#5 = var_198 @ mem#49";
(contains-instruction: $N_8740348285189_134532146c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348285189_134532146c isa instruction, has hash "N_8740348285189_134532146c"; 

insert
$N_8740348285189_134532146c_0 isa variable-ssa, has hash "N_8740348285189_134532146c_0", has var "ecx_4", has version 5, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348285189_134532146c_0, from-node: $N_8740348285189_134532146c) isa node-link; 

match
$N_8740348285189_134532146c isa instruction, has hash "N_8740348285189_134532146c"; 

insert
$N_8740348285189_134532146c_1 isa MLIL_VAR_ALIASED, has hash "N_8740348285189_134532146c_1", has edge-label "src";
(to-node: $N_8740348285189_134532146c_1, from-node: $N_8740348285189_134532146c) isa node-link; 

match
$N_8740348285189_134532146c_1 isa operation, has hash "N_8740348285189_134532146c_1"; 

insert
$N_8740348285189_134532146c_1_0 isa variable-ssa, has hash "N_8740348285189_134532146c_1_0", has var "var_198", has version 49, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348285189_134532146c_1_0, from-node: $N_8740348285189_134532146c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 303, has bb-end 309; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 303, has bb-end 309; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348453141_134532150c isa instruction, has hash "N_8740348453141_134532150c", has il-index 305, has asm-address "0x804cc36", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1a8_9#12 = ecx_4#5";
(contains-instruction: $N_8740348453141_134532150c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348453141_134532150c isa instruction, has hash "N_8740348453141_134532150c"; 

insert
$N_8740348453141_134532150c_0 isa variable-ssa, has hash "N_8740348453141_134532150c_0", has var "var_1a8_9", has version 12, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348453141_134532150c_0, from-node: $N_8740348453141_134532150c) isa node-link; 

match
$N_8740348453141_134532150c isa instruction, has hash "N_8740348453141_134532150c"; 

insert
$N_8740348453141_134532150c_1 isa MLIL_VAR_SSA, has hash "N_8740348453141_134532150c_1", has edge-label "src";
(to-node: $N_8740348453141_134532150c_1, from-node: $N_8740348453141_134532150c) isa node-link; 

match
$N_8740348453141_134532150c_1 isa operation, has hash "N_8740348453141_134532150c_1"; 

insert
$N_8740348453141_134532150c_1_0 isa variable-ssa, has hash "N_8740348453141_134532150c_1_0", has var "ecx_4", has version 5, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348453141_134532150c_1_0, from-node: $N_8740348453141_134532150c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 303, has bb-end 309; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 303, has bb-end 309; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740349236493_134532154c isa instruction, has hash "N_8740349236493_134532154c", has il-index 306, has asm-address "0x804cc3a", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_1ac_22#30 = eax_48#60";
(contains-instruction: $N_8740349236493_134532154c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740349236493_134532154c isa instruction, has hash "N_8740349236493_134532154c"; 

insert
$N_8740349236493_134532154c_0 isa variable-ssa, has hash "N_8740349236493_134532154c_0", has var "var_1ac_22", has version 30, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349236493_134532154c_0, from-node: $N_8740349236493_134532154c) isa node-link; 

match
$N_8740349236493_134532154c isa instruction, has hash "N_8740349236493_134532154c"; 

insert
$N_8740349236493_134532154c_1 isa MLIL_VAR_SSA, has hash "N_8740349236493_134532154c_1", has edge-label "src";
(to-node: $N_8740349236493_134532154c_1, from-node: $N_8740349236493_134532154c) isa node-link; 

match
$N_8740349236493_134532154c_1 isa operation, has hash "N_8740349236493_134532154c_1"; 

insert
$N_8740349236493_134532154c_1_0 isa variable-ssa, has hash "N_8740349236493_134532154c_1_0", has var "eax_48", has version 60, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740349236493_134532154c_1_0, from-node: $N_8740349236493_134532154c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 303, has bb-end 309; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 303, has bb-end 309; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348395789_134532165c isa instruction, has hash "N_8740348395789_134532165c", has il-index 307, has asm-address "0x804cc45", has operation-type "MLIL_CALL_SSA", has ins-text "eax_49#61, mem#50 = 0x804c4c0(var_1ac_22#30, var_1a8_9#12, 0) @ mem#49";
(contains-instruction: $N_8740348395789_134532165c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348395789_134532165c isa instruction, has hash "N_8740348395789_134532165c"; 

insert
$N_8740348395789_134532165c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348395789_134532165c_0", has edge-label "output";
(to-node: $N_8740348395789_134532165c_0, from-node: $N_8740348395789_134532165c) isa node-link; 

match
$N_8740348395789_134532165c_0 isa operation, has hash "N_8740348395789_134532165c_0"; 

insert
$N_8740348395789_134532165c_0_0 isa constant, has hash "N_8740348395789_134532165c_0_0", has constant-value "50", has edge-label "dest_memory";
(to-node: $N_8740348395789_134532165c_0_0, from-node: $N_8740348395789_134532165c_0) isa node-link; 

match
$N_8740348395789_134532165c_0 isa operation, has hash "N_8740348395789_134532165c_0"; 

insert
$L_8740348395789_134532165c_0_1 isa list, has hash "L_8740348395789_134532165c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348395789_134532165c_0_1, from-node: $N_8740348395789_134532165c_0) isa node-link; 

match
$L_8740348395789_134532165c_0_1 isa list, has hash "L_8740348395789_134532165c_0_1"; 

insert
$N_8740348395789_134532165c_0_1_0 isa variable-ssa, has hash "N_8740348395789_134532165c_0_1_0", has var "eax_49", has version 61, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348395789_134532165c_0_1_0, from-node: $L_8740348395789_134532165c_0_1) isa node-link; 

match
$N_8740348395789_134532165c isa instruction, has hash "N_8740348395789_134532165c"; 

insert
$N_8740348395789_134532165c_1 isa MLIL_CONST_PTR, has hash "N_8740348395789_134532165c_1", has edge-label "dest";
(to-node: $N_8740348395789_134532165c_1, from-node: $N_8740348395789_134532165c) isa node-link; 

match
$N_8740348395789_134532165c_1 isa operation, has hash "N_8740348395789_134532165c_1"; 

insert
$N_8740348395789_134532165c_1_0 isa constant, has hash "N_8740348395789_134532165c_1_0", has constant-value "134530240", has edge-label "constant";
(to-node: $N_8740348395789_134532165c_1_0, from-node: $N_8740348395789_134532165c_1) isa node-link; 

match
$N_8740348395789_134532165c isa instruction, has hash "N_8740348395789_134532165c"; 

insert
$L_8740348395789_134532165c_2 isa list, has hash "L_8740348395789_134532165c_2", has list-size 3, has edge-label "params";
(to-node: $L_8740348395789_134532165c_2, from-node: $N_8740348395789_134532165c) isa node-link; 

match
$L_8740348395789_134532165c_2 isa list, has hash "L_8740348395789_134532165c_2"; 

insert
$N_8740348395789_134532165c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348395789_134532165c_2_0", has edge-label "0";
(to-node: $N_8740348395789_134532165c_2_0, from-node: $L_8740348395789_134532165c_2) isa node-link; 

match
$N_8740348395789_134532165c_2_0 isa operation, has hash "N_8740348395789_134532165c_2_0"; 

insert
$N_8740348395789_134532165c_2_0_0 isa variable-ssa, has hash "N_8740348395789_134532165c_2_0_0", has var "var_1ac_22", has version 30, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348395789_134532165c_2_0_0, from-node: $N_8740348395789_134532165c_2_0) isa node-link; 

match
$L_8740348395789_134532165c_2 isa list, has hash "L_8740348395789_134532165c_2"; 

insert
$N_8740348395789_134532165c_2_1 isa MLIL_VAR_SSA, has hash "N_8740348395789_134532165c_2_1", has edge-label "1";
(to-node: $N_8740348395789_134532165c_2_1, from-node: $L_8740348395789_134532165c_2) isa node-link; 

match
$N_8740348395789_134532165c_2_1 isa operation, has hash "N_8740348395789_134532165c_2_1"; 

insert
$N_8740348395789_134532165c_2_1_0 isa variable-ssa, has hash "N_8740348395789_134532165c_2_1_0", has var "var_1a8_9", has version 12, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348395789_134532165c_2_1_0, from-node: $N_8740348395789_134532165c_2_1) isa node-link; 

match
$L_8740348395789_134532165c_2 isa list, has hash "L_8740348395789_134532165c_2"; 

insert
$N_8740348395789_134532165c_2_2 isa MLIL_CONST_PTR, has hash "N_8740348395789_134532165c_2_2", has edge-label "2";
(to-node: $N_8740348395789_134532165c_2_2, from-node: $L_8740348395789_134532165c_2) isa node-link; 

match
$N_8740348395789_134532165c_2_2 isa operation, has hash "N_8740348395789_134532165c_2_2"; 

insert
$N_8740348395789_134532165c_2_2_0 isa constant, has hash "N_8740348395789_134532165c_2_2_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348395789_134532165c_2_2_0, from-node: $N_8740348395789_134532165c_2_2) isa node-link; 

match
$N_8740348395789_134532165c isa instruction, has hash "N_8740348395789_134532165c"; 

insert
$N_8740348395789_134532165c_3 isa constant, has hash "N_8740348395789_134532165c_3", has constant-value "49", has edge-label "src_memory";
(to-node: $N_8740348395789_134532165c_3, from-node: $N_8740348395789_134532165c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 303, has bb-end 309; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 303, has bb-end 309; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348744957_134532170c isa instruction, has hash "N_8740348744957_134532170c", has il-index 308, has asm-address "0x804cc4a", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi#31 = eax_49#61";
(contains-instruction: $N_8740348744957_134532170c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348744957_134532170c isa instruction, has hash "N_8740348744957_134532170c"; 

insert
$N_8740348744957_134532170c_0 isa variable-ssa, has hash "N_8740348744957_134532170c_0", has var "esi", has version 31, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348744957_134532170c_0, from-node: $N_8740348744957_134532170c) isa node-link; 

match
$N_8740348744957_134532170c isa instruction, has hash "N_8740348744957_134532170c"; 

insert
$N_8740348744957_134532170c_1 isa MLIL_VAR_SSA, has hash "N_8740348744957_134532170c_1", has edge-label "src";
(to-node: $N_8740348744957_134532170c_1, from-node: $N_8740348744957_134532170c) isa node-link; 

match
$N_8740348744957_134532170c_1 isa operation, has hash "N_8740348744957_134532170c_1"; 

insert
$N_8740348744957_134532170c_1_0 isa variable-ssa, has hash "N_8740348744957_134532170c_1_0", has var "eax_49", has version 61, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348744957_134532170c_1_0, from-node: $N_8740348744957_134532170c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 303, has bb-end 309; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 303, has bb-end 309; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348833805_134532174c isa instruction, has hash "N_8740348833805_134532174c", has il-index 309, has asm-address "0x804cc4e", has operation-type "MLIL_IF", has ins-text "if (esi#31 != 0) then 310 @ 0x0 else 311 @ 0x804cc57";
(contains-instruction: $N_8740348833805_134532174c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348833805_134532174c isa instruction, has hash "N_8740348833805_134532174c"; 

insert
$N_8740348833805_134532174c_0 isa MLIL_CMP_NE, has hash "N_8740348833805_134532174c_0", has edge-label "condition";
(to-node: $N_8740348833805_134532174c_0, from-node: $N_8740348833805_134532174c) isa node-link; 

match
$N_8740348833805_134532174c_0 isa operation, has hash "N_8740348833805_134532174c_0"; 

insert
$N_8740348833805_134532174c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348833805_134532174c_0_0", has edge-label "left";
(to-node: $N_8740348833805_134532174c_0_0, from-node: $N_8740348833805_134532174c_0) isa node-link; 

match
$N_8740348833805_134532174c_0_0 isa operation, has hash "N_8740348833805_134532174c_0_0"; 

insert
$N_8740348833805_134532174c_0_0_0 isa variable-ssa, has hash "N_8740348833805_134532174c_0_0_0", has var "esi", has version 31, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348833805_134532174c_0_0_0, from-node: $N_8740348833805_134532174c_0_0) isa node-link; 

match
$N_8740348833805_134532174c_0 isa operation, has hash "N_8740348833805_134532174c_0"; 

insert
$N_8740348833805_134532174c_0_1 isa MLIL_CONST, has hash "N_8740348833805_134532174c_0_1", has edge-label "right";
(to-node: $N_8740348833805_134532174c_0_1, from-node: $N_8740348833805_134532174c_0) isa node-link; 

match
$N_8740348833805_134532174c_0_1 isa operation, has hash "N_8740348833805_134532174c_0_1"; 

insert
$N_8740348833805_134532174c_0_1_0 isa constant, has hash "N_8740348833805_134532174c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348833805_134532174c_0_1_0, from-node: $N_8740348833805_134532174c_0_1) isa node-link; 

match
$N_8740348833805_134532174c isa instruction, has hash "N_8740348833805_134532174c"; 

insert
$N_8740348833805_134532174c_1 isa constant, has hash "N_8740348833805_134532174c_1", has constant-value "310", has edge-label "true";
(to-node: $N_8740348833805_134532174c_1, from-node: $N_8740348833805_134532174c) isa node-link; 

match
$N_8740348833805_134532174c isa instruction, has hash "N_8740348833805_134532174c"; 

insert
$N_8740348833805_134532174c_2 isa constant, has hash "N_8740348833805_134532174c_2", has constant-value "311", has edge-label "false";
(to-node: $N_8740348833805_134532174c_2, from-node: $N_8740348833805_134532174c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 310, has bb-end 310; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 311, has bb-end 312; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 311, has bb-end 312; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 311, has bb-end 312; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348412941_134532183c isa instruction, has hash "N_8740348412941_134532183c", has il-index 311, has asm-address "0x804cc57", has operation-type "MLIL_CALL_SSA", has ins-text "eax_50#62, mem#51 = 0x804afd0(eax_49#61, 0x804f009) @ mem#50";
(contains-instruction: $N_8740348412941_134532183c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348412941_134532183c isa instruction, has hash "N_8740348412941_134532183c"; 

insert
$N_8740348412941_134532183c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348412941_134532183c_0", has edge-label "output";
(to-node: $N_8740348412941_134532183c_0, from-node: $N_8740348412941_134532183c) isa node-link; 

match
$N_8740348412941_134532183c_0 isa operation, has hash "N_8740348412941_134532183c_0"; 

insert
$N_8740348412941_134532183c_0_0 isa constant, has hash "N_8740348412941_134532183c_0_0", has constant-value "51", has edge-label "dest_memory";
(to-node: $N_8740348412941_134532183c_0_0, from-node: $N_8740348412941_134532183c_0) isa node-link; 

match
$N_8740348412941_134532183c_0 isa operation, has hash "N_8740348412941_134532183c_0"; 

insert
$L_8740348412941_134532183c_0_1 isa list, has hash "L_8740348412941_134532183c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348412941_134532183c_0_1, from-node: $N_8740348412941_134532183c_0) isa node-link; 

match
$L_8740348412941_134532183c_0_1 isa list, has hash "L_8740348412941_134532183c_0_1"; 

insert
$N_8740348412941_134532183c_0_1_0 isa variable-ssa, has hash "N_8740348412941_134532183c_0_1_0", has var "eax_50", has version 62, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348412941_134532183c_0_1_0, from-node: $L_8740348412941_134532183c_0_1) isa node-link; 

match
$N_8740348412941_134532183c isa instruction, has hash "N_8740348412941_134532183c"; 

insert
$N_8740348412941_134532183c_1 isa MLIL_CONST_PTR, has hash "N_8740348412941_134532183c_1", has edge-label "dest";
(to-node: $N_8740348412941_134532183c_1, from-node: $N_8740348412941_134532183c) isa node-link; 

match
$N_8740348412941_134532183c_1 isa operation, has hash "N_8740348412941_134532183c_1"; 

insert
$N_8740348412941_134532183c_1_0 isa constant, has hash "N_8740348412941_134532183c_1_0", has constant-value "134524880", has edge-label "constant";
(to-node: $N_8740348412941_134532183c_1_0, from-node: $N_8740348412941_134532183c_1) isa node-link; 

match
$N_8740348412941_134532183c isa instruction, has hash "N_8740348412941_134532183c"; 

insert
$L_8740348412941_134532183c_2 isa list, has hash "L_8740348412941_134532183c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740348412941_134532183c_2, from-node: $N_8740348412941_134532183c) isa node-link; 

match
$L_8740348412941_134532183c_2 isa list, has hash "L_8740348412941_134532183c_2"; 

insert
$N_8740348412941_134532183c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348412941_134532183c_2_0", has edge-label "0";
(to-node: $N_8740348412941_134532183c_2_0, from-node: $L_8740348412941_134532183c_2) isa node-link; 

match
$N_8740348412941_134532183c_2_0 isa operation, has hash "N_8740348412941_134532183c_2_0"; 

insert
$N_8740348412941_134532183c_2_0_0 isa variable-ssa, has hash "N_8740348412941_134532183c_2_0_0", has var "eax_49", has version 61, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348412941_134532183c_2_0_0, from-node: $N_8740348412941_134532183c_2_0) isa node-link; 

match
$L_8740348412941_134532183c_2 isa list, has hash "L_8740348412941_134532183c_2"; 

insert
$N_8740348412941_134532183c_2_1 isa MLIL_CONST, has hash "N_8740348412941_134532183c_2_1", has edge-label "1";
(to-node: $N_8740348412941_134532183c_2_1, from-node: $L_8740348412941_134532183c_2) isa node-link; 

match
$N_8740348412941_134532183c_2_1 isa operation, has hash "N_8740348412941_134532183c_2_1"; 

insert
$N_8740348412941_134532183c_2_1_0 isa constant, has hash "N_8740348412941_134532183c_2_1_0", has constant-value "134541321", has edge-label "constant";
(to-node: $N_8740348412941_134532183c_2_1_0, from-node: $N_8740348412941_134532183c_2_1) isa node-link; 

match
$N_8740348412941_134532183c isa instruction, has hash "N_8740348412941_134532183c"; 

insert
$N_8740348412941_134532183c_3 isa constant, has hash "N_8740348412941_134532183c_3", has constant-value "50", has edge-label "src_memory";
(to-node: $N_8740348412941_134532183c_3, from-node: $N_8740348412941_134532183c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 311, has bb-end 312; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 311, has bb-end 312; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348900857_134532190c isa instruction, has hash "N_8740348900857_134532190c", has il-index 312, has asm-address "0x804cc5e", has operation-type "MLIL_IF", has ins-text "if (edi#11 == 0) then 313 @ 0x0 else 314 @ 0x804cc60";
(contains-instruction: $N_8740348900857_134532190c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348900857_134532190c isa instruction, has hash "N_8740348900857_134532190c"; 

insert
$N_8740348900857_134532190c_0 isa MLIL_CMP_E, has hash "N_8740348900857_134532190c_0", has edge-label "condition";
(to-node: $N_8740348900857_134532190c_0, from-node: $N_8740348900857_134532190c) isa node-link; 

match
$N_8740348900857_134532190c_0 isa operation, has hash "N_8740348900857_134532190c_0"; 

insert
$N_8740348900857_134532190c_0_0 isa MLIL_VAR_SSA, has hash "N_8740348900857_134532190c_0_0", has edge-label "left";
(to-node: $N_8740348900857_134532190c_0_0, from-node: $N_8740348900857_134532190c_0) isa node-link; 

match
$N_8740348900857_134532190c_0_0 isa operation, has hash "N_8740348900857_134532190c_0_0"; 

insert
$N_8740348900857_134532190c_0_0_0 isa variable-ssa, has hash "N_8740348900857_134532190c_0_0_0", has var "edi", has version 11, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348900857_134532190c_0_0_0, from-node: $N_8740348900857_134532190c_0_0) isa node-link; 

match
$N_8740348900857_134532190c_0 isa operation, has hash "N_8740348900857_134532190c_0"; 

insert
$N_8740348900857_134532190c_0_1 isa MLIL_CONST, has hash "N_8740348900857_134532190c_0_1", has edge-label "right";
(to-node: $N_8740348900857_134532190c_0_1, from-node: $N_8740348900857_134532190c_0) isa node-link; 

match
$N_8740348900857_134532190c_0_1 isa operation, has hash "N_8740348900857_134532190c_0_1"; 

insert
$N_8740348900857_134532190c_0_1_0 isa constant, has hash "N_8740348900857_134532190c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8740348900857_134532190c_0_1_0, from-node: $N_8740348900857_134532190c_0_1) isa node-link; 

match
$N_8740348900857_134532190c isa instruction, has hash "N_8740348900857_134532190c"; 

insert
$N_8740348900857_134532190c_1 isa constant, has hash "N_8740348900857_134532190c_1", has constant-value "313", has edge-label "true";
(to-node: $N_8740348900857_134532190c_1, from-node: $N_8740348900857_134532190c) isa node-link; 

match
$N_8740348900857_134532190c isa instruction, has hash "N_8740348900857_134532190c"; 

insert
$N_8740348900857_134532190c_2 isa constant, has hash "N_8740348900857_134532190c_2", has constant-value "314", has edge-label "false";
(to-node: $N_8740348900857_134532190c_2, from-node: $N_8740348900857_134532190c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 313, has bb-end 313; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 

insert 
$bb isa basic-block, has bb-start 314, has bb-end 316; 
(contains-basic-block: $bb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 314, has bb-end 316; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 314, has bb-end 316; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348832005_134532192c isa instruction, has hash "N_8740348832005_134532192c", has il-index 314, has asm-address "0x804cc60", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_51#63 = var_198 @ mem#51";
(contains-instruction: $N_8740348832005_134532192c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348832005_134532192c isa instruction, has hash "N_8740348832005_134532192c"; 

insert
$N_8740348832005_134532192c_0 isa variable-ssa, has hash "N_8740348832005_134532192c_0", has var "eax_51", has version 63, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348832005_134532192c_0, from-node: $N_8740348832005_134532192c) isa node-link; 

match
$N_8740348832005_134532192c isa instruction, has hash "N_8740348832005_134532192c"; 

insert
$N_8740348832005_134532192c_1 isa MLIL_VAR_ALIASED, has hash "N_8740348832005_134532192c_1", has edge-label "src";
(to-node: $N_8740348832005_134532192c_1, from-node: $N_8740348832005_134532192c) isa node-link; 

match
$N_8740348832005_134532192c_1 isa operation, has hash "N_8740348832005_134532192c_1"; 

insert
$N_8740348832005_134532192c_1_0 isa variable-ssa, has hash "N_8740348832005_134532192c_1_0", has var "var_198", has version 51, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348832005_134532192c_1_0, from-node: $N_8740348832005_134532192c_1) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 314, has bb-end 316; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 314, has bb-end 316; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348329221_134532207c isa instruction, has hash "N_8740348329221_134532207c", has il-index 315, has asm-address "0x804cc6f", has operation-type "MLIL_CALL_SSA", has ins-text "eax_50#64, mem#52 = 0x804afd0(eax_51#63, 0x804f02a) @ mem#51";
(contains-instruction: $N_8740348329221_134532207c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348329221_134532207c isa instruction, has hash "N_8740348329221_134532207c"; 

insert
$N_8740348329221_134532207c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8740348329221_134532207c_0", has edge-label "output";
(to-node: $N_8740348329221_134532207c_0, from-node: $N_8740348329221_134532207c) isa node-link; 

match
$N_8740348329221_134532207c_0 isa operation, has hash "N_8740348329221_134532207c_0"; 

insert
$N_8740348329221_134532207c_0_0 isa constant, has hash "N_8740348329221_134532207c_0_0", has constant-value "52", has edge-label "dest_memory";
(to-node: $N_8740348329221_134532207c_0_0, from-node: $N_8740348329221_134532207c_0) isa node-link; 

match
$N_8740348329221_134532207c_0 isa operation, has hash "N_8740348329221_134532207c_0"; 

insert
$L_8740348329221_134532207c_0_1 isa list, has hash "L_8740348329221_134532207c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8740348329221_134532207c_0_1, from-node: $N_8740348329221_134532207c_0) isa node-link; 

match
$L_8740348329221_134532207c_0_1 isa list, has hash "L_8740348329221_134532207c_0_1"; 

insert
$N_8740348329221_134532207c_0_1_0 isa variable-ssa, has hash "N_8740348329221_134532207c_0_1_0", has var "eax_50", has version 64, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348329221_134532207c_0_1_0, from-node: $L_8740348329221_134532207c_0_1) isa node-link; 

match
$N_8740348329221_134532207c isa instruction, has hash "N_8740348329221_134532207c"; 

insert
$N_8740348329221_134532207c_1 isa MLIL_CONST_PTR, has hash "N_8740348329221_134532207c_1", has edge-label "dest";
(to-node: $N_8740348329221_134532207c_1, from-node: $N_8740348329221_134532207c) isa node-link; 

match
$N_8740348329221_134532207c_1 isa operation, has hash "N_8740348329221_134532207c_1"; 

insert
$N_8740348329221_134532207c_1_0 isa constant, has hash "N_8740348329221_134532207c_1_0", has constant-value "134524880", has edge-label "constant";
(to-node: $N_8740348329221_134532207c_1_0, from-node: $N_8740348329221_134532207c_1) isa node-link; 

match
$N_8740348329221_134532207c isa instruction, has hash "N_8740348329221_134532207c"; 

insert
$L_8740348329221_134532207c_2 isa list, has hash "L_8740348329221_134532207c_2", has list-size 2, has edge-label "params";
(to-node: $L_8740348329221_134532207c_2, from-node: $N_8740348329221_134532207c) isa node-link; 

match
$L_8740348329221_134532207c_2 isa list, has hash "L_8740348329221_134532207c_2"; 

insert
$N_8740348329221_134532207c_2_0 isa MLIL_VAR_SSA, has hash "N_8740348329221_134532207c_2_0", has edge-label "0";
(to-node: $N_8740348329221_134532207c_2_0, from-node: $L_8740348329221_134532207c_2) isa node-link; 

match
$N_8740348329221_134532207c_2_0 isa operation, has hash "N_8740348329221_134532207c_2_0"; 

insert
$N_8740348329221_134532207c_2_0_0 isa variable-ssa, has hash "N_8740348329221_134532207c_2_0_0", has var "eax_51", has version 63, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_handle_register_user";
(to-node: $N_8740348329221_134532207c_2_0_0, from-node: $N_8740348329221_134532207c_2_0) isa node-link; 

match
$L_8740348329221_134532207c_2 isa list, has hash "L_8740348329221_134532207c_2"; 

insert
$N_8740348329221_134532207c_2_1 isa MLIL_CONST, has hash "N_8740348329221_134532207c_2_1", has edge-label "1";
(to-node: $N_8740348329221_134532207c_2_1, from-node: $L_8740348329221_134532207c_2) isa node-link; 

match
$N_8740348329221_134532207c_2_1 isa operation, has hash "N_8740348329221_134532207c_2_1"; 

insert
$N_8740348329221_134532207c_2_1_0 isa constant, has hash "N_8740348329221_134532207c_2_1_0", has constant-value "134541354", has edge-label "constant";
(to-node: $N_8740348329221_134532207c_2_1_0, from-node: $N_8740348329221_134532207c_2_1) isa node-link; 

match
$N_8740348329221_134532207c isa instruction, has hash "N_8740348329221_134532207c"; 

insert
$N_8740348329221_134532207c_3 isa constant, has hash "N_8740348329221_134532207c_3", has constant-value "51", has edge-label "src_memory";
(to-node: $N_8740348329221_134532207c_3, from-node: $N_8740348329221_134532207c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 314, has bb-end 316; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$bb isa basic-block, has bb-start 314, has bb-end 316; 
(in-function: $func_cgc_handle_register_user, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8740348838653_134532212c isa instruction, has hash "N_8740348838653_134532212c", has il-index 316, has asm-address "0x804cc74", has operation-type "MLIL_GOTO", has ins-text "goto 83 @ 0x804ccc1";
(contains-instruction: $N_8740348838653_134532212c, in-basic-block: $bb) isa has-instruction; 

match
$N_8740348838653_134532212c isa instruction, has hash "N_8740348838653_134532212c"; 

insert
$N_8740348838653_134532212c_0 isa constant, has hash "N_8740348838653_134532212c_0", has constant-value "83", has edge-label "dest";
(to-node: $N_8740348838653_134532212c_0, from-node: $N_8740348838653_134532212c) isa node-link; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 6, has bb-start 0; 
$tobb   isa basic-block, has bb-end 7, has bb-start 7; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 6, has bb-start 0; 
$tobb   isa basic-block, has bb-end 13, has bb-start 8; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 7, has bb-start 7; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 13, has bb-start 8; 
$tobb   isa basic-block, has bb-end 31, has bb-start 30; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 13, has bb-start 8; 
$tobb   isa basic-block, has bb-end 34, has bb-start 32; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 29, has bb-start 14; 
$tobb   isa basic-block, has bb-end 35, has bb-start 35; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 29, has bb-start 14; 
$tobb   isa basic-block, has bb-end 38, has bb-start 36; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 31, has bb-start 30; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 34, has bb-start 32; 
$tobb   isa basic-block, has bb-end 39, has bb-start 39; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 34, has bb-start 32; 
$tobb   isa basic-block, has bb-end 42, has bb-start 40; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 35, has bb-start 35; 
$tobb   isa basic-block, has bb-end 46, has bb-start 43; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 38, has bb-start 36; 
$tobb   isa basic-block, has bb-end 46, has bb-start 43; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 39, has bb-start 39; 
$tobb   isa basic-block, has bb-end 58, has bb-start 47; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 42, has bb-start 40; 
$tobb   isa basic-block, has bb-end 66, has bb-start 59; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 46, has bb-start 43; 
$tobb   isa basic-block, has bb-end 67, has bb-start 67; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 46, has bb-start 43; 
$tobb   isa basic-block, has bb-end 69, has bb-start 68; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 58, has bb-start 47; 
$tobb   isa basic-block, has bb-end 70, has bb-start 70; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 58, has bb-start 47; 
$tobb   isa basic-block, has bb-end 75, has bb-start 71; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 66, has bb-start 59; 
$tobb   isa basic-block, has bb-end 77, has bb-start 76; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 66, has bb-start 59; 
$tobb   isa basic-block, has bb-end 82, has bb-start 78; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 67, has bb-start 67; 
$tobb   isa basic-block, has bb-end 94, has bb-start 83; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 69, has bb-start 68; 
$tobb   isa basic-block, has bb-end 95, has bb-start 95; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 69, has bb-start 68; 
$tobb   isa basic-block, has bb-end 98, has bb-start 96; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 70, has bb-start 70; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 75, has bb-start 71; 
$tobb   isa basic-block, has bb-end 100, has bb-start 99; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 75, has bb-start 71; 
$tobb   isa basic-block, has bb-end 103, has bb-start 101; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 77, has bb-start 76; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 82, has bb-start 78; 
$tobb   isa basic-block, has bb-end 104, has bb-start 104; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 82, has bb-start 78; 
$tobb   isa basic-block, has bb-end 105, has bb-start 105; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 95, has bb-start 95; 
$tobb   isa basic-block, has bb-end 94, has bb-start 83; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 98, has bb-start 96; 
$tobb   isa basic-block, has bb-end 94, has bb-start 83; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 100, has bb-start 99; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 103, has bb-start 101; 
$tobb   isa basic-block, has bb-end 106, has bb-start 106; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 103, has bb-start 101; 
$tobb   isa basic-block, has bb-end 109, has bb-start 107; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 104, has bb-start 104; 
$tobb   isa basic-block, has bb-end 66, has bb-start 59; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 105, has bb-start 105; 
$tobb   isa basic-block, has bb-end 58, has bb-start 47; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 106, has bb-start 106; 
$tobb   isa basic-block, has bb-end 120, has bb-start 110; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 109, has bb-start 107; 
$tobb   isa basic-block, has bb-end 128, has bb-start 121; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 120, has bb-start 110; 
$tobb   isa basic-block, has bb-end 134, has bb-start 129; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 120, has bb-start 110; 
$tobb   isa basic-block, has bb-end 136, has bb-start 135; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 128, has bb-start 121; 
$tobb   isa basic-block, has bb-end 138, has bb-start 137; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 128, has bb-start 121; 
$tobb   isa basic-block, has bb-end 143, has bb-start 139; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 134, has bb-start 129; 
$tobb   isa basic-block, has bb-end 145, has bb-start 144; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 134, has bb-start 129; 
$tobb   isa basic-block, has bb-end 149, has bb-start 146; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 136, has bb-start 135; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 138, has bb-start 137; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 143, has bb-start 139; 
$tobb   isa basic-block, has bb-end 150, has bb-start 150; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 143, has bb-start 139; 
$tobb   isa basic-block, has bb-end 151, has bb-start 151; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 145, has bb-start 144; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 149, has bb-start 146; 
$tobb   isa basic-block, has bb-end 155, has bb-start 152; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 149, has bb-start 146; 
$tobb   isa basic-block, has bb-end 159, has bb-start 156; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 150, has bb-start 150; 
$tobb   isa basic-block, has bb-end 128, has bb-start 121; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 151, has bb-start 151; 
$tobb   isa basic-block, has bb-end 120, has bb-start 110; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 155, has bb-start 152; 
$tobb   isa basic-block, has bb-end 160, has bb-start 160; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 155, has bb-start 152; 
$tobb   isa basic-block, has bb-end 166, has bb-start 161; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 159, has bb-start 156; 
$tobb   isa basic-block, has bb-end 167, has bb-start 167; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 159, has bb-start 156; 
$tobb   isa basic-block, has bb-end 170, has bb-start 168; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 160, has bb-start 160; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 166, has bb-start 161; 
$tobb   isa basic-block, has bb-end 172, has bb-start 171; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 166, has bb-start 161; 
$tobb   isa basic-block, has bb-end 178, has bb-start 173; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 167, has bb-start 167; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 170, has bb-start 168; 
$tobb   isa basic-block, has bb-end 190, has bb-start 179; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 172, has bb-start 171; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 178, has bb-start 173; 
$tobb   isa basic-block, has bb-end 191, has bb-start 191; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 178, has bb-start 173; 
$tobb   isa basic-block, has bb-end 196, has bb-start 192; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 190, has bb-start 179; 
$tobb   isa basic-block, has bb-end 201, has bb-start 197; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 190, has bb-start 179; 
$tobb   isa basic-block, has bb-end 204, has bb-start 202; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 191, has bb-start 191; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 196, has bb-start 192; 
$tobb   isa basic-block, has bb-end 206, has bb-start 205; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 196, has bb-start 192; 
$tobb   isa basic-block, has bb-end 212, has bb-start 207; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 201, has bb-start 197; 
$tobb   isa basic-block, has bb-end 217, has bb-start 213; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 204, has bb-start 202; 
$tobb   isa basic-block, has bb-end 218, has bb-start 218; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 204, has bb-start 202; 
$tobb   isa basic-block, has bb-end 219, has bb-start 219; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 206, has bb-start 205; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 212, has bb-start 207; 
$tobb   isa basic-block, has bb-end 220, has bb-start 220; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 212, has bb-start 207; 
$tobb   isa basic-block, has bb-end 223, has bb-start 221; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 217, has bb-start 213; 
$tobb   isa basic-block, has bb-end 224, has bb-start 224; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 217, has bb-start 213; 
$tobb   isa basic-block, has bb-end 225, has bb-start 225; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 218, has bb-start 218; 
$tobb   isa basic-block, has bb-end 190, has bb-start 179; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 219, has bb-start 219; 
$tobb   isa basic-block, has bb-end 217, has bb-start 213; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 220, has bb-start 220; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 223, has bb-start 221; 
$tobb   isa basic-block, has bb-end 253, has bb-start 226; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 224, has bb-start 224; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 225, has bb-start 225; 
$tobb   isa basic-block, has bb-end 271, has bb-start 254; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 253, has bb-start 226; 
$tobb   isa basic-block, has bb-end 272, has bb-start 272; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 253, has bb-start 226; 
$tobb   isa basic-block, has bb-end 276, has bb-start 273; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 271, has bb-start 254; 
$tobb   isa basic-block, has bb-end 277, has bb-start 277; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 271, has bb-start 254; 
$tobb   isa basic-block, has bb-end 279, has bb-start 278; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 272, has bb-start 272; 
$tobb   isa basic-block, has bb-end 253, has bb-start 226; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 276, has bb-start 273; 
$tobb   isa basic-block, has bb-end 271, has bb-start 254; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 277, has bb-start 277; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 279, has bb-start 278; 
$tobb   isa basic-block, has bb-end 280, has bb-start 280; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 279, has bb-start 278; 
$tobb   isa basic-block, has bb-end 286, has bb-start 281; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 280, has bb-start 280; 
$tobb   isa basic-block, has bb-end 298, has bb-start 287; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 286, has bb-start 281; 
$tobb   isa basic-block, has bb-end 299, has bb-start 299; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 286, has bb-start 281; 
$tobb   isa basic-block, has bb-end 301, has bb-start 300; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 298, has bb-start 287; 
$tobb   isa basic-block, has bb-end 302, has bb-start 302; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 298, has bb-start 287; 
$tobb   isa basic-block, has bb-end 309, has bb-start 303; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 299, has bb-start 299; 
$tobb   isa basic-block, has bb-end 298, has bb-start 287; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 301, has bb-start 300; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 302, has bb-start 302; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 309, has bb-start 303; 
$tobb   isa basic-block, has bb-end 310, has bb-start 310; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 309, has bb-start 303; 
$tobb   isa basic-block, has bb-end 312, has bb-start 311; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 310, has bb-start 310; 
$tobb   isa basic-block, has bb-end 29, has bb-start 14; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 312, has bb-start 311; 
$tobb   isa basic-block, has bb-end 313, has bb-start 313; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 312, has bb-start 311; 
$tobb   isa basic-block, has bb-end 316, has bb-start 314; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 313, has bb-start 313; 
$tobb   isa basic-block, has bb-end 94, has bb-start 83; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_handle_register_user isa function, has name "cgc_handle_register_user"; 
$frombb isa basic-block, has bb-end 316, has bb-start 314; 
$tobb   isa basic-block, has bb-end 94, has bb-start 83; 
(contains-basic-block: $frombb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_handle_register_user) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 
