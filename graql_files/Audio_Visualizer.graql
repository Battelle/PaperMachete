insert 

## ENTITIES #####################################
function sub entity
	plays in-function
	has name
	has asm-address
	has stack;

basic-block sub entity
	plays from-basic-block 
	plays to-basic-block
	plays in-basic-block 
	plays contains-basic-block
	has bb-start
	has bb-end;

instruction sub entity
	plays from-node
	plays to-node
	plays in-instruction
	plays contains-instruction
	has hash
	has il-index
	has asm-address
	has ins-text
	has operation-type;

operation sub entity
	plays from-node
	plays to-node
	plays in-operation
	plays contains-operation
	has hash
	has edge-label;

constant sub entity
	plays from-node
	plays to-node
	has hash
	has constant-value
	has edge-label;

variable sub entity
	plays from-node
	plays to-node
	has hash
	has var
	has edge-label
	has var-type
	has var-size
	has var-func;

variable-ssa sub entity
	plays from-node
	plays to-node
	plays trace
	has hash
	has var
	has version
	has edge-label
	has var-type
	has var-size
	has var-func;

list sub entity
	plays from-node
	plays to-node
	has hash
	has list-size
	has edge-label;


## SUB ENTITIES #################################
#### OPERATIONS #################################
MLIL_NOP sub operation;
MLIL_SET_VAR sub operation;
MLIL_SET_VAR_FIELD sub operation;
MLIL_SET_VAR_SPLIT sub operation;
MLIL_LOAD sub operation;
MLIL_STORE sub operation;
MLIL_VAR sub operation
	has var;
MLIL_VAR_FIELD sub operation;
MLIL_ADDRESS_OF sub operation;
MLIL_ADDRESS_OF_FIELD sub operation;
MLIL_CONST sub operation;
MLIL_CONST_PTR sub operation;
MLIL_ADD sub operation;
MLIL_ADC sub operation;
MLIL_SUB sub operation;
MLIL_SBB sub operation;
MLIL_AND sub operation;
MLIL_OR sub operation;
MLIL_XOR sub operation;
MLIL_LSL sub operation;
MLIL_LSR sub operation;
MLIL_ASR sub operation;
MLIL_ROL sub operation;
MLIL_RLC sub operation;
MLIL_ROR sub operation;
MLIL_RRC sub operation;
MLIL_MUL sub operation;
MLIL_MULU_DP sub operation;
MLIL_MULS_DP sub operation;
MLIL_DIVU sub operation;
MLIL_DIVU_DP sub operation;
MLIL_DIVS sub operation;
MLIL_DIVS_DP sub operation;
MLIL_MODU sub operation;
MLIL_MODU_DP sub operation;
MLIL_MODS sub operation;
MLIL_MODS_DP sub operation;
MLIL_NEG sub operation;
MLIL_NOT sub operation;
MLIL_SX sub operation;
MLIL_ZX sub operation;
MLIL_LOW_PART sub operation;
MLIL_JUMP sub operation;
MLIL_JUMP_TO sub operation;
MLIL_CALL sub operation;
MLIL_CALL_UNTYPED sub operation;
MLIL_CALL_OUTPUT sub operation;
MLIL_CALL_PARAM sub operation;
MLIL_RET sub operation;
MLIL_NORET sub operation;
MLIL_IF sub operation;
MLIL_GOTO sub operation;
MLIL_CMP_E sub operation;
MLIL_CMP_NE sub operation;
MLIL_CMP_SLT sub operation;
MLIL_CMP_ULT sub operation;
MLIL_CMP_SLE sub operation;
MLIL_CMP_ULE sub operation;
MLIL_CMP_SGE sub operation;
MLIL_CMP_UGE sub operation;
MLIL_CMP_SGT sub operation;
MLIL_CMP_UGT sub operation;
MLIL_TEST_BIT sub operation;
MLIL_BOOL_TO_INT sub operation;
MLIL_ADD_OVERFLOW sub operation;
MLIL_SYSCALL sub operation;
MLIL_SYSCALL_UNTYPED sub operation;
MLIL_BP sub operation;
MLIL_TRAP sub operation;
MLIL_UNDEF sub operation;
MLIL_UNIMPL sub operation;
MLIL_UNIMPL_MEM sub operation;
MLIL_IMPORT sub operation;
MLIL_SET_VAR_SSA sub operation;
MLIL_SET_VAR_SSA_FIELD sub operation;
MLIL_SET_VAR_SPLIT_SSA sub operation;
MLIL_SET_VAR_ALIASED sub operation;
MLIL_SET_VAR_ALIASED_FIELD sub operation;
MLIL_VAR_SSA sub operation;
MLIL_VAR_SSA_FIELD sub operation;
MLIL_VAR_ALIASED sub operation;
MLIL_VAR_ALIASED_FIELD sub operation;
MLIL_CALL_SSA sub operation;
MLIL_CALL_UNTYPED_SSA sub operation;
MLIL_SYSCALL_SSA sub operation;
MLIL_SYSCALL_UNTYPED_SSA sub operation;
MLIL_CALL_OUTPUT_SSA sub operation;
MLIL_CALL_PARAM_SSA sub operation;
MLIL_LOAD_SSA sub operation;
MLIL_STORE_SSA sub operation;
MLIL_VAR_PHI sub operation;
MLIL_MEM_PHI sub operation;


## RESOURCES (has) ##############################
stack			sub resource datatype string;
operation-type 		sub resource datatype string;
ins-text		sub resource datatype string;
name			sub resource datatype string;
asm-address 		sub resource datatype string;
edge-label 		sub resource datatype string;
constant-value 		sub resource datatype string;
hash 			sub resource datatype string;
var 			sub resource datatype string;
var-type 		sub resource datatype string;
var-func 		sub resource datatype string;
var-size		sub resource datatype long;
bb-start		sub resource datatype long;
bb-end			sub resource datatype long;
il-index 		sub resource datatype long;
list-size 		sub resource datatype long;
int 			sub resource datatype long;
version 		sub resource datatype long;
size			sub resource datatype long;
if-true 		sub resource datatype long;
if-false 		sub resource datatype long;


## ROLES (plays) ################################
in-function 			sub role;

from-basic-block 		sub role;
to-basic-block			sub role;
in-basic-block 			sub role;
contains-basic-block 	sub role;

in-instruction 			sub role;
contains-instruction 	sub role;

in-operation 			sub role;
contains-operation 		sub role;

from-node 				sub role;
to-node					sub role;

trace					sub role;
## RELATIONS ####################################
has-basic-block sub relation
	relates in-function
	relates contains-basic-block;

basic-block-edge sub relation
	relates from-basic-block
	relates to-basic-block;

has-instruction sub relation
    relates contains-instruction
    relates in-basic-block;

instruction-has-operation sub relation
	relates contains-operation
	relates in-instruction;

operation-has-operation sub relation
	relates contains-operation
	relates in-operation;

node-link sub relation
	relates from-node
	relates to-node;

trace-link sub relation
	relates trace;

trace-instruction sub relation
	relates trace;

trace-full sub relation
	relates trace;
## INFERRENCE RULES #############################
$share-var isa inference-rule
when {
	$v1 isa variable-ssa, has var $var;
	$v2 isa variable-ssa, has var $var;
	$v1 != $v2;
},
then {
	(trace:$v1, trace:$v2) isa trace-link;
};
$share-instruction isa inference-rule
when {
	$v1 isa variable-ssa;
	$v2 isa MLIL_VAR_SSA;
	(to-node:$v1, from-node:$v2);
	$v4 isa variable-ssa;
	$v3 isa MLIL_VAR_SSA;
	(to-node:$v4, from-node:$v3);
	(from-node:$inst, to-node:$v2);
	(from-node:$inst, to-node:$v3);
	$inst isa instruction;
	$v1 != $v2;$v2 != $v3;$v3 != $v4;$v1 != $v4;$v2 != $v4;$v1 != $v3;
},
then {
	(trace:$v1, trace:$v4) isa trace-instruction;
};
$trace-goal isa inference-rule
when {
	(trace:$v1,trace:$v2) isa trace-link;
	(trace:$v2,trace:$v3) isa trace-instruction;
	$v1 != $v2;$v2 != $v3;$v1 != $v3;
},
then {
	(trace:$v1, trace:$v3) isa trace-full;
};    

insert 
$func_cgc_validate_header isa function, has name "cgc_validate_header", has asm-address "0x804bbe0", has stack "[<var char* var_4c>, <var void* var_4c_1>, <var void* var_4c_2>, <var void* var_4c_3>, <var int32_t var_48>, <var int32_t var_44>, <var int32_t var_40>, <var int32_t var_3c>, <var int32_t var_38>, <var int32_t var_34>, <var int32_t var_30>, <var int32_t var_2c>, <var void* var_2c_1>, <var int32_t var_28>, <var int32_t var_24>, <var int32_t var_20>, <var int32_t var_1c>, <var char* var_18>, <var int32_t var_14>, <var int32_t __saved_esi>, <var int32_t __saved_edi>, <var int32_t __saved_ebx>, <var int32_t __saved_ebp>, <var void* const __return_addr>, <var char* arg1>]"; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732116579861_134527977c isa instruction, has hash "N_8732116579861_134527977c", has il-index 0, has asm-address "0x804bbe9", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax#1 = arg1#0";
(contains-instruction: $N_8732116579861_134527977c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732116579861_134527977c isa instruction, has hash "N_8732116579861_134527977c"; 

insert
$N_8732116579861_134527977c_0 isa variable-ssa, has hash "N_8732116579861_134527977c_0", has var "eax", has version 1, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732116579861_134527977c_0, from-node: $N_8732116579861_134527977c) isa node-link; 

match
$N_8732116579861_134527977c isa instruction, has hash "N_8732116579861_134527977c"; 

insert
$N_8732116579861_134527977c_1 isa MLIL_VAR_SSA, has hash "N_8732116579861_134527977c_1", has edge-label "src";
(to-node: $N_8732116579861_134527977c_1, from-node: $N_8732116579861_134527977c) isa node-link; 

match
$N_8732116579861_134527977c_1 isa operation, has hash "N_8732116579861_134527977c_1"; 

insert
$N_8732116579861_134527977c_1_0 isa variable-ssa, has hash "N_8732116579861_134527977c_1_0", has var "arg1", has version 0, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732116579861_134527977c_1_0, from-node: $N_8732116579861_134527977c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732116578605_134528009c isa instruction, has hash "N_8732116578605_134528009c", has il-index 1, has asm-address "0x804bc09", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_18#1 = eax#1";
(contains-instruction: $N_8732116578605_134528009c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732116578605_134528009c isa instruction, has hash "N_8732116578605_134528009c"; 

insert
$N_8732116578605_134528009c_0 isa variable-ssa, has hash "N_8732116578605_134528009c_0", has var "var_18", has version 1, has edge-label "dest", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732116578605_134528009c_0, from-node: $N_8732116578605_134528009c) isa node-link; 

match
$N_8732116578605_134528009c isa instruction, has hash "N_8732116578605_134528009c"; 

insert
$N_8732116578605_134528009c_1 isa MLIL_VAR_SSA, has hash "N_8732116578605_134528009c_1", has edge-label "src";
(to-node: $N_8732116578605_134528009c_1, from-node: $N_8732116578605_134528009c) isa node-link; 

match
$N_8732116578605_134528009c_1 isa operation, has hash "N_8732116578605_134528009c_1"; 

insert
$N_8732116578605_134528009c_1_0 isa variable-ssa, has hash "N_8732116578605_134528009c_1_0", has var "eax", has version 1, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732116578605_134528009c_1_0, from-node: $N_8732116578605_134528009c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115137045_134528024c isa instruction, has hash "N_8732115137045_134528024c", has il-index 2, has asm-address "0x804bc18", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_1#2 = var_18#1";
(contains-instruction: $N_8732115137045_134528024c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115137045_134528024c isa instruction, has hash "N_8732115137045_134528024c"; 

insert
$N_8732115137045_134528024c_0 isa variable-ssa, has hash "N_8732115137045_134528024c_0", has var "eax_1", has version 2, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115137045_134528024c_0, from-node: $N_8732115137045_134528024c) isa node-link; 

match
$N_8732115137045_134528024c isa instruction, has hash "N_8732115137045_134528024c"; 

insert
$N_8732115137045_134528024c_1 isa MLIL_VAR_SSA, has hash "N_8732115137045_134528024c_1", has edge-label "src";
(to-node: $N_8732115137045_134528024c_1, from-node: $N_8732115137045_134528024c) isa node-link; 

match
$N_8732115137045_134528024c_1 isa operation, has hash "N_8732115137045_134528024c_1"; 

insert
$N_8732115137045_134528024c_1_0 isa variable-ssa, has hash "N_8732115137045_134528024c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115137045_134528024c_1_0, from-node: $N_8732115137045_134528024c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114837849_134528030c isa instruction, has hash "N_8732114837849_134528030c", has il-index 3, has asm-address "0x804bc1e", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_4c#1 = eax_1#2";
(contains-instruction: $N_8732114837849_134528030c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114837849_134528030c isa instruction, has hash "N_8732114837849_134528030c"; 

insert
$N_8732114837849_134528030c_0 isa variable-ssa, has hash "N_8732114837849_134528030c_0", has var "var_4c", has version 1, has edge-label "dest", has var-type "char*", has var-size -48, has var-func "cgc_validate_header";
(to-node: $N_8732114837849_134528030c_0, from-node: $N_8732114837849_134528030c) isa node-link; 

match
$N_8732114837849_134528030c isa instruction, has hash "N_8732114837849_134528030c"; 

insert
$N_8732114837849_134528030c_1 isa MLIL_VAR_SSA, has hash "N_8732114837849_134528030c_1", has edge-label "src";
(to-node: $N_8732114837849_134528030c_1, from-node: $N_8732114837849_134528030c) isa node-link; 

match
$N_8732114837849_134528030c_1 isa operation, has hash "N_8732114837849_134528030c_1"; 

insert
$N_8732114837849_134528030c_1_0 isa variable-ssa, has hash "N_8732114837849_134528030c_1_0", has var "eax_1", has version 2, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114837849_134528030c_1_0, from-node: $N_8732114837849_134528030c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114935317_134528048c isa instruction, has hash "N_8732114935317_134528048c", has il-index 4, has asm-address "0x804bc30", has operation-type "MLIL_CALL_SSA", has ins-text "eax_2#3, mem#1 = 0x8049ce0(var_4c#1, 0x804d447, 4) @ mem#0";
(contains-instruction: $N_8732114935317_134528048c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114935317_134528048c isa instruction, has hash "N_8732114935317_134528048c"; 

insert
$N_8732114935317_134528048c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8732114935317_134528048c_0", has edge-label "output";
(to-node: $N_8732114935317_134528048c_0, from-node: $N_8732114935317_134528048c) isa node-link; 

match
$N_8732114935317_134528048c_0 isa operation, has hash "N_8732114935317_134528048c_0"; 

insert
$N_8732114935317_134528048c_0_0 isa constant, has hash "N_8732114935317_134528048c_0_0", has constant-value "1", has edge-label "dest_memory";
(to-node: $N_8732114935317_134528048c_0_0, from-node: $N_8732114935317_134528048c_0) isa node-link; 

match
$N_8732114935317_134528048c_0 isa operation, has hash "N_8732114935317_134528048c_0"; 

insert
$L_8732114935317_134528048c_0_1 isa list, has hash "L_8732114935317_134528048c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8732114935317_134528048c_0_1, from-node: $N_8732114935317_134528048c_0) isa node-link; 

match
$L_8732114935317_134528048c_0_1 isa list, has hash "L_8732114935317_134528048c_0_1"; 

insert
$N_8732114935317_134528048c_0_1_0 isa variable-ssa, has hash "N_8732114935317_134528048c_0_1_0", has var "eax_2", has version 3, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114935317_134528048c_0_1_0, from-node: $L_8732114935317_134528048c_0_1) isa node-link; 

match
$N_8732114935317_134528048c isa instruction, has hash "N_8732114935317_134528048c"; 

insert
$N_8732114935317_134528048c_1 isa MLIL_CONST_PTR, has hash "N_8732114935317_134528048c_1", has edge-label "dest";
(to-node: $N_8732114935317_134528048c_1, from-node: $N_8732114935317_134528048c) isa node-link; 

match
$N_8732114935317_134528048c_1 isa operation, has hash "N_8732114935317_134528048c_1"; 

insert
$N_8732114935317_134528048c_1_0 isa constant, has hash "N_8732114935317_134528048c_1_0", has constant-value "134520032", has edge-label "constant";
(to-node: $N_8732114935317_134528048c_1_0, from-node: $N_8732114935317_134528048c_1) isa node-link; 

match
$N_8732114935317_134528048c isa instruction, has hash "N_8732114935317_134528048c"; 

insert
$L_8732114935317_134528048c_2 isa list, has hash "L_8732114935317_134528048c_2", has list-size 3, has edge-label "params";
(to-node: $L_8732114935317_134528048c_2, from-node: $N_8732114935317_134528048c) isa node-link; 

match
$L_8732114935317_134528048c_2 isa list, has hash "L_8732114935317_134528048c_2"; 

insert
$N_8732114935317_134528048c_2_0 isa MLIL_VAR_SSA, has hash "N_8732114935317_134528048c_2_0", has edge-label "0";
(to-node: $N_8732114935317_134528048c_2_0, from-node: $L_8732114935317_134528048c_2) isa node-link; 

match
$N_8732114935317_134528048c_2_0 isa operation, has hash "N_8732114935317_134528048c_2_0"; 

insert
$N_8732114935317_134528048c_2_0_0 isa variable-ssa, has hash "N_8732114935317_134528048c_2_0_0", has var "var_4c", has version 1, has edge-label "src", has var-type "char*", has var-size -48, has var-func "cgc_validate_header";
(to-node: $N_8732114935317_134528048c_2_0_0, from-node: $N_8732114935317_134528048c_2_0) isa node-link; 

match
$L_8732114935317_134528048c_2 isa list, has hash "L_8732114935317_134528048c_2"; 

insert
$N_8732114935317_134528048c_2_1 isa MLIL_CONST_PTR, has hash "N_8732114935317_134528048c_2_1", has edge-label "1";
(to-node: $N_8732114935317_134528048c_2_1, from-node: $L_8732114935317_134528048c_2) isa node-link; 

match
$N_8732114935317_134528048c_2_1 isa operation, has hash "N_8732114935317_134528048c_2_1"; 

insert
$N_8732114935317_134528048c_2_1_0 isa constant, has hash "N_8732114935317_134528048c_2_1_0", has constant-value "134534215", has edge-label "constant";
(to-node: $N_8732114935317_134528048c_2_1_0, from-node: $N_8732114935317_134528048c_2_1) isa node-link; 

match
$L_8732114935317_134528048c_2 isa list, has hash "L_8732114935317_134528048c_2"; 

insert
$N_8732114935317_134528048c_2_2 isa MLIL_CONST, has hash "N_8732114935317_134528048c_2_2", has edge-label "2";
(to-node: $N_8732114935317_134528048c_2_2, from-node: $L_8732114935317_134528048c_2) isa node-link; 

match
$N_8732114935317_134528048c_2_2 isa operation, has hash "N_8732114935317_134528048c_2_2"; 

insert
$N_8732114935317_134528048c_2_2_0 isa constant, has hash "N_8732114935317_134528048c_2_2_0", has constant-value "4", has edge-label "constant";
(to-node: $N_8732114935317_134528048c_2_2_0, from-node: $N_8732114935317_134528048c_2_2) isa node-link; 

match
$N_8732114935317_134528048c isa instruction, has hash "N_8732114935317_134528048c"; 

insert
$N_8732114935317_134528048c_3 isa constant, has hash "N_8732114935317_134528048c_3", has constant-value "0", has edge-label "src_memory";
(to-node: $N_8732114935317_134528048c_3, from-node: $N_8732114935317_134528048c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 0, has bb-end 5; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114873597_134528056c isa instruction, has hash "N_8732114873597_134528056c", has il-index 5, has asm-address "0x804bc38", has operation-type "MLIL_IF", has ins-text "if (eax_2#3 == 0) then 6 @ 0x804bc4a else 17 @ 0x804bc3e";
(contains-instruction: $N_8732114873597_134528056c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114873597_134528056c isa instruction, has hash "N_8732114873597_134528056c"; 

insert
$N_8732114873597_134528056c_0 isa MLIL_CMP_E, has hash "N_8732114873597_134528056c_0", has edge-label "condition";
(to-node: $N_8732114873597_134528056c_0, from-node: $N_8732114873597_134528056c) isa node-link; 

match
$N_8732114873597_134528056c_0 isa operation, has hash "N_8732114873597_134528056c_0"; 

insert
$N_8732114873597_134528056c_0_0 isa MLIL_VAR_SSA, has hash "N_8732114873597_134528056c_0_0", has edge-label "left";
(to-node: $N_8732114873597_134528056c_0_0, from-node: $N_8732114873597_134528056c_0) isa node-link; 

match
$N_8732114873597_134528056c_0_0 isa operation, has hash "N_8732114873597_134528056c_0_0"; 

insert
$N_8732114873597_134528056c_0_0_0 isa variable-ssa, has hash "N_8732114873597_134528056c_0_0_0", has var "eax_2", has version 3, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114873597_134528056c_0_0_0, from-node: $N_8732114873597_134528056c_0_0) isa node-link; 

match
$N_8732114873597_134528056c_0 isa operation, has hash "N_8732114873597_134528056c_0"; 

insert
$N_8732114873597_134528056c_0_1 isa MLIL_CONST, has hash "N_8732114873597_134528056c_0_1", has edge-label "right";
(to-node: $N_8732114873597_134528056c_0_1, from-node: $N_8732114873597_134528056c_0) isa node-link; 

match
$N_8732114873597_134528056c_0_1 isa operation, has hash "N_8732114873597_134528056c_0_1"; 

insert
$N_8732114873597_134528056c_0_1_0 isa constant, has hash "N_8732114873597_134528056c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732114873597_134528056c_0_1_0, from-node: $N_8732114873597_134528056c_0_1) isa node-link; 

match
$N_8732114873597_134528056c isa instruction, has hash "N_8732114873597_134528056c"; 

insert
$N_8732114873597_134528056c_1 isa constant, has hash "N_8732114873597_134528056c_1", has constant-value "6", has edge-label "true";
(to-node: $N_8732114873597_134528056c_1, from-node: $N_8732114873597_134528056c) isa node-link; 

match
$N_8732114873597_134528056c isa instruction, has hash "N_8732114873597_134528056c"; 

insert
$N_8732114873597_134528056c_2 isa constant, has hash "N_8732114873597_134528056c_2", has constant-value "17", has edge-label "false";
(to-node: $N_8732114873597_134528056c_2, from-node: $N_8732114873597_134528056c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115100401_134528074c isa instruction, has hash "N_8732115100401_134528074c", has il-index 6, has asm-address "0x804bc4a", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_3#4 = var_18#1";
(contains-instruction: $N_8732115100401_134528074c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115100401_134528074c isa instruction, has hash "N_8732115100401_134528074c"; 

insert
$N_8732115100401_134528074c_0 isa variable-ssa, has hash "N_8732115100401_134528074c_0", has var "eax_3", has version 4, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115100401_134528074c_0, from-node: $N_8732115100401_134528074c) isa node-link; 

match
$N_8732115100401_134528074c isa instruction, has hash "N_8732115100401_134528074c"; 

insert
$N_8732115100401_134528074c_1 isa MLIL_VAR_SSA, has hash "N_8732115100401_134528074c_1", has edge-label "src";
(to-node: $N_8732115100401_134528074c_1, from-node: $N_8732115100401_134528074c) isa node-link; 

match
$N_8732115100401_134528074c_1 isa operation, has hash "N_8732115100401_134528074c_1"; 

insert
$N_8732115100401_134528074c_1_0 isa variable-ssa, has hash "N_8732115100401_134528074c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115100401_134528074c_1_0, from-node: $N_8732115100401_134528074c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115385881_134528077c isa instruction, has hash "N_8732115385881_134528077c", has il-index 7, has asm-address "0x804bc4d", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_4#5 = [eax_3#4 + 4].d @ mem#1";
(contains-instruction: $N_8732115385881_134528077c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115385881_134528077c isa instruction, has hash "N_8732115385881_134528077c"; 

insert
$N_8732115385881_134528077c_0 isa variable-ssa, has hash "N_8732115385881_134528077c_0", has var "eax_4", has version 5, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115385881_134528077c_0, from-node: $N_8732115385881_134528077c) isa node-link; 

match
$N_8732115385881_134528077c isa instruction, has hash "N_8732115385881_134528077c"; 

insert
$N_8732115385881_134528077c_1 isa MLIL_LOAD_SSA, has hash "N_8732115385881_134528077c_1", has edge-label "src";
(to-node: $N_8732115385881_134528077c_1, from-node: $N_8732115385881_134528077c) isa node-link; 

match
$N_8732115385881_134528077c_1 isa operation, has hash "N_8732115385881_134528077c_1"; 

insert
$N_8732115385881_134528077c_1_0 isa MLIL_ADD, has hash "N_8732115385881_134528077c_1_0", has edge-label "src";
(to-node: $N_8732115385881_134528077c_1_0, from-node: $N_8732115385881_134528077c_1) isa node-link; 

match
$N_8732115385881_134528077c_1_0 isa operation, has hash "N_8732115385881_134528077c_1_0"; 

insert
$N_8732115385881_134528077c_1_0_0 isa MLIL_VAR_SSA, has hash "N_8732115385881_134528077c_1_0_0", has edge-label "left";
(to-node: $N_8732115385881_134528077c_1_0_0, from-node: $N_8732115385881_134528077c_1_0) isa node-link; 

match
$N_8732115385881_134528077c_1_0_0 isa operation, has hash "N_8732115385881_134528077c_1_0_0"; 

insert
$N_8732115385881_134528077c_1_0_0_0 isa variable-ssa, has hash "N_8732115385881_134528077c_1_0_0_0", has var "eax_3", has version 4, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115385881_134528077c_1_0_0_0, from-node: $N_8732115385881_134528077c_1_0_0) isa node-link; 

match
$N_8732115385881_134528077c_1_0 isa operation, has hash "N_8732115385881_134528077c_1_0"; 

insert
$N_8732115385881_134528077c_1_0_1 isa MLIL_CONST, has hash "N_8732115385881_134528077c_1_0_1", has edge-label "right";
(to-node: $N_8732115385881_134528077c_1_0_1, from-node: $N_8732115385881_134528077c_1_0) isa node-link; 

match
$N_8732115385881_134528077c_1_0_1 isa operation, has hash "N_8732115385881_134528077c_1_0_1"; 

insert
$N_8732115385881_134528077c_1_0_1_0 isa constant, has hash "N_8732115385881_134528077c_1_0_1_0", has constant-value "4", has edge-label "constant";
(to-node: $N_8732115385881_134528077c_1_0_1_0, from-node: $N_8732115385881_134528077c_1_0_1) isa node-link; 

match
$N_8732115385881_134528077c_1 isa operation, has hash "N_8732115385881_134528077c_1"; 

insert
$N_8732115385881_134528077c_1_1 isa constant, has hash "N_8732115385881_134528077c_1_1", has constant-value "1", has edge-label "src_memory";
(to-node: $N_8732115385881_134528077c_1_1, from-node: $N_8732115385881_134528077c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115487541_134528080c isa instruction, has hash "N_8732115487541_134528080c", has il-index 8, has asm-address "0x804bc50", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_1#1 = var_18#1";
(contains-instruction: $N_8732115487541_134528080c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115487541_134528080c isa instruction, has hash "N_8732115487541_134528080c"; 

insert
$N_8732115487541_134528080c_0 isa variable-ssa, has hash "N_8732115487541_134528080c_0", has var "ecx_1", has version 1, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115487541_134528080c_0, from-node: $N_8732115487541_134528080c) isa node-link; 

match
$N_8732115487541_134528080c isa instruction, has hash "N_8732115487541_134528080c"; 

insert
$N_8732115487541_134528080c_1 isa MLIL_VAR_SSA, has hash "N_8732115487541_134528080c_1", has edge-label "src";
(to-node: $N_8732115487541_134528080c_1, from-node: $N_8732115487541_134528080c) isa node-link; 

match
$N_8732115487541_134528080c_1 isa operation, has hash "N_8732115487541_134528080c_1"; 

insert
$N_8732115487541_134528080c_1_0 isa variable-ssa, has hash "N_8732115487541_134528080c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115487541_134528080c_1_0, from-node: $N_8732115487541_134528080c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115211117_134528083c isa instruction, has hash "N_8732115211117_134528083c", has il-index 9, has asm-address "0x804bc53", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_2#2 = [ecx_1#1 + 0x10].d @ mem#1";
(contains-instruction: $N_8732115211117_134528083c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115211117_134528083c isa instruction, has hash "N_8732115211117_134528083c"; 

insert
$N_8732115211117_134528083c_0 isa variable-ssa, has hash "N_8732115211117_134528083c_0", has var "ecx_2", has version 2, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115211117_134528083c_0, from-node: $N_8732115211117_134528083c) isa node-link; 

match
$N_8732115211117_134528083c isa instruction, has hash "N_8732115211117_134528083c"; 

insert
$N_8732115211117_134528083c_1 isa MLIL_LOAD_SSA, has hash "N_8732115211117_134528083c_1", has edge-label "src";
(to-node: $N_8732115211117_134528083c_1, from-node: $N_8732115211117_134528083c) isa node-link; 

match
$N_8732115211117_134528083c_1 isa operation, has hash "N_8732115211117_134528083c_1"; 

insert
$N_8732115211117_134528083c_1_0 isa MLIL_ADD, has hash "N_8732115211117_134528083c_1_0", has edge-label "src";
(to-node: $N_8732115211117_134528083c_1_0, from-node: $N_8732115211117_134528083c_1) isa node-link; 

match
$N_8732115211117_134528083c_1_0 isa operation, has hash "N_8732115211117_134528083c_1_0"; 

insert
$N_8732115211117_134528083c_1_0_0 isa MLIL_VAR_SSA, has hash "N_8732115211117_134528083c_1_0_0", has edge-label "left";
(to-node: $N_8732115211117_134528083c_1_0_0, from-node: $N_8732115211117_134528083c_1_0) isa node-link; 

match
$N_8732115211117_134528083c_1_0_0 isa operation, has hash "N_8732115211117_134528083c_1_0_0"; 

insert
$N_8732115211117_134528083c_1_0_0_0 isa variable-ssa, has hash "N_8732115211117_134528083c_1_0_0_0", has var "ecx_1", has version 1, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115211117_134528083c_1_0_0_0, from-node: $N_8732115211117_134528083c_1_0_0) isa node-link; 

match
$N_8732115211117_134528083c_1_0 isa operation, has hash "N_8732115211117_134528083c_1_0"; 

insert
$N_8732115211117_134528083c_1_0_1 isa MLIL_CONST, has hash "N_8732115211117_134528083c_1_0_1", has edge-label "right";
(to-node: $N_8732115211117_134528083c_1_0_1, from-node: $N_8732115211117_134528083c_1_0) isa node-link; 

match
$N_8732115211117_134528083c_1_0_1 isa operation, has hash "N_8732115211117_134528083c_1_0_1"; 

insert
$N_8732115211117_134528083c_1_0_1_0 isa constant, has hash "N_8732115211117_134528083c_1_0_1_0", has constant-value "16", has edge-label "constant";
(to-node: $N_8732115211117_134528083c_1_0_1_0, from-node: $N_8732115211117_134528083c_1_0_1) isa node-link; 

match
$N_8732115211117_134528083c_1 isa operation, has hash "N_8732115211117_134528083c_1"; 

insert
$N_8732115211117_134528083c_1_1 isa constant, has hash "N_8732115211117_134528083c_1_1", has constant-value "1", has edge-label "src_memory";
(to-node: $N_8732115211117_134528083c_1_1, from-node: $N_8732115211117_134528083c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114958285_134528086c isa instruction, has hash "N_8732114958285_134528086c", has il-index 10, has asm-address "0x804bc56", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_3#3 = ecx_2#2 + 8";
(contains-instruction: $N_8732114958285_134528086c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114958285_134528086c isa instruction, has hash "N_8732114958285_134528086c"; 

insert
$N_8732114958285_134528086c_0 isa variable-ssa, has hash "N_8732114958285_134528086c_0", has var "ecx_3", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114958285_134528086c_0, from-node: $N_8732114958285_134528086c) isa node-link; 

match
$N_8732114958285_134528086c isa instruction, has hash "N_8732114958285_134528086c"; 

insert
$N_8732114958285_134528086c_1 isa MLIL_ADD, has hash "N_8732114958285_134528086c_1", has edge-label "src";
(to-node: $N_8732114958285_134528086c_1, from-node: $N_8732114958285_134528086c) isa node-link; 

match
$N_8732114958285_134528086c_1 isa operation, has hash "N_8732114958285_134528086c_1"; 

insert
$N_8732114958285_134528086c_1_0 isa MLIL_VAR_SSA, has hash "N_8732114958285_134528086c_1_0", has edge-label "left";
(to-node: $N_8732114958285_134528086c_1_0, from-node: $N_8732114958285_134528086c_1) isa node-link; 

match
$N_8732114958285_134528086c_1_0 isa operation, has hash "N_8732114958285_134528086c_1_0"; 

insert
$N_8732114958285_134528086c_1_0_0 isa variable-ssa, has hash "N_8732114958285_134528086c_1_0_0", has var "ecx_2", has version 2, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114958285_134528086c_1_0_0, from-node: $N_8732114958285_134528086c_1_0) isa node-link; 

match
$N_8732114958285_134528086c_1 isa operation, has hash "N_8732114958285_134528086c_1"; 

insert
$N_8732114958285_134528086c_1_1 isa MLIL_CONST, has hash "N_8732114958285_134528086c_1_1", has edge-label "right";
(to-node: $N_8732114958285_134528086c_1_1, from-node: $N_8732114958285_134528086c_1) isa node-link; 

match
$N_8732114958285_134528086c_1_1 isa operation, has hash "N_8732114958285_134528086c_1_1"; 

insert
$N_8732114958285_134528086c_1_1_0 isa constant, has hash "N_8732114958285_134528086c_1_1_0", has constant-value "8", has edge-label "constant";
(to-node: $N_8732114958285_134528086c_1_1_0, from-node: $N_8732114958285_134528086c_1_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115460365_134528089c isa instruction, has hash "N_8732115460365_134528089c", has il-index 11, has asm-address "0x804bc59", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_4#4 = ecx_3#3 + 4";
(contains-instruction: $N_8732115460365_134528089c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115460365_134528089c isa instruction, has hash "N_8732115460365_134528089c"; 

insert
$N_8732115460365_134528089c_0 isa variable-ssa, has hash "N_8732115460365_134528089c_0", has var "ecx_4", has version 4, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115460365_134528089c_0, from-node: $N_8732115460365_134528089c) isa node-link; 

match
$N_8732115460365_134528089c isa instruction, has hash "N_8732115460365_134528089c"; 

insert
$N_8732115460365_134528089c_1 isa MLIL_ADD, has hash "N_8732115460365_134528089c_1", has edge-label "src";
(to-node: $N_8732115460365_134528089c_1, from-node: $N_8732115460365_134528089c) isa node-link; 

match
$N_8732115460365_134528089c_1 isa operation, has hash "N_8732115460365_134528089c_1"; 

insert
$N_8732115460365_134528089c_1_0 isa MLIL_VAR_SSA, has hash "N_8732115460365_134528089c_1_0", has edge-label "left";
(to-node: $N_8732115460365_134528089c_1_0, from-node: $N_8732115460365_134528089c_1) isa node-link; 

match
$N_8732115460365_134528089c_1_0 isa operation, has hash "N_8732115460365_134528089c_1_0"; 

insert
$N_8732115460365_134528089c_1_0_0 isa variable-ssa, has hash "N_8732115460365_134528089c_1_0_0", has var "ecx_3", has version 3, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115460365_134528089c_1_0_0, from-node: $N_8732115460365_134528089c_1_0) isa node-link; 

match
$N_8732115460365_134528089c_1 isa operation, has hash "N_8732115460365_134528089c_1"; 

insert
$N_8732115460365_134528089c_1_1 isa MLIL_CONST, has hash "N_8732115460365_134528089c_1_1", has edge-label "right";
(to-node: $N_8732115460365_134528089c_1_1, from-node: $N_8732115460365_134528089c_1) isa node-link; 

match
$N_8732115460365_134528089c_1_1 isa operation, has hash "N_8732115460365_134528089c_1_1"; 

insert
$N_8732115460365_134528089c_1_1_0 isa constant, has hash "N_8732115460365_134528089c_1_1_0", has constant-value "4", has edge-label "constant";
(to-node: $N_8732115460365_134528089c_1_1_0, from-node: $N_8732115460365_134528089c_1_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115006213_134528092c isa instruction, has hash "N_8732115006213_134528092c", has il-index 12, has asm-address "0x804bc5c", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edx_1#1 = var_18#1";
(contains-instruction: $N_8732115006213_134528092c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115006213_134528092c isa instruction, has hash "N_8732115006213_134528092c"; 

insert
$N_8732115006213_134528092c_0 isa variable-ssa, has hash "N_8732115006213_134528092c_0", has var "edx_1", has version 1, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115006213_134528092c_0, from-node: $N_8732115006213_134528092c) isa node-link; 

match
$N_8732115006213_134528092c isa instruction, has hash "N_8732115006213_134528092c"; 

insert
$N_8732115006213_134528092c_1 isa MLIL_VAR_SSA, has hash "N_8732115006213_134528092c_1", has edge-label "src";
(to-node: $N_8732115006213_134528092c_1, from-node: $N_8732115006213_134528092c) isa node-link; 

match
$N_8732115006213_134528092c_1 isa operation, has hash "N_8732115006213_134528092c_1"; 

insert
$N_8732115006213_134528092c_1_0 isa variable-ssa, has hash "N_8732115006213_134528092c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115006213_134528092c_1_0, from-node: $N_8732115006213_134528092c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115490065_134528095c isa instruction, has hash "N_8732115490065_134528095c", has il-index 13, has asm-address "0x804bc5f", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edx_2#2 = [edx_1#1 + 0x28].d @ mem#1";
(contains-instruction: $N_8732115490065_134528095c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115490065_134528095c isa instruction, has hash "N_8732115490065_134528095c"; 

insert
$N_8732115490065_134528095c_0 isa variable-ssa, has hash "N_8732115490065_134528095c_0", has var "edx_2", has version 2, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115490065_134528095c_0, from-node: $N_8732115490065_134528095c) isa node-link; 

match
$N_8732115490065_134528095c isa instruction, has hash "N_8732115490065_134528095c"; 

insert
$N_8732115490065_134528095c_1 isa MLIL_LOAD_SSA, has hash "N_8732115490065_134528095c_1", has edge-label "src";
(to-node: $N_8732115490065_134528095c_1, from-node: $N_8732115490065_134528095c) isa node-link; 

match
$N_8732115490065_134528095c_1 isa operation, has hash "N_8732115490065_134528095c_1"; 

insert
$N_8732115490065_134528095c_1_0 isa MLIL_ADD, has hash "N_8732115490065_134528095c_1_0", has edge-label "src";
(to-node: $N_8732115490065_134528095c_1_0, from-node: $N_8732115490065_134528095c_1) isa node-link; 

match
$N_8732115490065_134528095c_1_0 isa operation, has hash "N_8732115490065_134528095c_1_0"; 

insert
$N_8732115490065_134528095c_1_0_0 isa MLIL_VAR_SSA, has hash "N_8732115490065_134528095c_1_0_0", has edge-label "left";
(to-node: $N_8732115490065_134528095c_1_0_0, from-node: $N_8732115490065_134528095c_1_0) isa node-link; 

match
$N_8732115490065_134528095c_1_0_0 isa operation, has hash "N_8732115490065_134528095c_1_0_0"; 

insert
$N_8732115490065_134528095c_1_0_0_0 isa variable-ssa, has hash "N_8732115490065_134528095c_1_0_0_0", has var "edx_1", has version 1, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115490065_134528095c_1_0_0_0, from-node: $N_8732115490065_134528095c_1_0_0) isa node-link; 

match
$N_8732115490065_134528095c_1_0 isa operation, has hash "N_8732115490065_134528095c_1_0"; 

insert
$N_8732115490065_134528095c_1_0_1 isa MLIL_CONST, has hash "N_8732115490065_134528095c_1_0_1", has edge-label "right";
(to-node: $N_8732115490065_134528095c_1_0_1, from-node: $N_8732115490065_134528095c_1_0) isa node-link; 

match
$N_8732115490065_134528095c_1_0_1 isa operation, has hash "N_8732115490065_134528095c_1_0_1"; 

insert
$N_8732115490065_134528095c_1_0_1_0 isa constant, has hash "N_8732115490065_134528095c_1_0_1_0", has constant-value "40", has edge-label "constant";
(to-node: $N_8732115490065_134528095c_1_0_1_0, from-node: $N_8732115490065_134528095c_1_0_1) isa node-link; 

match
$N_8732115490065_134528095c_1 isa operation, has hash "N_8732115490065_134528095c_1"; 

insert
$N_8732115490065_134528095c_1_1 isa constant, has hash "N_8732115490065_134528095c_1_1", has constant-value "1", has edge-label "src_memory";
(to-node: $N_8732115490065_134528095c_1_1, from-node: $N_8732115490065_134528095c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115335413_134528098c isa instruction, has hash "N_8732115335413_134528098c", has il-index 14, has asm-address "0x804bc62", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edx_3#3 = edx_2#2 + 8";
(contains-instruction: $N_8732115335413_134528098c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115335413_134528098c isa instruction, has hash "N_8732115335413_134528098c"; 

insert
$N_8732115335413_134528098c_0 isa variable-ssa, has hash "N_8732115335413_134528098c_0", has var "edx_3", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115335413_134528098c_0, from-node: $N_8732115335413_134528098c) isa node-link; 

match
$N_8732115335413_134528098c isa instruction, has hash "N_8732115335413_134528098c"; 

insert
$N_8732115335413_134528098c_1 isa MLIL_ADD, has hash "N_8732115335413_134528098c_1", has edge-label "src";
(to-node: $N_8732115335413_134528098c_1, from-node: $N_8732115335413_134528098c) isa node-link; 

match
$N_8732115335413_134528098c_1 isa operation, has hash "N_8732115335413_134528098c_1"; 

insert
$N_8732115335413_134528098c_1_0 isa MLIL_VAR_SSA, has hash "N_8732115335413_134528098c_1_0", has edge-label "left";
(to-node: $N_8732115335413_134528098c_1_0, from-node: $N_8732115335413_134528098c_1) isa node-link; 

match
$N_8732115335413_134528098c_1_0 isa operation, has hash "N_8732115335413_134528098c_1_0"; 

insert
$N_8732115335413_134528098c_1_0_0 isa variable-ssa, has hash "N_8732115335413_134528098c_1_0_0", has var "edx_2", has version 2, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115335413_134528098c_1_0_0, from-node: $N_8732115335413_134528098c_1_0) isa node-link; 

match
$N_8732115335413_134528098c_1 isa operation, has hash "N_8732115335413_134528098c_1"; 

insert
$N_8732115335413_134528098c_1_1 isa MLIL_CONST, has hash "N_8732115335413_134528098c_1_1", has edge-label "right";
(to-node: $N_8732115335413_134528098c_1_1, from-node: $N_8732115335413_134528098c_1) isa node-link; 

match
$N_8732115335413_134528098c_1_1 isa operation, has hash "N_8732115335413_134528098c_1_1"; 

insert
$N_8732115335413_134528098c_1_1_0 isa constant, has hash "N_8732115335413_134528098c_1_1_0", has constant-value "8", has edge-label "constant";
(to-node: $N_8732115335413_134528098c_1_1_0, from-node: $N_8732115335413_134528098c_1_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115367941_134528101c isa instruction, has hash "N_8732115367941_134528101c", has il-index 15, has asm-address "0x804bc65", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_5#5 = ecx_4#4 + edx_3#3";
(contains-instruction: $N_8732115367941_134528101c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115367941_134528101c isa instruction, has hash "N_8732115367941_134528101c"; 

insert
$N_8732115367941_134528101c_0 isa variable-ssa, has hash "N_8732115367941_134528101c_0", has var "ecx_5", has version 5, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115367941_134528101c_0, from-node: $N_8732115367941_134528101c) isa node-link; 

match
$N_8732115367941_134528101c isa instruction, has hash "N_8732115367941_134528101c"; 

insert
$N_8732115367941_134528101c_1 isa MLIL_ADD, has hash "N_8732115367941_134528101c_1", has edge-label "src";
(to-node: $N_8732115367941_134528101c_1, from-node: $N_8732115367941_134528101c) isa node-link; 

match
$N_8732115367941_134528101c_1 isa operation, has hash "N_8732115367941_134528101c_1"; 

insert
$N_8732115367941_134528101c_1_0 isa MLIL_VAR_SSA, has hash "N_8732115367941_134528101c_1_0", has edge-label "left";
(to-node: $N_8732115367941_134528101c_1_0, from-node: $N_8732115367941_134528101c_1) isa node-link; 

match
$N_8732115367941_134528101c_1_0 isa operation, has hash "N_8732115367941_134528101c_1_0"; 

insert
$N_8732115367941_134528101c_1_0_0 isa variable-ssa, has hash "N_8732115367941_134528101c_1_0_0", has var "ecx_4", has version 4, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115367941_134528101c_1_0_0, from-node: $N_8732115367941_134528101c_1_0) isa node-link; 

match
$N_8732115367941_134528101c_1 isa operation, has hash "N_8732115367941_134528101c_1"; 

insert
$N_8732115367941_134528101c_1_1 isa MLIL_VAR_SSA, has hash "N_8732115367941_134528101c_1_1", has edge-label "right";
(to-node: $N_8732115367941_134528101c_1_1, from-node: $N_8732115367941_134528101c_1) isa node-link; 

match
$N_8732115367941_134528101c_1_1 isa operation, has hash "N_8732115367941_134528101c_1_1"; 

insert
$N_8732115367941_134528101c_1_1_0 isa variable-ssa, has hash "N_8732115367941_134528101c_1_1_0", has var "edx_3", has version 3, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115367941_134528101c_1_1_0, from-node: $N_8732115367941_134528101c_1_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 6, has bb-end 16; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115238149_134528105c isa instruction, has hash "N_8732115238149_134528105c", has il-index 16, has asm-address "0x804bc69", has operation-type "MLIL_IF", has ins-text "if (eax_4#5 == ecx_5#5) then 19 @ 0x804bc80 else 26 @ 0x804bc6f";
(contains-instruction: $N_8732115238149_134528105c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115238149_134528105c isa instruction, has hash "N_8732115238149_134528105c"; 

insert
$N_8732115238149_134528105c_0 isa MLIL_CMP_E, has hash "N_8732115238149_134528105c_0", has edge-label "condition";
(to-node: $N_8732115238149_134528105c_0, from-node: $N_8732115238149_134528105c) isa node-link; 

match
$N_8732115238149_134528105c_0 isa operation, has hash "N_8732115238149_134528105c_0"; 

insert
$N_8732115238149_134528105c_0_0 isa MLIL_VAR_SSA, has hash "N_8732115238149_134528105c_0_0", has edge-label "left";
(to-node: $N_8732115238149_134528105c_0_0, from-node: $N_8732115238149_134528105c_0) isa node-link; 

match
$N_8732115238149_134528105c_0_0 isa operation, has hash "N_8732115238149_134528105c_0_0"; 

insert
$N_8732115238149_134528105c_0_0_0 isa variable-ssa, has hash "N_8732115238149_134528105c_0_0_0", has var "eax_4", has version 5, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115238149_134528105c_0_0_0, from-node: $N_8732115238149_134528105c_0_0) isa node-link; 

match
$N_8732115238149_134528105c_0 isa operation, has hash "N_8732115238149_134528105c_0"; 

insert
$N_8732115238149_134528105c_0_1 isa MLIL_VAR_SSA, has hash "N_8732115238149_134528105c_0_1", has edge-label "right";
(to-node: $N_8732115238149_134528105c_0_1, from-node: $N_8732115238149_134528105c_0) isa node-link; 

match
$N_8732115238149_134528105c_0_1 isa operation, has hash "N_8732115238149_134528105c_0_1"; 

insert
$N_8732115238149_134528105c_0_1_0 isa variable-ssa, has hash "N_8732115238149_134528105c_0_1_0", has var "ecx_5", has version 5, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115238149_134528105c_0_1_0, from-node: $N_8732115238149_134528105c_0_1) isa node-link; 

match
$N_8732115238149_134528105c isa instruction, has hash "N_8732115238149_134528105c"; 

insert
$N_8732115238149_134528105c_1 isa constant, has hash "N_8732115238149_134528105c_1", has constant-value "19", has edge-label "true";
(to-node: $N_8732115238149_134528105c_1, from-node: $N_8732115238149_134528105c) isa node-link; 

match
$N_8732115238149_134528105c isa instruction, has hash "N_8732115238149_134528105c"; 

insert
$N_8732115238149_134528105c_2 isa constant, has hash "N_8732115238149_134528105c_2", has constant-value "26", has edge-label "false";
(to-node: $N_8732115238149_134528105c_2, from-node: $N_8732115238149_134528105c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 17, has bb-end 18; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 17, has bb-end 18; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 17, has bb-end 18; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115298549_134528062c isa instruction, has hash "N_8732115298549_134528062c", has il-index 17, has asm-address "0x804bc3e", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_14#12 = 0xfffffffe";
(contains-instruction: $N_8732115298549_134528062c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115298549_134528062c isa instruction, has hash "N_8732115298549_134528062c"; 

insert
$N_8732115298549_134528062c_0 isa variable-ssa, has hash "N_8732115298549_134528062c_0", has var "var_14", has version 12, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115298549_134528062c_0, from-node: $N_8732115298549_134528062c) isa node-link; 

match
$N_8732115298549_134528062c isa instruction, has hash "N_8732115298549_134528062c"; 

insert
$N_8732115298549_134528062c_1 isa MLIL_CONST, has hash "N_8732115298549_134528062c_1", has edge-label "src";
(to-node: $N_8732115298549_134528062c_1, from-node: $N_8732115298549_134528062c) isa node-link; 

match
$N_8732115298549_134528062c_1 isa operation, has hash "N_8732115298549_134528062c_1"; 

insert
$N_8732115298549_134528062c_1_0 isa constant, has hash "N_8732115298549_134528062c_1_0", has constant-value "4294967294", has edge-label "constant";
(to-node: $N_8732115298549_134528062c_1_0, from-node: $N_8732115298549_134528062c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 17, has bb-end 18; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 17, has bb-end 18; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115170293_134528069c isa instruction, has hash "N_8732115170293_134528069c", has il-index 18, has asm-address "0x804bc45", has operation-type "MLIL_GOTO", has ins-text "goto 28 @ 0x804beae";
(contains-instruction: $N_8732115170293_134528069c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115170293_134528069c isa instruction, has hash "N_8732115170293_134528069c"; 

insert
$N_8732115170293_134528069c_0 isa constant, has hash "N_8732115170293_134528069c_0", has constant-value "28", has edge-label "dest";
(to-node: $N_8732115170293_134528069c_0, from-node: $N_8732115170293_134528069c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 19, has bb-end 25; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 19, has bb-end 25; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 19, has bb-end 25; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115459309_134528128c isa instruction, has hash "N_8732115459309_134528128c", has il-index 19, has asm-address "0x804bc80", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_6#6 = var_18#1";
(contains-instruction: $N_8732115459309_134528128c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115459309_134528128c isa instruction, has hash "N_8732115459309_134528128c"; 

insert
$N_8732115459309_134528128c_0 isa variable-ssa, has hash "N_8732115459309_134528128c_0", has var "ecx_6", has version 6, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115459309_134528128c_0, from-node: $N_8732115459309_134528128c) isa node-link; 

match
$N_8732115459309_134528128c isa instruction, has hash "N_8732115459309_134528128c"; 

insert
$N_8732115459309_134528128c_1 isa MLIL_VAR_SSA, has hash "N_8732115459309_134528128c_1", has edge-label "src";
(to-node: $N_8732115459309_134528128c_1, from-node: $N_8732115459309_134528128c) isa node-link; 

match
$N_8732115459309_134528128c_1 isa operation, has hash "N_8732115459309_134528128c_1"; 

insert
$N_8732115459309_134528128c_1_0 isa variable-ssa, has hash "N_8732115459309_134528128c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115459309_134528128c_1_0, from-node: $N_8732115459309_134528128c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 19, has bb-end 25; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 19, has bb-end 25; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115504901_134528131c isa instruction, has hash "N_8732115504901_134528131c", has il-index 20, has asm-address "0x804bc83", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_7#7 = ecx_6#6 + 8";
(contains-instruction: $N_8732115504901_134528131c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115504901_134528131c isa instruction, has hash "N_8732115504901_134528131c"; 

insert
$N_8732115504901_134528131c_0 isa variable-ssa, has hash "N_8732115504901_134528131c_0", has var "ecx_7", has version 7, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115504901_134528131c_0, from-node: $N_8732115504901_134528131c) isa node-link; 

match
$N_8732115504901_134528131c isa instruction, has hash "N_8732115504901_134528131c"; 

insert
$N_8732115504901_134528131c_1 isa MLIL_ADD, has hash "N_8732115504901_134528131c_1", has edge-label "src";
(to-node: $N_8732115504901_134528131c_1, from-node: $N_8732115504901_134528131c) isa node-link; 

match
$N_8732115504901_134528131c_1 isa operation, has hash "N_8732115504901_134528131c_1"; 

insert
$N_8732115504901_134528131c_1_0 isa MLIL_VAR_SSA, has hash "N_8732115504901_134528131c_1_0", has edge-label "left";
(to-node: $N_8732115504901_134528131c_1_0, from-node: $N_8732115504901_134528131c_1) isa node-link; 

match
$N_8732115504901_134528131c_1_0 isa operation, has hash "N_8732115504901_134528131c_1_0"; 

insert
$N_8732115504901_134528131c_1_0_0 isa variable-ssa, has hash "N_8732115504901_134528131c_1_0_0", has var "ecx_6", has version 6, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115504901_134528131c_1_0_0, from-node: $N_8732115504901_134528131c_1_0) isa node-link; 

match
$N_8732115504901_134528131c_1 isa operation, has hash "N_8732115504901_134528131c_1"; 

insert
$N_8732115504901_134528131c_1_1 isa MLIL_CONST, has hash "N_8732115504901_134528131c_1_1", has edge-label "right";
(to-node: $N_8732115504901_134528131c_1_1, from-node: $N_8732115504901_134528131c_1) isa node-link; 

match
$N_8732115504901_134528131c_1_1 isa operation, has hash "N_8732115504901_134528131c_1_1"; 

insert
$N_8732115504901_134528131c_1_1_0 isa constant, has hash "N_8732115504901_134528131c_1_1_0", has constant-value "8", has edge-label "constant";
(to-node: $N_8732115504901_134528131c_1_1_0, from-node: $N_8732115504901_134528131c_1_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 19, has bb-end 25; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 19, has bb-end 25; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115462921_134528134c isa instruction, has hash "N_8732115462921_134528134c", has il-index 21, has asm-address "0x804bc86", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_2c_1#1 = ecx_7#7";
(contains-instruction: $N_8732115462921_134528134c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115462921_134528134c isa instruction, has hash "N_8732115462921_134528134c"; 

insert
$N_8732115462921_134528134c_0 isa variable-ssa, has hash "N_8732115462921_134528134c_0", has var "var_2c_1", has version 1, has edge-label "dest", has var-type "void*", has var-size -20, has var-func "cgc_validate_header";
(to-node: $N_8732115462921_134528134c_0, from-node: $N_8732115462921_134528134c) isa node-link; 

match
$N_8732115462921_134528134c isa instruction, has hash "N_8732115462921_134528134c"; 

insert
$N_8732115462921_134528134c_1 isa MLIL_VAR_SSA, has hash "N_8732115462921_134528134c_1", has edge-label "src";
(to-node: $N_8732115462921_134528134c_1, from-node: $N_8732115462921_134528134c) isa node-link; 

match
$N_8732115462921_134528134c_1 isa operation, has hash "N_8732115462921_134528134c_1"; 

insert
$N_8732115462921_134528134c_1_0 isa variable-ssa, has hash "N_8732115462921_134528134c_1_0", has var "ecx_7", has version 7, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115462921_134528134c_1_0, from-node: $N_8732115462921_134528134c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 19, has bb-end 25; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 19, has bb-end 25; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115283945_134528137c isa instruction, has hash "N_8732115283945_134528137c", has il-index 22, has asm-address "0x804bc89", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_8#8 = var_2c_1#1";
(contains-instruction: $N_8732115283945_134528137c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115283945_134528137c isa instruction, has hash "N_8732115283945_134528137c"; 

insert
$N_8732115283945_134528137c_0 isa variable-ssa, has hash "N_8732115283945_134528137c_0", has var "ecx_8", has version 8, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115283945_134528137c_0, from-node: $N_8732115283945_134528137c) isa node-link; 

match
$N_8732115283945_134528137c isa instruction, has hash "N_8732115283945_134528137c"; 

insert
$N_8732115283945_134528137c_1 isa MLIL_VAR_SSA, has hash "N_8732115283945_134528137c_1", has edge-label "src";
(to-node: $N_8732115283945_134528137c_1, from-node: $N_8732115283945_134528137c) isa node-link; 

match
$N_8732115283945_134528137c_1 isa operation, has hash "N_8732115283945_134528137c_1"; 

insert
$N_8732115283945_134528137c_1_0 isa variable-ssa, has hash "N_8732115283945_134528137c_1_0", has var "var_2c_1", has version 1, has edge-label "src", has var-type "void*", has var-size -20, has var-func "cgc_validate_header";
(to-node: $N_8732115283945_134528137c_1_0, from-node: $N_8732115283945_134528137c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 19, has bb-end 25; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 19, has bb-end 25; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115459845_134528143c isa instruction, has hash "N_8732115459845_134528143c", has il-index 23, has asm-address "0x804bc8f", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_4c_1#2 = ecx_8#8";
(contains-instruction: $N_8732115459845_134528143c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115459845_134528143c isa instruction, has hash "N_8732115459845_134528143c"; 

insert
$N_8732115459845_134528143c_0 isa variable-ssa, has hash "N_8732115459845_134528143c_0", has var "var_4c_1", has version 2, has edge-label "dest", has var-type "void*", has var-size -52, has var-func "cgc_validate_header";
(to-node: $N_8732115459845_134528143c_0, from-node: $N_8732115459845_134528143c) isa node-link; 

match
$N_8732115459845_134528143c isa instruction, has hash "N_8732115459845_134528143c"; 

insert
$N_8732115459845_134528143c_1 isa MLIL_VAR_SSA, has hash "N_8732115459845_134528143c_1", has edge-label "src";
(to-node: $N_8732115459845_134528143c_1, from-node: $N_8732115459845_134528143c) isa node-link; 

match
$N_8732115459845_134528143c_1 isa operation, has hash "N_8732115459845_134528143c_1"; 

insert
$N_8732115459845_134528143c_1_0 isa variable-ssa, has hash "N_8732115459845_134528143c_1_0", has var "ecx_8", has version 8, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115459845_134528143c_1_0, from-node: $N_8732115459845_134528143c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 19, has bb-end 25; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 19, has bb-end 25; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115275525_134528161c isa instruction, has hash "N_8732115275525_134528161c", has il-index 24, has asm-address "0x804bca1", has operation-type "MLIL_CALL_SSA", has ins-text "eax_5#6, mem#2 = 0x8049ce0(var_4c_1#2, 0x804d44c, 4) @ mem#1";
(contains-instruction: $N_8732115275525_134528161c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115275525_134528161c isa instruction, has hash "N_8732115275525_134528161c"; 

insert
$N_8732115275525_134528161c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8732115275525_134528161c_0", has edge-label "output";
(to-node: $N_8732115275525_134528161c_0, from-node: $N_8732115275525_134528161c) isa node-link; 

match
$N_8732115275525_134528161c_0 isa operation, has hash "N_8732115275525_134528161c_0"; 

insert
$N_8732115275525_134528161c_0_0 isa constant, has hash "N_8732115275525_134528161c_0_0", has constant-value "2", has edge-label "dest_memory";
(to-node: $N_8732115275525_134528161c_0_0, from-node: $N_8732115275525_134528161c_0) isa node-link; 

match
$N_8732115275525_134528161c_0 isa operation, has hash "N_8732115275525_134528161c_0"; 

insert
$L_8732115275525_134528161c_0_1 isa list, has hash "L_8732115275525_134528161c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8732115275525_134528161c_0_1, from-node: $N_8732115275525_134528161c_0) isa node-link; 

match
$L_8732115275525_134528161c_0_1 isa list, has hash "L_8732115275525_134528161c_0_1"; 

insert
$N_8732115275525_134528161c_0_1_0 isa variable-ssa, has hash "N_8732115275525_134528161c_0_1_0", has var "eax_5", has version 6, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115275525_134528161c_0_1_0, from-node: $L_8732115275525_134528161c_0_1) isa node-link; 

match
$N_8732115275525_134528161c isa instruction, has hash "N_8732115275525_134528161c"; 

insert
$N_8732115275525_134528161c_1 isa MLIL_CONST_PTR, has hash "N_8732115275525_134528161c_1", has edge-label "dest";
(to-node: $N_8732115275525_134528161c_1, from-node: $N_8732115275525_134528161c) isa node-link; 

match
$N_8732115275525_134528161c_1 isa operation, has hash "N_8732115275525_134528161c_1"; 

insert
$N_8732115275525_134528161c_1_0 isa constant, has hash "N_8732115275525_134528161c_1_0", has constant-value "134520032", has edge-label "constant";
(to-node: $N_8732115275525_134528161c_1_0, from-node: $N_8732115275525_134528161c_1) isa node-link; 

match
$N_8732115275525_134528161c isa instruction, has hash "N_8732115275525_134528161c"; 

insert
$L_8732115275525_134528161c_2 isa list, has hash "L_8732115275525_134528161c_2", has list-size 3, has edge-label "params";
(to-node: $L_8732115275525_134528161c_2, from-node: $N_8732115275525_134528161c) isa node-link; 

match
$L_8732115275525_134528161c_2 isa list, has hash "L_8732115275525_134528161c_2"; 

insert
$N_8732115275525_134528161c_2_0 isa MLIL_VAR_SSA, has hash "N_8732115275525_134528161c_2_0", has edge-label "0";
(to-node: $N_8732115275525_134528161c_2_0, from-node: $L_8732115275525_134528161c_2) isa node-link; 

match
$N_8732115275525_134528161c_2_0 isa operation, has hash "N_8732115275525_134528161c_2_0"; 

insert
$N_8732115275525_134528161c_2_0_0 isa variable-ssa, has hash "N_8732115275525_134528161c_2_0_0", has var "var_4c_1", has version 2, has edge-label "src", has var-type "void*", has var-size -52, has var-func "cgc_validate_header";
(to-node: $N_8732115275525_134528161c_2_0_0, from-node: $N_8732115275525_134528161c_2_0) isa node-link; 

match
$L_8732115275525_134528161c_2 isa list, has hash "L_8732115275525_134528161c_2"; 

insert
$N_8732115275525_134528161c_2_1 isa MLIL_CONST_PTR, has hash "N_8732115275525_134528161c_2_1", has edge-label "1";
(to-node: $N_8732115275525_134528161c_2_1, from-node: $L_8732115275525_134528161c_2) isa node-link; 

match
$N_8732115275525_134528161c_2_1 isa operation, has hash "N_8732115275525_134528161c_2_1"; 

insert
$N_8732115275525_134528161c_2_1_0 isa constant, has hash "N_8732115275525_134528161c_2_1_0", has constant-value "134534220", has edge-label "constant";
(to-node: $N_8732115275525_134528161c_2_1_0, from-node: $N_8732115275525_134528161c_2_1) isa node-link; 

match
$L_8732115275525_134528161c_2 isa list, has hash "L_8732115275525_134528161c_2"; 

insert
$N_8732115275525_134528161c_2_2 isa MLIL_CONST, has hash "N_8732115275525_134528161c_2_2", has edge-label "2";
(to-node: $N_8732115275525_134528161c_2_2, from-node: $L_8732115275525_134528161c_2) isa node-link; 

match
$N_8732115275525_134528161c_2_2 isa operation, has hash "N_8732115275525_134528161c_2_2"; 

insert
$N_8732115275525_134528161c_2_2_0 isa constant, has hash "N_8732115275525_134528161c_2_2_0", has constant-value "4", has edge-label "constant";
(to-node: $N_8732115275525_134528161c_2_2_0, from-node: $N_8732115275525_134528161c_2_2) isa node-link; 

match
$N_8732115275525_134528161c isa instruction, has hash "N_8732115275525_134528161c"; 

insert
$N_8732115275525_134528161c_3 isa constant, has hash "N_8732115275525_134528161c_3", has constant-value "1", has edge-label "src_memory";
(to-node: $N_8732115275525_134528161c_3, from-node: $N_8732115275525_134528161c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 19, has bb-end 25; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 19, has bb-end 25; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115042293_134528169c isa instruction, has hash "N_8732115042293_134528169c", has il-index 25, has asm-address "0x804bca9", has operation-type "MLIL_IF", has ins-text "if (eax_5#6 == 0) then 39 @ 0x804bcc0 else 44 @ 0x804bcaf";
(contains-instruction: $N_8732115042293_134528169c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115042293_134528169c isa instruction, has hash "N_8732115042293_134528169c"; 

insert
$N_8732115042293_134528169c_0 isa MLIL_CMP_E, has hash "N_8732115042293_134528169c_0", has edge-label "condition";
(to-node: $N_8732115042293_134528169c_0, from-node: $N_8732115042293_134528169c) isa node-link; 

match
$N_8732115042293_134528169c_0 isa operation, has hash "N_8732115042293_134528169c_0"; 

insert
$N_8732115042293_134528169c_0_0 isa MLIL_VAR_SSA, has hash "N_8732115042293_134528169c_0_0", has edge-label "left";
(to-node: $N_8732115042293_134528169c_0_0, from-node: $N_8732115042293_134528169c_0) isa node-link; 

match
$N_8732115042293_134528169c_0_0 isa operation, has hash "N_8732115042293_134528169c_0_0"; 

insert
$N_8732115042293_134528169c_0_0_0 isa variable-ssa, has hash "N_8732115042293_134528169c_0_0_0", has var "eax_5", has version 6, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115042293_134528169c_0_0_0, from-node: $N_8732115042293_134528169c_0_0) isa node-link; 

match
$N_8732115042293_134528169c_0 isa operation, has hash "N_8732115042293_134528169c_0"; 

insert
$N_8732115042293_134528169c_0_1 isa MLIL_CONST, has hash "N_8732115042293_134528169c_0_1", has edge-label "right";
(to-node: $N_8732115042293_134528169c_0_1, from-node: $N_8732115042293_134528169c_0) isa node-link; 

match
$N_8732115042293_134528169c_0_1 isa operation, has hash "N_8732115042293_134528169c_0_1"; 

insert
$N_8732115042293_134528169c_0_1_0 isa constant, has hash "N_8732115042293_134528169c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115042293_134528169c_0_1_0, from-node: $N_8732115042293_134528169c_0_1) isa node-link; 

match
$N_8732115042293_134528169c isa instruction, has hash "N_8732115042293_134528169c"; 

insert
$N_8732115042293_134528169c_1 isa constant, has hash "N_8732115042293_134528169c_1", has constant-value "39", has edge-label "true";
(to-node: $N_8732115042293_134528169c_1, from-node: $N_8732115042293_134528169c) isa node-link; 

match
$N_8732115042293_134528169c isa instruction, has hash "N_8732115042293_134528169c"; 

insert
$N_8732115042293_134528169c_2 isa constant, has hash "N_8732115042293_134528169c_2", has constant-value "44", has edge-label "false";
(to-node: $N_8732115042293_134528169c_2, from-node: $N_8732115042293_134528169c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 26, has bb-end 27; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 26, has bb-end 27; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 26, has bb-end 27; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114982885_134528111c isa instruction, has hash "N_8732114982885_134528111c", has il-index 26, has asm-address "0x804bc6f", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_14#11 = 0xfffffffc";
(contains-instruction: $N_8732114982885_134528111c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114982885_134528111c isa instruction, has hash "N_8732114982885_134528111c"; 

insert
$N_8732114982885_134528111c_0 isa variable-ssa, has hash "N_8732114982885_134528111c_0", has var "var_14", has version 11, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114982885_134528111c_0, from-node: $N_8732114982885_134528111c) isa node-link; 

match
$N_8732114982885_134528111c isa instruction, has hash "N_8732114982885_134528111c"; 

insert
$N_8732114982885_134528111c_1 isa MLIL_CONST, has hash "N_8732114982885_134528111c_1", has edge-label "src";
(to-node: $N_8732114982885_134528111c_1, from-node: $N_8732114982885_134528111c) isa node-link; 

match
$N_8732114982885_134528111c_1 isa operation, has hash "N_8732114982885_134528111c_1"; 

insert
$N_8732114982885_134528111c_1_0 isa constant, has hash "N_8732114982885_134528111c_1_0", has constant-value "4294967292", has edge-label "constant";
(to-node: $N_8732114982885_134528111c_1_0, from-node: $N_8732114982885_134528111c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 26, has bb-end 27; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 26, has bb-end 27; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115467877_134528118c isa instruction, has hash "N_8732115467877_134528118c", has il-index 27, has asm-address "0x804bc76", has operation-type "MLIL_GOTO", has ins-text "goto 28 @ 0x804beae";
(contains-instruction: $N_8732115467877_134528118c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115467877_134528118c isa instruction, has hash "N_8732115467877_134528118c"; 

insert
$N_8732115467877_134528118c_0 isa constant, has hash "N_8732115467877_134528118c_0", has constant-value "28", has edge-label "dest";
(to-node: $N_8732115467877_134528118c_0, from-node: $N_8732115467877_134528118c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 28, has bb-end 38; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 28, has bb-end 38; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 28, has bb-end 38; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114868913_134528686c isa instruction, has hash "N_8732114868913_134528686c", has il-index 28, has asm-address "0x804beae", has operation-type "MLIL_VAR_PHI", has ins-text "var_4c_3#5 = ϕ(var_4c#1, var_4c_1#2, var_4c_2#3, var_4c_3#4)";
(contains-instruction: $N_8732114868913_134528686c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114868913_134528686c isa instruction, has hash "N_8732114868913_134528686c"; 

insert
$N_8732114868913_134528686c_0 isa variable-ssa, has hash "N_8732114868913_134528686c_0", has var "var_4c_3", has version 5, has edge-label "dest", has var-type "void*", has var-size -52, has var-func "cgc_validate_header";
(to-node: $N_8732114868913_134528686c_0, from-node: $N_8732114868913_134528686c) isa node-link; 

match
$N_8732114868913_134528686c isa instruction, has hash "N_8732114868913_134528686c"; 

insert
$L_8732114868913_134528686c_1 isa list, has hash "L_8732114868913_134528686c_1", has list-size 4, has edge-label "src";
(to-node: $L_8732114868913_134528686c_1, from-node: $N_8732114868913_134528686c) isa node-link; 

match
$L_8732114868913_134528686c_1 isa list, has hash "L_8732114868913_134528686c_1"; 

insert
$N_8732114868913_134528686c_1_0 isa variable-ssa, has hash "N_8732114868913_134528686c_1_0", has var "var_4c", has version 1, has edge-label "0", has var-type "char*", has var-size -48, has var-func "cgc_validate_header";
(to-node: $N_8732114868913_134528686c_1_0, from-node: $L_8732114868913_134528686c_1) isa node-link; 

match
$L_8732114868913_134528686c_1 isa list, has hash "L_8732114868913_134528686c_1"; 

insert
$N_8732114868913_134528686c_1_1 isa variable-ssa, has hash "N_8732114868913_134528686c_1_1", has var "var_4c_1", has version 2, has edge-label "1", has var-type "void*", has var-size -52, has var-func "cgc_validate_header";
(to-node: $N_8732114868913_134528686c_1_1, from-node: $L_8732114868913_134528686c_1) isa node-link; 

match
$L_8732114868913_134528686c_1 isa list, has hash "L_8732114868913_134528686c_1"; 

insert
$N_8732114868913_134528686c_1_2 isa variable-ssa, has hash "N_8732114868913_134528686c_1_2", has var "var_4c_2", has version 3, has edge-label "2", has var-type "void*", has var-size -52, has var-func "cgc_validate_header";
(to-node: $N_8732114868913_134528686c_1_2, from-node: $L_8732114868913_134528686c_1) isa node-link; 

match
$L_8732114868913_134528686c_1 isa list, has hash "L_8732114868913_134528686c_1"; 

insert
$N_8732114868913_134528686c_1_3 isa variable-ssa, has hash "N_8732114868913_134528686c_1_3", has var "var_4c_3", has version 4, has edge-label "3", has var-type "void*", has var-size -52, has var-func "cgc_validate_header";
(to-node: $N_8732114868913_134528686c_1_3, from-node: $L_8732114868913_134528686c_1) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 28, has bb-end 38; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114873789_134528686c isa instruction, has hash "N_8732114873789_134528686c", has il-index 29, has asm-address "0x804beae", has operation-type "MLIL_VAR_PHI", has ins-text "var_2c_1#2 = ϕ(var_2c#0, var_2c_1#1)";
(contains-instruction: $N_8732114873789_134528686c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114873789_134528686c isa instruction, has hash "N_8732114873789_134528686c"; 

insert
$N_8732114873789_134528686c_0 isa variable-ssa, has hash "N_8732114873789_134528686c_0", has var "var_2c_1", has version 2, has edge-label "dest", has var-type "void*", has var-size -20, has var-func "cgc_validate_header";
(to-node: $N_8732114873789_134528686c_0, from-node: $N_8732114873789_134528686c) isa node-link; 

match
$N_8732114873789_134528686c isa instruction, has hash "N_8732114873789_134528686c"; 

insert
$L_8732114873789_134528686c_1 isa list, has hash "L_8732114873789_134528686c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732114873789_134528686c_1, from-node: $N_8732114873789_134528686c) isa node-link; 

match
$L_8732114873789_134528686c_1 isa list, has hash "L_8732114873789_134528686c_1"; 

insert
$N_8732114873789_134528686c_1_0 isa variable-ssa, has hash "N_8732114873789_134528686c_1_0", has var "var_2c", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114873789_134528686c_1_0, from-node: $L_8732114873789_134528686c_1) isa node-link; 

match
$L_8732114873789_134528686c_1 isa list, has hash "L_8732114873789_134528686c_1"; 

insert
$N_8732114873789_134528686c_1_1 isa variable-ssa, has hash "N_8732114873789_134528686c_1_1", has var "var_2c_1", has version 1, has edge-label "1", has var-type "void*", has var-size -20, has var-func "cgc_validate_header";
(to-node: $N_8732114873789_134528686c_1_1, from-node: $L_8732114873789_134528686c_1) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 28, has bb-end 38; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114896901_134528686c isa instruction, has hash "N_8732114896901_134528686c", has il-index 34, has asm-address "0x804beae", has operation-type "MLIL_VAR_PHI", has ins-text "esi_2#3 = ϕ(esi#0, esi_2#2)";
(contains-instruction: $N_8732114896901_134528686c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114896901_134528686c isa instruction, has hash "N_8732114896901_134528686c"; 

insert
$N_8732114896901_134528686c_0 isa variable-ssa, has hash "N_8732114896901_134528686c_0", has var "esi_2", has version 3, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114896901_134528686c_0, from-node: $N_8732114896901_134528686c) isa node-link; 

match
$N_8732114896901_134528686c isa instruction, has hash "N_8732114896901_134528686c"; 

insert
$L_8732114896901_134528686c_1 isa list, has hash "L_8732114896901_134528686c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732114896901_134528686c_1, from-node: $N_8732114896901_134528686c) isa node-link; 

match
$L_8732114896901_134528686c_1 isa list, has hash "L_8732114896901_134528686c_1"; 

insert
$N_8732114896901_134528686c_1_0 isa variable-ssa, has hash "N_8732114896901_134528686c_1_0", has var "esi", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114896901_134528686c_1_0, from-node: $L_8732114896901_134528686c_1) isa node-link; 

match
$L_8732114896901_134528686c_1 isa list, has hash "L_8732114896901_134528686c_1"; 

insert
$N_8732114896901_134528686c_1_1 isa variable-ssa, has hash "N_8732114896901_134528686c_1_1", has var "esi_2", has version 2, has edge-label "1", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114896901_134528686c_1_1, from-node: $L_8732114896901_134528686c_1) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 28, has bb-end 38; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115057669_134528686c isa instruction, has hash "N_8732115057669_134528686c", has il-index 31, has asm-address "0x804beae", has operation-type "MLIL_VAR_PHI", has ins-text "eax_33#38 = ϕ(eax_2#3, eax_4#5, eax_5#6, eax_6#7, eax_8#9, eax_12#13, eax_20#22, eax_22#25, eax_25#28, eax_29#32, eax_30#34, eax_33#37)";
(contains-instruction: $N_8732115057669_134528686c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115057669_134528686c isa instruction, has hash "N_8732115057669_134528686c"; 

insert
$N_8732115057669_134528686c_0 isa variable-ssa, has hash "N_8732115057669_134528686c_0", has var "eax_33", has version 38, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115057669_134528686c_0, from-node: $N_8732115057669_134528686c) isa node-link; 

match
$N_8732115057669_134528686c isa instruction, has hash "N_8732115057669_134528686c"; 

insert
$L_8732115057669_134528686c_1 isa list, has hash "L_8732115057669_134528686c_1", has list-size 12, has edge-label "src";
(to-node: $L_8732115057669_134528686c_1, from-node: $N_8732115057669_134528686c) isa node-link; 

match
$L_8732115057669_134528686c_1 isa list, has hash "L_8732115057669_134528686c_1"; 

insert
$N_8732115057669_134528686c_1_0 isa variable-ssa, has hash "N_8732115057669_134528686c_1_0", has var "eax_2", has version 3, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115057669_134528686c_1_0, from-node: $L_8732115057669_134528686c_1) isa node-link; 

match
$L_8732115057669_134528686c_1 isa list, has hash "L_8732115057669_134528686c_1"; 

insert
$N_8732115057669_134528686c_1_1 isa variable-ssa, has hash "N_8732115057669_134528686c_1_1", has var "eax_4", has version 5, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115057669_134528686c_1_1, from-node: $L_8732115057669_134528686c_1) isa node-link; 

match
$L_8732115057669_134528686c_1 isa list, has hash "L_8732115057669_134528686c_1"; 

insert
$N_8732115057669_134528686c_1_2 isa variable-ssa, has hash "N_8732115057669_134528686c_1_2", has var "eax_5", has version 6, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115057669_134528686c_1_2, from-node: $L_8732115057669_134528686c_1) isa node-link; 

match
$L_8732115057669_134528686c_1 isa list, has hash "L_8732115057669_134528686c_1"; 

insert
$N_8732115057669_134528686c_1_3 isa variable-ssa, has hash "N_8732115057669_134528686c_1_3", has var "eax_6", has version 7, has edge-label "3", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115057669_134528686c_1_3, from-node: $L_8732115057669_134528686c_1) isa node-link; 

match
$L_8732115057669_134528686c_1 isa list, has hash "L_8732115057669_134528686c_1"; 

insert
$N_8732115057669_134528686c_1_4 isa variable-ssa, has hash "N_8732115057669_134528686c_1_4", has var "eax_8", has version 9, has edge-label "4", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115057669_134528686c_1_4, from-node: $L_8732115057669_134528686c_1) isa node-link; 

match
$L_8732115057669_134528686c_1 isa list, has hash "L_8732115057669_134528686c_1"; 

insert
$N_8732115057669_134528686c_1_5 isa variable-ssa, has hash "N_8732115057669_134528686c_1_5", has var "eax_12", has version 13, has edge-label "5", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115057669_134528686c_1_5, from-node: $L_8732115057669_134528686c_1) isa node-link; 

match
$L_8732115057669_134528686c_1 isa list, has hash "L_8732115057669_134528686c_1"; 

insert
$N_8732115057669_134528686c_1_6 isa variable-ssa, has hash "N_8732115057669_134528686c_1_6", has var "eax_20", has version 22, has edge-label "6", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115057669_134528686c_1_6, from-node: $L_8732115057669_134528686c_1) isa node-link; 

match
$L_8732115057669_134528686c_1 isa list, has hash "L_8732115057669_134528686c_1"; 

insert
$N_8732115057669_134528686c_1_7 isa variable-ssa, has hash "N_8732115057669_134528686c_1_7", has var "eax_22", has version 25, has edge-label "7", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115057669_134528686c_1_7, from-node: $L_8732115057669_134528686c_1) isa node-link; 

match
$L_8732115057669_134528686c_1 isa list, has hash "L_8732115057669_134528686c_1"; 

insert
$N_8732115057669_134528686c_1_8 isa variable-ssa, has hash "N_8732115057669_134528686c_1_8", has var "eax_25", has version 28, has edge-label "8", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115057669_134528686c_1_8, from-node: $L_8732115057669_134528686c_1) isa node-link; 

match
$L_8732115057669_134528686c_1 isa list, has hash "L_8732115057669_134528686c_1"; 

insert
$N_8732115057669_134528686c_1_9 isa variable-ssa, has hash "N_8732115057669_134528686c_1_9", has var "eax_29", has version 32, has edge-label "9", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115057669_134528686c_1_9, from-node: $L_8732115057669_134528686c_1) isa node-link; 

match
$L_8732115057669_134528686c_1 isa list, has hash "L_8732115057669_134528686c_1"; 

insert
$N_8732115057669_134528686c_1_10 isa variable-ssa, has hash "N_8732115057669_134528686c_1_10", has var "eax_30", has version 34, has edge-label "10", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115057669_134528686c_1_10, from-node: $L_8732115057669_134528686c_1) isa node-link; 

match
$L_8732115057669_134528686c_1 isa list, has hash "L_8732115057669_134528686c_1"; 

insert
$N_8732115057669_134528686c_1_11 isa variable-ssa, has hash "N_8732115057669_134528686c_1_11", has var "eax_33", has version 37, has edge-label "11", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115057669_134528686c_1_11, from-node: $L_8732115057669_134528686c_1) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 28, has bb-end 38; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115250949_134528686c isa instruction, has hash "N_8732115250949_134528686c", has il-index 33, has asm-address "0x804beae", has operation-type "MLIL_VAR_PHI", has ins-text "edx_11#12 = ϕ(edx#0, edx_3#3, edx_7#7, edx_11#11)";
(contains-instruction: $N_8732115250949_134528686c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115250949_134528686c isa instruction, has hash "N_8732115250949_134528686c"; 

insert
$N_8732115250949_134528686c_0 isa variable-ssa, has hash "N_8732115250949_134528686c_0", has var "edx_11", has version 12, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115250949_134528686c_0, from-node: $N_8732115250949_134528686c) isa node-link; 

match
$N_8732115250949_134528686c isa instruction, has hash "N_8732115250949_134528686c"; 

insert
$L_8732115250949_134528686c_1 isa list, has hash "L_8732115250949_134528686c_1", has list-size 4, has edge-label "src";
(to-node: $L_8732115250949_134528686c_1, from-node: $N_8732115250949_134528686c) isa node-link; 

match
$L_8732115250949_134528686c_1 isa list, has hash "L_8732115250949_134528686c_1"; 

insert
$N_8732115250949_134528686c_1_0 isa variable-ssa, has hash "N_8732115250949_134528686c_1_0", has var "edx", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115250949_134528686c_1_0, from-node: $L_8732115250949_134528686c_1) isa node-link; 

match
$L_8732115250949_134528686c_1 isa list, has hash "L_8732115250949_134528686c_1"; 

insert
$N_8732115250949_134528686c_1_1 isa variable-ssa, has hash "N_8732115250949_134528686c_1_1", has var "edx_3", has version 3, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115250949_134528686c_1_1, from-node: $L_8732115250949_134528686c_1) isa node-link; 

match
$L_8732115250949_134528686c_1 isa list, has hash "L_8732115250949_134528686c_1"; 

insert
$N_8732115250949_134528686c_1_2 isa variable-ssa, has hash "N_8732115250949_134528686c_1_2", has var "edx_7", has version 7, has edge-label "2", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115250949_134528686c_1_2, from-node: $L_8732115250949_134528686c_1) isa node-link; 

match
$L_8732115250949_134528686c_1 isa list, has hash "L_8732115250949_134528686c_1"; 

insert
$N_8732115250949_134528686c_1_3 isa variable-ssa, has hash "N_8732115250949_134528686c_1_3", has var "edx_11", has version 11, has edge-label "3", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115250949_134528686c_1_3, from-node: $L_8732115250949_134528686c_1) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 28, has bb-end 38; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115260677_134528686c isa instruction, has hash "N_8732115260677_134528686c", has il-index 32, has asm-address "0x804beae", has operation-type "MLIL_VAR_PHI", has ins-text "ecx_19#20 = ϕ(ecx#0, ecx_5#5, ecx_8#8, ecx_10#10, ecx_15#15, ecx_17#17, ecx_19#19)";
(contains-instruction: $N_8732115260677_134528686c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115260677_134528686c isa instruction, has hash "N_8732115260677_134528686c"; 

insert
$N_8732115260677_134528686c_0 isa variable-ssa, has hash "N_8732115260677_134528686c_0", has var "ecx_19", has version 20, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115260677_134528686c_0, from-node: $N_8732115260677_134528686c) isa node-link; 

match
$N_8732115260677_134528686c isa instruction, has hash "N_8732115260677_134528686c"; 

insert
$L_8732115260677_134528686c_1 isa list, has hash "L_8732115260677_134528686c_1", has list-size 7, has edge-label "src";
(to-node: $L_8732115260677_134528686c_1, from-node: $N_8732115260677_134528686c) isa node-link; 

match
$L_8732115260677_134528686c_1 isa list, has hash "L_8732115260677_134528686c_1"; 

insert
$N_8732115260677_134528686c_1_0 isa variable-ssa, has hash "N_8732115260677_134528686c_1_0", has var "ecx", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115260677_134528686c_1_0, from-node: $L_8732115260677_134528686c_1) isa node-link; 

match
$L_8732115260677_134528686c_1 isa list, has hash "L_8732115260677_134528686c_1"; 

insert
$N_8732115260677_134528686c_1_1 isa variable-ssa, has hash "N_8732115260677_134528686c_1_1", has var "ecx_5", has version 5, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115260677_134528686c_1_1, from-node: $L_8732115260677_134528686c_1) isa node-link; 

match
$L_8732115260677_134528686c_1 isa list, has hash "L_8732115260677_134528686c_1"; 

insert
$N_8732115260677_134528686c_1_2 isa variable-ssa, has hash "N_8732115260677_134528686c_1_2", has var "ecx_8", has version 8, has edge-label "2", has var-type "void*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115260677_134528686c_1_2, from-node: $L_8732115260677_134528686c_1) isa node-link; 

match
$L_8732115260677_134528686c_1 isa list, has hash "L_8732115260677_134528686c_1"; 

insert
$N_8732115260677_134528686c_1_3 isa variable-ssa, has hash "N_8732115260677_134528686c_1_3", has var "ecx_10", has version 10, has edge-label "3", has var-type "void*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115260677_134528686c_1_3, from-node: $L_8732115260677_134528686c_1) isa node-link; 

match
$L_8732115260677_134528686c_1 isa list, has hash "L_8732115260677_134528686c_1"; 

insert
$N_8732115260677_134528686c_1_4 isa variable-ssa, has hash "N_8732115260677_134528686c_1_4", has var "ecx_15", has version 15, has edge-label "4", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115260677_134528686c_1_4, from-node: $L_8732115260677_134528686c_1) isa node-link; 

match
$L_8732115260677_134528686c_1 isa list, has hash "L_8732115260677_134528686c_1"; 

insert
$N_8732115260677_134528686c_1_5 isa variable-ssa, has hash "N_8732115260677_134528686c_1_5", has var "ecx_17", has version 17, has edge-label "5", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115260677_134528686c_1_5, from-node: $L_8732115260677_134528686c_1) isa node-link; 

match
$L_8732115260677_134528686c_1 isa list, has hash "L_8732115260677_134528686c_1"; 

insert
$N_8732115260677_134528686c_1_6 isa variable-ssa, has hash "N_8732115260677_134528686c_1_6", has var "ecx_19", has version 19, has edge-label "6", has var-type "void*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115260677_134528686c_1_6, from-node: $L_8732115260677_134528686c_1) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 28, has bb-end 38; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115357445_134528686c isa instruction, has hash "N_8732115357445_134528686c", has il-index 30, has asm-address "0x804beae", has operation-type "MLIL_VAR_PHI", has ins-text "var_14#13 = ϕ(var_14#1, var_14#2, var_14#3, var_14#4, var_14#5, var_14#6, var_14#7, var_14#8, var_14#9, var_14#10, var_14#11, var_14#12)";
(contains-instruction: $N_8732115357445_134528686c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115357445_134528686c isa instruction, has hash "N_8732115357445_134528686c"; 

insert
$N_8732115357445_134528686c_0 isa variable-ssa, has hash "N_8732115357445_134528686c_0", has var "var_14", has version 13, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115357445_134528686c_0, from-node: $N_8732115357445_134528686c) isa node-link; 

match
$N_8732115357445_134528686c isa instruction, has hash "N_8732115357445_134528686c"; 

insert
$L_8732115357445_134528686c_1 isa list, has hash "L_8732115357445_134528686c_1", has list-size 12, has edge-label "src";
(to-node: $L_8732115357445_134528686c_1, from-node: $N_8732115357445_134528686c) isa node-link; 

match
$L_8732115357445_134528686c_1 isa list, has hash "L_8732115357445_134528686c_1"; 

insert
$N_8732115357445_134528686c_1_0 isa variable-ssa, has hash "N_8732115357445_134528686c_1_0", has var "var_14", has version 1, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115357445_134528686c_1_0, from-node: $L_8732115357445_134528686c_1) isa node-link; 

match
$L_8732115357445_134528686c_1 isa list, has hash "L_8732115357445_134528686c_1"; 

insert
$N_8732115357445_134528686c_1_1 isa variable-ssa, has hash "N_8732115357445_134528686c_1_1", has var "var_14", has version 2, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115357445_134528686c_1_1, from-node: $L_8732115357445_134528686c_1) isa node-link; 

match
$L_8732115357445_134528686c_1 isa list, has hash "L_8732115357445_134528686c_1"; 

insert
$N_8732115357445_134528686c_1_2 isa variable-ssa, has hash "N_8732115357445_134528686c_1_2", has var "var_14", has version 3, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115357445_134528686c_1_2, from-node: $L_8732115357445_134528686c_1) isa node-link; 

match
$L_8732115357445_134528686c_1 isa list, has hash "L_8732115357445_134528686c_1"; 

insert
$N_8732115357445_134528686c_1_3 isa variable-ssa, has hash "N_8732115357445_134528686c_1_3", has var "var_14", has version 4, has edge-label "3", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115357445_134528686c_1_3, from-node: $L_8732115357445_134528686c_1) isa node-link; 

match
$L_8732115357445_134528686c_1 isa list, has hash "L_8732115357445_134528686c_1"; 

insert
$N_8732115357445_134528686c_1_4 isa variable-ssa, has hash "N_8732115357445_134528686c_1_4", has var "var_14", has version 5, has edge-label "4", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115357445_134528686c_1_4, from-node: $L_8732115357445_134528686c_1) isa node-link; 

match
$L_8732115357445_134528686c_1 isa list, has hash "L_8732115357445_134528686c_1"; 

insert
$N_8732115357445_134528686c_1_5 isa variable-ssa, has hash "N_8732115357445_134528686c_1_5", has var "var_14", has version 6, has edge-label "5", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115357445_134528686c_1_5, from-node: $L_8732115357445_134528686c_1) isa node-link; 

match
$L_8732115357445_134528686c_1 isa list, has hash "L_8732115357445_134528686c_1"; 

insert
$N_8732115357445_134528686c_1_6 isa variable-ssa, has hash "N_8732115357445_134528686c_1_6", has var "var_14", has version 7, has edge-label "6", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115357445_134528686c_1_6, from-node: $L_8732115357445_134528686c_1) isa node-link; 

match
$L_8732115357445_134528686c_1 isa list, has hash "L_8732115357445_134528686c_1"; 

insert
$N_8732115357445_134528686c_1_7 isa variable-ssa, has hash "N_8732115357445_134528686c_1_7", has var "var_14", has version 8, has edge-label "7", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115357445_134528686c_1_7, from-node: $L_8732115357445_134528686c_1) isa node-link; 

match
$L_8732115357445_134528686c_1 isa list, has hash "L_8732115357445_134528686c_1"; 

insert
$N_8732115357445_134528686c_1_8 isa variable-ssa, has hash "N_8732115357445_134528686c_1_8", has var "var_14", has version 9, has edge-label "8", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115357445_134528686c_1_8, from-node: $L_8732115357445_134528686c_1) isa node-link; 

match
$L_8732115357445_134528686c_1 isa list, has hash "L_8732115357445_134528686c_1"; 

insert
$N_8732115357445_134528686c_1_9 isa variable-ssa, has hash "N_8732115357445_134528686c_1_9", has var "var_14", has version 10, has edge-label "9", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115357445_134528686c_1_9, from-node: $L_8732115357445_134528686c_1) isa node-link; 

match
$L_8732115357445_134528686c_1 isa list, has hash "L_8732115357445_134528686c_1"; 

insert
$N_8732115357445_134528686c_1_10 isa variable-ssa, has hash "N_8732115357445_134528686c_1_10", has var "var_14", has version 11, has edge-label "10", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115357445_134528686c_1_10, from-node: $L_8732115357445_134528686c_1) isa node-link; 

match
$L_8732115357445_134528686c_1 isa list, has hash "L_8732115357445_134528686c_1"; 

insert
$N_8732115357445_134528686c_1_11 isa variable-ssa, has hash "N_8732115357445_134528686c_1_11", has var "var_14", has version 12, has edge-label "11", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115357445_134528686c_1_11, from-node: $L_8732115357445_134528686c_1) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 28, has bb-end 38; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115492413_134528686c isa instruction, has hash "N_8732115492413_134528686c", has il-index 37, has asm-address "0x804beae", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_34#39 = var_14#13";
(contains-instruction: $N_8732115492413_134528686c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115492413_134528686c isa instruction, has hash "N_8732115492413_134528686c"; 

insert
$N_8732115492413_134528686c_0 isa variable-ssa, has hash "N_8732115492413_134528686c_0", has var "eax_34", has version 39, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115492413_134528686c_0, from-node: $N_8732115492413_134528686c) isa node-link; 

match
$N_8732115492413_134528686c isa instruction, has hash "N_8732115492413_134528686c"; 

insert
$N_8732115492413_134528686c_1 isa MLIL_VAR_SSA, has hash "N_8732115492413_134528686c_1", has edge-label "src";
(to-node: $N_8732115492413_134528686c_1, from-node: $N_8732115492413_134528686c) isa node-link; 

match
$N_8732115492413_134528686c_1 isa operation, has hash "N_8732115492413_134528686c_1"; 

insert
$N_8732115492413_134528686c_1_0 isa variable-ssa, has hash "N_8732115492413_134528686c_1_0", has var "var_14", has version 13, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115492413_134528686c_1_0, from-node: $N_8732115492413_134528686c_1) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 28, has bb-end 38; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115493637_134528686c isa instruction, has hash "N_8732115493637_134528686c", has il-index 36, has asm-address "0x804beae", has operation-type "MLIL_MEM_PHI", has ins-text "mem#5 = ϕ(mem#1, mem#2, mem#3, mem#4)";
(contains-instruction: $N_8732115493637_134528686c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115493637_134528686c isa instruction, has hash "N_8732115493637_134528686c"; 

insert
$N_8732115493637_134528686c_0 isa constant, has hash "N_8732115493637_134528686c_0", has constant-value "5", has edge-label "dest_memory";
(to-node: $N_8732115493637_134528686c_0, from-node: $N_8732115493637_134528686c) isa node-link; 

match
$N_8732115493637_134528686c isa instruction, has hash "N_8732115493637_134528686c"; 

insert
$L_8732115493637_134528686c_1 isa list, has hash "L_8732115493637_134528686c_1", has list-size 4, has edge-label "src_memory";
(to-node: $L_8732115493637_134528686c_1, from-node: $N_8732115493637_134528686c) isa node-link; 

match
$L_8732115493637_134528686c_1 isa list, has hash "L_8732115493637_134528686c_1"; 

insert
$N_8732115493637_134528686c_1_0 isa constant, has hash "N_8732115493637_134528686c_1_0", has constant-value "1", has edge-label "0";
(to-node: $N_8732115493637_134528686c_1_0, from-node: $L_8732115493637_134528686c_1) isa node-link; 

match
$L_8732115493637_134528686c_1 isa list, has hash "L_8732115493637_134528686c_1"; 

insert
$N_8732115493637_134528686c_1_1 isa constant, has hash "N_8732115493637_134528686c_1_1", has constant-value "2", has edge-label "1";
(to-node: $N_8732115493637_134528686c_1_1, from-node: $L_8732115493637_134528686c_1) isa node-link; 

match
$L_8732115493637_134528686c_1 isa list, has hash "L_8732115493637_134528686c_1"; 

insert
$N_8732115493637_134528686c_1_2 isa constant, has hash "N_8732115493637_134528686c_1_2", has constant-value "3", has edge-label "2";
(to-node: $N_8732115493637_134528686c_1_2, from-node: $L_8732115493637_134528686c_1) isa node-link; 

match
$L_8732115493637_134528686c_1 isa list, has hash "L_8732115493637_134528686c_1"; 

insert
$N_8732115493637_134528686c_1_3 isa constant, has hash "N_8732115493637_134528686c_1_3", has constant-value "4", has edge-label "3";
(to-node: $N_8732115493637_134528686c_1_3, from-node: $L_8732115493637_134528686c_1) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 28, has bb-end 38; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115508997_134528686c isa instruction, has hash "N_8732115508997_134528686c", has il-index 35, has asm-address "0x804beae", has operation-type "MLIL_VAR_PHI", has ins-text "temp0_1#2 = ϕ(temp0#0, temp0_1#1)";
(contains-instruction: $N_8732115508997_134528686c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115508997_134528686c isa instruction, has hash "N_8732115508997_134528686c"; 

insert
$N_8732115508997_134528686c_0 isa variable-ssa, has hash "N_8732115508997_134528686c_0", has var "temp0_1", has version 2, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115508997_134528686c_0, from-node: $N_8732115508997_134528686c) isa node-link; 

match
$N_8732115508997_134528686c isa instruction, has hash "N_8732115508997_134528686c"; 

insert
$L_8732115508997_134528686c_1 isa list, has hash "L_8732115508997_134528686c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115508997_134528686c_1, from-node: $N_8732115508997_134528686c) isa node-link; 

match
$L_8732115508997_134528686c_1 isa list, has hash "L_8732115508997_134528686c_1"; 

insert
$N_8732115508997_134528686c_1_0 isa variable-ssa, has hash "N_8732115508997_134528686c_1_0", has var "temp0", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115508997_134528686c_1_0, from-node: $L_8732115508997_134528686c_1) isa node-link; 

match
$L_8732115508997_134528686c_1 isa list, has hash "L_8732115508997_134528686c_1"; 

insert
$N_8732115508997_134528686c_1_1 isa variable-ssa, has hash "N_8732115508997_134528686c_1_1", has var "temp0_1", has version 1, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115508997_134528686c_1_1, from-node: $L_8732115508997_134528686c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 28, has bb-end 38; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 28, has bb-end 38; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114955013_134528696c isa instruction, has hash "N_8732114955013_134528696c", has il-index 38, has asm-address "0x804beb8", has operation-type "MLIL_RET", has ins-text "return eax_34#39";
(contains-instruction: $N_8732114955013_134528696c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114955013_134528696c isa instruction, has hash "N_8732114955013_134528696c"; 

insert
$L_8732114955013_134528696c_0 isa list, has hash "L_8732114955013_134528696c_0", has list-size 1, has edge-label "src";
(to-node: $L_8732114955013_134528696c_0, from-node: $N_8732114955013_134528696c) isa node-link; 

match
$L_8732114955013_134528696c_0 isa list, has hash "L_8732114955013_134528696c_0"; 

insert
$N_8732114955013_134528696c_0_0 isa MLIL_VAR_SSA, has hash "N_8732114955013_134528696c_0_0", has edge-label "0";
(to-node: $N_8732114955013_134528696c_0_0, from-node: $L_8732114955013_134528696c_0) isa node-link; 

match
$N_8732114955013_134528696c_0_0 isa operation, has hash "N_8732114955013_134528696c_0_0"; 

insert
$N_8732114955013_134528696c_0_0_0 isa variable-ssa, has hash "N_8732114955013_134528696c_0_0_0", has var "eax_34", has version 39, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114955013_134528696c_0_0_0, from-node: $N_8732114955013_134528696c_0_0) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 39, has bb-end 43; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 39, has bb-end 43; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 39, has bb-end 43; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114878545_134528192c isa instruction, has hash "N_8732114878545_134528192c", has il-index 39, has asm-address "0x804bcc0", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_9#9 = var_18#1";
(contains-instruction: $N_8732114878545_134528192c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114878545_134528192c isa instruction, has hash "N_8732114878545_134528192c"; 

insert
$N_8732114878545_134528192c_0 isa variable-ssa, has hash "N_8732114878545_134528192c_0", has var "ecx_9", has version 9, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114878545_134528192c_0, from-node: $N_8732114878545_134528192c) isa node-link; 

match
$N_8732114878545_134528192c isa instruction, has hash "N_8732114878545_134528192c"; 

insert
$N_8732114878545_134528192c_1 isa MLIL_VAR_SSA, has hash "N_8732114878545_134528192c_1", has edge-label "src";
(to-node: $N_8732114878545_134528192c_1, from-node: $N_8732114878545_134528192c) isa node-link; 

match
$N_8732114878545_134528192c_1 isa operation, has hash "N_8732114878545_134528192c_1"; 

insert
$N_8732114878545_134528192c_1_0 isa variable-ssa, has hash "N_8732114878545_134528192c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732114878545_134528192c_1_0, from-node: $N_8732114878545_134528192c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 39, has bb-end 43; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 39, has bb-end 43; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114955017_134528195c isa instruction, has hash "N_8732114955017_134528195c", has il-index 40, has asm-address "0x804bcc3", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_10#10 = ecx_9#9 + 0xc";
(contains-instruction: $N_8732114955017_134528195c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114955017_134528195c isa instruction, has hash "N_8732114955017_134528195c"; 

insert
$N_8732114955017_134528195c_0 isa variable-ssa, has hash "N_8732114955017_134528195c_0", has var "ecx_10", has version 10, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114955017_134528195c_0, from-node: $N_8732114955017_134528195c) isa node-link; 

match
$N_8732114955017_134528195c isa instruction, has hash "N_8732114955017_134528195c"; 

insert
$N_8732114955017_134528195c_1 isa MLIL_ADD, has hash "N_8732114955017_134528195c_1", has edge-label "src";
(to-node: $N_8732114955017_134528195c_1, from-node: $N_8732114955017_134528195c) isa node-link; 

match
$N_8732114955017_134528195c_1 isa operation, has hash "N_8732114955017_134528195c_1"; 

insert
$N_8732114955017_134528195c_1_0 isa MLIL_VAR_SSA, has hash "N_8732114955017_134528195c_1_0", has edge-label "left";
(to-node: $N_8732114955017_134528195c_1_0, from-node: $N_8732114955017_134528195c_1) isa node-link; 

match
$N_8732114955017_134528195c_1_0 isa operation, has hash "N_8732114955017_134528195c_1_0"; 

insert
$N_8732114955017_134528195c_1_0_0 isa variable-ssa, has hash "N_8732114955017_134528195c_1_0_0", has var "ecx_9", has version 9, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114955017_134528195c_1_0_0, from-node: $N_8732114955017_134528195c_1_0) isa node-link; 

match
$N_8732114955017_134528195c_1 isa operation, has hash "N_8732114955017_134528195c_1"; 

insert
$N_8732114955017_134528195c_1_1 isa MLIL_CONST, has hash "N_8732114955017_134528195c_1_1", has edge-label "right";
(to-node: $N_8732114955017_134528195c_1_1, from-node: $N_8732114955017_134528195c_1) isa node-link; 

match
$N_8732114955017_134528195c_1_1 isa operation, has hash "N_8732114955017_134528195c_1_1"; 

insert
$N_8732114955017_134528195c_1_1_0 isa constant, has hash "N_8732114955017_134528195c_1_1_0", has constant-value "12", has edge-label "constant";
(to-node: $N_8732114955017_134528195c_1_1_0, from-node: $N_8732114955017_134528195c_1_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 39, has bb-end 43; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 39, has bb-end 43; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114839045_134528201c isa instruction, has hash "N_8732114839045_134528201c", has il-index 41, has asm-address "0x804bcc9", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_4c_2#3 = ecx_10#10";
(contains-instruction: $N_8732114839045_134528201c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114839045_134528201c isa instruction, has hash "N_8732114839045_134528201c"; 

insert
$N_8732114839045_134528201c_0 isa variable-ssa, has hash "N_8732114839045_134528201c_0", has var "var_4c_2", has version 3, has edge-label "dest", has var-type "void*", has var-size -52, has var-func "cgc_validate_header";
(to-node: $N_8732114839045_134528201c_0, from-node: $N_8732114839045_134528201c) isa node-link; 

match
$N_8732114839045_134528201c isa instruction, has hash "N_8732114839045_134528201c"; 

insert
$N_8732114839045_134528201c_1 isa MLIL_VAR_SSA, has hash "N_8732114839045_134528201c_1", has edge-label "src";
(to-node: $N_8732114839045_134528201c_1, from-node: $N_8732114839045_134528201c) isa node-link; 

match
$N_8732114839045_134528201c_1 isa operation, has hash "N_8732114839045_134528201c_1"; 

insert
$N_8732114839045_134528201c_1_0 isa variable-ssa, has hash "N_8732114839045_134528201c_1_0", has var "ecx_10", has version 10, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114839045_134528201c_1_0, from-node: $N_8732114839045_134528201c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 39, has bb-end 43; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 39, has bb-end 43; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115274757_134528219c isa instruction, has hash "N_8732115274757_134528219c", has il-index 42, has asm-address "0x804bcdb", has operation-type "MLIL_CALL_SSA", has ins-text "eax_6#7, mem#3 = 0x8049ce0(var_4c_2#3, 0x804d451, 4) @ mem#2";
(contains-instruction: $N_8732115274757_134528219c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115274757_134528219c isa instruction, has hash "N_8732115274757_134528219c"; 

insert
$N_8732115274757_134528219c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8732115274757_134528219c_0", has edge-label "output";
(to-node: $N_8732115274757_134528219c_0, from-node: $N_8732115274757_134528219c) isa node-link; 

match
$N_8732115274757_134528219c_0 isa operation, has hash "N_8732115274757_134528219c_0"; 

insert
$N_8732115274757_134528219c_0_0 isa constant, has hash "N_8732115274757_134528219c_0_0", has constant-value "3", has edge-label "dest_memory";
(to-node: $N_8732115274757_134528219c_0_0, from-node: $N_8732115274757_134528219c_0) isa node-link; 

match
$N_8732115274757_134528219c_0 isa operation, has hash "N_8732115274757_134528219c_0"; 

insert
$L_8732115274757_134528219c_0_1 isa list, has hash "L_8732115274757_134528219c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8732115274757_134528219c_0_1, from-node: $N_8732115274757_134528219c_0) isa node-link; 

match
$L_8732115274757_134528219c_0_1 isa list, has hash "L_8732115274757_134528219c_0_1"; 

insert
$N_8732115274757_134528219c_0_1_0 isa variable-ssa, has hash "N_8732115274757_134528219c_0_1_0", has var "eax_6", has version 7, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115274757_134528219c_0_1_0, from-node: $L_8732115274757_134528219c_0_1) isa node-link; 

match
$N_8732115274757_134528219c isa instruction, has hash "N_8732115274757_134528219c"; 

insert
$N_8732115274757_134528219c_1 isa MLIL_CONST_PTR, has hash "N_8732115274757_134528219c_1", has edge-label "dest";
(to-node: $N_8732115274757_134528219c_1, from-node: $N_8732115274757_134528219c) isa node-link; 

match
$N_8732115274757_134528219c_1 isa operation, has hash "N_8732115274757_134528219c_1"; 

insert
$N_8732115274757_134528219c_1_0 isa constant, has hash "N_8732115274757_134528219c_1_0", has constant-value "134520032", has edge-label "constant";
(to-node: $N_8732115274757_134528219c_1_0, from-node: $N_8732115274757_134528219c_1) isa node-link; 

match
$N_8732115274757_134528219c isa instruction, has hash "N_8732115274757_134528219c"; 

insert
$L_8732115274757_134528219c_2 isa list, has hash "L_8732115274757_134528219c_2", has list-size 3, has edge-label "params";
(to-node: $L_8732115274757_134528219c_2, from-node: $N_8732115274757_134528219c) isa node-link; 

match
$L_8732115274757_134528219c_2 isa list, has hash "L_8732115274757_134528219c_2"; 

insert
$N_8732115274757_134528219c_2_0 isa MLIL_VAR_SSA, has hash "N_8732115274757_134528219c_2_0", has edge-label "0";
(to-node: $N_8732115274757_134528219c_2_0, from-node: $L_8732115274757_134528219c_2) isa node-link; 

match
$N_8732115274757_134528219c_2_0 isa operation, has hash "N_8732115274757_134528219c_2_0"; 

insert
$N_8732115274757_134528219c_2_0_0 isa variable-ssa, has hash "N_8732115274757_134528219c_2_0_0", has var "var_4c_2", has version 3, has edge-label "src", has var-type "void*", has var-size -52, has var-func "cgc_validate_header";
(to-node: $N_8732115274757_134528219c_2_0_0, from-node: $N_8732115274757_134528219c_2_0) isa node-link; 

match
$L_8732115274757_134528219c_2 isa list, has hash "L_8732115274757_134528219c_2"; 

insert
$N_8732115274757_134528219c_2_1 isa MLIL_CONST_PTR, has hash "N_8732115274757_134528219c_2_1", has edge-label "1";
(to-node: $N_8732115274757_134528219c_2_1, from-node: $L_8732115274757_134528219c_2) isa node-link; 

match
$N_8732115274757_134528219c_2_1 isa operation, has hash "N_8732115274757_134528219c_2_1"; 

insert
$N_8732115274757_134528219c_2_1_0 isa constant, has hash "N_8732115274757_134528219c_2_1_0", has constant-value "134534225", has edge-label "constant";
(to-node: $N_8732115274757_134528219c_2_1_0, from-node: $N_8732115274757_134528219c_2_1) isa node-link; 

match
$L_8732115274757_134528219c_2 isa list, has hash "L_8732115274757_134528219c_2"; 

insert
$N_8732115274757_134528219c_2_2 isa MLIL_CONST, has hash "N_8732115274757_134528219c_2_2", has edge-label "2";
(to-node: $N_8732115274757_134528219c_2_2, from-node: $L_8732115274757_134528219c_2) isa node-link; 

match
$N_8732115274757_134528219c_2_2 isa operation, has hash "N_8732115274757_134528219c_2_2"; 

insert
$N_8732115274757_134528219c_2_2_0 isa constant, has hash "N_8732115274757_134528219c_2_2_0", has constant-value "4", has edge-label "constant";
(to-node: $N_8732115274757_134528219c_2_2_0, from-node: $N_8732115274757_134528219c_2_2) isa node-link; 

match
$N_8732115274757_134528219c isa instruction, has hash "N_8732115274757_134528219c"; 

insert
$N_8732115274757_134528219c_3 isa constant, has hash "N_8732115274757_134528219c_3", has constant-value "2", has edge-label "src_memory";
(to-node: $N_8732115274757_134528219c_3, from-node: $N_8732115274757_134528219c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 39, has bb-end 43; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 39, has bb-end 43; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115384485_134528227c isa instruction, has hash "N_8732115384485_134528227c", has il-index 43, has asm-address "0x804bce3", has operation-type "MLIL_IF", has ins-text "if (eax_6#7 == 0) then 46 @ 0x804bcf5 else 49 @ 0x804bce9";
(contains-instruction: $N_8732115384485_134528227c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115384485_134528227c isa instruction, has hash "N_8732115384485_134528227c"; 

insert
$N_8732115384485_134528227c_0 isa MLIL_CMP_E, has hash "N_8732115384485_134528227c_0", has edge-label "condition";
(to-node: $N_8732115384485_134528227c_0, from-node: $N_8732115384485_134528227c) isa node-link; 

match
$N_8732115384485_134528227c_0 isa operation, has hash "N_8732115384485_134528227c_0"; 

insert
$N_8732115384485_134528227c_0_0 isa MLIL_VAR_SSA, has hash "N_8732115384485_134528227c_0_0", has edge-label "left";
(to-node: $N_8732115384485_134528227c_0_0, from-node: $N_8732115384485_134528227c_0) isa node-link; 

match
$N_8732115384485_134528227c_0_0 isa operation, has hash "N_8732115384485_134528227c_0_0"; 

insert
$N_8732115384485_134528227c_0_0_0 isa variable-ssa, has hash "N_8732115384485_134528227c_0_0_0", has var "eax_6", has version 7, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115384485_134528227c_0_0_0, from-node: $N_8732115384485_134528227c_0_0) isa node-link; 

match
$N_8732115384485_134528227c_0 isa operation, has hash "N_8732115384485_134528227c_0"; 

insert
$N_8732115384485_134528227c_0_1 isa MLIL_CONST, has hash "N_8732115384485_134528227c_0_1", has edge-label "right";
(to-node: $N_8732115384485_134528227c_0_1, from-node: $N_8732115384485_134528227c_0) isa node-link; 

match
$N_8732115384485_134528227c_0_1 isa operation, has hash "N_8732115384485_134528227c_0_1"; 

insert
$N_8732115384485_134528227c_0_1_0 isa constant, has hash "N_8732115384485_134528227c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115384485_134528227c_0_1_0, from-node: $N_8732115384485_134528227c_0_1) isa node-link; 

match
$N_8732115384485_134528227c isa instruction, has hash "N_8732115384485_134528227c"; 

insert
$N_8732115384485_134528227c_1 isa constant, has hash "N_8732115384485_134528227c_1", has constant-value "46", has edge-label "true";
(to-node: $N_8732115384485_134528227c_1, from-node: $N_8732115384485_134528227c) isa node-link; 

match
$N_8732115384485_134528227c isa instruction, has hash "N_8732115384485_134528227c"; 

insert
$N_8732115384485_134528227c_2 isa constant, has hash "N_8732115384485_134528227c_2", has constant-value "49", has edge-label "false";
(to-node: $N_8732115384485_134528227c_2, from-node: $N_8732115384485_134528227c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 44, has bb-end 45; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 44, has bb-end 45; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 44, has bb-end 45; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115503949_134528175c isa instruction, has hash "N_8732115503949_134528175c", has il-index 44, has asm-address "0x804bcaf", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_14#10 = 0xfffffff8";
(contains-instruction: $N_8732115503949_134528175c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115503949_134528175c isa instruction, has hash "N_8732115503949_134528175c"; 

insert
$N_8732115503949_134528175c_0 isa variable-ssa, has hash "N_8732115503949_134528175c_0", has var "var_14", has version 10, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115503949_134528175c_0, from-node: $N_8732115503949_134528175c) isa node-link; 

match
$N_8732115503949_134528175c isa instruction, has hash "N_8732115503949_134528175c"; 

insert
$N_8732115503949_134528175c_1 isa MLIL_CONST, has hash "N_8732115503949_134528175c_1", has edge-label "src";
(to-node: $N_8732115503949_134528175c_1, from-node: $N_8732115503949_134528175c) isa node-link; 

match
$N_8732115503949_134528175c_1 isa operation, has hash "N_8732115503949_134528175c_1"; 

insert
$N_8732115503949_134528175c_1_0 isa constant, has hash "N_8732115503949_134528175c_1_0", has constant-value "4294967288", has edge-label "constant";
(to-node: $N_8732115503949_134528175c_1_0, from-node: $N_8732115503949_134528175c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 44, has bb-end 45; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 44, has bb-end 45; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114887265_134528182c isa instruction, has hash "N_8732114887265_134528182c", has il-index 45, has asm-address "0x804bcb6", has operation-type "MLIL_GOTO", has ins-text "goto 28 @ 0x804beae";
(contains-instruction: $N_8732114887265_134528182c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114887265_134528182c isa instruction, has hash "N_8732114887265_134528182c"; 

insert
$N_8732114887265_134528182c_0 isa constant, has hash "N_8732114887265_134528182c_0", has constant-value "28", has edge-label "dest";
(to-node: $N_8732114887265_134528182c_0, from-node: $N_8732114887265_134528182c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 46, has bb-end 48; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 46, has bb-end 48; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 46, has bb-end 48; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115190593_134528245c isa instruction, has hash "N_8732115190593_134528245c", has il-index 46, has asm-address "0x804bcf5", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_7#8 = var_18#1";
(contains-instruction: $N_8732115190593_134528245c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115190593_134528245c isa instruction, has hash "N_8732115190593_134528245c"; 

insert
$N_8732115190593_134528245c_0 isa variable-ssa, has hash "N_8732115190593_134528245c_0", has var "eax_7", has version 8, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115190593_134528245c_0, from-node: $N_8732115190593_134528245c) isa node-link; 

match
$N_8732115190593_134528245c isa instruction, has hash "N_8732115190593_134528245c"; 

insert
$N_8732115190593_134528245c_1 isa MLIL_VAR_SSA, has hash "N_8732115190593_134528245c_1", has edge-label "src";
(to-node: $N_8732115190593_134528245c_1, from-node: $N_8732115190593_134528245c) isa node-link; 

match
$N_8732115190593_134528245c_1 isa operation, has hash "N_8732115190593_134528245c_1"; 

insert
$N_8732115190593_134528245c_1_0 isa variable-ssa, has hash "N_8732115190593_134528245c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115190593_134528245c_1_0, from-node: $N_8732115190593_134528245c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 46, has bb-end 48; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 46, has bb-end 48; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115390469_134528248c isa instruction, has hash "N_8732115390469_134528248c", has il-index 47, has asm-address "0x804bcf8", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_8#9 = zx.d([eax_7#8 + 0x14].w @ mem#3)";
(contains-instruction: $N_8732115390469_134528248c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115390469_134528248c isa instruction, has hash "N_8732115390469_134528248c"; 

insert
$N_8732115390469_134528248c_0 isa variable-ssa, has hash "N_8732115390469_134528248c_0", has var "eax_8", has version 9, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115390469_134528248c_0, from-node: $N_8732115390469_134528248c) isa node-link; 

match
$N_8732115390469_134528248c isa instruction, has hash "N_8732115390469_134528248c"; 

insert
$N_8732115390469_134528248c_1 isa MLIL_ZX, has hash "N_8732115390469_134528248c_1", has edge-label "src";
(to-node: $N_8732115390469_134528248c_1, from-node: $N_8732115390469_134528248c) isa node-link; 

match
$N_8732115390469_134528248c_1 isa operation, has hash "N_8732115390469_134528248c_1"; 

insert
$N_8732115390469_134528248c_1_0 isa MLIL_LOAD_SSA, has hash "N_8732115390469_134528248c_1_0", has edge-label "src";
(to-node: $N_8732115390469_134528248c_1_0, from-node: $N_8732115390469_134528248c_1) isa node-link; 

match
$N_8732115390469_134528248c_1_0 isa operation, has hash "N_8732115390469_134528248c_1_0"; 

insert
$N_8732115390469_134528248c_1_0_0 isa MLIL_ADD, has hash "N_8732115390469_134528248c_1_0_0", has edge-label "src";
(to-node: $N_8732115390469_134528248c_1_0_0, from-node: $N_8732115390469_134528248c_1_0) isa node-link; 

match
$N_8732115390469_134528248c_1_0_0 isa operation, has hash "N_8732115390469_134528248c_1_0_0"; 

insert
$N_8732115390469_134528248c_1_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732115390469_134528248c_1_0_0_0", has edge-label "left";
(to-node: $N_8732115390469_134528248c_1_0_0_0, from-node: $N_8732115390469_134528248c_1_0_0) isa node-link; 

match
$N_8732115390469_134528248c_1_0_0_0 isa operation, has hash "N_8732115390469_134528248c_1_0_0_0"; 

insert
$N_8732115390469_134528248c_1_0_0_0_0 isa variable-ssa, has hash "N_8732115390469_134528248c_1_0_0_0_0", has var "eax_7", has version 8, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115390469_134528248c_1_0_0_0_0, from-node: $N_8732115390469_134528248c_1_0_0_0) isa node-link; 

match
$N_8732115390469_134528248c_1_0_0 isa operation, has hash "N_8732115390469_134528248c_1_0_0"; 

insert
$N_8732115390469_134528248c_1_0_0_1 isa MLIL_CONST, has hash "N_8732115390469_134528248c_1_0_0_1", has edge-label "right";
(to-node: $N_8732115390469_134528248c_1_0_0_1, from-node: $N_8732115390469_134528248c_1_0_0) isa node-link; 

match
$N_8732115390469_134528248c_1_0_0_1 isa operation, has hash "N_8732115390469_134528248c_1_0_0_1"; 

insert
$N_8732115390469_134528248c_1_0_0_1_0 isa constant, has hash "N_8732115390469_134528248c_1_0_0_1_0", has constant-value "20", has edge-label "constant";
(to-node: $N_8732115390469_134528248c_1_0_0_1_0, from-node: $N_8732115390469_134528248c_1_0_0_1) isa node-link; 

match
$N_8732115390469_134528248c_1_0 isa operation, has hash "N_8732115390469_134528248c_1_0"; 

insert
$N_8732115390469_134528248c_1_0_1 isa constant, has hash "N_8732115390469_134528248c_1_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732115390469_134528248c_1_0_1, from-node: $N_8732115390469_134528248c_1_0) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 46, has bb-end 48; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 46, has bb-end 48; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115288257_134528255c isa instruction, has hash "N_8732115288257_134528255c", has il-index 48, has asm-address "0x804bcff", has operation-type "MLIL_IF", has ins-text "if (eax_8#9 == 1) then 51 @ 0x804bd11 else 54 @ 0x804bd05";
(contains-instruction: $N_8732115288257_134528255c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115288257_134528255c isa instruction, has hash "N_8732115288257_134528255c"; 

insert
$N_8732115288257_134528255c_0 isa MLIL_CMP_E, has hash "N_8732115288257_134528255c_0", has edge-label "condition";
(to-node: $N_8732115288257_134528255c_0, from-node: $N_8732115288257_134528255c) isa node-link; 

match
$N_8732115288257_134528255c_0 isa operation, has hash "N_8732115288257_134528255c_0"; 

insert
$N_8732115288257_134528255c_0_0 isa MLIL_VAR_SSA, has hash "N_8732115288257_134528255c_0_0", has edge-label "left";
(to-node: $N_8732115288257_134528255c_0_0, from-node: $N_8732115288257_134528255c_0) isa node-link; 

match
$N_8732115288257_134528255c_0_0 isa operation, has hash "N_8732115288257_134528255c_0_0"; 

insert
$N_8732115288257_134528255c_0_0_0 isa variable-ssa, has hash "N_8732115288257_134528255c_0_0_0", has var "eax_8", has version 9, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115288257_134528255c_0_0_0, from-node: $N_8732115288257_134528255c_0_0) isa node-link; 

match
$N_8732115288257_134528255c_0 isa operation, has hash "N_8732115288257_134528255c_0"; 

insert
$N_8732115288257_134528255c_0_1 isa MLIL_CONST, has hash "N_8732115288257_134528255c_0_1", has edge-label "right";
(to-node: $N_8732115288257_134528255c_0_1, from-node: $N_8732115288257_134528255c_0) isa node-link; 

match
$N_8732115288257_134528255c_0_1 isa operation, has hash "N_8732115288257_134528255c_0_1"; 

insert
$N_8732115288257_134528255c_0_1_0 isa constant, has hash "N_8732115288257_134528255c_0_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8732115288257_134528255c_0_1_0, from-node: $N_8732115288257_134528255c_0_1) isa node-link; 

match
$N_8732115288257_134528255c isa instruction, has hash "N_8732115288257_134528255c"; 

insert
$N_8732115288257_134528255c_1 isa constant, has hash "N_8732115288257_134528255c_1", has constant-value "51", has edge-label "true";
(to-node: $N_8732115288257_134528255c_1, from-node: $N_8732115288257_134528255c) isa node-link; 

match
$N_8732115288257_134528255c isa instruction, has hash "N_8732115288257_134528255c"; 

insert
$N_8732115288257_134528255c_2 isa constant, has hash "N_8732115288257_134528255c_2", has constant-value "54", has edge-label "false";
(to-node: $N_8732115288257_134528255c_2, from-node: $N_8732115288257_134528255c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 49, has bb-end 50; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 49, has bb-end 50; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 49, has bb-end 50; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114893657_134528233c isa instruction, has hash "N_8732114893657_134528233c", has il-index 49, has asm-address "0x804bce9", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_14#9 = 0xfffffff0";
(contains-instruction: $N_8732114893657_134528233c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114893657_134528233c isa instruction, has hash "N_8732114893657_134528233c"; 

insert
$N_8732114893657_134528233c_0 isa variable-ssa, has hash "N_8732114893657_134528233c_0", has var "var_14", has version 9, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114893657_134528233c_0, from-node: $N_8732114893657_134528233c) isa node-link; 

match
$N_8732114893657_134528233c isa instruction, has hash "N_8732114893657_134528233c"; 

insert
$N_8732114893657_134528233c_1 isa MLIL_CONST, has hash "N_8732114893657_134528233c_1", has edge-label "src";
(to-node: $N_8732114893657_134528233c_1, from-node: $N_8732114893657_134528233c) isa node-link; 

match
$N_8732114893657_134528233c_1 isa operation, has hash "N_8732114893657_134528233c_1"; 

insert
$N_8732114893657_134528233c_1_0 isa constant, has hash "N_8732114893657_134528233c_1_0", has constant-value "4294967280", has edge-label "constant";
(to-node: $N_8732114893657_134528233c_1_0, from-node: $N_8732114893657_134528233c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 49, has bb-end 50; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 49, has bb-end 50; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115063637_134528240c isa instruction, has hash "N_8732115063637_134528240c", has il-index 50, has asm-address "0x804bcf0", has operation-type "MLIL_GOTO", has ins-text "goto 28 @ 0x804beae";
(contains-instruction: $N_8732115063637_134528240c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115063637_134528240c isa instruction, has hash "N_8732115063637_134528240c"; 

insert
$N_8732115063637_134528240c_0 isa constant, has hash "N_8732115063637_134528240c_0", has constant-value "28", has edge-label "dest";
(to-node: $N_8732115063637_134528240c_0, from-node: $N_8732115063637_134528240c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 51, has bb-end 53; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 51, has bb-end 53; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 51, has bb-end 53; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115270473_134528273c isa instruction, has hash "N_8732115270473_134528273c", has il-index 51, has asm-address "0x804bd11", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_9#10 = var_18#1";
(contains-instruction: $N_8732115270473_134528273c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115270473_134528273c isa instruction, has hash "N_8732115270473_134528273c"; 

insert
$N_8732115270473_134528273c_0 isa variable-ssa, has hash "N_8732115270473_134528273c_0", has var "eax_9", has version 10, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115270473_134528273c_0, from-node: $N_8732115270473_134528273c) isa node-link; 

match
$N_8732115270473_134528273c isa instruction, has hash "N_8732115270473_134528273c"; 

insert
$N_8732115270473_134528273c_1 isa MLIL_VAR_SSA, has hash "N_8732115270473_134528273c_1", has edge-label "src";
(to-node: $N_8732115270473_134528273c_1, from-node: $N_8732115270473_134528273c) isa node-link; 

match
$N_8732115270473_134528273c_1 isa operation, has hash "N_8732115270473_134528273c_1"; 

insert
$N_8732115270473_134528273c_1_0 isa variable-ssa, has hash "N_8732115270473_134528273c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115270473_134528273c_1_0, from-node: $N_8732115270473_134528273c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 51, has bb-end 53; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 51, has bb-end 53; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115497989_134528276c isa instruction, has hash "N_8732115497989_134528276c", has il-index 52, has asm-address "0x804bd14", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_10#11 = zx.d([eax_9#10 + 0x16].w @ mem#3)";
(contains-instruction: $N_8732115497989_134528276c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115497989_134528276c isa instruction, has hash "N_8732115497989_134528276c"; 

insert
$N_8732115497989_134528276c_0 isa variable-ssa, has hash "N_8732115497989_134528276c_0", has var "eax_10", has version 11, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115497989_134528276c_0, from-node: $N_8732115497989_134528276c) isa node-link; 

match
$N_8732115497989_134528276c isa instruction, has hash "N_8732115497989_134528276c"; 

insert
$N_8732115497989_134528276c_1 isa MLIL_ZX, has hash "N_8732115497989_134528276c_1", has edge-label "src";
(to-node: $N_8732115497989_134528276c_1, from-node: $N_8732115497989_134528276c) isa node-link; 

match
$N_8732115497989_134528276c_1 isa operation, has hash "N_8732115497989_134528276c_1"; 

insert
$N_8732115497989_134528276c_1_0 isa MLIL_LOAD_SSA, has hash "N_8732115497989_134528276c_1_0", has edge-label "src";
(to-node: $N_8732115497989_134528276c_1_0, from-node: $N_8732115497989_134528276c_1) isa node-link; 

match
$N_8732115497989_134528276c_1_0 isa operation, has hash "N_8732115497989_134528276c_1_0"; 

insert
$N_8732115497989_134528276c_1_0_0 isa MLIL_ADD, has hash "N_8732115497989_134528276c_1_0_0", has edge-label "src";
(to-node: $N_8732115497989_134528276c_1_0_0, from-node: $N_8732115497989_134528276c_1_0) isa node-link; 

match
$N_8732115497989_134528276c_1_0_0 isa operation, has hash "N_8732115497989_134528276c_1_0_0"; 

insert
$N_8732115497989_134528276c_1_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732115497989_134528276c_1_0_0_0", has edge-label "left";
(to-node: $N_8732115497989_134528276c_1_0_0_0, from-node: $N_8732115497989_134528276c_1_0_0) isa node-link; 

match
$N_8732115497989_134528276c_1_0_0_0 isa operation, has hash "N_8732115497989_134528276c_1_0_0_0"; 

insert
$N_8732115497989_134528276c_1_0_0_0_0 isa variable-ssa, has hash "N_8732115497989_134528276c_1_0_0_0_0", has var "eax_9", has version 10, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115497989_134528276c_1_0_0_0_0, from-node: $N_8732115497989_134528276c_1_0_0_0) isa node-link; 

match
$N_8732115497989_134528276c_1_0_0 isa operation, has hash "N_8732115497989_134528276c_1_0_0"; 

insert
$N_8732115497989_134528276c_1_0_0_1 isa MLIL_CONST, has hash "N_8732115497989_134528276c_1_0_0_1", has edge-label "right";
(to-node: $N_8732115497989_134528276c_1_0_0_1, from-node: $N_8732115497989_134528276c_1_0_0) isa node-link; 

match
$N_8732115497989_134528276c_1_0_0_1 isa operation, has hash "N_8732115497989_134528276c_1_0_0_1"; 

insert
$N_8732115497989_134528276c_1_0_0_1_0 isa constant, has hash "N_8732115497989_134528276c_1_0_0_1_0", has constant-value "22", has edge-label "constant";
(to-node: $N_8732115497989_134528276c_1_0_0_1_0, from-node: $N_8732115497989_134528276c_1_0_0_1) isa node-link; 

match
$N_8732115497989_134528276c_1_0 isa operation, has hash "N_8732115497989_134528276c_1_0"; 

insert
$N_8732115497989_134528276c_1_0_1 isa constant, has hash "N_8732115497989_134528276c_1_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732115497989_134528276c_1_0_1, from-node: $N_8732115497989_134528276c_1_0) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 51, has bb-end 53; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 51, has bb-end 53; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114869353_134528283c isa instruction, has hash "N_8732114869353_134528283c", has il-index 53, has asm-address "0x804bd1b", has operation-type "MLIL_IF", has ins-text "if (eax_10#11 == 1) then 56 @ 0x0 else 57 @ 0x804bd21";
(contains-instruction: $N_8732114869353_134528283c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114869353_134528283c isa instruction, has hash "N_8732114869353_134528283c"; 

insert
$N_8732114869353_134528283c_0 isa MLIL_CMP_E, has hash "N_8732114869353_134528283c_0", has edge-label "condition";
(to-node: $N_8732114869353_134528283c_0, from-node: $N_8732114869353_134528283c) isa node-link; 

match
$N_8732114869353_134528283c_0 isa operation, has hash "N_8732114869353_134528283c_0"; 

insert
$N_8732114869353_134528283c_0_0 isa MLIL_VAR_SSA, has hash "N_8732114869353_134528283c_0_0", has edge-label "left";
(to-node: $N_8732114869353_134528283c_0_0, from-node: $N_8732114869353_134528283c_0) isa node-link; 

match
$N_8732114869353_134528283c_0_0 isa operation, has hash "N_8732114869353_134528283c_0_0"; 

insert
$N_8732114869353_134528283c_0_0_0 isa variable-ssa, has hash "N_8732114869353_134528283c_0_0_0", has var "eax_10", has version 11, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114869353_134528283c_0_0_0, from-node: $N_8732114869353_134528283c_0_0) isa node-link; 

match
$N_8732114869353_134528283c_0 isa operation, has hash "N_8732114869353_134528283c_0"; 

insert
$N_8732114869353_134528283c_0_1 isa MLIL_CONST, has hash "N_8732114869353_134528283c_0_1", has edge-label "right";
(to-node: $N_8732114869353_134528283c_0_1, from-node: $N_8732114869353_134528283c_0) isa node-link; 

match
$N_8732114869353_134528283c_0_1 isa operation, has hash "N_8732114869353_134528283c_0_1"; 

insert
$N_8732114869353_134528283c_0_1_0 isa constant, has hash "N_8732114869353_134528283c_0_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8732114869353_134528283c_0_1_0, from-node: $N_8732114869353_134528283c_0_1) isa node-link; 

match
$N_8732114869353_134528283c isa instruction, has hash "N_8732114869353_134528283c"; 

insert
$N_8732114869353_134528283c_1 isa constant, has hash "N_8732114869353_134528283c_1", has constant-value "56", has edge-label "true";
(to-node: $N_8732114869353_134528283c_1, from-node: $N_8732114869353_134528283c) isa node-link; 

match
$N_8732114869353_134528283c isa instruction, has hash "N_8732114869353_134528283c"; 

insert
$N_8732114869353_134528283c_2 isa constant, has hash "N_8732114869353_134528283c_2", has constant-value "57", has edge-label "false";
(to-node: $N_8732114869353_134528283c_2, from-node: $N_8732114869353_134528283c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 54, has bb-end 55; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 54, has bb-end 55; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 54, has bb-end 55; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115063397_134528261c isa instruction, has hash "N_8732115063397_134528261c", has il-index 54, has asm-address "0x804bd05", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_14#8 = 0xffffffe0";
(contains-instruction: $N_8732115063397_134528261c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115063397_134528261c isa instruction, has hash "N_8732115063397_134528261c"; 

insert
$N_8732115063397_134528261c_0 isa variable-ssa, has hash "N_8732115063397_134528261c_0", has var "var_14", has version 8, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115063397_134528261c_0, from-node: $N_8732115063397_134528261c) isa node-link; 

match
$N_8732115063397_134528261c isa instruction, has hash "N_8732115063397_134528261c"; 

insert
$N_8732115063397_134528261c_1 isa MLIL_CONST, has hash "N_8732115063397_134528261c_1", has edge-label "src";
(to-node: $N_8732115063397_134528261c_1, from-node: $N_8732115063397_134528261c) isa node-link; 

match
$N_8732115063397_134528261c_1 isa operation, has hash "N_8732115063397_134528261c_1"; 

insert
$N_8732115063397_134528261c_1_0 isa constant, has hash "N_8732115063397_134528261c_1_0", has constant-value "4294967264", has edge-label "constant";
(to-node: $N_8732115063397_134528261c_1_0, from-node: $N_8732115063397_134528261c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 54, has bb-end 55; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 54, has bb-end 55; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114896993_134528268c isa instruction, has hash "N_8732114896993_134528268c", has il-index 55, has asm-address "0x804bd0c", has operation-type "MLIL_GOTO", has ins-text "goto 28 @ 0x804beae";
(contains-instruction: $N_8732114896993_134528268c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114896993_134528268c isa instruction, has hash "N_8732114896993_134528268c"; 

insert
$N_8732114896993_134528268c_0 isa constant, has hash "N_8732114896993_134528268c_0", has constant-value "28", has edge-label "dest";
(to-node: $N_8732114896993_134528268c_0, from-node: $N_8732114896993_134528268c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 56, has bb-end 56; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 56, has bb-end 56; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 56, has bb-end 56; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114856781_0c isa instruction, has hash "N_8732114856781_0c", has il-index 123, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 117 @ 0x804be6d";
(contains-instruction: $N_8732114856781_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114856781_0c isa instruction, has hash "N_8732114856781_0c"; 

insert
$N_8732114856781_0c_0 isa constant, has hash "N_8732114856781_0c_0", has constant-value "117", has edge-label "dest";
(to-node: $N_8732114856781_0c_0, from-node: $N_8732114856781_0c) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 56, has bb-end 56; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115004769_0c isa instruction, has hash "N_8732115004769_0c", has il-index 56, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 60 @ 0x804bd3d";
(contains-instruction: $N_8732115004769_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115004769_0c isa instruction, has hash "N_8732115004769_0c"; 

insert
$N_8732115004769_0c_0 isa constant, has hash "N_8732115004769_0c_0", has constant-value "60", has edge-label "dest";
(to-node: $N_8732115004769_0c_0, from-node: $N_8732115004769_0c) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 56, has bb-end 56; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115009065_0c isa instruction, has hash "N_8732115009065_0c", has il-index 107, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 69 @ 0x804bdc9";
(contains-instruction: $N_8732115009065_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115009065_0c isa instruction, has hash "N_8732115009065_0c"; 

insert
$N_8732115009065_0c_0 isa constant, has hash "N_8732115009065_0c_0", has constant-value "69", has edge-label "dest";
(to-node: $N_8732115009065_0c_0, from-node: $N_8732115009065_0c) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 56, has bb-end 56; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115130981_0c isa instruction, has hash "N_8732115130981_0c", has il-index 139, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 69 @ 0x804bdc9";
(contains-instruction: $N_8732115130981_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115130981_0c isa instruction, has hash "N_8732115130981_0c"; 

insert
$N_8732115130981_0c_0 isa constant, has hash "N_8732115130981_0c_0", has constant-value "69", has edge-label "dest";
(to-node: $N_8732115130981_0c_0, from-node: $N_8732115130981_0c) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 56, has bb-end 56; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115188057_0c isa instruction, has hash "N_8732115188057_0c", has il-index 126, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 69 @ 0x804bdc9";
(contains-instruction: $N_8732115188057_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115188057_0c isa instruction, has hash "N_8732115188057_0c"; 

insert
$N_8732115188057_0c_0 isa constant, has hash "N_8732115188057_0c_0", has constant-value "69", has edge-label "dest";
(to-node: $N_8732115188057_0c_0, from-node: $N_8732115188057_0c) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 56, has bb-end 56; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115188817_0c isa instruction, has hash "N_8732115188817_0c", has il-index 114, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 69 @ 0x804bdc9";
(contains-instruction: $N_8732115188817_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115188817_0c isa instruction, has hash "N_8732115188817_0c"; 

insert
$N_8732115188817_0c_0 isa constant, has hash "N_8732115188817_0c_0", has constant-value "69", has edge-label "dest";
(to-node: $N_8732115188817_0c_0, from-node: $N_8732115188817_0c) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 56, has bb-end 56; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115229553_0c isa instruction, has hash "N_8732115229553_0c", has il-index 63, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 60 @ 0x804bd3d";
(contains-instruction: $N_8732115229553_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115229553_0c isa instruction, has hash "N_8732115229553_0c"; 

insert
$N_8732115229553_0c_0 isa constant, has hash "N_8732115229553_0c_0", has constant-value "60", has edge-label "dest";
(to-node: $N_8732115229553_0c_0, from-node: $N_8732115229553_0c) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 56, has bb-end 56; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115242541_0c isa instruction, has hash "N_8732115242541_0c", has il-index 99, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 69 @ 0x804bdc9";
(contains-instruction: $N_8732115242541_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115242541_0c isa instruction, has hash "N_8732115242541_0c"; 

insert
$N_8732115242541_0c_0 isa constant, has hash "N_8732115242541_0c_0", has constant-value "69", has edge-label "dest";
(to-node: $N_8732115242541_0c_0, from-node: $N_8732115242541_0c) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 56, has bb-end 56; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115288581_0c isa instruction, has hash "N_8732115288581_0c", has il-index 66, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 69 @ 0x804bdc9";
(contains-instruction: $N_8732115288581_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115288581_0c isa instruction, has hash "N_8732115288581_0c"; 

insert
$N_8732115288581_0c_0 isa constant, has hash "N_8732115288581_0c_0", has constant-value "69", has edge-label "dest";
(to-node: $N_8732115288581_0c_0, from-node: $N_8732115288581_0c) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 56, has bb-end 56; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115303525_0c isa instruction, has hash "N_8732115303525_0c", has il-index 136, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 69 @ 0x804bdc9";
(contains-instruction: $N_8732115303525_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115303525_0c isa instruction, has hash "N_8732115303525_0c"; 

insert
$N_8732115303525_0c_0 isa constant, has hash "N_8732115303525_0c_0", has constant-value "69", has edge-label "dest";
(to-node: $N_8732115303525_0c_0, from-node: $N_8732115303525_0c) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 56, has bb-end 56; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115402045_0c isa instruction, has hash "N_8732115402045_0c", has il-index 82, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 69 @ 0x804bdc9";
(contains-instruction: $N_8732115402045_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115402045_0c isa instruction, has hash "N_8732115402045_0c"; 

insert
$N_8732115402045_0c_0 isa constant, has hash "N_8732115402045_0c_0", has constant-value "69", has edge-label "dest";
(to-node: $N_8732115402045_0c_0, from-node: $N_8732115402045_0c) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 56, has bb-end 56; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115510585_0c isa instruction, has hash "N_8732115510585_0c", has il-index 110, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 117 @ 0x804be6d";
(contains-instruction: $N_8732115510585_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115510585_0c isa instruction, has hash "N_8732115510585_0c"; 

insert
$N_8732115510585_0c_0 isa constant, has hash "N_8732115510585_0c_0", has constant-value "117", has edge-label "dest";
(to-node: $N_8732115510585_0c_0, from-node: $N_8732115510585_0c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 57, has bb-end 59; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 57, has bb-end 59; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 57, has bb-end 59; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114914925_134528289c isa instruction, has hash "N_8732114914925_134528289c", has il-index 57, has asm-address "0x804bd21", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_11#12 = var_18#1";
(contains-instruction: $N_8732114914925_134528289c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114914925_134528289c isa instruction, has hash "N_8732114914925_134528289c"; 

insert
$N_8732114914925_134528289c_0 isa variable-ssa, has hash "N_8732114914925_134528289c_0", has var "eax_11", has version 12, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114914925_134528289c_0, from-node: $N_8732114914925_134528289c) isa node-link; 

match
$N_8732114914925_134528289c isa instruction, has hash "N_8732114914925_134528289c"; 

insert
$N_8732114914925_134528289c_1 isa MLIL_VAR_SSA, has hash "N_8732114914925_134528289c_1", has edge-label "src";
(to-node: $N_8732114914925_134528289c_1, from-node: $N_8732114914925_134528289c) isa node-link; 

match
$N_8732114914925_134528289c_1 isa operation, has hash "N_8732114914925_134528289c_1"; 

insert
$N_8732114914925_134528289c_1_0 isa variable-ssa, has hash "N_8732114914925_134528289c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732114914925_134528289c_1_0, from-node: $N_8732114914925_134528289c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 57, has bb-end 59; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 57, has bb-end 59; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114957061_134528292c isa instruction, has hash "N_8732114957061_134528292c", has il-index 58, has asm-address "0x804bd24", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_12#13 = zx.d([eax_11#12 + 0x16].w @ mem#3)";
(contains-instruction: $N_8732114957061_134528292c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114957061_134528292c isa instruction, has hash "N_8732114957061_134528292c"; 

insert
$N_8732114957061_134528292c_0 isa variable-ssa, has hash "N_8732114957061_134528292c_0", has var "eax_12", has version 13, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114957061_134528292c_0, from-node: $N_8732114957061_134528292c) isa node-link; 

match
$N_8732114957061_134528292c isa instruction, has hash "N_8732114957061_134528292c"; 

insert
$N_8732114957061_134528292c_1 isa MLIL_ZX, has hash "N_8732114957061_134528292c_1", has edge-label "src";
(to-node: $N_8732114957061_134528292c_1, from-node: $N_8732114957061_134528292c) isa node-link; 

match
$N_8732114957061_134528292c_1 isa operation, has hash "N_8732114957061_134528292c_1"; 

insert
$N_8732114957061_134528292c_1_0 isa MLIL_LOAD_SSA, has hash "N_8732114957061_134528292c_1_0", has edge-label "src";
(to-node: $N_8732114957061_134528292c_1_0, from-node: $N_8732114957061_134528292c_1) isa node-link; 

match
$N_8732114957061_134528292c_1_0 isa operation, has hash "N_8732114957061_134528292c_1_0"; 

insert
$N_8732114957061_134528292c_1_0_0 isa MLIL_ADD, has hash "N_8732114957061_134528292c_1_0_0", has edge-label "src";
(to-node: $N_8732114957061_134528292c_1_0_0, from-node: $N_8732114957061_134528292c_1_0) isa node-link; 

match
$N_8732114957061_134528292c_1_0_0 isa operation, has hash "N_8732114957061_134528292c_1_0_0"; 

insert
$N_8732114957061_134528292c_1_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732114957061_134528292c_1_0_0_0", has edge-label "left";
(to-node: $N_8732114957061_134528292c_1_0_0_0, from-node: $N_8732114957061_134528292c_1_0_0) isa node-link; 

match
$N_8732114957061_134528292c_1_0_0_0 isa operation, has hash "N_8732114957061_134528292c_1_0_0_0"; 

insert
$N_8732114957061_134528292c_1_0_0_0_0 isa variable-ssa, has hash "N_8732114957061_134528292c_1_0_0_0_0", has var "eax_11", has version 12, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114957061_134528292c_1_0_0_0_0, from-node: $N_8732114957061_134528292c_1_0_0_0) isa node-link; 

match
$N_8732114957061_134528292c_1_0_0 isa operation, has hash "N_8732114957061_134528292c_1_0_0"; 

insert
$N_8732114957061_134528292c_1_0_0_1 isa MLIL_CONST, has hash "N_8732114957061_134528292c_1_0_0_1", has edge-label "right";
(to-node: $N_8732114957061_134528292c_1_0_0_1, from-node: $N_8732114957061_134528292c_1_0_0) isa node-link; 

match
$N_8732114957061_134528292c_1_0_0_1 isa operation, has hash "N_8732114957061_134528292c_1_0_0_1"; 

insert
$N_8732114957061_134528292c_1_0_0_1_0 isa constant, has hash "N_8732114957061_134528292c_1_0_0_1_0", has constant-value "22", has edge-label "constant";
(to-node: $N_8732114957061_134528292c_1_0_0_1_0, from-node: $N_8732114957061_134528292c_1_0_0_1) isa node-link; 

match
$N_8732114957061_134528292c_1_0 isa operation, has hash "N_8732114957061_134528292c_1_0"; 

insert
$N_8732114957061_134528292c_1_0_1 isa constant, has hash "N_8732114957061_134528292c_1_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732114957061_134528292c_1_0_1, from-node: $N_8732114957061_134528292c_1_0) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 57, has bb-end 59; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 57, has bb-end 59; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115445253_134528299c isa instruction, has hash "N_8732115445253_134528299c", has il-index 59, has asm-address "0x804bd2b", has operation-type "MLIL_IF", has ins-text "if (eax_12#13 == 2) then 63 @ 0x0 else 64 @ 0x804bd31";
(contains-instruction: $N_8732115445253_134528299c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115445253_134528299c isa instruction, has hash "N_8732115445253_134528299c"; 

insert
$N_8732115445253_134528299c_0 isa MLIL_CMP_E, has hash "N_8732115445253_134528299c_0", has edge-label "condition";
(to-node: $N_8732115445253_134528299c_0, from-node: $N_8732115445253_134528299c) isa node-link; 

match
$N_8732115445253_134528299c_0 isa operation, has hash "N_8732115445253_134528299c_0"; 

insert
$N_8732115445253_134528299c_0_0 isa MLIL_VAR_SSA, has hash "N_8732115445253_134528299c_0_0", has edge-label "left";
(to-node: $N_8732115445253_134528299c_0_0, from-node: $N_8732115445253_134528299c_0) isa node-link; 

match
$N_8732115445253_134528299c_0_0 isa operation, has hash "N_8732115445253_134528299c_0_0"; 

insert
$N_8732115445253_134528299c_0_0_0 isa variable-ssa, has hash "N_8732115445253_134528299c_0_0_0", has var "eax_12", has version 13, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115445253_134528299c_0_0_0, from-node: $N_8732115445253_134528299c_0_0) isa node-link; 

match
$N_8732115445253_134528299c_0 isa operation, has hash "N_8732115445253_134528299c_0"; 

insert
$N_8732115445253_134528299c_0_1 isa MLIL_CONST, has hash "N_8732115445253_134528299c_0_1", has edge-label "right";
(to-node: $N_8732115445253_134528299c_0_1, from-node: $N_8732115445253_134528299c_0) isa node-link; 

match
$N_8732115445253_134528299c_0_1 isa operation, has hash "N_8732115445253_134528299c_0_1"; 

insert
$N_8732115445253_134528299c_0_1_0 isa constant, has hash "N_8732115445253_134528299c_0_1_0", has constant-value "2", has edge-label "constant";
(to-node: $N_8732115445253_134528299c_0_1_0, from-node: $N_8732115445253_134528299c_0_1) isa node-link; 

match
$N_8732115445253_134528299c isa instruction, has hash "N_8732115445253_134528299c"; 

insert
$N_8732115445253_134528299c_1 isa constant, has hash "N_8732115445253_134528299c_1", has constant-value "63", has edge-label "true";
(to-node: $N_8732115445253_134528299c_1, from-node: $N_8732115445253_134528299c) isa node-link; 

match
$N_8732115445253_134528299c isa instruction, has hash "N_8732115445253_134528299c"; 

insert
$N_8732115445253_134528299c_2 isa constant, has hash "N_8732115445253_134528299c_2", has constant-value "64", has edge-label "false";
(to-node: $N_8732115445253_134528299c_2, from-node: $N_8732115445253_134528299c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 60, has bb-end 62; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 60, has bb-end 62; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 60, has bb-end 62; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115510881_134528317c isa instruction, has hash "N_8732115510881_134528317c", has il-index 60, has asm-address "0x804bd3d", has operation-type "MLIL_VAR_PHI", has ins-text "eax_12#14 = ϕ(eax_10#11, eax_12#13)";
(contains-instruction: $N_8732115510881_134528317c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115510881_134528317c isa instruction, has hash "N_8732115510881_134528317c"; 

insert
$N_8732115510881_134528317c_0 isa variable-ssa, has hash "N_8732115510881_134528317c_0", has var "eax_12", has version 14, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115510881_134528317c_0, from-node: $N_8732115510881_134528317c) isa node-link; 

match
$N_8732115510881_134528317c isa instruction, has hash "N_8732115510881_134528317c"; 

insert
$L_8732115510881_134528317c_1 isa list, has hash "L_8732115510881_134528317c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115510881_134528317c_1, from-node: $N_8732115510881_134528317c) isa node-link; 

match
$L_8732115510881_134528317c_1 isa list, has hash "L_8732115510881_134528317c_1"; 

insert
$N_8732115510881_134528317c_1_0 isa variable-ssa, has hash "N_8732115510881_134528317c_1_0", has var "eax_10", has version 11, has edge-label "0", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115510881_134528317c_1_0, from-node: $L_8732115510881_134528317c_1) isa node-link; 

match
$L_8732115510881_134528317c_1 isa list, has hash "L_8732115510881_134528317c_1"; 

insert
$N_8732115510881_134528317c_1_1 isa variable-ssa, has hash "N_8732115510881_134528317c_1_1", has var "eax_12", has version 13, has edge-label "1", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115510881_134528317c_1_1, from-node: $L_8732115510881_134528317c_1) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 60, has bb-end 62; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115511385_134528317c isa instruction, has hash "N_8732115511385_134528317c", has il-index 61, has asm-address "0x804bd3d", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_13#15 = var_18#1";
(contains-instruction: $N_8732115511385_134528317c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115511385_134528317c isa instruction, has hash "N_8732115511385_134528317c"; 

insert
$N_8732115511385_134528317c_0 isa variable-ssa, has hash "N_8732115511385_134528317c_0", has var "eax_13", has version 15, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115511385_134528317c_0, from-node: $N_8732115511385_134528317c) isa node-link; 

match
$N_8732115511385_134528317c isa instruction, has hash "N_8732115511385_134528317c"; 

insert
$N_8732115511385_134528317c_1 isa MLIL_VAR_SSA, has hash "N_8732115511385_134528317c_1", has edge-label "src";
(to-node: $N_8732115511385_134528317c_1, from-node: $N_8732115511385_134528317c) isa node-link; 

match
$N_8732115511385_134528317c_1 isa operation, has hash "N_8732115511385_134528317c_1"; 

insert
$N_8732115511385_134528317c_1_0 isa variable-ssa, has hash "N_8732115511385_134528317c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115511385_134528317c_1_0, from-node: $N_8732115511385_134528317c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 60, has bb-end 62; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 60, has bb-end 62; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114841605_134528327c isa instruction, has hash "N_8732114841605_134528327c", has il-index 62, has asm-address "0x804bd47", has operation-type "MLIL_IF", has ins-text "if ([eax_13#15 + 0x18].d @ mem#3 == 0x1f40) then 66 @ 0x0 else 67 @ 0x804bd4d";
(contains-instruction: $N_8732114841605_134528327c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114841605_134528327c isa instruction, has hash "N_8732114841605_134528327c"; 

insert
$N_8732114841605_134528327c_0 isa MLIL_CMP_E, has hash "N_8732114841605_134528327c_0", has edge-label "condition";
(to-node: $N_8732114841605_134528327c_0, from-node: $N_8732114841605_134528327c) isa node-link; 

match
$N_8732114841605_134528327c_0 isa operation, has hash "N_8732114841605_134528327c_0"; 

insert
$N_8732114841605_134528327c_0_0 isa MLIL_LOAD_SSA, has hash "N_8732114841605_134528327c_0_0", has edge-label "left";
(to-node: $N_8732114841605_134528327c_0_0, from-node: $N_8732114841605_134528327c_0) isa node-link; 

match
$N_8732114841605_134528327c_0_0 isa operation, has hash "N_8732114841605_134528327c_0_0"; 

insert
$N_8732114841605_134528327c_0_0_0 isa MLIL_ADD, has hash "N_8732114841605_134528327c_0_0_0", has edge-label "src";
(to-node: $N_8732114841605_134528327c_0_0_0, from-node: $N_8732114841605_134528327c_0_0) isa node-link; 

match
$N_8732114841605_134528327c_0_0_0 isa operation, has hash "N_8732114841605_134528327c_0_0_0"; 

insert
$N_8732114841605_134528327c_0_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732114841605_134528327c_0_0_0_0", has edge-label "left";
(to-node: $N_8732114841605_134528327c_0_0_0_0, from-node: $N_8732114841605_134528327c_0_0_0) isa node-link; 

match
$N_8732114841605_134528327c_0_0_0_0 isa operation, has hash "N_8732114841605_134528327c_0_0_0_0"; 

insert
$N_8732114841605_134528327c_0_0_0_0_0 isa variable-ssa, has hash "N_8732114841605_134528327c_0_0_0_0_0", has var "eax_13", has version 15, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114841605_134528327c_0_0_0_0_0, from-node: $N_8732114841605_134528327c_0_0_0_0) isa node-link; 

match
$N_8732114841605_134528327c_0_0_0 isa operation, has hash "N_8732114841605_134528327c_0_0_0"; 

insert
$N_8732114841605_134528327c_0_0_0_1 isa MLIL_CONST, has hash "N_8732114841605_134528327c_0_0_0_1", has edge-label "right";
(to-node: $N_8732114841605_134528327c_0_0_0_1, from-node: $N_8732114841605_134528327c_0_0_0) isa node-link; 

match
$N_8732114841605_134528327c_0_0_0_1 isa operation, has hash "N_8732114841605_134528327c_0_0_0_1"; 

insert
$N_8732114841605_134528327c_0_0_0_1_0 isa constant, has hash "N_8732114841605_134528327c_0_0_0_1_0", has constant-value "24", has edge-label "constant";
(to-node: $N_8732114841605_134528327c_0_0_0_1_0, from-node: $N_8732114841605_134528327c_0_0_0_1) isa node-link; 

match
$N_8732114841605_134528327c_0_0 isa operation, has hash "N_8732114841605_134528327c_0_0"; 

insert
$N_8732114841605_134528327c_0_0_1 isa constant, has hash "N_8732114841605_134528327c_0_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732114841605_134528327c_0_0_1, from-node: $N_8732114841605_134528327c_0_0) isa node-link; 

match
$N_8732114841605_134528327c_0 isa operation, has hash "N_8732114841605_134528327c_0"; 

insert
$N_8732114841605_134528327c_0_1 isa MLIL_CONST, has hash "N_8732114841605_134528327c_0_1", has edge-label "right";
(to-node: $N_8732114841605_134528327c_0_1, from-node: $N_8732114841605_134528327c_0) isa node-link; 

match
$N_8732114841605_134528327c_0_1 isa operation, has hash "N_8732114841605_134528327c_0_1"; 

insert
$N_8732114841605_134528327c_0_1_0 isa constant, has hash "N_8732114841605_134528327c_0_1_0", has constant-value "8000", has edge-label "constant";
(to-node: $N_8732114841605_134528327c_0_1_0, from-node: $N_8732114841605_134528327c_0_1) isa node-link; 

match
$N_8732114841605_134528327c isa instruction, has hash "N_8732114841605_134528327c"; 

insert
$N_8732114841605_134528327c_1 isa constant, has hash "N_8732114841605_134528327c_1", has constant-value "66", has edge-label "true";
(to-node: $N_8732114841605_134528327c_1, from-node: $N_8732114841605_134528327c) isa node-link; 

match
$N_8732114841605_134528327c isa instruction, has hash "N_8732114841605_134528327c"; 

insert
$N_8732114841605_134528327c_2 isa constant, has hash "N_8732114841605_134528327c_2", has constant-value "67", has edge-label "false";
(to-node: $N_8732114841605_134528327c_2, from-node: $N_8732114841605_134528327c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 63, has bb-end 63; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 64, has bb-end 65; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 64, has bb-end 65; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 64, has bb-end 65; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115404913_134528305c isa instruction, has hash "N_8732115404913_134528305c", has il-index 64, has asm-address "0x804bd31", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_14#1 = 0xffffffc0";
(contains-instruction: $N_8732115404913_134528305c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115404913_134528305c isa instruction, has hash "N_8732115404913_134528305c"; 

insert
$N_8732115404913_134528305c_0 isa variable-ssa, has hash "N_8732115404913_134528305c_0", has var "var_14", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115404913_134528305c_0, from-node: $N_8732115404913_134528305c) isa node-link; 

match
$N_8732115404913_134528305c isa instruction, has hash "N_8732115404913_134528305c"; 

insert
$N_8732115404913_134528305c_1 isa MLIL_CONST, has hash "N_8732115404913_134528305c_1", has edge-label "src";
(to-node: $N_8732115404913_134528305c_1, from-node: $N_8732115404913_134528305c) isa node-link; 

match
$N_8732115404913_134528305c_1 isa operation, has hash "N_8732115404913_134528305c_1"; 

insert
$N_8732115404913_134528305c_1_0 isa constant, has hash "N_8732115404913_134528305c_1_0", has constant-value "4294967232", has edge-label "constant";
(to-node: $N_8732115404913_134528305c_1_0, from-node: $N_8732115404913_134528305c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 64, has bb-end 65; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 64, has bb-end 65; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115246853_134528312c isa instruction, has hash "N_8732115246853_134528312c", has il-index 65, has asm-address "0x804bd38", has operation-type "MLIL_GOTO", has ins-text "goto 28 @ 0x804beae";
(contains-instruction: $N_8732115246853_134528312c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115246853_134528312c isa instruction, has hash "N_8732115246853_134528312c"; 

insert
$N_8732115246853_134528312c_0 isa constant, has hash "N_8732115246853_134528312c_0", has constant-value "28", has edge-label "dest";
(to-node: $N_8732115246853_134528312c_0, from-node: $N_8732115246853_134528312c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 66, has bb-end 66; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 67, has bb-end 68; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 67, has bb-end 68; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 67, has bb-end 68; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114877817_134528333c isa instruction, has hash "N_8732114877817_134528333c", has il-index 67, has asm-address "0x804bd4d", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_14#16 = var_18#1";
(contains-instruction: $N_8732114877817_134528333c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114877817_134528333c isa instruction, has hash "N_8732114877817_134528333c"; 

insert
$N_8732114877817_134528333c_0 isa variable-ssa, has hash "N_8732114877817_134528333c_0", has var "eax_14", has version 16, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114877817_134528333c_0, from-node: $N_8732114877817_134528333c) isa node-link; 

match
$N_8732114877817_134528333c isa instruction, has hash "N_8732114877817_134528333c"; 

insert
$N_8732114877817_134528333c_1 isa MLIL_VAR_SSA, has hash "N_8732114877817_134528333c_1", has edge-label "src";
(to-node: $N_8732114877817_134528333c_1, from-node: $N_8732114877817_134528333c) isa node-link; 

match
$N_8732114877817_134528333c_1 isa operation, has hash "N_8732114877817_134528333c_1"; 

insert
$N_8732114877817_134528333c_1_0 isa variable-ssa, has hash "N_8732114877817_134528333c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732114877817_134528333c_1_0, from-node: $N_8732114877817_134528333c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 67, has bb-end 68; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 67, has bb-end 68; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115367685_134528343c isa instruction, has hash "N_8732115367685_134528343c", has il-index 68, has asm-address "0x804bd57", has operation-type "MLIL_IF", has ins-text "if ([eax_14#16 + 0x18].d @ mem#3 == 0x2b11) then 82 @ 0x0 else 83 @ 0x804bd5d";
(contains-instruction: $N_8732115367685_134528343c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115367685_134528343c isa instruction, has hash "N_8732115367685_134528343c"; 

insert
$N_8732115367685_134528343c_0 isa MLIL_CMP_E, has hash "N_8732115367685_134528343c_0", has edge-label "condition";
(to-node: $N_8732115367685_134528343c_0, from-node: $N_8732115367685_134528343c) isa node-link; 

match
$N_8732115367685_134528343c_0 isa operation, has hash "N_8732115367685_134528343c_0"; 

insert
$N_8732115367685_134528343c_0_0 isa MLIL_LOAD_SSA, has hash "N_8732115367685_134528343c_0_0", has edge-label "left";
(to-node: $N_8732115367685_134528343c_0_0, from-node: $N_8732115367685_134528343c_0) isa node-link; 

match
$N_8732115367685_134528343c_0_0 isa operation, has hash "N_8732115367685_134528343c_0_0"; 

insert
$N_8732115367685_134528343c_0_0_0 isa MLIL_ADD, has hash "N_8732115367685_134528343c_0_0_0", has edge-label "src";
(to-node: $N_8732115367685_134528343c_0_0_0, from-node: $N_8732115367685_134528343c_0_0) isa node-link; 

match
$N_8732115367685_134528343c_0_0_0 isa operation, has hash "N_8732115367685_134528343c_0_0_0"; 

insert
$N_8732115367685_134528343c_0_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732115367685_134528343c_0_0_0_0", has edge-label "left";
(to-node: $N_8732115367685_134528343c_0_0_0_0, from-node: $N_8732115367685_134528343c_0_0_0) isa node-link; 

match
$N_8732115367685_134528343c_0_0_0_0 isa operation, has hash "N_8732115367685_134528343c_0_0_0_0"; 

insert
$N_8732115367685_134528343c_0_0_0_0_0 isa variable-ssa, has hash "N_8732115367685_134528343c_0_0_0_0_0", has var "eax_14", has version 16, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115367685_134528343c_0_0_0_0_0, from-node: $N_8732115367685_134528343c_0_0_0_0) isa node-link; 

match
$N_8732115367685_134528343c_0_0_0 isa operation, has hash "N_8732115367685_134528343c_0_0_0"; 

insert
$N_8732115367685_134528343c_0_0_0_1 isa MLIL_CONST, has hash "N_8732115367685_134528343c_0_0_0_1", has edge-label "right";
(to-node: $N_8732115367685_134528343c_0_0_0_1, from-node: $N_8732115367685_134528343c_0_0_0) isa node-link; 

match
$N_8732115367685_134528343c_0_0_0_1 isa operation, has hash "N_8732115367685_134528343c_0_0_0_1"; 

insert
$N_8732115367685_134528343c_0_0_0_1_0 isa constant, has hash "N_8732115367685_134528343c_0_0_0_1_0", has constant-value "24", has edge-label "constant";
(to-node: $N_8732115367685_134528343c_0_0_0_1_0, from-node: $N_8732115367685_134528343c_0_0_0_1) isa node-link; 

match
$N_8732115367685_134528343c_0_0 isa operation, has hash "N_8732115367685_134528343c_0_0"; 

insert
$N_8732115367685_134528343c_0_0_1 isa constant, has hash "N_8732115367685_134528343c_0_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732115367685_134528343c_0_0_1, from-node: $N_8732115367685_134528343c_0_0) isa node-link; 

match
$N_8732115367685_134528343c_0 isa operation, has hash "N_8732115367685_134528343c_0"; 

insert
$N_8732115367685_134528343c_0_1 isa MLIL_CONST, has hash "N_8732115367685_134528343c_0_1", has edge-label "right";
(to-node: $N_8732115367685_134528343c_0_1, from-node: $N_8732115367685_134528343c_0) isa node-link; 

match
$N_8732115367685_134528343c_0_1 isa operation, has hash "N_8732115367685_134528343c_0_1"; 

insert
$N_8732115367685_134528343c_0_1_0 isa constant, has hash "N_8732115367685_134528343c_0_1_0", has constant-value "11025", has edge-label "constant";
(to-node: $N_8732115367685_134528343c_0_1_0, from-node: $N_8732115367685_134528343c_0_1) isa node-link; 

match
$N_8732115367685_134528343c isa instruction, has hash "N_8732115367685_134528343c"; 

insert
$N_8732115367685_134528343c_1 isa constant, has hash "N_8732115367685_134528343c_1", has constant-value "82", has edge-label "true";
(to-node: $N_8732115367685_134528343c_1, from-node: $N_8732115367685_134528343c) isa node-link; 

match
$N_8732115367685_134528343c isa instruction, has hash "N_8732115367685_134528343c"; 

insert
$N_8732115367685_134528343c_2 isa constant, has hash "N_8732115367685_134528343c_2", has constant-value "83", has edge-label "false";
(to-node: $N_8732115367685_134528343c_2, from-node: $N_8732115367685_134528343c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115160693_134528457c isa instruction, has hash "N_8732115160693_134528457c", has il-index 70, has asm-address "0x804bdc9", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_21#24 = var_18#1";
(contains-instruction: $N_8732115160693_134528457c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115160693_134528457c isa instruction, has hash "N_8732115160693_134528457c"; 

insert
$N_8732115160693_134528457c_0 isa variable-ssa, has hash "N_8732115160693_134528457c_0", has var "eax_21", has version 24, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115160693_134528457c_0, from-node: $N_8732115160693_134528457c) isa node-link; 

match
$N_8732115160693_134528457c isa instruction, has hash "N_8732115160693_134528457c"; 

insert
$N_8732115160693_134528457c_1 isa MLIL_VAR_SSA, has hash "N_8732115160693_134528457c_1", has edge-label "src";
(to-node: $N_8732115160693_134528457c_1, from-node: $N_8732115160693_134528457c) isa node-link; 

match
$N_8732115160693_134528457c_1 isa operation, has hash "N_8732115160693_134528457c_1"; 

insert
$N_8732115160693_134528457c_1_0 isa variable-ssa, has hash "N_8732115160693_134528457c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115160693_134528457c_1_0, from-node: $N_8732115160693_134528457c_1) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115160885_134528457c isa instruction, has hash "N_8732115160885_134528457c", has il-index 69, has asm-address "0x804bdc9", has operation-type "MLIL_VAR_PHI", has ins-text "eax_20#23 = ϕ(eax_13#15, eax_14#16, eax_15#17, eax_16#18, eax_17#19, eax_18#20, eax_19#21, eax_20#22)";
(contains-instruction: $N_8732115160885_134528457c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115160885_134528457c isa instruction, has hash "N_8732115160885_134528457c"; 

insert
$N_8732115160885_134528457c_0 isa variable-ssa, has hash "N_8732115160885_134528457c_0", has var "eax_20", has version 23, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115160885_134528457c_0, from-node: $N_8732115160885_134528457c) isa node-link; 

match
$N_8732115160885_134528457c isa instruction, has hash "N_8732115160885_134528457c"; 

insert
$L_8732115160885_134528457c_1 isa list, has hash "L_8732115160885_134528457c_1", has list-size 8, has edge-label "src";
(to-node: $L_8732115160885_134528457c_1, from-node: $N_8732115160885_134528457c) isa node-link; 

match
$L_8732115160885_134528457c_1 isa list, has hash "L_8732115160885_134528457c_1"; 

insert
$N_8732115160885_134528457c_1_0 isa variable-ssa, has hash "N_8732115160885_134528457c_1_0", has var "eax_13", has version 15, has edge-label "0", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115160885_134528457c_1_0, from-node: $L_8732115160885_134528457c_1) isa node-link; 

match
$L_8732115160885_134528457c_1 isa list, has hash "L_8732115160885_134528457c_1"; 

insert
$N_8732115160885_134528457c_1_1 isa variable-ssa, has hash "N_8732115160885_134528457c_1_1", has var "eax_14", has version 16, has edge-label "1", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115160885_134528457c_1_1, from-node: $L_8732115160885_134528457c_1) isa node-link; 

match
$L_8732115160885_134528457c_1 isa list, has hash "L_8732115160885_134528457c_1"; 

insert
$N_8732115160885_134528457c_1_2 isa variable-ssa, has hash "N_8732115160885_134528457c_1_2", has var "eax_15", has version 17, has edge-label "2", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115160885_134528457c_1_2, from-node: $L_8732115160885_134528457c_1) isa node-link; 

match
$L_8732115160885_134528457c_1 isa list, has hash "L_8732115160885_134528457c_1"; 

insert
$N_8732115160885_134528457c_1_3 isa variable-ssa, has hash "N_8732115160885_134528457c_1_3", has var "eax_16", has version 18, has edge-label "3", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115160885_134528457c_1_3, from-node: $L_8732115160885_134528457c_1) isa node-link; 

match
$L_8732115160885_134528457c_1 isa list, has hash "L_8732115160885_134528457c_1"; 

insert
$N_8732115160885_134528457c_1_4 isa variable-ssa, has hash "N_8732115160885_134528457c_1_4", has var "eax_17", has version 19, has edge-label "4", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115160885_134528457c_1_4, from-node: $L_8732115160885_134528457c_1) isa node-link; 

match
$L_8732115160885_134528457c_1 isa list, has hash "L_8732115160885_134528457c_1"; 

insert
$N_8732115160885_134528457c_1_5 isa variable-ssa, has hash "N_8732115160885_134528457c_1_5", has var "eax_18", has version 20, has edge-label "5", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115160885_134528457c_1_5, from-node: $L_8732115160885_134528457c_1) isa node-link; 

match
$L_8732115160885_134528457c_1 isa list, has hash "L_8732115160885_134528457c_1"; 

insert
$N_8732115160885_134528457c_1_6 isa variable-ssa, has hash "N_8732115160885_134528457c_1_6", has var "eax_19", has version 21, has edge-label "6", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115160885_134528457c_1_6, from-node: $L_8732115160885_134528457c_1) isa node-link; 

match
$L_8732115160885_134528457c_1 isa list, has hash "L_8732115160885_134528457c_1"; 

insert
$N_8732115160885_134528457c_1_7 isa variable-ssa, has hash "N_8732115160885_134528457c_1_7", has var "eax_20", has version 22, has edge-label "7", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115160885_134528457c_1_7, from-node: $L_8732115160885_134528457c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114907397_134528460c isa instruction, has hash "N_8732114907397_134528460c", has il-index 71, has asm-address "0x804bdcc", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_22#25 = [eax_21#24 + 0x1c].d @ mem#3";
(contains-instruction: $N_8732114907397_134528460c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114907397_134528460c isa instruction, has hash "N_8732114907397_134528460c"; 

insert
$N_8732114907397_134528460c_0 isa variable-ssa, has hash "N_8732114907397_134528460c_0", has var "eax_22", has version 25, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114907397_134528460c_0, from-node: $N_8732114907397_134528460c) isa node-link; 

match
$N_8732114907397_134528460c isa instruction, has hash "N_8732114907397_134528460c"; 

insert
$N_8732114907397_134528460c_1 isa MLIL_LOAD_SSA, has hash "N_8732114907397_134528460c_1", has edge-label "src";
(to-node: $N_8732114907397_134528460c_1, from-node: $N_8732114907397_134528460c) isa node-link; 

match
$N_8732114907397_134528460c_1 isa operation, has hash "N_8732114907397_134528460c_1"; 

insert
$N_8732114907397_134528460c_1_0 isa MLIL_ADD, has hash "N_8732114907397_134528460c_1_0", has edge-label "src";
(to-node: $N_8732114907397_134528460c_1_0, from-node: $N_8732114907397_134528460c_1) isa node-link; 

match
$N_8732114907397_134528460c_1_0 isa operation, has hash "N_8732114907397_134528460c_1_0"; 

insert
$N_8732114907397_134528460c_1_0_0 isa MLIL_VAR_SSA, has hash "N_8732114907397_134528460c_1_0_0", has edge-label "left";
(to-node: $N_8732114907397_134528460c_1_0_0, from-node: $N_8732114907397_134528460c_1_0) isa node-link; 

match
$N_8732114907397_134528460c_1_0_0 isa operation, has hash "N_8732114907397_134528460c_1_0_0"; 

insert
$N_8732114907397_134528460c_1_0_0_0 isa variable-ssa, has hash "N_8732114907397_134528460c_1_0_0_0", has var "eax_21", has version 24, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114907397_134528460c_1_0_0_0, from-node: $N_8732114907397_134528460c_1_0_0) isa node-link; 

match
$N_8732114907397_134528460c_1_0 isa operation, has hash "N_8732114907397_134528460c_1_0"; 

insert
$N_8732114907397_134528460c_1_0_1 isa MLIL_CONST, has hash "N_8732114907397_134528460c_1_0_1", has edge-label "right";
(to-node: $N_8732114907397_134528460c_1_0_1, from-node: $N_8732114907397_134528460c_1_0) isa node-link; 

match
$N_8732114907397_134528460c_1_0_1 isa operation, has hash "N_8732114907397_134528460c_1_0_1"; 

insert
$N_8732114907397_134528460c_1_0_1_0 isa constant, has hash "N_8732114907397_134528460c_1_0_1_0", has constant-value "28", has edge-label "constant";
(to-node: $N_8732114907397_134528460c_1_0_1_0, from-node: $N_8732114907397_134528460c_1_0_1) isa node-link; 

match
$N_8732114907397_134528460c_1 isa operation, has hash "N_8732114907397_134528460c_1"; 

insert
$N_8732114907397_134528460c_1_1 isa constant, has hash "N_8732114907397_134528460c_1_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732114907397_134528460c_1_1, from-node: $N_8732114907397_134528460c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115263749_134528463c isa instruction, has hash "N_8732115263749_134528463c", has il-index 72, has asm-address "0x804bdcf", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_11#11 = var_18#1";
(contains-instruction: $N_8732115263749_134528463c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115263749_134528463c isa instruction, has hash "N_8732115263749_134528463c"; 

insert
$N_8732115263749_134528463c_0 isa variable-ssa, has hash "N_8732115263749_134528463c_0", has var "ecx_11", has version 11, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115263749_134528463c_0, from-node: $N_8732115263749_134528463c) isa node-link; 

match
$N_8732115263749_134528463c isa instruction, has hash "N_8732115263749_134528463c"; 

insert
$N_8732115263749_134528463c_1 isa MLIL_VAR_SSA, has hash "N_8732115263749_134528463c_1", has edge-label "src";
(to-node: $N_8732115263749_134528463c_1, from-node: $N_8732115263749_134528463c) isa node-link; 

match
$N_8732115263749_134528463c_1 isa operation, has hash "N_8732115263749_134528463c_1"; 

insert
$N_8732115263749_134528463c_1_0 isa variable-ssa, has hash "N_8732115263749_134528463c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115263749_134528463c_1_0, from-node: $N_8732115263749_134528463c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115015173_134528466c isa instruction, has hash "N_8732115015173_134528466c", has il-index 73, has asm-address "0x804bdd2", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_12#12 = [ecx_11#11 + 0x18].d @ mem#3";
(contains-instruction: $N_8732115015173_134528466c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115015173_134528466c isa instruction, has hash "N_8732115015173_134528466c"; 

insert
$N_8732115015173_134528466c_0 isa variable-ssa, has hash "N_8732115015173_134528466c_0", has var "ecx_12", has version 12, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115015173_134528466c_0, from-node: $N_8732115015173_134528466c) isa node-link; 

match
$N_8732115015173_134528466c isa instruction, has hash "N_8732115015173_134528466c"; 

insert
$N_8732115015173_134528466c_1 isa MLIL_LOAD_SSA, has hash "N_8732115015173_134528466c_1", has edge-label "src";
(to-node: $N_8732115015173_134528466c_1, from-node: $N_8732115015173_134528466c) isa node-link; 

match
$N_8732115015173_134528466c_1 isa operation, has hash "N_8732115015173_134528466c_1"; 

insert
$N_8732115015173_134528466c_1_0 isa MLIL_ADD, has hash "N_8732115015173_134528466c_1_0", has edge-label "src";
(to-node: $N_8732115015173_134528466c_1_0, from-node: $N_8732115015173_134528466c_1) isa node-link; 

match
$N_8732115015173_134528466c_1_0 isa operation, has hash "N_8732115015173_134528466c_1_0"; 

insert
$N_8732115015173_134528466c_1_0_0 isa MLIL_VAR_SSA, has hash "N_8732115015173_134528466c_1_0_0", has edge-label "left";
(to-node: $N_8732115015173_134528466c_1_0_0, from-node: $N_8732115015173_134528466c_1_0) isa node-link; 

match
$N_8732115015173_134528466c_1_0_0 isa operation, has hash "N_8732115015173_134528466c_1_0_0"; 

insert
$N_8732115015173_134528466c_1_0_0_0 isa variable-ssa, has hash "N_8732115015173_134528466c_1_0_0_0", has var "ecx_11", has version 11, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115015173_134528466c_1_0_0_0, from-node: $N_8732115015173_134528466c_1_0_0) isa node-link; 

match
$N_8732115015173_134528466c_1_0 isa operation, has hash "N_8732115015173_134528466c_1_0"; 

insert
$N_8732115015173_134528466c_1_0_1 isa MLIL_CONST, has hash "N_8732115015173_134528466c_1_0_1", has edge-label "right";
(to-node: $N_8732115015173_134528466c_1_0_1, from-node: $N_8732115015173_134528466c_1_0) isa node-link; 

match
$N_8732115015173_134528466c_1_0_1 isa operation, has hash "N_8732115015173_134528466c_1_0_1"; 

insert
$N_8732115015173_134528466c_1_0_1_0 isa constant, has hash "N_8732115015173_134528466c_1_0_1_0", has constant-value "24", has edge-label "constant";
(to-node: $N_8732115015173_134528466c_1_0_1_0, from-node: $N_8732115015173_134528466c_1_0_1) isa node-link; 

match
$N_8732115015173_134528466c_1 isa operation, has hash "N_8732115015173_134528466c_1"; 

insert
$N_8732115015173_134528466c_1_1 isa constant, has hash "N_8732115015173_134528466c_1_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732115015173_134528466c_1_1, from-node: $N_8732115015173_134528466c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115015177_134528469c isa instruction, has hash "N_8732115015177_134528469c", has il-index 74, has asm-address "0x804bdd5", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edx_4#4 = var_18#1";
(contains-instruction: $N_8732115015177_134528469c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115015177_134528469c isa instruction, has hash "N_8732115015177_134528469c"; 

insert
$N_8732115015177_134528469c_0 isa variable-ssa, has hash "N_8732115015177_134528469c_0", has var "edx_4", has version 4, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115015177_134528469c_0, from-node: $N_8732115015177_134528469c) isa node-link; 

match
$N_8732115015177_134528469c isa instruction, has hash "N_8732115015177_134528469c"; 

insert
$N_8732115015177_134528469c_1 isa MLIL_VAR_SSA, has hash "N_8732115015177_134528469c_1", has edge-label "src";
(to-node: $N_8732115015177_134528469c_1, from-node: $N_8732115015177_134528469c) isa node-link; 

match
$N_8732115015177_134528469c_1 isa operation, has hash "N_8732115015177_134528469c_1"; 

insert
$N_8732115015177_134528469c_1_0 isa variable-ssa, has hash "N_8732115015177_134528469c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115015177_134528469c_1_0, from-node: $N_8732115015177_134528469c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115068165_134528472c isa instruction, has hash "N_8732115068165_134528472c", has il-index 75, has asm-address "0x804bdd8", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edx_5#5 = zx.d([edx_4#4 + 0x16].w @ mem#3)";
(contains-instruction: $N_8732115068165_134528472c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115068165_134528472c isa instruction, has hash "N_8732115068165_134528472c"; 

insert
$N_8732115068165_134528472c_0 isa variable-ssa, has hash "N_8732115068165_134528472c_0", has var "edx_5", has version 5, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115068165_134528472c_0, from-node: $N_8732115068165_134528472c) isa node-link; 

match
$N_8732115068165_134528472c isa instruction, has hash "N_8732115068165_134528472c"; 

insert
$N_8732115068165_134528472c_1 isa MLIL_ZX, has hash "N_8732115068165_134528472c_1", has edge-label "src";
(to-node: $N_8732115068165_134528472c_1, from-node: $N_8732115068165_134528472c) isa node-link; 

match
$N_8732115068165_134528472c_1 isa operation, has hash "N_8732115068165_134528472c_1"; 

insert
$N_8732115068165_134528472c_1_0 isa MLIL_LOAD_SSA, has hash "N_8732115068165_134528472c_1_0", has edge-label "src";
(to-node: $N_8732115068165_134528472c_1_0, from-node: $N_8732115068165_134528472c_1) isa node-link; 

match
$N_8732115068165_134528472c_1_0 isa operation, has hash "N_8732115068165_134528472c_1_0"; 

insert
$N_8732115068165_134528472c_1_0_0 isa MLIL_ADD, has hash "N_8732115068165_134528472c_1_0_0", has edge-label "src";
(to-node: $N_8732115068165_134528472c_1_0_0, from-node: $N_8732115068165_134528472c_1_0) isa node-link; 

match
$N_8732115068165_134528472c_1_0_0 isa operation, has hash "N_8732115068165_134528472c_1_0_0"; 

insert
$N_8732115068165_134528472c_1_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732115068165_134528472c_1_0_0_0", has edge-label "left";
(to-node: $N_8732115068165_134528472c_1_0_0_0, from-node: $N_8732115068165_134528472c_1_0_0) isa node-link; 

match
$N_8732115068165_134528472c_1_0_0_0 isa operation, has hash "N_8732115068165_134528472c_1_0_0_0"; 

insert
$N_8732115068165_134528472c_1_0_0_0_0 isa variable-ssa, has hash "N_8732115068165_134528472c_1_0_0_0_0", has var "edx_4", has version 4, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115068165_134528472c_1_0_0_0_0, from-node: $N_8732115068165_134528472c_1_0_0_0) isa node-link; 

match
$N_8732115068165_134528472c_1_0_0 isa operation, has hash "N_8732115068165_134528472c_1_0_0"; 

insert
$N_8732115068165_134528472c_1_0_0_1 isa MLIL_CONST, has hash "N_8732115068165_134528472c_1_0_0_1", has edge-label "right";
(to-node: $N_8732115068165_134528472c_1_0_0_1, from-node: $N_8732115068165_134528472c_1_0_0) isa node-link; 

match
$N_8732115068165_134528472c_1_0_0_1 isa operation, has hash "N_8732115068165_134528472c_1_0_0_1"; 

insert
$N_8732115068165_134528472c_1_0_0_1_0 isa constant, has hash "N_8732115068165_134528472c_1_0_0_1_0", has constant-value "22", has edge-label "constant";
(to-node: $N_8732115068165_134528472c_1_0_0_1_0, from-node: $N_8732115068165_134528472c_1_0_0_1) isa node-link; 

match
$N_8732115068165_134528472c_1_0 isa operation, has hash "N_8732115068165_134528472c_1_0"; 

insert
$N_8732115068165_134528472c_1_0_1 isa constant, has hash "N_8732115068165_134528472c_1_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732115068165_134528472c_1_0_1, from-node: $N_8732115068165_134528472c_1_0) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114887989_134528476c isa instruction, has hash "N_8732114887989_134528476c", has il-index 76, has asm-address "0x804bddc", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_13#13 = ecx_12#12 * edx_5#5";
(contains-instruction: $N_8732114887989_134528476c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114887989_134528476c isa instruction, has hash "N_8732114887989_134528476c"; 

insert
$N_8732114887989_134528476c_0 isa variable-ssa, has hash "N_8732114887989_134528476c_0", has var "ecx_13", has version 13, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114887989_134528476c_0, from-node: $N_8732114887989_134528476c) isa node-link; 

match
$N_8732114887989_134528476c isa instruction, has hash "N_8732114887989_134528476c"; 

insert
$N_8732114887989_134528476c_1 isa MLIL_MUL, has hash "N_8732114887989_134528476c_1", has edge-label "src";
(to-node: $N_8732114887989_134528476c_1, from-node: $N_8732114887989_134528476c) isa node-link; 

match
$N_8732114887989_134528476c_1 isa operation, has hash "N_8732114887989_134528476c_1"; 

insert
$N_8732114887989_134528476c_1_0 isa MLIL_VAR_SSA, has hash "N_8732114887989_134528476c_1_0", has edge-label "left";
(to-node: $N_8732114887989_134528476c_1_0, from-node: $N_8732114887989_134528476c_1) isa node-link; 

match
$N_8732114887989_134528476c_1_0 isa operation, has hash "N_8732114887989_134528476c_1_0"; 

insert
$N_8732114887989_134528476c_1_0_0 isa variable-ssa, has hash "N_8732114887989_134528476c_1_0_0", has var "ecx_12", has version 12, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114887989_134528476c_1_0_0, from-node: $N_8732114887989_134528476c_1_0) isa node-link; 

match
$N_8732114887989_134528476c_1 isa operation, has hash "N_8732114887989_134528476c_1"; 

insert
$N_8732114887989_134528476c_1_1 isa MLIL_VAR_SSA, has hash "N_8732114887989_134528476c_1_1", has edge-label "right";
(to-node: $N_8732114887989_134528476c_1_1, from-node: $N_8732114887989_134528476c_1) isa node-link; 

match
$N_8732114887989_134528476c_1_1 isa operation, has hash "N_8732114887989_134528476c_1_1"; 

insert
$N_8732114887989_134528476c_1_1_0 isa variable-ssa, has hash "N_8732114887989_134528476c_1_1_0", has var "edx_5", has version 5, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114887989_134528476c_1_1_0, from-node: $N_8732114887989_134528476c_1_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114904837_134528479c isa instruction, has hash "N_8732114904837_134528479c", has il-index 77, has asm-address "0x804bddf", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edx_6#6 = var_18#1";
(contains-instruction: $N_8732114904837_134528479c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114904837_134528479c isa instruction, has hash "N_8732114904837_134528479c"; 

insert
$N_8732114904837_134528479c_0 isa variable-ssa, has hash "N_8732114904837_134528479c_0", has var "edx_6", has version 6, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114904837_134528479c_0, from-node: $N_8732114904837_134528479c) isa node-link; 

match
$N_8732114904837_134528479c isa instruction, has hash "N_8732114904837_134528479c"; 

insert
$N_8732114904837_134528479c_1 isa MLIL_VAR_SSA, has hash "N_8732114904837_134528479c_1", has edge-label "src";
(to-node: $N_8732114904837_134528479c_1, from-node: $N_8732114904837_134528479c) isa node-link; 

match
$N_8732114904837_134528479c_1 isa operation, has hash "N_8732114904837_134528479c_1"; 

insert
$N_8732114904837_134528479c_1_0 isa variable-ssa, has hash "N_8732114904837_134528479c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732114904837_134528479c_1_0, from-node: $N_8732114904837_134528479c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114952709_134528482c isa instruction, has hash "N_8732114952709_134528482c", has il-index 78, has asm-address "0x804bde2", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edx_7#7 = zx.d([edx_6#6 + 0x22].w @ mem#3)";
(contains-instruction: $N_8732114952709_134528482c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114952709_134528482c isa instruction, has hash "N_8732114952709_134528482c"; 

insert
$N_8732114952709_134528482c_0 isa variable-ssa, has hash "N_8732114952709_134528482c_0", has var "edx_7", has version 7, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114952709_134528482c_0, from-node: $N_8732114952709_134528482c) isa node-link; 

match
$N_8732114952709_134528482c isa instruction, has hash "N_8732114952709_134528482c"; 

insert
$N_8732114952709_134528482c_1 isa MLIL_ZX, has hash "N_8732114952709_134528482c_1", has edge-label "src";
(to-node: $N_8732114952709_134528482c_1, from-node: $N_8732114952709_134528482c) isa node-link; 

match
$N_8732114952709_134528482c_1 isa operation, has hash "N_8732114952709_134528482c_1"; 

insert
$N_8732114952709_134528482c_1_0 isa MLIL_LOAD_SSA, has hash "N_8732114952709_134528482c_1_0", has edge-label "src";
(to-node: $N_8732114952709_134528482c_1_0, from-node: $N_8732114952709_134528482c_1) isa node-link; 

match
$N_8732114952709_134528482c_1_0 isa operation, has hash "N_8732114952709_134528482c_1_0"; 

insert
$N_8732114952709_134528482c_1_0_0 isa MLIL_ADD, has hash "N_8732114952709_134528482c_1_0_0", has edge-label "src";
(to-node: $N_8732114952709_134528482c_1_0_0, from-node: $N_8732114952709_134528482c_1_0) isa node-link; 

match
$N_8732114952709_134528482c_1_0_0 isa operation, has hash "N_8732114952709_134528482c_1_0_0"; 

insert
$N_8732114952709_134528482c_1_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732114952709_134528482c_1_0_0_0", has edge-label "left";
(to-node: $N_8732114952709_134528482c_1_0_0_0, from-node: $N_8732114952709_134528482c_1_0_0) isa node-link; 

match
$N_8732114952709_134528482c_1_0_0_0 isa operation, has hash "N_8732114952709_134528482c_1_0_0_0"; 

insert
$N_8732114952709_134528482c_1_0_0_0_0 isa variable-ssa, has hash "N_8732114952709_134528482c_1_0_0_0_0", has var "edx_6", has version 6, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114952709_134528482c_1_0_0_0_0, from-node: $N_8732114952709_134528482c_1_0_0_0) isa node-link; 

match
$N_8732114952709_134528482c_1_0_0 isa operation, has hash "N_8732114952709_134528482c_1_0_0"; 

insert
$N_8732114952709_134528482c_1_0_0_1 isa MLIL_CONST, has hash "N_8732114952709_134528482c_1_0_0_1", has edge-label "right";
(to-node: $N_8732114952709_134528482c_1_0_0_1, from-node: $N_8732114952709_134528482c_1_0_0) isa node-link; 

match
$N_8732114952709_134528482c_1_0_0_1 isa operation, has hash "N_8732114952709_134528482c_1_0_0_1"; 

insert
$N_8732114952709_134528482c_1_0_0_1_0 isa constant, has hash "N_8732114952709_134528482c_1_0_0_1_0", has constant-value "34", has edge-label "constant";
(to-node: $N_8732114952709_134528482c_1_0_0_1_0, from-node: $N_8732114952709_134528482c_1_0_0_1) isa node-link; 

match
$N_8732114952709_134528482c_1_0 isa operation, has hash "N_8732114952709_134528482c_1_0"; 

insert
$N_8732114952709_134528482c_1_0_1 isa constant, has hash "N_8732114952709_134528482c_1_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732114952709_134528482c_1_0_1, from-node: $N_8732114952709_134528482c_1_0) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115437625_134528486c isa instruction, has hash "N_8732115437625_134528486c", has il-index 79, has asm-address "0x804bde6", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_14#14 = ecx_13#13 * edx_7#7";
(contains-instruction: $N_8732115437625_134528486c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115437625_134528486c isa instruction, has hash "N_8732115437625_134528486c"; 

insert
$N_8732115437625_134528486c_0 isa variable-ssa, has hash "N_8732115437625_134528486c_0", has var "ecx_14", has version 14, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115437625_134528486c_0, from-node: $N_8732115437625_134528486c) isa node-link; 

match
$N_8732115437625_134528486c isa instruction, has hash "N_8732115437625_134528486c"; 

insert
$N_8732115437625_134528486c_1 isa MLIL_MUL, has hash "N_8732115437625_134528486c_1", has edge-label "src";
(to-node: $N_8732115437625_134528486c_1, from-node: $N_8732115437625_134528486c) isa node-link; 

match
$N_8732115437625_134528486c_1 isa operation, has hash "N_8732115437625_134528486c_1"; 

insert
$N_8732115437625_134528486c_1_0 isa MLIL_VAR_SSA, has hash "N_8732115437625_134528486c_1_0", has edge-label "left";
(to-node: $N_8732115437625_134528486c_1_0, from-node: $N_8732115437625_134528486c_1) isa node-link; 

match
$N_8732115437625_134528486c_1_0 isa operation, has hash "N_8732115437625_134528486c_1_0"; 

insert
$N_8732115437625_134528486c_1_0_0 isa variable-ssa, has hash "N_8732115437625_134528486c_1_0_0", has var "ecx_13", has version 13, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115437625_134528486c_1_0_0, from-node: $N_8732115437625_134528486c_1_0) isa node-link; 

match
$N_8732115437625_134528486c_1 isa operation, has hash "N_8732115437625_134528486c_1"; 

insert
$N_8732115437625_134528486c_1_1 isa MLIL_VAR_SSA, has hash "N_8732115437625_134528486c_1_1", has edge-label "right";
(to-node: $N_8732115437625_134528486c_1_1, from-node: $N_8732115437625_134528486c_1) isa node-link; 

match
$N_8732115437625_134528486c_1_1 isa operation, has hash "N_8732115437625_134528486c_1_1"; 

insert
$N_8732115437625_134528486c_1_1_0 isa variable-ssa, has hash "N_8732115437625_134528486c_1_1_0", has var "edx_7", has version 7, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115437625_134528486c_1_1_0, from-node: $N_8732115437625_134528486c_1_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115154437_134528489c isa instruction, has hash "N_8732115154437_134528489c", has il-index 80, has asm-address "0x804bde9", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_15#15 = ecx_14#14 u>> 3";
(contains-instruction: $N_8732115154437_134528489c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115154437_134528489c isa instruction, has hash "N_8732115154437_134528489c"; 

insert
$N_8732115154437_134528489c_0 isa variable-ssa, has hash "N_8732115154437_134528489c_0", has var "ecx_15", has version 15, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115154437_134528489c_0, from-node: $N_8732115154437_134528489c) isa node-link; 

match
$N_8732115154437_134528489c isa instruction, has hash "N_8732115154437_134528489c"; 

insert
$N_8732115154437_134528489c_1 isa MLIL_LSR, has hash "N_8732115154437_134528489c_1", has edge-label "src";
(to-node: $N_8732115154437_134528489c_1, from-node: $N_8732115154437_134528489c) isa node-link; 

match
$N_8732115154437_134528489c_1 isa operation, has hash "N_8732115154437_134528489c_1"; 

insert
$N_8732115154437_134528489c_1_0 isa MLIL_VAR_SSA, has hash "N_8732115154437_134528489c_1_0", has edge-label "left";
(to-node: $N_8732115154437_134528489c_1_0, from-node: $N_8732115154437_134528489c_1) isa node-link; 

match
$N_8732115154437_134528489c_1_0 isa operation, has hash "N_8732115154437_134528489c_1_0"; 

insert
$N_8732115154437_134528489c_1_0_0 isa variable-ssa, has hash "N_8732115154437_134528489c_1_0_0", has var "ecx_14", has version 14, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115154437_134528489c_1_0_0, from-node: $N_8732115154437_134528489c_1_0) isa node-link; 

match
$N_8732115154437_134528489c_1 isa operation, has hash "N_8732115154437_134528489c_1"; 

insert
$N_8732115154437_134528489c_1_1 isa MLIL_CONST, has hash "N_8732115154437_134528489c_1_1", has edge-label "right";
(to-node: $N_8732115154437_134528489c_1_1, from-node: $N_8732115154437_134528489c_1) isa node-link; 

match
$N_8732115154437_134528489c_1_1 isa operation, has hash "N_8732115154437_134528489c_1_1"; 

insert
$N_8732115154437_134528489c_1_1_0 isa constant, has hash "N_8732115154437_134528489c_1_1_0", has constant-value "3", has edge-label "constant";
(to-node: $N_8732115154437_134528489c_1_1_0, from-node: $N_8732115154437_134528489c_1_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 69, has bb-end 81; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115379465_134528494c isa instruction, has hash "N_8732115379465_134528494c", has il-index 81, has asm-address "0x804bdee", has operation-type "MLIL_IF", has ins-text "if (eax_22#25 == ecx_15#15) then 85 @ 0x804be05 else 97 @ 0x804bdf4";
(contains-instruction: $N_8732115379465_134528494c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115379465_134528494c isa instruction, has hash "N_8732115379465_134528494c"; 

insert
$N_8732115379465_134528494c_0 isa MLIL_CMP_E, has hash "N_8732115379465_134528494c_0", has edge-label "condition";
(to-node: $N_8732115379465_134528494c_0, from-node: $N_8732115379465_134528494c) isa node-link; 

match
$N_8732115379465_134528494c_0 isa operation, has hash "N_8732115379465_134528494c_0"; 

insert
$N_8732115379465_134528494c_0_0 isa MLIL_VAR_SSA, has hash "N_8732115379465_134528494c_0_0", has edge-label "left";
(to-node: $N_8732115379465_134528494c_0_0, from-node: $N_8732115379465_134528494c_0) isa node-link; 

match
$N_8732115379465_134528494c_0_0 isa operation, has hash "N_8732115379465_134528494c_0_0"; 

insert
$N_8732115379465_134528494c_0_0_0 isa variable-ssa, has hash "N_8732115379465_134528494c_0_0_0", has var "eax_22", has version 25, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115379465_134528494c_0_0_0, from-node: $N_8732115379465_134528494c_0_0) isa node-link; 

match
$N_8732115379465_134528494c_0 isa operation, has hash "N_8732115379465_134528494c_0"; 

insert
$N_8732115379465_134528494c_0_1 isa MLIL_VAR_SSA, has hash "N_8732115379465_134528494c_0_1", has edge-label "right";
(to-node: $N_8732115379465_134528494c_0_1, from-node: $N_8732115379465_134528494c_0) isa node-link; 

match
$N_8732115379465_134528494c_0_1 isa operation, has hash "N_8732115379465_134528494c_0_1"; 

insert
$N_8732115379465_134528494c_0_1_0 isa variable-ssa, has hash "N_8732115379465_134528494c_0_1_0", has var "ecx_15", has version 15, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115379465_134528494c_0_1_0, from-node: $N_8732115379465_134528494c_0_1) isa node-link; 

match
$N_8732115379465_134528494c isa instruction, has hash "N_8732115379465_134528494c"; 

insert
$N_8732115379465_134528494c_1 isa constant, has hash "N_8732115379465_134528494c_1", has constant-value "85", has edge-label "true";
(to-node: $N_8732115379465_134528494c_1, from-node: $N_8732115379465_134528494c) isa node-link; 

match
$N_8732115379465_134528494c isa instruction, has hash "N_8732115379465_134528494c"; 

insert
$N_8732115379465_134528494c_2 isa constant, has hash "N_8732115379465_134528494c_2", has constant-value "97", has edge-label "false";
(to-node: $N_8732115379465_134528494c_2, from-node: $N_8732115379465_134528494c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 82, has bb-end 82; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 83, has bb-end 84; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 83, has bb-end 84; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 83, has bb-end 84; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115012613_134528349c isa instruction, has hash "N_8732115012613_134528349c", has il-index 83, has asm-address "0x804bd5d", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_15#17 = var_18#1";
(contains-instruction: $N_8732115012613_134528349c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115012613_134528349c isa instruction, has hash "N_8732115012613_134528349c"; 

insert
$N_8732115012613_134528349c_0 isa variable-ssa, has hash "N_8732115012613_134528349c_0", has var "eax_15", has version 17, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115012613_134528349c_0, from-node: $N_8732115012613_134528349c) isa node-link; 

match
$N_8732115012613_134528349c isa instruction, has hash "N_8732115012613_134528349c"; 

insert
$N_8732115012613_134528349c_1 isa MLIL_VAR_SSA, has hash "N_8732115012613_134528349c_1", has edge-label "src";
(to-node: $N_8732115012613_134528349c_1, from-node: $N_8732115012613_134528349c) isa node-link; 

match
$N_8732115012613_134528349c_1 isa operation, has hash "N_8732115012613_134528349c_1"; 

insert
$N_8732115012613_134528349c_1_0 isa variable-ssa, has hash "N_8732115012613_134528349c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115012613_134528349c_1_0, from-node: $N_8732115012613_134528349c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 83, has bb-end 84; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 83, has bb-end 84; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115423237_134528359c isa instruction, has hash "N_8732115423237_134528359c", has il-index 84, has asm-address "0x804bd67", has operation-type "MLIL_IF", has ins-text "if ([eax_15#17 + 0x18].d @ mem#3 == 0x3e80) then 99 @ 0x0 else 100 @ 0x804bd6d";
(contains-instruction: $N_8732115423237_134528359c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115423237_134528359c isa instruction, has hash "N_8732115423237_134528359c"; 

insert
$N_8732115423237_134528359c_0 isa MLIL_CMP_E, has hash "N_8732115423237_134528359c_0", has edge-label "condition";
(to-node: $N_8732115423237_134528359c_0, from-node: $N_8732115423237_134528359c) isa node-link; 

match
$N_8732115423237_134528359c_0 isa operation, has hash "N_8732115423237_134528359c_0"; 

insert
$N_8732115423237_134528359c_0_0 isa MLIL_LOAD_SSA, has hash "N_8732115423237_134528359c_0_0", has edge-label "left";
(to-node: $N_8732115423237_134528359c_0_0, from-node: $N_8732115423237_134528359c_0) isa node-link; 

match
$N_8732115423237_134528359c_0_0 isa operation, has hash "N_8732115423237_134528359c_0_0"; 

insert
$N_8732115423237_134528359c_0_0_0 isa MLIL_ADD, has hash "N_8732115423237_134528359c_0_0_0", has edge-label "src";
(to-node: $N_8732115423237_134528359c_0_0_0, from-node: $N_8732115423237_134528359c_0_0) isa node-link; 

match
$N_8732115423237_134528359c_0_0_0 isa operation, has hash "N_8732115423237_134528359c_0_0_0"; 

insert
$N_8732115423237_134528359c_0_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732115423237_134528359c_0_0_0_0", has edge-label "left";
(to-node: $N_8732115423237_134528359c_0_0_0_0, from-node: $N_8732115423237_134528359c_0_0_0) isa node-link; 

match
$N_8732115423237_134528359c_0_0_0_0 isa operation, has hash "N_8732115423237_134528359c_0_0_0_0"; 

insert
$N_8732115423237_134528359c_0_0_0_0_0 isa variable-ssa, has hash "N_8732115423237_134528359c_0_0_0_0_0", has var "eax_15", has version 17, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115423237_134528359c_0_0_0_0_0, from-node: $N_8732115423237_134528359c_0_0_0_0) isa node-link; 

match
$N_8732115423237_134528359c_0_0_0 isa operation, has hash "N_8732115423237_134528359c_0_0_0"; 

insert
$N_8732115423237_134528359c_0_0_0_1 isa MLIL_CONST, has hash "N_8732115423237_134528359c_0_0_0_1", has edge-label "right";
(to-node: $N_8732115423237_134528359c_0_0_0_1, from-node: $N_8732115423237_134528359c_0_0_0) isa node-link; 

match
$N_8732115423237_134528359c_0_0_0_1 isa operation, has hash "N_8732115423237_134528359c_0_0_0_1"; 

insert
$N_8732115423237_134528359c_0_0_0_1_0 isa constant, has hash "N_8732115423237_134528359c_0_0_0_1_0", has constant-value "24", has edge-label "constant";
(to-node: $N_8732115423237_134528359c_0_0_0_1_0, from-node: $N_8732115423237_134528359c_0_0_0_1) isa node-link; 

match
$N_8732115423237_134528359c_0_0 isa operation, has hash "N_8732115423237_134528359c_0_0"; 

insert
$N_8732115423237_134528359c_0_0_1 isa constant, has hash "N_8732115423237_134528359c_0_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732115423237_134528359c_0_0_1, from-node: $N_8732115423237_134528359c_0_0) isa node-link; 

match
$N_8732115423237_134528359c_0 isa operation, has hash "N_8732115423237_134528359c_0"; 

insert
$N_8732115423237_134528359c_0_1 isa MLIL_CONST, has hash "N_8732115423237_134528359c_0_1", has edge-label "right";
(to-node: $N_8732115423237_134528359c_0_1, from-node: $N_8732115423237_134528359c_0) isa node-link; 

match
$N_8732115423237_134528359c_0_1 isa operation, has hash "N_8732115423237_134528359c_0_1"; 

insert
$N_8732115423237_134528359c_0_1_0 isa constant, has hash "N_8732115423237_134528359c_0_1_0", has constant-value "16000", has edge-label "constant";
(to-node: $N_8732115423237_134528359c_0_1_0, from-node: $N_8732115423237_134528359c_0_1) isa node-link; 

match
$N_8732115423237_134528359c isa instruction, has hash "N_8732115423237_134528359c"; 

insert
$N_8732115423237_134528359c_1 isa constant, has hash "N_8732115423237_134528359c_1", has constant-value "99", has edge-label "true";
(to-node: $N_8732115423237_134528359c_1, from-node: $N_8732115423237_134528359c) isa node-link; 

match
$N_8732115423237_134528359c isa instruction, has hash "N_8732115423237_134528359c"; 

insert
$N_8732115423237_134528359c_2 isa constant, has hash "N_8732115423237_134528359c_2", has constant-value "100", has edge-label "false";
(to-node: $N_8732115423237_134528359c_2, from-node: $N_8732115423237_134528359c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115331589_134528517c isa instruction, has hash "N_8732115331589_134528517c", has il-index 85, has asm-address "0x804be05", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_16#16 = var_18#1";
(contains-instruction: $N_8732115331589_134528517c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115331589_134528517c isa instruction, has hash "N_8732115331589_134528517c"; 

insert
$N_8732115331589_134528517c_0 isa variable-ssa, has hash "N_8732115331589_134528517c_0", has var "ecx_16", has version 16, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115331589_134528517c_0, from-node: $N_8732115331589_134528517c) isa node-link; 

match
$N_8732115331589_134528517c isa instruction, has hash "N_8732115331589_134528517c"; 

insert
$N_8732115331589_134528517c_1 isa MLIL_VAR_SSA, has hash "N_8732115331589_134528517c_1", has edge-label "src";
(to-node: $N_8732115331589_134528517c_1, from-node: $N_8732115331589_134528517c) isa node-link; 

match
$N_8732115331589_134528517c_1 isa operation, has hash "N_8732115331589_134528517c_1"; 

insert
$N_8732115331589_134528517c_1_0 isa variable-ssa, has hash "N_8732115331589_134528517c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115331589_134528517c_1_0, from-node: $N_8732115331589_134528517c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115419909_134528520c isa instruction, has hash "N_8732115419909_134528520c", has il-index 86, has asm-address "0x804be08", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_17#17 = zx.d([ecx_16#16 + 0x20].w @ mem#3)";
(contains-instruction: $N_8732115419909_134528520c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115419909_134528520c isa instruction, has hash "N_8732115419909_134528520c"; 

insert
$N_8732115419909_134528520c_0 isa variable-ssa, has hash "N_8732115419909_134528520c_0", has var "ecx_17", has version 17, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115419909_134528520c_0, from-node: $N_8732115419909_134528520c) isa node-link; 

match
$N_8732115419909_134528520c isa instruction, has hash "N_8732115419909_134528520c"; 

insert
$N_8732115419909_134528520c_1 isa MLIL_ZX, has hash "N_8732115419909_134528520c_1", has edge-label "src";
(to-node: $N_8732115419909_134528520c_1, from-node: $N_8732115419909_134528520c) isa node-link; 

match
$N_8732115419909_134528520c_1 isa operation, has hash "N_8732115419909_134528520c_1"; 

insert
$N_8732115419909_134528520c_1_0 isa MLIL_LOAD_SSA, has hash "N_8732115419909_134528520c_1_0", has edge-label "src";
(to-node: $N_8732115419909_134528520c_1_0, from-node: $N_8732115419909_134528520c_1) isa node-link; 

match
$N_8732115419909_134528520c_1_0 isa operation, has hash "N_8732115419909_134528520c_1_0"; 

insert
$N_8732115419909_134528520c_1_0_0 isa MLIL_ADD, has hash "N_8732115419909_134528520c_1_0_0", has edge-label "src";
(to-node: $N_8732115419909_134528520c_1_0_0, from-node: $N_8732115419909_134528520c_1_0) isa node-link; 

match
$N_8732115419909_134528520c_1_0_0 isa operation, has hash "N_8732115419909_134528520c_1_0_0"; 

insert
$N_8732115419909_134528520c_1_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732115419909_134528520c_1_0_0_0", has edge-label "left";
(to-node: $N_8732115419909_134528520c_1_0_0_0, from-node: $N_8732115419909_134528520c_1_0_0) isa node-link; 

match
$N_8732115419909_134528520c_1_0_0_0 isa operation, has hash "N_8732115419909_134528520c_1_0_0_0"; 

insert
$N_8732115419909_134528520c_1_0_0_0_0 isa variable-ssa, has hash "N_8732115419909_134528520c_1_0_0_0_0", has var "ecx_16", has version 16, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115419909_134528520c_1_0_0_0_0, from-node: $N_8732115419909_134528520c_1_0_0_0) isa node-link; 

match
$N_8732115419909_134528520c_1_0_0 isa operation, has hash "N_8732115419909_134528520c_1_0_0"; 

insert
$N_8732115419909_134528520c_1_0_0_1 isa MLIL_CONST, has hash "N_8732115419909_134528520c_1_0_0_1", has edge-label "right";
(to-node: $N_8732115419909_134528520c_1_0_0_1, from-node: $N_8732115419909_134528520c_1_0_0) isa node-link; 

match
$N_8732115419909_134528520c_1_0_0_1 isa operation, has hash "N_8732115419909_134528520c_1_0_0_1"; 

insert
$N_8732115419909_134528520c_1_0_0_1_0 isa constant, has hash "N_8732115419909_134528520c_1_0_0_1_0", has constant-value "32", has edge-label "constant";
(to-node: $N_8732115419909_134528520c_1_0_0_1_0, from-node: $N_8732115419909_134528520c_1_0_0_1) isa node-link; 

match
$N_8732115419909_134528520c_1_0 isa operation, has hash "N_8732115419909_134528520c_1_0"; 

insert
$N_8732115419909_134528520c_1_0_1 isa constant, has hash "N_8732115419909_134528520c_1_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732115419909_134528520c_1_0_1, from-node: $N_8732115419909_134528520c_1_0) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115132421_134528524c isa instruction, has hash "N_8732115132421_134528524c", has il-index 87, has asm-address "0x804be0c", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edx_8#8 = var_18#1";
(contains-instruction: $N_8732115132421_134528524c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115132421_134528524c isa instruction, has hash "N_8732115132421_134528524c"; 

insert
$N_8732115132421_134528524c_0 isa variable-ssa, has hash "N_8732115132421_134528524c_0", has var "edx_8", has version 8, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115132421_134528524c_0, from-node: $N_8732115132421_134528524c) isa node-link; 

match
$N_8732115132421_134528524c isa instruction, has hash "N_8732115132421_134528524c"; 

insert
$N_8732115132421_134528524c_1 isa MLIL_VAR_SSA, has hash "N_8732115132421_134528524c_1", has edge-label "src";
(to-node: $N_8732115132421_134528524c_1, from-node: $N_8732115132421_134528524c) isa node-link; 

match
$N_8732115132421_134528524c_1 isa operation, has hash "N_8732115132421_134528524c_1"; 

insert
$N_8732115132421_134528524c_1_0 isa variable-ssa, has hash "N_8732115132421_134528524c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115132421_134528524c_1_0, from-node: $N_8732115132421_134528524c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114821125_134528527c isa instruction, has hash "N_8732114821125_134528527c", has il-index 88, has asm-address "0x804be0f", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edx_9#9 = zx.d([edx_8#8 + 0x16].w @ mem#3)";
(contains-instruction: $N_8732114821125_134528527c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114821125_134528527c isa instruction, has hash "N_8732114821125_134528527c"; 

insert
$N_8732114821125_134528527c_0 isa variable-ssa, has hash "N_8732114821125_134528527c_0", has var "edx_9", has version 9, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114821125_134528527c_0, from-node: $N_8732114821125_134528527c) isa node-link; 

match
$N_8732114821125_134528527c isa instruction, has hash "N_8732114821125_134528527c"; 

insert
$N_8732114821125_134528527c_1 isa MLIL_ZX, has hash "N_8732114821125_134528527c_1", has edge-label "src";
(to-node: $N_8732114821125_134528527c_1, from-node: $N_8732114821125_134528527c) isa node-link; 

match
$N_8732114821125_134528527c_1 isa operation, has hash "N_8732114821125_134528527c_1"; 

insert
$N_8732114821125_134528527c_1_0 isa MLIL_LOAD_SSA, has hash "N_8732114821125_134528527c_1_0", has edge-label "src";
(to-node: $N_8732114821125_134528527c_1_0, from-node: $N_8732114821125_134528527c_1) isa node-link; 

match
$N_8732114821125_134528527c_1_0 isa operation, has hash "N_8732114821125_134528527c_1_0"; 

insert
$N_8732114821125_134528527c_1_0_0 isa MLIL_ADD, has hash "N_8732114821125_134528527c_1_0_0", has edge-label "src";
(to-node: $N_8732114821125_134528527c_1_0_0, from-node: $N_8732114821125_134528527c_1_0) isa node-link; 

match
$N_8732114821125_134528527c_1_0_0 isa operation, has hash "N_8732114821125_134528527c_1_0_0"; 

insert
$N_8732114821125_134528527c_1_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732114821125_134528527c_1_0_0_0", has edge-label "left";
(to-node: $N_8732114821125_134528527c_1_0_0_0, from-node: $N_8732114821125_134528527c_1_0_0) isa node-link; 

match
$N_8732114821125_134528527c_1_0_0_0 isa operation, has hash "N_8732114821125_134528527c_1_0_0_0"; 

insert
$N_8732114821125_134528527c_1_0_0_0_0 isa variable-ssa, has hash "N_8732114821125_134528527c_1_0_0_0_0", has var "edx_8", has version 8, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114821125_134528527c_1_0_0_0_0, from-node: $N_8732114821125_134528527c_1_0_0_0) isa node-link; 

match
$N_8732114821125_134528527c_1_0_0 isa operation, has hash "N_8732114821125_134528527c_1_0_0"; 

insert
$N_8732114821125_134528527c_1_0_0_1 isa MLIL_CONST, has hash "N_8732114821125_134528527c_1_0_0_1", has edge-label "right";
(to-node: $N_8732114821125_134528527c_1_0_0_1, from-node: $N_8732114821125_134528527c_1_0_0) isa node-link; 

match
$N_8732114821125_134528527c_1_0_0_1 isa operation, has hash "N_8732114821125_134528527c_1_0_0_1"; 

insert
$N_8732114821125_134528527c_1_0_0_1_0 isa constant, has hash "N_8732114821125_134528527c_1_0_0_1_0", has constant-value "22", has edge-label "constant";
(to-node: $N_8732114821125_134528527c_1_0_0_1_0, from-node: $N_8732114821125_134528527c_1_0_0_1) isa node-link; 

match
$N_8732114821125_134528527c_1_0 isa operation, has hash "N_8732114821125_134528527c_1_0"; 

insert
$N_8732114821125_134528527c_1_0_1 isa constant, has hash "N_8732114821125_134528527c_1_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732114821125_134528527c_1_0_1, from-node: $N_8732114821125_134528527c_1_0) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114818865_134528531c isa instruction, has hash "N_8732114818865_134528531c", has il-index 89, has asm-address "0x804be13", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi_1#1 = var_18#1";
(contains-instruction: $N_8732114818865_134528531c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114818865_134528531c isa instruction, has hash "N_8732114818865_134528531c"; 

insert
$N_8732114818865_134528531c_0 isa variable-ssa, has hash "N_8732114818865_134528531c_0", has var "esi_1", has version 1, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114818865_134528531c_0, from-node: $N_8732114818865_134528531c) isa node-link; 

match
$N_8732114818865_134528531c isa instruction, has hash "N_8732114818865_134528531c"; 

insert
$N_8732114818865_134528531c_1 isa MLIL_VAR_SSA, has hash "N_8732114818865_134528531c_1", has edge-label "src";
(to-node: $N_8732114818865_134528531c_1, from-node: $N_8732114818865_134528531c) isa node-link; 

match
$N_8732114818865_134528531c_1 isa operation, has hash "N_8732114818865_134528531c_1"; 

insert
$N_8732114818865_134528531c_1_0 isa variable-ssa, has hash "N_8732114818865_134528531c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732114818865_134528531c_1_0, from-node: $N_8732114818865_134528531c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115362725_134528534c isa instruction, has hash "N_8732115362725_134528534c", has il-index 90, has asm-address "0x804be16", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi_2#2 = zx.d([esi_1#1 + 0x22].w @ mem#3)";
(contains-instruction: $N_8732115362725_134528534c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115362725_134528534c isa instruction, has hash "N_8732115362725_134528534c"; 

insert
$N_8732115362725_134528534c_0 isa variable-ssa, has hash "N_8732115362725_134528534c_0", has var "esi_2", has version 2, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115362725_134528534c_0, from-node: $N_8732115362725_134528534c) isa node-link; 

match
$N_8732115362725_134528534c isa instruction, has hash "N_8732115362725_134528534c"; 

insert
$N_8732115362725_134528534c_1 isa MLIL_ZX, has hash "N_8732115362725_134528534c_1", has edge-label "src";
(to-node: $N_8732115362725_134528534c_1, from-node: $N_8732115362725_134528534c) isa node-link; 

match
$N_8732115362725_134528534c_1 isa operation, has hash "N_8732115362725_134528534c_1"; 

insert
$N_8732115362725_134528534c_1_0 isa MLIL_LOAD_SSA, has hash "N_8732115362725_134528534c_1_0", has edge-label "src";
(to-node: $N_8732115362725_134528534c_1_0, from-node: $N_8732115362725_134528534c_1) isa node-link; 

match
$N_8732115362725_134528534c_1_0 isa operation, has hash "N_8732115362725_134528534c_1_0"; 

insert
$N_8732115362725_134528534c_1_0_0 isa MLIL_ADD, has hash "N_8732115362725_134528534c_1_0_0", has edge-label "src";
(to-node: $N_8732115362725_134528534c_1_0_0, from-node: $N_8732115362725_134528534c_1_0) isa node-link; 

match
$N_8732115362725_134528534c_1_0_0 isa operation, has hash "N_8732115362725_134528534c_1_0_0"; 

insert
$N_8732115362725_134528534c_1_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732115362725_134528534c_1_0_0_0", has edge-label "left";
(to-node: $N_8732115362725_134528534c_1_0_0_0, from-node: $N_8732115362725_134528534c_1_0_0) isa node-link; 

match
$N_8732115362725_134528534c_1_0_0_0 isa operation, has hash "N_8732115362725_134528534c_1_0_0_0"; 

insert
$N_8732115362725_134528534c_1_0_0_0_0 isa variable-ssa, has hash "N_8732115362725_134528534c_1_0_0_0_0", has var "esi_1", has version 1, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115362725_134528534c_1_0_0_0_0, from-node: $N_8732115362725_134528534c_1_0_0_0) isa node-link; 

match
$N_8732115362725_134528534c_1_0_0 isa operation, has hash "N_8732115362725_134528534c_1_0_0"; 

insert
$N_8732115362725_134528534c_1_0_0_1 isa MLIL_CONST, has hash "N_8732115362725_134528534c_1_0_0_1", has edge-label "right";
(to-node: $N_8732115362725_134528534c_1_0_0_1, from-node: $N_8732115362725_134528534c_1_0_0) isa node-link; 

match
$N_8732115362725_134528534c_1_0_0_1 isa operation, has hash "N_8732115362725_134528534c_1_0_0_1"; 

insert
$N_8732115362725_134528534c_1_0_0_1_0 isa constant, has hash "N_8732115362725_134528534c_1_0_0_1_0", has constant-value "34", has edge-label "constant";
(to-node: $N_8732115362725_134528534c_1_0_0_1_0, from-node: $N_8732115362725_134528534c_1_0_0_1) isa node-link; 

match
$N_8732115362725_134528534c_1_0 isa operation, has hash "N_8732115362725_134528534c_1_0"; 

insert
$N_8732115362725_134528534c_1_0_1 isa constant, has hash "N_8732115362725_134528534c_1_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732115362725_134528534c_1_0_1, from-node: $N_8732115362725_134528534c_1_0) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115295025_134528538c isa instruction, has hash "N_8732115295025_134528538c", has il-index 91, has asm-address "0x804be1a", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edx_10#10 = edx_9#9 * esi_2#2";
(contains-instruction: $N_8732115295025_134528538c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115295025_134528538c isa instruction, has hash "N_8732115295025_134528538c"; 

insert
$N_8732115295025_134528538c_0 isa variable-ssa, has hash "N_8732115295025_134528538c_0", has var "edx_10", has version 10, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115295025_134528538c_0, from-node: $N_8732115295025_134528538c) isa node-link; 

match
$N_8732115295025_134528538c isa instruction, has hash "N_8732115295025_134528538c"; 

insert
$N_8732115295025_134528538c_1 isa MLIL_MUL, has hash "N_8732115295025_134528538c_1", has edge-label "src";
(to-node: $N_8732115295025_134528538c_1, from-node: $N_8732115295025_134528538c) isa node-link; 

match
$N_8732115295025_134528538c_1 isa operation, has hash "N_8732115295025_134528538c_1"; 

insert
$N_8732115295025_134528538c_1_0 isa MLIL_VAR_SSA, has hash "N_8732115295025_134528538c_1_0", has edge-label "left";
(to-node: $N_8732115295025_134528538c_1_0, from-node: $N_8732115295025_134528538c_1) isa node-link; 

match
$N_8732115295025_134528538c_1_0 isa operation, has hash "N_8732115295025_134528538c_1_0"; 

insert
$N_8732115295025_134528538c_1_0_0 isa variable-ssa, has hash "N_8732115295025_134528538c_1_0_0", has var "edx_9", has version 9, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115295025_134528538c_1_0_0, from-node: $N_8732115295025_134528538c_1_0) isa node-link; 

match
$N_8732115295025_134528538c_1 isa operation, has hash "N_8732115295025_134528538c_1"; 

insert
$N_8732115295025_134528538c_1_1 isa MLIL_VAR_SSA, has hash "N_8732115295025_134528538c_1_1", has edge-label "right";
(to-node: $N_8732115295025_134528538c_1_1, from-node: $N_8732115295025_134528538c_1) isa node-link; 

match
$N_8732115295025_134528538c_1_1 isa operation, has hash "N_8732115295025_134528538c_1_1"; 

insert
$N_8732115295025_134528538c_1_1_0 isa variable-ssa, has hash "N_8732115295025_134528538c_1_1_0", has var "esi_2", has version 2, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115295025_134528538c_1_1_0, from-node: $N_8732115295025_134528538c_1_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115302149_134528544c isa instruction, has hash "N_8732115302149_134528544c", has il-index 92, has asm-address "0x804be20", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_23#26 = edx_10#10";
(contains-instruction: $N_8732115302149_134528544c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115302149_134528544c isa instruction, has hash "N_8732115302149_134528544c"; 

insert
$N_8732115302149_134528544c_0 isa variable-ssa, has hash "N_8732115302149_134528544c_0", has var "eax_23", has version 26, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115302149_134528544c_0, from-node: $N_8732115302149_134528544c) isa node-link; 

match
$N_8732115302149_134528544c isa instruction, has hash "N_8732115302149_134528544c"; 

insert
$N_8732115302149_134528544c_1 isa MLIL_VAR_SSA, has hash "N_8732115302149_134528544c_1", has edge-label "src";
(to-node: $N_8732115302149_134528544c_1, from-node: $N_8732115302149_134528544c) isa node-link; 

match
$N_8732115302149_134528544c_1 isa operation, has hash "N_8732115302149_134528544c_1"; 

insert
$N_8732115302149_134528544c_1_0 isa variable-ssa, has hash "N_8732115302149_134528544c_1_0", has var "edx_10", has version 10, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115302149_134528544c_1_0, from-node: $N_8732115302149_134528544c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115264773_134528546c isa instruction, has hash "N_8732115264773_134528546c", has il-index 93, has asm-address "0x804be22", has operation-type "MLIL_SET_VAR_SPLIT_SSA", has ins-text "edx_11#11:eax_24#27 = sx.q(eax_23#26)";
(contains-instruction: $N_8732115264773_134528546c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115264773_134528546c isa instruction, has hash "N_8732115264773_134528546c"; 

insert
$N_8732115264773_134528546c_0 isa variable-ssa, has hash "N_8732115264773_134528546c_0", has var "edx_11", has version 11, has edge-label "high", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115264773_134528546c_0, from-node: $N_8732115264773_134528546c) isa node-link; 

match
$N_8732115264773_134528546c isa instruction, has hash "N_8732115264773_134528546c"; 

insert
$N_8732115264773_134528546c_1 isa variable-ssa, has hash "N_8732115264773_134528546c_1", has var "eax_24", has version 27, has edge-label "low", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115264773_134528546c_1, from-node: $N_8732115264773_134528546c) isa node-link; 

match
$N_8732115264773_134528546c isa instruction, has hash "N_8732115264773_134528546c"; 

insert
$N_8732115264773_134528546c_2 isa MLIL_SX, has hash "N_8732115264773_134528546c_2", has edge-label "src";
(to-node: $N_8732115264773_134528546c_2, from-node: $N_8732115264773_134528546c) isa node-link; 

match
$N_8732115264773_134528546c_2 isa operation, has hash "N_8732115264773_134528546c_2"; 

insert
$N_8732115264773_134528546c_2_0 isa MLIL_VAR_SSA, has hash "N_8732115264773_134528546c_2_0", has edge-label "src";
(to-node: $N_8732115264773_134528546c_2_0, from-node: $N_8732115264773_134528546c_2) isa node-link; 

match
$N_8732115264773_134528546c_2_0 isa operation, has hash "N_8732115264773_134528546c_2_0"; 

insert
$N_8732115264773_134528546c_2_0_0 isa variable-ssa, has hash "N_8732115264773_134528546c_2_0_0", has var "eax_23", has version 26, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115264773_134528546c_2_0_0, from-node: $N_8732115264773_134528546c_2_0) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115171901_134528550c isa instruction, has hash "N_8732115171901_134528550c", has il-index 94, has asm-address "0x804be26", has operation-type "MLIL_SET_VAR_SSA", has ins-text "temp0_1#1 = divs.dp.d(edx_11#11:eax_24#27, 8)";
(contains-instruction: $N_8732115171901_134528550c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115171901_134528550c isa instruction, has hash "N_8732115171901_134528550c"; 

insert
$N_8732115171901_134528550c_0 isa variable-ssa, has hash "N_8732115171901_134528550c_0", has var "temp0_1", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115171901_134528550c_0, from-node: $N_8732115171901_134528550c) isa node-link; 

match
$N_8732115171901_134528550c isa instruction, has hash "N_8732115171901_134528550c"; 

insert
$N_8732115171901_134528550c_1 isa MLIL_DIVS_DP, has hash "N_8732115171901_134528550c_1", has edge-label "src";
(to-node: $N_8732115171901_134528550c_1, from-node: $N_8732115171901_134528550c) isa node-link; 

match
$N_8732115171901_134528550c_1 isa operation, has hash "N_8732115171901_134528550c_1"; 

insert
$N_8732115171901_134528550c_1_0 isa MLIL_VAR_SSA, has hash "N_8732115171901_134528550c_1_0", has edge-label "hi";
(to-node: $N_8732115171901_134528550c_1_0, from-node: $N_8732115171901_134528550c_1) isa node-link; 

match
$N_8732115171901_134528550c_1_0 isa operation, has hash "N_8732115171901_134528550c_1_0"; 

insert
$N_8732115171901_134528550c_1_0_0 isa variable-ssa, has hash "N_8732115171901_134528550c_1_0_0", has var "edx_11", has version 11, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115171901_134528550c_1_0_0, from-node: $N_8732115171901_134528550c_1_0) isa node-link; 

match
$N_8732115171901_134528550c_1 isa operation, has hash "N_8732115171901_134528550c_1"; 

insert
$N_8732115171901_134528550c_1_1 isa MLIL_VAR_SSA, has hash "N_8732115171901_134528550c_1_1", has edge-label "lo";
(to-node: $N_8732115171901_134528550c_1_1, from-node: $N_8732115171901_134528550c_1) isa node-link; 

match
$N_8732115171901_134528550c_1_1 isa operation, has hash "N_8732115171901_134528550c_1_1"; 

insert
$N_8732115171901_134528550c_1_1_0 isa variable-ssa, has hash "N_8732115171901_134528550c_1_1_0", has var "eax_24", has version 27, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115171901_134528550c_1_1_0, from-node: $N_8732115171901_134528550c_1_1) isa node-link; 

match
$N_8732115171901_134528550c_1 isa operation, has hash "N_8732115171901_134528550c_1"; 

insert
$N_8732115171901_134528550c_1_2 isa MLIL_CONST, has hash "N_8732115171901_134528550c_1_2", has edge-label "right";
(to-node: $N_8732115171901_134528550c_1_2, from-node: $N_8732115171901_134528550c_1) isa node-link; 

match
$N_8732115171901_134528550c_1_2 isa operation, has hash "N_8732115171901_134528550c_1_2"; 

insert
$N_8732115171901_134528550c_1_2_0 isa constant, has hash "N_8732115171901_134528550c_1_2_0", has constant-value "8", has edge-label "constant";
(to-node: $N_8732115171901_134528550c_1_2_0, from-node: $N_8732115171901_134528550c_1_2) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115239173_134528550c isa instruction, has hash "N_8732115239173_134528550c", has il-index 95, has asm-address "0x804be26", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_25#28 = temp0_1#1";
(contains-instruction: $N_8732115239173_134528550c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115239173_134528550c isa instruction, has hash "N_8732115239173_134528550c"; 

insert
$N_8732115239173_134528550c_0 isa variable-ssa, has hash "N_8732115239173_134528550c_0", has var "eax_25", has version 28, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115239173_134528550c_0, from-node: $N_8732115239173_134528550c) isa node-link; 

match
$N_8732115239173_134528550c isa instruction, has hash "N_8732115239173_134528550c"; 

insert
$N_8732115239173_134528550c_1 isa MLIL_VAR_SSA, has hash "N_8732115239173_134528550c_1", has edge-label "src";
(to-node: $N_8732115239173_134528550c_1, from-node: $N_8732115239173_134528550c) isa node-link; 

match
$N_8732115239173_134528550c_1 isa operation, has hash "N_8732115239173_134528550c_1"; 

insert
$N_8732115239173_134528550c_1_0 isa variable-ssa, has hash "N_8732115239173_134528550c_1_0", has var "temp0_1", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115239173_134528550c_1_0, from-node: $N_8732115239173_134528550c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 85, has bb-end 96; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115091717_134528554c isa instruction, has hash "N_8732115091717_134528554c", has il-index 96, has asm-address "0x804be2a", has operation-type "MLIL_IF", has ins-text "if (ecx_17#17 == eax_25#28) then 102 @ 0x804be3c else 105 @ 0x804be30";
(contains-instruction: $N_8732115091717_134528554c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115091717_134528554c isa instruction, has hash "N_8732115091717_134528554c"; 

insert
$N_8732115091717_134528554c_0 isa MLIL_CMP_E, has hash "N_8732115091717_134528554c_0", has edge-label "condition";
(to-node: $N_8732115091717_134528554c_0, from-node: $N_8732115091717_134528554c) isa node-link; 

match
$N_8732115091717_134528554c_0 isa operation, has hash "N_8732115091717_134528554c_0"; 

insert
$N_8732115091717_134528554c_0_0 isa MLIL_VAR_SSA, has hash "N_8732115091717_134528554c_0_0", has edge-label "left";
(to-node: $N_8732115091717_134528554c_0_0, from-node: $N_8732115091717_134528554c_0) isa node-link; 

match
$N_8732115091717_134528554c_0_0 isa operation, has hash "N_8732115091717_134528554c_0_0"; 

insert
$N_8732115091717_134528554c_0_0_0 isa variable-ssa, has hash "N_8732115091717_134528554c_0_0_0", has var "ecx_17", has version 17, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115091717_134528554c_0_0_0, from-node: $N_8732115091717_134528554c_0_0) isa node-link; 

match
$N_8732115091717_134528554c_0 isa operation, has hash "N_8732115091717_134528554c_0"; 

insert
$N_8732115091717_134528554c_0_1 isa MLIL_VAR_SSA, has hash "N_8732115091717_134528554c_0_1", has edge-label "right";
(to-node: $N_8732115091717_134528554c_0_1, from-node: $N_8732115091717_134528554c_0) isa node-link; 

match
$N_8732115091717_134528554c_0_1 isa operation, has hash "N_8732115091717_134528554c_0_1"; 

insert
$N_8732115091717_134528554c_0_1_0 isa variable-ssa, has hash "N_8732115091717_134528554c_0_1_0", has var "eax_25", has version 28, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115091717_134528554c_0_1_0, from-node: $N_8732115091717_134528554c_0_1) isa node-link; 

match
$N_8732115091717_134528554c isa instruction, has hash "N_8732115091717_134528554c"; 

insert
$N_8732115091717_134528554c_1 isa constant, has hash "N_8732115091717_134528554c_1", has constant-value "102", has edge-label "true";
(to-node: $N_8732115091717_134528554c_1, from-node: $N_8732115091717_134528554c) isa node-link; 

match
$N_8732115091717_134528554c isa instruction, has hash "N_8732115091717_134528554c"; 

insert
$N_8732115091717_134528554c_2 isa constant, has hash "N_8732115091717_134528554c_2", has constant-value "105", has edge-label "false";
(to-node: $N_8732115091717_134528554c_2, from-node: $N_8732115091717_134528554c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 97, has bb-end 98; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 97, has bb-end 98; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 97, has bb-end 98; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115358753_134528500c isa instruction, has hash "N_8732115358753_134528500c", has il-index 97, has asm-address "0x804bdf4", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_14#7 = 0xffffff00";
(contains-instruction: $N_8732115358753_134528500c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115358753_134528500c isa instruction, has hash "N_8732115358753_134528500c"; 

insert
$N_8732115358753_134528500c_0 isa variable-ssa, has hash "N_8732115358753_134528500c_0", has var "var_14", has version 7, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115358753_134528500c_0, from-node: $N_8732115358753_134528500c) isa node-link; 

match
$N_8732115358753_134528500c isa instruction, has hash "N_8732115358753_134528500c"; 

insert
$N_8732115358753_134528500c_1 isa MLIL_CONST, has hash "N_8732115358753_134528500c_1", has edge-label "src";
(to-node: $N_8732115358753_134528500c_1, from-node: $N_8732115358753_134528500c) isa node-link; 

match
$N_8732115358753_134528500c_1 isa operation, has hash "N_8732115358753_134528500c_1"; 

insert
$N_8732115358753_134528500c_1_0 isa constant, has hash "N_8732115358753_134528500c_1_0", has constant-value "4294967040", has edge-label "constant";
(to-node: $N_8732115358753_134528500c_1_0, from-node: $N_8732115358753_134528500c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 97, has bb-end 98; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 97, has bb-end 98; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115267333_134528507c isa instruction, has hash "N_8732115267333_134528507c", has il-index 98, has asm-address "0x804bdfb", has operation-type "MLIL_GOTO", has ins-text "goto 28 @ 0x804beae";
(contains-instruction: $N_8732115267333_134528507c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115267333_134528507c isa instruction, has hash "N_8732115267333_134528507c"; 

insert
$N_8732115267333_134528507c_0 isa constant, has hash "N_8732115267333_134528507c_0", has constant-value "28", has edge-label "dest";
(to-node: $N_8732115267333_134528507c_0, from-node: $N_8732115267333_134528507c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 99, has bb-end 99; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 100, has bb-end 101; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 100, has bb-end 101; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 100, has bb-end 101; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115238941_134528365c isa instruction, has hash "N_8732115238941_134528365c", has il-index 100, has asm-address "0x804bd6d", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_16#18 = var_18#1";
(contains-instruction: $N_8732115238941_134528365c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115238941_134528365c isa instruction, has hash "N_8732115238941_134528365c"; 

insert
$N_8732115238941_134528365c_0 isa variable-ssa, has hash "N_8732115238941_134528365c_0", has var "eax_16", has version 18, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115238941_134528365c_0, from-node: $N_8732115238941_134528365c) isa node-link; 

match
$N_8732115238941_134528365c isa instruction, has hash "N_8732115238941_134528365c"; 

insert
$N_8732115238941_134528365c_1 isa MLIL_VAR_SSA, has hash "N_8732115238941_134528365c_1", has edge-label "src";
(to-node: $N_8732115238941_134528365c_1, from-node: $N_8732115238941_134528365c) isa node-link; 

match
$N_8732115238941_134528365c_1 isa operation, has hash "N_8732115238941_134528365c_1"; 

insert
$N_8732115238941_134528365c_1_0 isa variable-ssa, has hash "N_8732115238941_134528365c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115238941_134528365c_1_0, from-node: $N_8732115238941_134528365c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 100, has bb-end 101; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 100, has bb-end 101; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115138309_134528375c isa instruction, has hash "N_8732115138309_134528375c", has il-index 101, has asm-address "0x804bd77", has operation-type "MLIL_IF", has ins-text "if ([eax_16#18 + 0x18].d @ mem#3 == 0x5622) then 107 @ 0x0 else 108 @ 0x804bd7d";
(contains-instruction: $N_8732115138309_134528375c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115138309_134528375c isa instruction, has hash "N_8732115138309_134528375c"; 

insert
$N_8732115138309_134528375c_0 isa MLIL_CMP_E, has hash "N_8732115138309_134528375c_0", has edge-label "condition";
(to-node: $N_8732115138309_134528375c_0, from-node: $N_8732115138309_134528375c) isa node-link; 

match
$N_8732115138309_134528375c_0 isa operation, has hash "N_8732115138309_134528375c_0"; 

insert
$N_8732115138309_134528375c_0_0 isa MLIL_LOAD_SSA, has hash "N_8732115138309_134528375c_0_0", has edge-label "left";
(to-node: $N_8732115138309_134528375c_0_0, from-node: $N_8732115138309_134528375c_0) isa node-link; 

match
$N_8732115138309_134528375c_0_0 isa operation, has hash "N_8732115138309_134528375c_0_0"; 

insert
$N_8732115138309_134528375c_0_0_0 isa MLIL_ADD, has hash "N_8732115138309_134528375c_0_0_0", has edge-label "src";
(to-node: $N_8732115138309_134528375c_0_0_0, from-node: $N_8732115138309_134528375c_0_0) isa node-link; 

match
$N_8732115138309_134528375c_0_0_0 isa operation, has hash "N_8732115138309_134528375c_0_0_0"; 

insert
$N_8732115138309_134528375c_0_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732115138309_134528375c_0_0_0_0", has edge-label "left";
(to-node: $N_8732115138309_134528375c_0_0_0_0, from-node: $N_8732115138309_134528375c_0_0_0) isa node-link; 

match
$N_8732115138309_134528375c_0_0_0_0 isa operation, has hash "N_8732115138309_134528375c_0_0_0_0"; 

insert
$N_8732115138309_134528375c_0_0_0_0_0 isa variable-ssa, has hash "N_8732115138309_134528375c_0_0_0_0_0", has var "eax_16", has version 18, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115138309_134528375c_0_0_0_0_0, from-node: $N_8732115138309_134528375c_0_0_0_0) isa node-link; 

match
$N_8732115138309_134528375c_0_0_0 isa operation, has hash "N_8732115138309_134528375c_0_0_0"; 

insert
$N_8732115138309_134528375c_0_0_0_1 isa MLIL_CONST, has hash "N_8732115138309_134528375c_0_0_0_1", has edge-label "right";
(to-node: $N_8732115138309_134528375c_0_0_0_1, from-node: $N_8732115138309_134528375c_0_0_0) isa node-link; 

match
$N_8732115138309_134528375c_0_0_0_1 isa operation, has hash "N_8732115138309_134528375c_0_0_0_1"; 

insert
$N_8732115138309_134528375c_0_0_0_1_0 isa constant, has hash "N_8732115138309_134528375c_0_0_0_1_0", has constant-value "24", has edge-label "constant";
(to-node: $N_8732115138309_134528375c_0_0_0_1_0, from-node: $N_8732115138309_134528375c_0_0_0_1) isa node-link; 

match
$N_8732115138309_134528375c_0_0 isa operation, has hash "N_8732115138309_134528375c_0_0"; 

insert
$N_8732115138309_134528375c_0_0_1 isa constant, has hash "N_8732115138309_134528375c_0_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732115138309_134528375c_0_0_1, from-node: $N_8732115138309_134528375c_0_0) isa node-link; 

match
$N_8732115138309_134528375c_0 isa operation, has hash "N_8732115138309_134528375c_0"; 

insert
$N_8732115138309_134528375c_0_1 isa MLIL_CONST, has hash "N_8732115138309_134528375c_0_1", has edge-label "right";
(to-node: $N_8732115138309_134528375c_0_1, from-node: $N_8732115138309_134528375c_0) isa node-link; 

match
$N_8732115138309_134528375c_0_1 isa operation, has hash "N_8732115138309_134528375c_0_1"; 

insert
$N_8732115138309_134528375c_0_1_0 isa constant, has hash "N_8732115138309_134528375c_0_1_0", has constant-value "22050", has edge-label "constant";
(to-node: $N_8732115138309_134528375c_0_1_0, from-node: $N_8732115138309_134528375c_0_1) isa node-link; 

match
$N_8732115138309_134528375c isa instruction, has hash "N_8732115138309_134528375c"; 

insert
$N_8732115138309_134528375c_1 isa constant, has hash "N_8732115138309_134528375c_1", has constant-value "107", has edge-label "true";
(to-node: $N_8732115138309_134528375c_1, from-node: $N_8732115138309_134528375c) isa node-link; 

match
$N_8732115138309_134528375c isa instruction, has hash "N_8732115138309_134528375c"; 

insert
$N_8732115138309_134528375c_2 isa constant, has hash "N_8732115138309_134528375c_2", has constant-value "108", has edge-label "false";
(to-node: $N_8732115138309_134528375c_2, from-node: $N_8732115138309_134528375c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 102, has bb-end 104; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 102, has bb-end 104; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 102, has bb-end 104; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114927633_134528572c isa instruction, has hash "N_8732114927633_134528572c", has il-index 102, has asm-address "0x804be3c", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_26#29 = var_18#1";
(contains-instruction: $N_8732114927633_134528572c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114927633_134528572c isa instruction, has hash "N_8732114927633_134528572c"; 

insert
$N_8732114927633_134528572c_0 isa variable-ssa, has hash "N_8732114927633_134528572c_0", has var "eax_26", has version 29, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114927633_134528572c_0, from-node: $N_8732114927633_134528572c) isa node-link; 

match
$N_8732114927633_134528572c isa instruction, has hash "N_8732114927633_134528572c"; 

insert
$N_8732114927633_134528572c_1 isa MLIL_VAR_SSA, has hash "N_8732114927633_134528572c_1", has edge-label "src";
(to-node: $N_8732114927633_134528572c_1, from-node: $N_8732114927633_134528572c) isa node-link; 

match
$N_8732114927633_134528572c_1 isa operation, has hash "N_8732114927633_134528572c_1"; 

insert
$N_8732114927633_134528572c_1_0 isa variable-ssa, has hash "N_8732114927633_134528572c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732114927633_134528572c_1_0, from-node: $N_8732114927633_134528572c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 102, has bb-end 104; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 102, has bb-end 104; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115026693_134528575c isa instruction, has hash "N_8732115026693_134528575c", has il-index 103, has asm-address "0x804be3f", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_27#30 = zx.d([eax_26#29 + 0x22].w @ mem#3)";
(contains-instruction: $N_8732115026693_134528575c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115026693_134528575c isa instruction, has hash "N_8732115026693_134528575c"; 

insert
$N_8732115026693_134528575c_0 isa variable-ssa, has hash "N_8732115026693_134528575c_0", has var "eax_27", has version 30, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115026693_134528575c_0, from-node: $N_8732115026693_134528575c) isa node-link; 

match
$N_8732115026693_134528575c isa instruction, has hash "N_8732115026693_134528575c"; 

insert
$N_8732115026693_134528575c_1 isa MLIL_ZX, has hash "N_8732115026693_134528575c_1", has edge-label "src";
(to-node: $N_8732115026693_134528575c_1, from-node: $N_8732115026693_134528575c) isa node-link; 

match
$N_8732115026693_134528575c_1 isa operation, has hash "N_8732115026693_134528575c_1"; 

insert
$N_8732115026693_134528575c_1_0 isa MLIL_LOAD_SSA, has hash "N_8732115026693_134528575c_1_0", has edge-label "src";
(to-node: $N_8732115026693_134528575c_1_0, from-node: $N_8732115026693_134528575c_1) isa node-link; 

match
$N_8732115026693_134528575c_1_0 isa operation, has hash "N_8732115026693_134528575c_1_0"; 

insert
$N_8732115026693_134528575c_1_0_0 isa MLIL_ADD, has hash "N_8732115026693_134528575c_1_0_0", has edge-label "src";
(to-node: $N_8732115026693_134528575c_1_0_0, from-node: $N_8732115026693_134528575c_1_0) isa node-link; 

match
$N_8732115026693_134528575c_1_0_0 isa operation, has hash "N_8732115026693_134528575c_1_0_0"; 

insert
$N_8732115026693_134528575c_1_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732115026693_134528575c_1_0_0_0", has edge-label "left";
(to-node: $N_8732115026693_134528575c_1_0_0_0, from-node: $N_8732115026693_134528575c_1_0_0) isa node-link; 

match
$N_8732115026693_134528575c_1_0_0_0 isa operation, has hash "N_8732115026693_134528575c_1_0_0_0"; 

insert
$N_8732115026693_134528575c_1_0_0_0_0 isa variable-ssa, has hash "N_8732115026693_134528575c_1_0_0_0_0", has var "eax_26", has version 29, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115026693_134528575c_1_0_0_0_0, from-node: $N_8732115026693_134528575c_1_0_0_0) isa node-link; 

match
$N_8732115026693_134528575c_1_0_0 isa operation, has hash "N_8732115026693_134528575c_1_0_0"; 

insert
$N_8732115026693_134528575c_1_0_0_1 isa MLIL_CONST, has hash "N_8732115026693_134528575c_1_0_0_1", has edge-label "right";
(to-node: $N_8732115026693_134528575c_1_0_0_1, from-node: $N_8732115026693_134528575c_1_0_0) isa node-link; 

match
$N_8732115026693_134528575c_1_0_0_1 isa operation, has hash "N_8732115026693_134528575c_1_0_0_1"; 

insert
$N_8732115026693_134528575c_1_0_0_1_0 isa constant, has hash "N_8732115026693_134528575c_1_0_0_1_0", has constant-value "34", has edge-label "constant";
(to-node: $N_8732115026693_134528575c_1_0_0_1_0, from-node: $N_8732115026693_134528575c_1_0_0_1) isa node-link; 

match
$N_8732115026693_134528575c_1_0 isa operation, has hash "N_8732115026693_134528575c_1_0"; 

insert
$N_8732115026693_134528575c_1_0_1 isa constant, has hash "N_8732115026693_134528575c_1_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732115026693_134528575c_1_0_1, from-node: $N_8732115026693_134528575c_1_0) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 102, has bb-end 104; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 102, has bb-end 104; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115336197_134528582c isa instruction, has hash "N_8732115336197_134528582c", has il-index 104, has asm-address "0x804be46", has operation-type "MLIL_IF", has ins-text "if (eax_27#30 == 8) then 110 @ 0x0 else 111 @ 0x804be4c";
(contains-instruction: $N_8732115336197_134528582c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115336197_134528582c isa instruction, has hash "N_8732115336197_134528582c"; 

insert
$N_8732115336197_134528582c_0 isa MLIL_CMP_E, has hash "N_8732115336197_134528582c_0", has edge-label "condition";
(to-node: $N_8732115336197_134528582c_0, from-node: $N_8732115336197_134528582c) isa node-link; 

match
$N_8732115336197_134528582c_0 isa operation, has hash "N_8732115336197_134528582c_0"; 

insert
$N_8732115336197_134528582c_0_0 isa MLIL_VAR_SSA, has hash "N_8732115336197_134528582c_0_0", has edge-label "left";
(to-node: $N_8732115336197_134528582c_0_0, from-node: $N_8732115336197_134528582c_0) isa node-link; 

match
$N_8732115336197_134528582c_0_0 isa operation, has hash "N_8732115336197_134528582c_0_0"; 

insert
$N_8732115336197_134528582c_0_0_0 isa variable-ssa, has hash "N_8732115336197_134528582c_0_0_0", has var "eax_27", has version 30, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115336197_134528582c_0_0_0, from-node: $N_8732115336197_134528582c_0_0) isa node-link; 

match
$N_8732115336197_134528582c_0 isa operation, has hash "N_8732115336197_134528582c_0"; 

insert
$N_8732115336197_134528582c_0_1 isa MLIL_CONST, has hash "N_8732115336197_134528582c_0_1", has edge-label "right";
(to-node: $N_8732115336197_134528582c_0_1, from-node: $N_8732115336197_134528582c_0) isa node-link; 

match
$N_8732115336197_134528582c_0_1 isa operation, has hash "N_8732115336197_134528582c_0_1"; 

insert
$N_8732115336197_134528582c_0_1_0 isa constant, has hash "N_8732115336197_134528582c_0_1_0", has constant-value "8", has edge-label "constant";
(to-node: $N_8732115336197_134528582c_0_1_0, from-node: $N_8732115336197_134528582c_0_1) isa node-link; 

match
$N_8732115336197_134528582c isa instruction, has hash "N_8732115336197_134528582c"; 

insert
$N_8732115336197_134528582c_1 isa constant, has hash "N_8732115336197_134528582c_1", has constant-value "110", has edge-label "true";
(to-node: $N_8732115336197_134528582c_1, from-node: $N_8732115336197_134528582c) isa node-link; 

match
$N_8732115336197_134528582c isa instruction, has hash "N_8732115336197_134528582c"; 

insert
$N_8732115336197_134528582c_2 isa constant, has hash "N_8732115336197_134528582c_2", has constant-value "111", has edge-label "false";
(to-node: $N_8732115336197_134528582c_2, from-node: $N_8732115336197_134528582c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 105, has bb-end 106; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 105, has bb-end 106; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 105, has bb-end 106; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115313453_134528560c isa instruction, has hash "N_8732115313453_134528560c", has il-index 105, has asm-address "0x804be30", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_14#6 = 0xffffff00";
(contains-instruction: $N_8732115313453_134528560c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115313453_134528560c isa instruction, has hash "N_8732115313453_134528560c"; 

insert
$N_8732115313453_134528560c_0 isa variable-ssa, has hash "N_8732115313453_134528560c_0", has var "var_14", has version 6, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115313453_134528560c_0, from-node: $N_8732115313453_134528560c) isa node-link; 

match
$N_8732115313453_134528560c isa instruction, has hash "N_8732115313453_134528560c"; 

insert
$N_8732115313453_134528560c_1 isa MLIL_CONST, has hash "N_8732115313453_134528560c_1", has edge-label "src";
(to-node: $N_8732115313453_134528560c_1, from-node: $N_8732115313453_134528560c) isa node-link; 

match
$N_8732115313453_134528560c_1 isa operation, has hash "N_8732115313453_134528560c_1"; 

insert
$N_8732115313453_134528560c_1_0 isa constant, has hash "N_8732115313453_134528560c_1_0", has constant-value "4294967040", has edge-label "constant";
(to-node: $N_8732115313453_134528560c_1_0, from-node: $N_8732115313453_134528560c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 105, has bb-end 106; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 105, has bb-end 106; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115094021_134528567c isa instruction, has hash "N_8732115094021_134528567c", has il-index 106, has asm-address "0x804be37", has operation-type "MLIL_GOTO", has ins-text "goto 28 @ 0x804beae";
(contains-instruction: $N_8732115094021_134528567c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115094021_134528567c isa instruction, has hash "N_8732115094021_134528567c"; 

insert
$N_8732115094021_134528567c_0 isa constant, has hash "N_8732115094021_134528567c_0", has constant-value "28", has edge-label "dest";
(to-node: $N_8732115094021_134528567c_0, from-node: $N_8732115094021_134528567c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 107, has bb-end 107; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 108, has bb-end 109; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 108, has bb-end 109; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 108, has bb-end 109; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115230005_134528381c isa instruction, has hash "N_8732115230005_134528381c", has il-index 108, has asm-address "0x804bd7d", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_17#19 = var_18#1";
(contains-instruction: $N_8732115230005_134528381c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115230005_134528381c isa instruction, has hash "N_8732115230005_134528381c"; 

insert
$N_8732115230005_134528381c_0 isa variable-ssa, has hash "N_8732115230005_134528381c_0", has var "eax_17", has version 19, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115230005_134528381c_0, from-node: $N_8732115230005_134528381c) isa node-link; 

match
$N_8732115230005_134528381c isa instruction, has hash "N_8732115230005_134528381c"; 

insert
$N_8732115230005_134528381c_1 isa MLIL_VAR_SSA, has hash "N_8732115230005_134528381c_1", has edge-label "src";
(to-node: $N_8732115230005_134528381c_1, from-node: $N_8732115230005_134528381c) isa node-link; 

match
$N_8732115230005_134528381c_1 isa operation, has hash "N_8732115230005_134528381c_1"; 

insert
$N_8732115230005_134528381c_1_0 isa variable-ssa, has hash "N_8732115230005_134528381c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115230005_134528381c_1_0, from-node: $N_8732115230005_134528381c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 108, has bb-end 109; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 108, has bb-end 109; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115065697_134528391c isa instruction, has hash "N_8732115065697_134528391c", has il-index 109, has asm-address "0x804bd87", has operation-type "MLIL_IF", has ins-text "if ([eax_17#19 + 0x18].d @ mem#3 == 0x7d00) then 114 @ 0x0 else 115 @ 0x804bd8d";
(contains-instruction: $N_8732115065697_134528391c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115065697_134528391c isa instruction, has hash "N_8732115065697_134528391c"; 

insert
$N_8732115065697_134528391c_0 isa MLIL_CMP_E, has hash "N_8732115065697_134528391c_0", has edge-label "condition";
(to-node: $N_8732115065697_134528391c_0, from-node: $N_8732115065697_134528391c) isa node-link; 

match
$N_8732115065697_134528391c_0 isa operation, has hash "N_8732115065697_134528391c_0"; 

insert
$N_8732115065697_134528391c_0_0 isa MLIL_LOAD_SSA, has hash "N_8732115065697_134528391c_0_0", has edge-label "left";
(to-node: $N_8732115065697_134528391c_0_0, from-node: $N_8732115065697_134528391c_0) isa node-link; 

match
$N_8732115065697_134528391c_0_0 isa operation, has hash "N_8732115065697_134528391c_0_0"; 

insert
$N_8732115065697_134528391c_0_0_0 isa MLIL_ADD, has hash "N_8732115065697_134528391c_0_0_0", has edge-label "src";
(to-node: $N_8732115065697_134528391c_0_0_0, from-node: $N_8732115065697_134528391c_0_0) isa node-link; 

match
$N_8732115065697_134528391c_0_0_0 isa operation, has hash "N_8732115065697_134528391c_0_0_0"; 

insert
$N_8732115065697_134528391c_0_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732115065697_134528391c_0_0_0_0", has edge-label "left";
(to-node: $N_8732115065697_134528391c_0_0_0_0, from-node: $N_8732115065697_134528391c_0_0_0) isa node-link; 

match
$N_8732115065697_134528391c_0_0_0_0 isa operation, has hash "N_8732115065697_134528391c_0_0_0_0"; 

insert
$N_8732115065697_134528391c_0_0_0_0_0 isa variable-ssa, has hash "N_8732115065697_134528391c_0_0_0_0_0", has var "eax_17", has version 19, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115065697_134528391c_0_0_0_0_0, from-node: $N_8732115065697_134528391c_0_0_0_0) isa node-link; 

match
$N_8732115065697_134528391c_0_0_0 isa operation, has hash "N_8732115065697_134528391c_0_0_0"; 

insert
$N_8732115065697_134528391c_0_0_0_1 isa MLIL_CONST, has hash "N_8732115065697_134528391c_0_0_0_1", has edge-label "right";
(to-node: $N_8732115065697_134528391c_0_0_0_1, from-node: $N_8732115065697_134528391c_0_0_0) isa node-link; 

match
$N_8732115065697_134528391c_0_0_0_1 isa operation, has hash "N_8732115065697_134528391c_0_0_0_1"; 

insert
$N_8732115065697_134528391c_0_0_0_1_0 isa constant, has hash "N_8732115065697_134528391c_0_0_0_1_0", has constant-value "24", has edge-label "constant";
(to-node: $N_8732115065697_134528391c_0_0_0_1_0, from-node: $N_8732115065697_134528391c_0_0_0_1) isa node-link; 

match
$N_8732115065697_134528391c_0_0 isa operation, has hash "N_8732115065697_134528391c_0_0"; 

insert
$N_8732115065697_134528391c_0_0_1 isa constant, has hash "N_8732115065697_134528391c_0_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732115065697_134528391c_0_0_1, from-node: $N_8732115065697_134528391c_0_0) isa node-link; 

match
$N_8732115065697_134528391c_0 isa operation, has hash "N_8732115065697_134528391c_0"; 

insert
$N_8732115065697_134528391c_0_1 isa MLIL_CONST, has hash "N_8732115065697_134528391c_0_1", has edge-label "right";
(to-node: $N_8732115065697_134528391c_0_1, from-node: $N_8732115065697_134528391c_0) isa node-link; 

match
$N_8732115065697_134528391c_0_1 isa operation, has hash "N_8732115065697_134528391c_0_1"; 

insert
$N_8732115065697_134528391c_0_1_0 isa constant, has hash "N_8732115065697_134528391c_0_1_0", has constant-value "32000", has edge-label "constant";
(to-node: $N_8732115065697_134528391c_0_1_0, from-node: $N_8732115065697_134528391c_0_1) isa node-link; 

match
$N_8732115065697_134528391c isa instruction, has hash "N_8732115065697_134528391c"; 

insert
$N_8732115065697_134528391c_1 isa constant, has hash "N_8732115065697_134528391c_1", has constant-value "114", has edge-label "true";
(to-node: $N_8732115065697_134528391c_1, from-node: $N_8732115065697_134528391c) isa node-link; 

match
$N_8732115065697_134528391c isa instruction, has hash "N_8732115065697_134528391c"; 

insert
$N_8732115065697_134528391c_2 isa constant, has hash "N_8732115065697_134528391c_2", has constant-value "115", has edge-label "false";
(to-node: $N_8732115065697_134528391c_2, from-node: $N_8732115065697_134528391c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 110, has bb-end 110; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 111, has bb-end 113; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 111, has bb-end 113; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 111, has bb-end 113; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114989885_134528588c isa instruction, has hash "N_8732114989885_134528588c", has il-index 111, has asm-address "0x804be4c", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_28#31 = var_18#1";
(contains-instruction: $N_8732114989885_134528588c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114989885_134528588c isa instruction, has hash "N_8732114989885_134528588c"; 

insert
$N_8732114989885_134528588c_0 isa variable-ssa, has hash "N_8732114989885_134528588c_0", has var "eax_28", has version 31, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114989885_134528588c_0, from-node: $N_8732114989885_134528588c) isa node-link; 

match
$N_8732114989885_134528588c isa instruction, has hash "N_8732114989885_134528588c"; 

insert
$N_8732114989885_134528588c_1 isa MLIL_VAR_SSA, has hash "N_8732114989885_134528588c_1", has edge-label "src";
(to-node: $N_8732114989885_134528588c_1, from-node: $N_8732114989885_134528588c) isa node-link; 

match
$N_8732114989885_134528588c_1 isa operation, has hash "N_8732114989885_134528588c_1"; 

insert
$N_8732114989885_134528588c_1_0 isa variable-ssa, has hash "N_8732114989885_134528588c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732114989885_134528588c_1_0, from-node: $N_8732114989885_134528588c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 111, has bb-end 113; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 111, has bb-end 113; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115406853_134528591c isa instruction, has hash "N_8732115406853_134528591c", has il-index 112, has asm-address "0x804be4f", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_29#32 = zx.d([eax_28#31 + 0x22].w @ mem#3)";
(contains-instruction: $N_8732115406853_134528591c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115406853_134528591c isa instruction, has hash "N_8732115406853_134528591c"; 

insert
$N_8732115406853_134528591c_0 isa variable-ssa, has hash "N_8732115406853_134528591c_0", has var "eax_29", has version 32, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115406853_134528591c_0, from-node: $N_8732115406853_134528591c) isa node-link; 

match
$N_8732115406853_134528591c isa instruction, has hash "N_8732115406853_134528591c"; 

insert
$N_8732115406853_134528591c_1 isa MLIL_ZX, has hash "N_8732115406853_134528591c_1", has edge-label "src";
(to-node: $N_8732115406853_134528591c_1, from-node: $N_8732115406853_134528591c) isa node-link; 

match
$N_8732115406853_134528591c_1 isa operation, has hash "N_8732115406853_134528591c_1"; 

insert
$N_8732115406853_134528591c_1_0 isa MLIL_LOAD_SSA, has hash "N_8732115406853_134528591c_1_0", has edge-label "src";
(to-node: $N_8732115406853_134528591c_1_0, from-node: $N_8732115406853_134528591c_1) isa node-link; 

match
$N_8732115406853_134528591c_1_0 isa operation, has hash "N_8732115406853_134528591c_1_0"; 

insert
$N_8732115406853_134528591c_1_0_0 isa MLIL_ADD, has hash "N_8732115406853_134528591c_1_0_0", has edge-label "src";
(to-node: $N_8732115406853_134528591c_1_0_0, from-node: $N_8732115406853_134528591c_1_0) isa node-link; 

match
$N_8732115406853_134528591c_1_0_0 isa operation, has hash "N_8732115406853_134528591c_1_0_0"; 

insert
$N_8732115406853_134528591c_1_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732115406853_134528591c_1_0_0_0", has edge-label "left";
(to-node: $N_8732115406853_134528591c_1_0_0_0, from-node: $N_8732115406853_134528591c_1_0_0) isa node-link; 

match
$N_8732115406853_134528591c_1_0_0_0 isa operation, has hash "N_8732115406853_134528591c_1_0_0_0"; 

insert
$N_8732115406853_134528591c_1_0_0_0_0 isa variable-ssa, has hash "N_8732115406853_134528591c_1_0_0_0_0", has var "eax_28", has version 31, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115406853_134528591c_1_0_0_0_0, from-node: $N_8732115406853_134528591c_1_0_0_0) isa node-link; 

match
$N_8732115406853_134528591c_1_0_0 isa operation, has hash "N_8732115406853_134528591c_1_0_0"; 

insert
$N_8732115406853_134528591c_1_0_0_1 isa MLIL_CONST, has hash "N_8732115406853_134528591c_1_0_0_1", has edge-label "right";
(to-node: $N_8732115406853_134528591c_1_0_0_1, from-node: $N_8732115406853_134528591c_1_0_0) isa node-link; 

match
$N_8732115406853_134528591c_1_0_0_1 isa operation, has hash "N_8732115406853_134528591c_1_0_0_1"; 

insert
$N_8732115406853_134528591c_1_0_0_1_0 isa constant, has hash "N_8732115406853_134528591c_1_0_0_1_0", has constant-value "34", has edge-label "constant";
(to-node: $N_8732115406853_134528591c_1_0_0_1_0, from-node: $N_8732115406853_134528591c_1_0_0_1) isa node-link; 

match
$N_8732115406853_134528591c_1_0 isa operation, has hash "N_8732115406853_134528591c_1_0"; 

insert
$N_8732115406853_134528591c_1_0_1 isa constant, has hash "N_8732115406853_134528591c_1_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732115406853_134528591c_1_0_1, from-node: $N_8732115406853_134528591c_1_0) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 111, has bb-end 113; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 111, has bb-end 113; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114987269_134528598c isa instruction, has hash "N_8732114987269_134528598c", has il-index 113, has asm-address "0x804be56", has operation-type "MLIL_IF", has ins-text "if (eax_29#32 == 0x10) then 123 @ 0x0 else 124 @ 0x804be5c";
(contains-instruction: $N_8732114987269_134528598c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114987269_134528598c isa instruction, has hash "N_8732114987269_134528598c"; 

insert
$N_8732114987269_134528598c_0 isa MLIL_CMP_E, has hash "N_8732114987269_134528598c_0", has edge-label "condition";
(to-node: $N_8732114987269_134528598c_0, from-node: $N_8732114987269_134528598c) isa node-link; 

match
$N_8732114987269_134528598c_0 isa operation, has hash "N_8732114987269_134528598c_0"; 

insert
$N_8732114987269_134528598c_0_0 isa MLIL_VAR_SSA, has hash "N_8732114987269_134528598c_0_0", has edge-label "left";
(to-node: $N_8732114987269_134528598c_0_0, from-node: $N_8732114987269_134528598c_0) isa node-link; 

match
$N_8732114987269_134528598c_0_0 isa operation, has hash "N_8732114987269_134528598c_0_0"; 

insert
$N_8732114987269_134528598c_0_0_0 isa variable-ssa, has hash "N_8732114987269_134528598c_0_0_0", has var "eax_29", has version 32, has edge-label "src", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114987269_134528598c_0_0_0, from-node: $N_8732114987269_134528598c_0_0) isa node-link; 

match
$N_8732114987269_134528598c_0 isa operation, has hash "N_8732114987269_134528598c_0"; 

insert
$N_8732114987269_134528598c_0_1 isa MLIL_CONST, has hash "N_8732114987269_134528598c_0_1", has edge-label "right";
(to-node: $N_8732114987269_134528598c_0_1, from-node: $N_8732114987269_134528598c_0) isa node-link; 

match
$N_8732114987269_134528598c_0_1 isa operation, has hash "N_8732114987269_134528598c_0_1"; 

insert
$N_8732114987269_134528598c_0_1_0 isa constant, has hash "N_8732114987269_134528598c_0_1_0", has constant-value "16", has edge-label "constant";
(to-node: $N_8732114987269_134528598c_0_1_0, from-node: $N_8732114987269_134528598c_0_1) isa node-link; 

match
$N_8732114987269_134528598c isa instruction, has hash "N_8732114987269_134528598c"; 

insert
$N_8732114987269_134528598c_1 isa constant, has hash "N_8732114987269_134528598c_1", has constant-value "123", has edge-label "true";
(to-node: $N_8732114987269_134528598c_1, from-node: $N_8732114987269_134528598c) isa node-link; 

match
$N_8732114987269_134528598c isa instruction, has hash "N_8732114987269_134528598c"; 

insert
$N_8732114987269_134528598c_2 isa constant, has hash "N_8732114987269_134528598c_2", has constant-value "124", has edge-label "false";
(to-node: $N_8732114987269_134528598c_2, from-node: $N_8732114987269_134528598c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 114, has bb-end 114; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 115, has bb-end 116; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 115, has bb-end 116; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 115, has bb-end 116; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115102269_134528397c isa instruction, has hash "N_8732115102269_134528397c", has il-index 115, has asm-address "0x804bd8d", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_18#20 = var_18#1";
(contains-instruction: $N_8732115102269_134528397c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115102269_134528397c isa instruction, has hash "N_8732115102269_134528397c"; 

insert
$N_8732115102269_134528397c_0 isa variable-ssa, has hash "N_8732115102269_134528397c_0", has var "eax_18", has version 20, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115102269_134528397c_0, from-node: $N_8732115102269_134528397c) isa node-link; 

match
$N_8732115102269_134528397c isa instruction, has hash "N_8732115102269_134528397c"; 

insert
$N_8732115102269_134528397c_1 isa MLIL_VAR_SSA, has hash "N_8732115102269_134528397c_1", has edge-label "src";
(to-node: $N_8732115102269_134528397c_1, from-node: $N_8732115102269_134528397c) isa node-link; 

match
$N_8732115102269_134528397c_1 isa operation, has hash "N_8732115102269_134528397c_1"; 

insert
$N_8732115102269_134528397c_1_0 isa variable-ssa, has hash "N_8732115102269_134528397c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115102269_134528397c_1_0, from-node: $N_8732115102269_134528397c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 115, has bb-end 116; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 115, has bb-end 116; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114937861_134528407c isa instruction, has hash "N_8732114937861_134528407c", has il-index 116, has asm-address "0x804bd97", has operation-type "MLIL_IF", has ins-text "if ([eax_18#20 + 0x18].d @ mem#3 == 0xac44) then 126 @ 0x0 else 127 @ 0x804bd9d";
(contains-instruction: $N_8732114937861_134528407c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114937861_134528407c isa instruction, has hash "N_8732114937861_134528407c"; 

insert
$N_8732114937861_134528407c_0 isa MLIL_CMP_E, has hash "N_8732114937861_134528407c_0", has edge-label "condition";
(to-node: $N_8732114937861_134528407c_0, from-node: $N_8732114937861_134528407c) isa node-link; 

match
$N_8732114937861_134528407c_0 isa operation, has hash "N_8732114937861_134528407c_0"; 

insert
$N_8732114937861_134528407c_0_0 isa MLIL_LOAD_SSA, has hash "N_8732114937861_134528407c_0_0", has edge-label "left";
(to-node: $N_8732114937861_134528407c_0_0, from-node: $N_8732114937861_134528407c_0) isa node-link; 

match
$N_8732114937861_134528407c_0_0 isa operation, has hash "N_8732114937861_134528407c_0_0"; 

insert
$N_8732114937861_134528407c_0_0_0 isa MLIL_ADD, has hash "N_8732114937861_134528407c_0_0_0", has edge-label "src";
(to-node: $N_8732114937861_134528407c_0_0_0, from-node: $N_8732114937861_134528407c_0_0) isa node-link; 

match
$N_8732114937861_134528407c_0_0_0 isa operation, has hash "N_8732114937861_134528407c_0_0_0"; 

insert
$N_8732114937861_134528407c_0_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732114937861_134528407c_0_0_0_0", has edge-label "left";
(to-node: $N_8732114937861_134528407c_0_0_0_0, from-node: $N_8732114937861_134528407c_0_0_0) isa node-link; 

match
$N_8732114937861_134528407c_0_0_0_0 isa operation, has hash "N_8732114937861_134528407c_0_0_0_0"; 

insert
$N_8732114937861_134528407c_0_0_0_0_0 isa variable-ssa, has hash "N_8732114937861_134528407c_0_0_0_0_0", has var "eax_18", has version 20, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114937861_134528407c_0_0_0_0_0, from-node: $N_8732114937861_134528407c_0_0_0_0) isa node-link; 

match
$N_8732114937861_134528407c_0_0_0 isa operation, has hash "N_8732114937861_134528407c_0_0_0"; 

insert
$N_8732114937861_134528407c_0_0_0_1 isa MLIL_CONST, has hash "N_8732114937861_134528407c_0_0_0_1", has edge-label "right";
(to-node: $N_8732114937861_134528407c_0_0_0_1, from-node: $N_8732114937861_134528407c_0_0_0) isa node-link; 

match
$N_8732114937861_134528407c_0_0_0_1 isa operation, has hash "N_8732114937861_134528407c_0_0_0_1"; 

insert
$N_8732114937861_134528407c_0_0_0_1_0 isa constant, has hash "N_8732114937861_134528407c_0_0_0_1_0", has constant-value "24", has edge-label "constant";
(to-node: $N_8732114937861_134528407c_0_0_0_1_0, from-node: $N_8732114937861_134528407c_0_0_0_1) isa node-link; 

match
$N_8732114937861_134528407c_0_0 isa operation, has hash "N_8732114937861_134528407c_0_0"; 

insert
$N_8732114937861_134528407c_0_0_1 isa constant, has hash "N_8732114937861_134528407c_0_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732114937861_134528407c_0_0_1, from-node: $N_8732114937861_134528407c_0_0) isa node-link; 

match
$N_8732114937861_134528407c_0 isa operation, has hash "N_8732114937861_134528407c_0"; 

insert
$N_8732114937861_134528407c_0_1 isa MLIL_CONST, has hash "N_8732114937861_134528407c_0_1", has edge-label "right";
(to-node: $N_8732114937861_134528407c_0_1, from-node: $N_8732114937861_134528407c_0) isa node-link; 

match
$N_8732114937861_134528407c_0_1 isa operation, has hash "N_8732114937861_134528407c_0_1"; 

insert
$N_8732114937861_134528407c_0_1_0 isa constant, has hash "N_8732114937861_134528407c_0_1_0", has constant-value "44100", has edge-label "constant";
(to-node: $N_8732114937861_134528407c_0_1_0, from-node: $N_8732114937861_134528407c_0_1) isa node-link; 

match
$N_8732114937861_134528407c isa instruction, has hash "N_8732114937861_134528407c"; 

insert
$N_8732114937861_134528407c_1 isa constant, has hash "N_8732114937861_134528407c_1", has constant-value "126", has edge-label "true";
(to-node: $N_8732114937861_134528407c_1, from-node: $N_8732114937861_134528407c) isa node-link; 

match
$N_8732114937861_134528407c isa instruction, has hash "N_8732114937861_134528407c"; 

insert
$N_8732114937861_134528407c_2 isa constant, has hash "N_8732114937861_134528407c_2", has constant-value "127", has edge-label "false";
(to-node: $N_8732114937861_134528407c_2, from-node: $N_8732114937861_134528407c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 117, has bb-end 122; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 117, has bb-end 122; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 117, has bb-end 122; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115037957_134528621c isa instruction, has hash "N_8732115037957_134528621c", has il-index 117, has asm-address "0x804be6d", has operation-type "MLIL_VAR_PHI", has ins-text "eax_29#33 = ϕ(eax_27#30, eax_29#32)";
(contains-instruction: $N_8732115037957_134528621c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115037957_134528621c isa instruction, has hash "N_8732115037957_134528621c"; 

insert
$N_8732115037957_134528621c_0 isa variable-ssa, has hash "N_8732115037957_134528621c_0", has var "eax_29", has version 33, has edge-label "dest", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115037957_134528621c_0, from-node: $N_8732115037957_134528621c) isa node-link; 

match
$N_8732115037957_134528621c isa instruction, has hash "N_8732115037957_134528621c"; 

insert
$L_8732115037957_134528621c_1 isa list, has hash "L_8732115037957_134528621c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115037957_134528621c_1, from-node: $N_8732115037957_134528621c) isa node-link; 

match
$L_8732115037957_134528621c_1 isa list, has hash "L_8732115037957_134528621c_1"; 

insert
$N_8732115037957_134528621c_1_0 isa variable-ssa, has hash "N_8732115037957_134528621c_1_0", has var "eax_27", has version 30, has edge-label "0", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115037957_134528621c_1_0, from-node: $L_8732115037957_134528621c_1) isa node-link; 

match
$L_8732115037957_134528621c_1 isa list, has hash "L_8732115037957_134528621c_1"; 

insert
$N_8732115037957_134528621c_1_1 isa variable-ssa, has hash "N_8732115037957_134528621c_1_1", has var "eax_29", has version 32, has edge-label "1", has var-type "uint32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115037957_134528621c_1_1, from-node: $L_8732115037957_134528621c_1) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 117, has bb-end 122; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115292421_134528621c isa instruction, has hash "N_8732115292421_134528621c", has il-index 118, has asm-address "0x804be6d", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_18#18 = var_18#1";
(contains-instruction: $N_8732115292421_134528621c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115292421_134528621c isa instruction, has hash "N_8732115292421_134528621c"; 

insert
$N_8732115292421_134528621c_0 isa variable-ssa, has hash "N_8732115292421_134528621c_0", has var "ecx_18", has version 18, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115292421_134528621c_0, from-node: $N_8732115292421_134528621c) isa node-link; 

match
$N_8732115292421_134528621c isa instruction, has hash "N_8732115292421_134528621c"; 

insert
$N_8732115292421_134528621c_1 isa MLIL_VAR_SSA, has hash "N_8732115292421_134528621c_1", has edge-label "src";
(to-node: $N_8732115292421_134528621c_1, from-node: $N_8732115292421_134528621c) isa node-link; 

match
$N_8732115292421_134528621c_1 isa operation, has hash "N_8732115292421_134528621c_1"; 

insert
$N_8732115292421_134528621c_1_0 isa variable-ssa, has hash "N_8732115292421_134528621c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115292421_134528621c_1_0, from-node: $N_8732115292421_134528621c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 117, has bb-end 122; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 117, has bb-end 122; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114921477_134528624c isa instruction, has hash "N_8732114921477_134528624c", has il-index 119, has asm-address "0x804be70", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_19#19 = ecx_18#18 + 0x24";
(contains-instruction: $N_8732114921477_134528624c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114921477_134528624c isa instruction, has hash "N_8732114921477_134528624c"; 

insert
$N_8732114921477_134528624c_0 isa variable-ssa, has hash "N_8732114921477_134528624c_0", has var "ecx_19", has version 19, has edge-label "dest", has var-type "void*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114921477_134528624c_0, from-node: $N_8732114921477_134528624c) isa node-link; 

match
$N_8732114921477_134528624c isa instruction, has hash "N_8732114921477_134528624c"; 

insert
$N_8732114921477_134528624c_1 isa MLIL_ADD, has hash "N_8732114921477_134528624c_1", has edge-label "src";
(to-node: $N_8732114921477_134528624c_1, from-node: $N_8732114921477_134528624c) isa node-link; 

match
$N_8732114921477_134528624c_1 isa operation, has hash "N_8732114921477_134528624c_1"; 

insert
$N_8732114921477_134528624c_1_0 isa MLIL_VAR_SSA, has hash "N_8732114921477_134528624c_1_0", has edge-label "left";
(to-node: $N_8732114921477_134528624c_1_0, from-node: $N_8732114921477_134528624c_1) isa node-link; 

match
$N_8732114921477_134528624c_1_0 isa operation, has hash "N_8732114921477_134528624c_1_0"; 

insert
$N_8732114921477_134528624c_1_0_0 isa variable-ssa, has hash "N_8732114921477_134528624c_1_0_0", has var "ecx_18", has version 18, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114921477_134528624c_1_0_0, from-node: $N_8732114921477_134528624c_1_0) isa node-link; 

match
$N_8732114921477_134528624c_1 isa operation, has hash "N_8732114921477_134528624c_1"; 

insert
$N_8732114921477_134528624c_1_1 isa MLIL_CONST, has hash "N_8732114921477_134528624c_1_1", has edge-label "right";
(to-node: $N_8732114921477_134528624c_1_1, from-node: $N_8732114921477_134528624c_1) isa node-link; 

match
$N_8732114921477_134528624c_1_1 isa operation, has hash "N_8732114921477_134528624c_1_1"; 

insert
$N_8732114921477_134528624c_1_1_0 isa constant, has hash "N_8732114921477_134528624c_1_1_0", has constant-value "36", has edge-label "constant";
(to-node: $N_8732114921477_134528624c_1_1_0, from-node: $N_8732114921477_134528624c_1_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 117, has bb-end 122; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 117, has bb-end 122; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115009285_134528630c isa instruction, has hash "N_8732115009285_134528630c", has il-index 120, has asm-address "0x804be76", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_4c_3#4 = ecx_19#19";
(contains-instruction: $N_8732115009285_134528630c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115009285_134528630c isa instruction, has hash "N_8732115009285_134528630c"; 

insert
$N_8732115009285_134528630c_0 isa variable-ssa, has hash "N_8732115009285_134528630c_0", has var "var_4c_3", has version 4, has edge-label "dest", has var-type "void*", has var-size -52, has var-func "cgc_validate_header";
(to-node: $N_8732115009285_134528630c_0, from-node: $N_8732115009285_134528630c) isa node-link; 

match
$N_8732115009285_134528630c isa instruction, has hash "N_8732115009285_134528630c"; 

insert
$N_8732115009285_134528630c_1 isa MLIL_VAR_SSA, has hash "N_8732115009285_134528630c_1", has edge-label "src";
(to-node: $N_8732115009285_134528630c_1, from-node: $N_8732115009285_134528630c) isa node-link; 

match
$N_8732115009285_134528630c_1 isa operation, has hash "N_8732115009285_134528630c_1"; 

insert
$N_8732115009285_134528630c_1_0 isa variable-ssa, has hash "N_8732115009285_134528630c_1_0", has var "ecx_19", has version 19, has edge-label "src", has var-type "void*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115009285_134528630c_1_0, from-node: $N_8732115009285_134528630c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 117, has bb-end 122; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 117, has bb-end 122; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115044357_134528648c isa instruction, has hash "N_8732115044357_134528648c", has il-index 121, has asm-address "0x804be88", has operation-type "MLIL_CALL_SSA", has ins-text "eax_30#34, mem#4 = 0x8049ce0(var_4c_3#4, 0x804d456, 4) @ mem#3";
(contains-instruction: $N_8732115044357_134528648c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115044357_134528648c isa instruction, has hash "N_8732115044357_134528648c"; 

insert
$N_8732115044357_134528648c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8732115044357_134528648c_0", has edge-label "output";
(to-node: $N_8732115044357_134528648c_0, from-node: $N_8732115044357_134528648c) isa node-link; 

match
$N_8732115044357_134528648c_0 isa operation, has hash "N_8732115044357_134528648c_0"; 

insert
$N_8732115044357_134528648c_0_0 isa constant, has hash "N_8732115044357_134528648c_0_0", has constant-value "4", has edge-label "dest_memory";
(to-node: $N_8732115044357_134528648c_0_0, from-node: $N_8732115044357_134528648c_0) isa node-link; 

match
$N_8732115044357_134528648c_0 isa operation, has hash "N_8732115044357_134528648c_0"; 

insert
$L_8732115044357_134528648c_0_1 isa list, has hash "L_8732115044357_134528648c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8732115044357_134528648c_0_1, from-node: $N_8732115044357_134528648c_0) isa node-link; 

match
$L_8732115044357_134528648c_0_1 isa list, has hash "L_8732115044357_134528648c_0_1"; 

insert
$N_8732115044357_134528648c_0_1_0 isa variable-ssa, has hash "N_8732115044357_134528648c_0_1_0", has var "eax_30", has version 34, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115044357_134528648c_0_1_0, from-node: $L_8732115044357_134528648c_0_1) isa node-link; 

match
$N_8732115044357_134528648c isa instruction, has hash "N_8732115044357_134528648c"; 

insert
$N_8732115044357_134528648c_1 isa MLIL_CONST_PTR, has hash "N_8732115044357_134528648c_1", has edge-label "dest";
(to-node: $N_8732115044357_134528648c_1, from-node: $N_8732115044357_134528648c) isa node-link; 

match
$N_8732115044357_134528648c_1 isa operation, has hash "N_8732115044357_134528648c_1"; 

insert
$N_8732115044357_134528648c_1_0 isa constant, has hash "N_8732115044357_134528648c_1_0", has constant-value "134520032", has edge-label "constant";
(to-node: $N_8732115044357_134528648c_1_0, from-node: $N_8732115044357_134528648c_1) isa node-link; 

match
$N_8732115044357_134528648c isa instruction, has hash "N_8732115044357_134528648c"; 

insert
$L_8732115044357_134528648c_2 isa list, has hash "L_8732115044357_134528648c_2", has list-size 3, has edge-label "params";
(to-node: $L_8732115044357_134528648c_2, from-node: $N_8732115044357_134528648c) isa node-link; 

match
$L_8732115044357_134528648c_2 isa list, has hash "L_8732115044357_134528648c_2"; 

insert
$N_8732115044357_134528648c_2_0 isa MLIL_VAR_SSA, has hash "N_8732115044357_134528648c_2_0", has edge-label "0";
(to-node: $N_8732115044357_134528648c_2_0, from-node: $L_8732115044357_134528648c_2) isa node-link; 

match
$N_8732115044357_134528648c_2_0 isa operation, has hash "N_8732115044357_134528648c_2_0"; 

insert
$N_8732115044357_134528648c_2_0_0 isa variable-ssa, has hash "N_8732115044357_134528648c_2_0_0", has var "var_4c_3", has version 4, has edge-label "src", has var-type "void*", has var-size -52, has var-func "cgc_validate_header";
(to-node: $N_8732115044357_134528648c_2_0_0, from-node: $N_8732115044357_134528648c_2_0) isa node-link; 

match
$L_8732115044357_134528648c_2 isa list, has hash "L_8732115044357_134528648c_2"; 

insert
$N_8732115044357_134528648c_2_1 isa MLIL_CONST_PTR, has hash "N_8732115044357_134528648c_2_1", has edge-label "1";
(to-node: $N_8732115044357_134528648c_2_1, from-node: $L_8732115044357_134528648c_2) isa node-link; 

match
$N_8732115044357_134528648c_2_1 isa operation, has hash "N_8732115044357_134528648c_2_1"; 

insert
$N_8732115044357_134528648c_2_1_0 isa constant, has hash "N_8732115044357_134528648c_2_1_0", has constant-value "134534230", has edge-label "constant";
(to-node: $N_8732115044357_134528648c_2_1_0, from-node: $N_8732115044357_134528648c_2_1) isa node-link; 

match
$L_8732115044357_134528648c_2 isa list, has hash "L_8732115044357_134528648c_2"; 

insert
$N_8732115044357_134528648c_2_2 isa MLIL_CONST, has hash "N_8732115044357_134528648c_2_2", has edge-label "2";
(to-node: $N_8732115044357_134528648c_2_2, from-node: $L_8732115044357_134528648c_2) isa node-link; 

match
$N_8732115044357_134528648c_2_2 isa operation, has hash "N_8732115044357_134528648c_2_2"; 

insert
$N_8732115044357_134528648c_2_2_0 isa constant, has hash "N_8732115044357_134528648c_2_2_0", has constant-value "4", has edge-label "constant";
(to-node: $N_8732115044357_134528648c_2_2_0, from-node: $N_8732115044357_134528648c_2_2) isa node-link; 

match
$N_8732115044357_134528648c isa instruction, has hash "N_8732115044357_134528648c"; 

insert
$N_8732115044357_134528648c_3 isa constant, has hash "N_8732115044357_134528648c_3", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732115044357_134528648c_3, from-node: $N_8732115044357_134528648c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 117, has bb-end 122; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 117, has bb-end 122; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115161861_134528656c isa instruction, has hash "N_8732115161861_134528656c", has il-index 122, has asm-address "0x804be90", has operation-type "MLIL_IF", has ins-text "if (eax_30#34 == 0) then 129 @ 0x804bea2 else 134 @ 0x804be96";
(contains-instruction: $N_8732115161861_134528656c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115161861_134528656c isa instruction, has hash "N_8732115161861_134528656c"; 

insert
$N_8732115161861_134528656c_0 isa MLIL_CMP_E, has hash "N_8732115161861_134528656c_0", has edge-label "condition";
(to-node: $N_8732115161861_134528656c_0, from-node: $N_8732115161861_134528656c) isa node-link; 

match
$N_8732115161861_134528656c_0 isa operation, has hash "N_8732115161861_134528656c_0"; 

insert
$N_8732115161861_134528656c_0_0 isa MLIL_VAR_SSA, has hash "N_8732115161861_134528656c_0_0", has edge-label "left";
(to-node: $N_8732115161861_134528656c_0_0, from-node: $N_8732115161861_134528656c_0) isa node-link; 

match
$N_8732115161861_134528656c_0_0 isa operation, has hash "N_8732115161861_134528656c_0_0"; 

insert
$N_8732115161861_134528656c_0_0_0 isa variable-ssa, has hash "N_8732115161861_134528656c_0_0_0", has var "eax_30", has version 34, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115161861_134528656c_0_0_0, from-node: $N_8732115161861_134528656c_0_0) isa node-link; 

match
$N_8732115161861_134528656c_0 isa operation, has hash "N_8732115161861_134528656c_0"; 

insert
$N_8732115161861_134528656c_0_1 isa MLIL_CONST, has hash "N_8732115161861_134528656c_0_1", has edge-label "right";
(to-node: $N_8732115161861_134528656c_0_1, from-node: $N_8732115161861_134528656c_0) isa node-link; 

match
$N_8732115161861_134528656c_0_1 isa operation, has hash "N_8732115161861_134528656c_0_1"; 

insert
$N_8732115161861_134528656c_0_1_0 isa constant, has hash "N_8732115161861_134528656c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115161861_134528656c_0_1_0, from-node: $N_8732115161861_134528656c_0_1) isa node-link; 

match
$N_8732115161861_134528656c isa instruction, has hash "N_8732115161861_134528656c"; 

insert
$N_8732115161861_134528656c_1 isa constant, has hash "N_8732115161861_134528656c_1", has constant-value "129", has edge-label "true";
(to-node: $N_8732115161861_134528656c_1, from-node: $N_8732115161861_134528656c) isa node-link; 

match
$N_8732115161861_134528656c isa instruction, has hash "N_8732115161861_134528656c"; 

insert
$N_8732115161861_134528656c_2 isa constant, has hash "N_8732115161861_134528656c_2", has constant-value "134", has edge-label "false";
(to-node: $N_8732115161861_134528656c_2, from-node: $N_8732115161861_134528656c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 123, has bb-end 123; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 124, has bb-end 125; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 124, has bb-end 125; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 124, has bb-end 125; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115347525_134528604c isa instruction, has hash "N_8732115347525_134528604c", has il-index 124, has asm-address "0x804be5c", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_14#3 = 0xfffffc00";
(contains-instruction: $N_8732115347525_134528604c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115347525_134528604c isa instruction, has hash "N_8732115347525_134528604c"; 

insert
$N_8732115347525_134528604c_0 isa variable-ssa, has hash "N_8732115347525_134528604c_0", has var "var_14", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115347525_134528604c_0, from-node: $N_8732115347525_134528604c) isa node-link; 

match
$N_8732115347525_134528604c isa instruction, has hash "N_8732115347525_134528604c"; 

insert
$N_8732115347525_134528604c_1 isa MLIL_CONST, has hash "N_8732115347525_134528604c_1", has edge-label "src";
(to-node: $N_8732115347525_134528604c_1, from-node: $N_8732115347525_134528604c) isa node-link; 

match
$N_8732115347525_134528604c_1 isa operation, has hash "N_8732115347525_134528604c_1"; 

insert
$N_8732115347525_134528604c_1_0 isa constant, has hash "N_8732115347525_134528604c_1_0", has constant-value "4294966272", has edge-label "constant";
(to-node: $N_8732115347525_134528604c_1_0, from-node: $N_8732115347525_134528604c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 124, has bb-end 125; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 124, has bb-end 125; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115437909_134528611c isa instruction, has hash "N_8732115437909_134528611c", has il-index 125, has asm-address "0x804be63", has operation-type "MLIL_GOTO", has ins-text "goto 28 @ 0x804beae";
(contains-instruction: $N_8732115437909_134528611c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115437909_134528611c isa instruction, has hash "N_8732115437909_134528611c"; 

insert
$N_8732115437909_134528611c_0 isa constant, has hash "N_8732115437909_134528611c_0", has constant-value "28", has edge-label "dest";
(to-node: $N_8732115437909_134528611c_0, from-node: $N_8732115437909_134528611c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 126, has bb-end 126; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 127, has bb-end 128; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 127, has bb-end 128; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 127, has bb-end 128; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115137621_134528413c isa instruction, has hash "N_8732115137621_134528413c", has il-index 127, has asm-address "0x804bd9d", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_19#21 = var_18#1";
(contains-instruction: $N_8732115137621_134528413c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115137621_134528413c isa instruction, has hash "N_8732115137621_134528413c"; 

insert
$N_8732115137621_134528413c_0 isa variable-ssa, has hash "N_8732115137621_134528413c_0", has var "eax_19", has version 21, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115137621_134528413c_0, from-node: $N_8732115137621_134528413c) isa node-link; 

match
$N_8732115137621_134528413c isa instruction, has hash "N_8732115137621_134528413c"; 

insert
$N_8732115137621_134528413c_1 isa MLIL_VAR_SSA, has hash "N_8732115137621_134528413c_1", has edge-label "src";
(to-node: $N_8732115137621_134528413c_1, from-node: $N_8732115137621_134528413c) isa node-link; 

match
$N_8732115137621_134528413c_1 isa operation, has hash "N_8732115137621_134528413c_1"; 

insert
$N_8732115137621_134528413c_1_0 isa variable-ssa, has hash "N_8732115137621_134528413c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115137621_134528413c_1_0, from-node: $N_8732115137621_134528413c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 127, has bb-end 128; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 127, has bb-end 128; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114952197_134528423c isa instruction, has hash "N_8732114952197_134528423c", has il-index 128, has asm-address "0x804bda7", has operation-type "MLIL_IF", has ins-text "if ([eax_19#21 + 0x18].d @ mem#3 == 0xbb80) then 136 @ 0x0 else 137 @ 0x804bdad";
(contains-instruction: $N_8732114952197_134528423c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114952197_134528423c isa instruction, has hash "N_8732114952197_134528423c"; 

insert
$N_8732114952197_134528423c_0 isa MLIL_CMP_E, has hash "N_8732114952197_134528423c_0", has edge-label "condition";
(to-node: $N_8732114952197_134528423c_0, from-node: $N_8732114952197_134528423c) isa node-link; 

match
$N_8732114952197_134528423c_0 isa operation, has hash "N_8732114952197_134528423c_0"; 

insert
$N_8732114952197_134528423c_0_0 isa MLIL_LOAD_SSA, has hash "N_8732114952197_134528423c_0_0", has edge-label "left";
(to-node: $N_8732114952197_134528423c_0_0, from-node: $N_8732114952197_134528423c_0) isa node-link; 

match
$N_8732114952197_134528423c_0_0 isa operation, has hash "N_8732114952197_134528423c_0_0"; 

insert
$N_8732114952197_134528423c_0_0_0 isa MLIL_ADD, has hash "N_8732114952197_134528423c_0_0_0", has edge-label "src";
(to-node: $N_8732114952197_134528423c_0_0_0, from-node: $N_8732114952197_134528423c_0_0) isa node-link; 

match
$N_8732114952197_134528423c_0_0_0 isa operation, has hash "N_8732114952197_134528423c_0_0_0"; 

insert
$N_8732114952197_134528423c_0_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732114952197_134528423c_0_0_0_0", has edge-label "left";
(to-node: $N_8732114952197_134528423c_0_0_0_0, from-node: $N_8732114952197_134528423c_0_0_0) isa node-link; 

match
$N_8732114952197_134528423c_0_0_0_0 isa operation, has hash "N_8732114952197_134528423c_0_0_0_0"; 

insert
$N_8732114952197_134528423c_0_0_0_0_0 isa variable-ssa, has hash "N_8732114952197_134528423c_0_0_0_0_0", has var "eax_19", has version 21, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114952197_134528423c_0_0_0_0_0, from-node: $N_8732114952197_134528423c_0_0_0_0) isa node-link; 

match
$N_8732114952197_134528423c_0_0_0 isa operation, has hash "N_8732114952197_134528423c_0_0_0"; 

insert
$N_8732114952197_134528423c_0_0_0_1 isa MLIL_CONST, has hash "N_8732114952197_134528423c_0_0_0_1", has edge-label "right";
(to-node: $N_8732114952197_134528423c_0_0_0_1, from-node: $N_8732114952197_134528423c_0_0_0) isa node-link; 

match
$N_8732114952197_134528423c_0_0_0_1 isa operation, has hash "N_8732114952197_134528423c_0_0_0_1"; 

insert
$N_8732114952197_134528423c_0_0_0_1_0 isa constant, has hash "N_8732114952197_134528423c_0_0_0_1_0", has constant-value "24", has edge-label "constant";
(to-node: $N_8732114952197_134528423c_0_0_0_1_0, from-node: $N_8732114952197_134528423c_0_0_0_1) isa node-link; 

match
$N_8732114952197_134528423c_0_0 isa operation, has hash "N_8732114952197_134528423c_0_0"; 

insert
$N_8732114952197_134528423c_0_0_1 isa constant, has hash "N_8732114952197_134528423c_0_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732114952197_134528423c_0_0_1, from-node: $N_8732114952197_134528423c_0_0) isa node-link; 

match
$N_8732114952197_134528423c_0 isa operation, has hash "N_8732114952197_134528423c_0"; 

insert
$N_8732114952197_134528423c_0_1 isa MLIL_CONST, has hash "N_8732114952197_134528423c_0_1", has edge-label "right";
(to-node: $N_8732114952197_134528423c_0_1, from-node: $N_8732114952197_134528423c_0) isa node-link; 

match
$N_8732114952197_134528423c_0_1 isa operation, has hash "N_8732114952197_134528423c_0_1"; 

insert
$N_8732114952197_134528423c_0_1_0 isa constant, has hash "N_8732114952197_134528423c_0_1_0", has constant-value "48000", has edge-label "constant";
(to-node: $N_8732114952197_134528423c_0_1_0, from-node: $N_8732114952197_134528423c_0_1) isa node-link; 

match
$N_8732114952197_134528423c isa instruction, has hash "N_8732114952197_134528423c"; 

insert
$N_8732114952197_134528423c_1 isa constant, has hash "N_8732114952197_134528423c_1", has constant-value "136", has edge-label "true";
(to-node: $N_8732114952197_134528423c_1, from-node: $N_8732114952197_134528423c) isa node-link; 

match
$N_8732114952197_134528423c isa instruction, has hash "N_8732114952197_134528423c"; 

insert
$N_8732114952197_134528423c_2 isa constant, has hash "N_8732114952197_134528423c_2", has constant-value "137", has edge-label "false";
(to-node: $N_8732114952197_134528423c_2, from-node: $N_8732114952197_134528423c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 129, has bb-end 133; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 129, has bb-end 133; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 129, has bb-end 133; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115326797_134528674c isa instruction, has hash "N_8732115326797_134528674c", has il-index 129, has asm-address "0x804bea2", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_31#35 = var_18#1";
(contains-instruction: $N_8732115326797_134528674c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115326797_134528674c isa instruction, has hash "N_8732115326797_134528674c"; 

insert
$N_8732115326797_134528674c_0 isa variable-ssa, has hash "N_8732115326797_134528674c_0", has var "eax_31", has version 35, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115326797_134528674c_0, from-node: $N_8732115326797_134528674c) isa node-link; 

match
$N_8732115326797_134528674c isa instruction, has hash "N_8732115326797_134528674c"; 

insert
$N_8732115326797_134528674c_1 isa MLIL_VAR_SSA, has hash "N_8732115326797_134528674c_1", has edge-label "src";
(to-node: $N_8732115326797_134528674c_1, from-node: $N_8732115326797_134528674c) isa node-link; 

match
$N_8732115326797_134528674c_1 isa operation, has hash "N_8732115326797_134528674c_1"; 

insert
$N_8732115326797_134528674c_1_0 isa variable-ssa, has hash "N_8732115326797_134528674c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115326797_134528674c_1_0, from-node: $N_8732115326797_134528674c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 129, has bb-end 133; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 129, has bb-end 133; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115283973_134528677c isa instruction, has hash "N_8732115283973_134528677c", has il-index 130, has asm-address "0x804bea5", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_32#36 = [eax_31#35 + 4].d @ mem#4";
(contains-instruction: $N_8732115283973_134528677c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115283973_134528677c isa instruction, has hash "N_8732115283973_134528677c"; 

insert
$N_8732115283973_134528677c_0 isa variable-ssa, has hash "N_8732115283973_134528677c_0", has var "eax_32", has version 36, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115283973_134528677c_0, from-node: $N_8732115283973_134528677c) isa node-link; 

match
$N_8732115283973_134528677c isa instruction, has hash "N_8732115283973_134528677c"; 

insert
$N_8732115283973_134528677c_1 isa MLIL_LOAD_SSA, has hash "N_8732115283973_134528677c_1", has edge-label "src";
(to-node: $N_8732115283973_134528677c_1, from-node: $N_8732115283973_134528677c) isa node-link; 

match
$N_8732115283973_134528677c_1 isa operation, has hash "N_8732115283973_134528677c_1"; 

insert
$N_8732115283973_134528677c_1_0 isa MLIL_ADD, has hash "N_8732115283973_134528677c_1_0", has edge-label "src";
(to-node: $N_8732115283973_134528677c_1_0, from-node: $N_8732115283973_134528677c_1) isa node-link; 

match
$N_8732115283973_134528677c_1_0 isa operation, has hash "N_8732115283973_134528677c_1_0"; 

insert
$N_8732115283973_134528677c_1_0_0 isa MLIL_VAR_SSA, has hash "N_8732115283973_134528677c_1_0_0", has edge-label "left";
(to-node: $N_8732115283973_134528677c_1_0_0, from-node: $N_8732115283973_134528677c_1_0) isa node-link; 

match
$N_8732115283973_134528677c_1_0_0 isa operation, has hash "N_8732115283973_134528677c_1_0_0"; 

insert
$N_8732115283973_134528677c_1_0_0_0 isa variable-ssa, has hash "N_8732115283973_134528677c_1_0_0_0", has var "eax_31", has version 35, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115283973_134528677c_1_0_0_0, from-node: $N_8732115283973_134528677c_1_0_0) isa node-link; 

match
$N_8732115283973_134528677c_1_0 isa operation, has hash "N_8732115283973_134528677c_1_0"; 

insert
$N_8732115283973_134528677c_1_0_1 isa MLIL_CONST, has hash "N_8732115283973_134528677c_1_0_1", has edge-label "right";
(to-node: $N_8732115283973_134528677c_1_0_1, from-node: $N_8732115283973_134528677c_1_0) isa node-link; 

match
$N_8732115283973_134528677c_1_0_1 isa operation, has hash "N_8732115283973_134528677c_1_0_1"; 

insert
$N_8732115283973_134528677c_1_0_1_0 isa constant, has hash "N_8732115283973_134528677c_1_0_1_0", has constant-value "4", has edge-label "constant";
(to-node: $N_8732115283973_134528677c_1_0_1_0, from-node: $N_8732115283973_134528677c_1_0_1) isa node-link; 

match
$N_8732115283973_134528677c_1 isa operation, has hash "N_8732115283973_134528677c_1"; 

insert
$N_8732115283973_134528677c_1_1 isa constant, has hash "N_8732115283973_134528677c_1_1", has constant-value "4", has edge-label "src_memory";
(to-node: $N_8732115283973_134528677c_1_1, from-node: $N_8732115283973_134528677c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 129, has bb-end 133; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 129, has bb-end 133; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115067653_134528680c isa instruction, has hash "N_8732115067653_134528680c", has il-index 131, has asm-address "0x804bea8", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_33#37 = eax_32#36 + 8";
(contains-instruction: $N_8732115067653_134528680c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115067653_134528680c isa instruction, has hash "N_8732115067653_134528680c"; 

insert
$N_8732115067653_134528680c_0 isa variable-ssa, has hash "N_8732115067653_134528680c_0", has var "eax_33", has version 37, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115067653_134528680c_0, from-node: $N_8732115067653_134528680c) isa node-link; 

match
$N_8732115067653_134528680c isa instruction, has hash "N_8732115067653_134528680c"; 

insert
$N_8732115067653_134528680c_1 isa MLIL_ADD, has hash "N_8732115067653_134528680c_1", has edge-label "src";
(to-node: $N_8732115067653_134528680c_1, from-node: $N_8732115067653_134528680c) isa node-link; 

match
$N_8732115067653_134528680c_1 isa operation, has hash "N_8732115067653_134528680c_1"; 

insert
$N_8732115067653_134528680c_1_0 isa MLIL_VAR_SSA, has hash "N_8732115067653_134528680c_1_0", has edge-label "left";
(to-node: $N_8732115067653_134528680c_1_0, from-node: $N_8732115067653_134528680c_1) isa node-link; 

match
$N_8732115067653_134528680c_1_0 isa operation, has hash "N_8732115067653_134528680c_1_0"; 

insert
$N_8732115067653_134528680c_1_0_0 isa variable-ssa, has hash "N_8732115067653_134528680c_1_0_0", has var "eax_32", has version 36, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115067653_134528680c_1_0_0, from-node: $N_8732115067653_134528680c_1_0) isa node-link; 

match
$N_8732115067653_134528680c_1 isa operation, has hash "N_8732115067653_134528680c_1"; 

insert
$N_8732115067653_134528680c_1_1 isa MLIL_CONST, has hash "N_8732115067653_134528680c_1_1", has edge-label "right";
(to-node: $N_8732115067653_134528680c_1_1, from-node: $N_8732115067653_134528680c_1) isa node-link; 

match
$N_8732115067653_134528680c_1_1 isa operation, has hash "N_8732115067653_134528680c_1_1"; 

insert
$N_8732115067653_134528680c_1_1_0 isa constant, has hash "N_8732115067653_134528680c_1_1_0", has constant-value "8", has edge-label "constant";
(to-node: $N_8732115067653_134528680c_1_1_0, from-node: $N_8732115067653_134528680c_1_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 129, has bb-end 133; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 129, has bb-end 133; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114865669_134528683c isa instruction, has hash "N_8732114865669_134528683c", has il-index 133, has asm-address "0x804beab", has operation-type "MLIL_GOTO", has ins-text "goto 28 @ 0x804beae";
(contains-instruction: $N_8732114865669_134528683c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114865669_134528683c isa instruction, has hash "N_8732114865669_134528683c"; 

insert
$N_8732114865669_134528683c_0 isa constant, has hash "N_8732114865669_134528683c_0", has constant-value "28", has edge-label "dest";
(to-node: $N_8732114865669_134528683c_0, from-node: $N_8732114865669_134528683c) isa node-link; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 129, has bb-end 133; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114872325_134528683c isa instruction, has hash "N_8732114872325_134528683c", has il-index 132, has asm-address "0x804beab", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_14#4 = eax_33#37";
(contains-instruction: $N_8732114872325_134528683c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114872325_134528683c isa instruction, has hash "N_8732114872325_134528683c"; 

insert
$N_8732114872325_134528683c_0 isa variable-ssa, has hash "N_8732114872325_134528683c_0", has var "var_14", has version 4, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114872325_134528683c_0, from-node: $N_8732114872325_134528683c) isa node-link; 

match
$N_8732114872325_134528683c isa instruction, has hash "N_8732114872325_134528683c"; 

insert
$N_8732114872325_134528683c_1 isa MLIL_VAR_SSA, has hash "N_8732114872325_134528683c_1", has edge-label "src";
(to-node: $N_8732114872325_134528683c_1, from-node: $N_8732114872325_134528683c) isa node-link; 

match
$N_8732114872325_134528683c_1 isa operation, has hash "N_8732114872325_134528683c_1"; 

insert
$N_8732114872325_134528683c_1_0 isa variable-ssa, has hash "N_8732114872325_134528683c_1_0", has var "eax_33", has version 37, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732114872325_134528683c_1_0, from-node: $N_8732114872325_134528683c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 134, has bb-end 135; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 134, has bb-end 135; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 134, has bb-end 135; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115234309_134528662c isa instruction, has hash "N_8732115234309_134528662c", has il-index 134, has asm-address "0x804be96", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_14#5 = 0xfffff800";
(contains-instruction: $N_8732115234309_134528662c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115234309_134528662c isa instruction, has hash "N_8732115234309_134528662c"; 

insert
$N_8732115234309_134528662c_0 isa variable-ssa, has hash "N_8732115234309_134528662c_0", has var "var_14", has version 5, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115234309_134528662c_0, from-node: $N_8732115234309_134528662c) isa node-link; 

match
$N_8732115234309_134528662c isa instruction, has hash "N_8732115234309_134528662c"; 

insert
$N_8732115234309_134528662c_1 isa MLIL_CONST, has hash "N_8732115234309_134528662c_1", has edge-label "src";
(to-node: $N_8732115234309_134528662c_1, from-node: $N_8732115234309_134528662c) isa node-link; 

match
$N_8732115234309_134528662c_1 isa operation, has hash "N_8732115234309_134528662c_1"; 

insert
$N_8732115234309_134528662c_1_0 isa constant, has hash "N_8732115234309_134528662c_1_0", has constant-value "4294965248", has edge-label "constant";
(to-node: $N_8732115234309_134528662c_1_0, from-node: $N_8732115234309_134528662c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 134, has bb-end 135; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 134, has bb-end 135; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115317157_134528669c isa instruction, has hash "N_8732115317157_134528669c", has il-index 135, has asm-address "0x804be9d", has operation-type "MLIL_GOTO", has ins-text "goto 28 @ 0x804beae";
(contains-instruction: $N_8732115317157_134528669c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115317157_134528669c isa instruction, has hash "N_8732115317157_134528669c"; 

insert
$N_8732115317157_134528669c_0 isa constant, has hash "N_8732115317157_134528669c_0", has constant-value "28", has edge-label "dest";
(to-node: $N_8732115317157_134528669c_0, from-node: $N_8732115317157_134528669c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 136, has bb-end 136; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 137, has bb-end 138; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 137, has bb-end 138; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 137, has bb-end 138; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115073377_134528429c isa instruction, has hash "N_8732115073377_134528429c", has il-index 137, has asm-address "0x804bdad", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_20#22 = var_18#1";
(contains-instruction: $N_8732115073377_134528429c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115073377_134528429c isa instruction, has hash "N_8732115073377_134528429c"; 

insert
$N_8732115073377_134528429c_0 isa variable-ssa, has hash "N_8732115073377_134528429c_0", has var "eax_20", has version 22, has edge-label "dest", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115073377_134528429c_0, from-node: $N_8732115073377_134528429c) isa node-link; 

match
$N_8732115073377_134528429c isa instruction, has hash "N_8732115073377_134528429c"; 

insert
$N_8732115073377_134528429c_1 isa MLIL_VAR_SSA, has hash "N_8732115073377_134528429c_1", has edge-label "src";
(to-node: $N_8732115073377_134528429c_1, from-node: $N_8732115073377_134528429c) isa node-link; 

match
$N_8732115073377_134528429c_1 isa operation, has hash "N_8732115073377_134528429c_1"; 

insert
$N_8732115073377_134528429c_1_0 isa variable-ssa, has hash "N_8732115073377_134528429c_1_0", has var "var_18", has version 1, has edge-label "src", has var-type "char*", has var-size -21, has var-func "cgc_validate_header";
(to-node: $N_8732115073377_134528429c_1_0, from-node: $N_8732115073377_134528429c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 137, has bb-end 138; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 137, has bb-end 138; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115260165_134528439c isa instruction, has hash "N_8732115260165_134528439c", has il-index 138, has asm-address "0x804bdb7", has operation-type "MLIL_IF", has ins-text "if ([eax_20#22 + 0x18].d @ mem#3 == 0xfa0) then 139 @ 0x0 else 140 @ 0x804bdbd";
(contains-instruction: $N_8732115260165_134528439c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115260165_134528439c isa instruction, has hash "N_8732115260165_134528439c"; 

insert
$N_8732115260165_134528439c_0 isa MLIL_CMP_E, has hash "N_8732115260165_134528439c_0", has edge-label "condition";
(to-node: $N_8732115260165_134528439c_0, from-node: $N_8732115260165_134528439c) isa node-link; 

match
$N_8732115260165_134528439c_0 isa operation, has hash "N_8732115260165_134528439c_0"; 

insert
$N_8732115260165_134528439c_0_0 isa MLIL_LOAD_SSA, has hash "N_8732115260165_134528439c_0_0", has edge-label "left";
(to-node: $N_8732115260165_134528439c_0_0, from-node: $N_8732115260165_134528439c_0) isa node-link; 

match
$N_8732115260165_134528439c_0_0 isa operation, has hash "N_8732115260165_134528439c_0_0"; 

insert
$N_8732115260165_134528439c_0_0_0 isa MLIL_ADD, has hash "N_8732115260165_134528439c_0_0_0", has edge-label "src";
(to-node: $N_8732115260165_134528439c_0_0_0, from-node: $N_8732115260165_134528439c_0_0) isa node-link; 

match
$N_8732115260165_134528439c_0_0_0 isa operation, has hash "N_8732115260165_134528439c_0_0_0"; 

insert
$N_8732115260165_134528439c_0_0_0_0 isa MLIL_VAR_SSA, has hash "N_8732115260165_134528439c_0_0_0_0", has edge-label "left";
(to-node: $N_8732115260165_134528439c_0_0_0_0, from-node: $N_8732115260165_134528439c_0_0_0) isa node-link; 

match
$N_8732115260165_134528439c_0_0_0_0 isa operation, has hash "N_8732115260165_134528439c_0_0_0_0"; 

insert
$N_8732115260165_134528439c_0_0_0_0_0 isa variable-ssa, has hash "N_8732115260165_134528439c_0_0_0_0_0", has var "eax_20", has version 22, has edge-label "src", has var-type "char*", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115260165_134528439c_0_0_0_0_0, from-node: $N_8732115260165_134528439c_0_0_0_0) isa node-link; 

match
$N_8732115260165_134528439c_0_0_0 isa operation, has hash "N_8732115260165_134528439c_0_0_0"; 

insert
$N_8732115260165_134528439c_0_0_0_1 isa MLIL_CONST, has hash "N_8732115260165_134528439c_0_0_0_1", has edge-label "right";
(to-node: $N_8732115260165_134528439c_0_0_0_1, from-node: $N_8732115260165_134528439c_0_0_0) isa node-link; 

match
$N_8732115260165_134528439c_0_0_0_1 isa operation, has hash "N_8732115260165_134528439c_0_0_0_1"; 

insert
$N_8732115260165_134528439c_0_0_0_1_0 isa constant, has hash "N_8732115260165_134528439c_0_0_0_1_0", has constant-value "24", has edge-label "constant";
(to-node: $N_8732115260165_134528439c_0_0_0_1_0, from-node: $N_8732115260165_134528439c_0_0_0_1) isa node-link; 

match
$N_8732115260165_134528439c_0_0 isa operation, has hash "N_8732115260165_134528439c_0_0"; 

insert
$N_8732115260165_134528439c_0_0_1 isa constant, has hash "N_8732115260165_134528439c_0_0_1", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732115260165_134528439c_0_0_1, from-node: $N_8732115260165_134528439c_0_0) isa node-link; 

match
$N_8732115260165_134528439c_0 isa operation, has hash "N_8732115260165_134528439c_0"; 

insert
$N_8732115260165_134528439c_0_1 isa MLIL_CONST, has hash "N_8732115260165_134528439c_0_1", has edge-label "right";
(to-node: $N_8732115260165_134528439c_0_1, from-node: $N_8732115260165_134528439c_0) isa node-link; 

match
$N_8732115260165_134528439c_0_1 isa operation, has hash "N_8732115260165_134528439c_0_1"; 

insert
$N_8732115260165_134528439c_0_1_0 isa constant, has hash "N_8732115260165_134528439c_0_1_0", has constant-value "4000", has edge-label "constant";
(to-node: $N_8732115260165_134528439c_0_1_0, from-node: $N_8732115260165_134528439c_0_1) isa node-link; 

match
$N_8732115260165_134528439c isa instruction, has hash "N_8732115260165_134528439c"; 

insert
$N_8732115260165_134528439c_1 isa constant, has hash "N_8732115260165_134528439c_1", has constant-value "139", has edge-label "true";
(to-node: $N_8732115260165_134528439c_1, from-node: $N_8732115260165_134528439c) isa node-link; 

match
$N_8732115260165_134528439c isa instruction, has hash "N_8732115260165_134528439c"; 

insert
$N_8732115260165_134528439c_2 isa constant, has hash "N_8732115260165_134528439c_2", has constant-value "140", has edge-label "false";
(to-node: $N_8732115260165_134528439c_2, from-node: $N_8732115260165_134528439c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 139, has bb-end 139; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 

insert 
$bb isa basic-block, has bb-start 140, has bb-end 141; 
(contains-basic-block: $bb, in-function: $func_cgc_validate_header) isa has-basic-block; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 140, has bb-end 141; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 140, has bb-end 141; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115165297_134528445c isa instruction, has hash "N_8732115165297_134528445c", has il-index 140, has asm-address "0x804bdbd", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_14#2 = 0xffffff80";
(contains-instruction: $N_8732115165297_134528445c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115165297_134528445c isa instruction, has hash "N_8732115165297_134528445c"; 

insert
$N_8732115165297_134528445c_0 isa variable-ssa, has hash "N_8732115165297_134528445c_0", has var "var_14", has version 2, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_validate_header";
(to-node: $N_8732115165297_134528445c_0, from-node: $N_8732115165297_134528445c) isa node-link; 

match
$N_8732115165297_134528445c isa instruction, has hash "N_8732115165297_134528445c"; 

insert
$N_8732115165297_134528445c_1 isa MLIL_CONST, has hash "N_8732115165297_134528445c_1", has edge-label "src";
(to-node: $N_8732115165297_134528445c_1, from-node: $N_8732115165297_134528445c) isa node-link; 

match
$N_8732115165297_134528445c_1 isa operation, has hash "N_8732115165297_134528445c_1"; 

insert
$N_8732115165297_134528445c_1_0 isa constant, has hash "N_8732115165297_134528445c_1_0", has constant-value "4294967168", has edge-label "constant";
(to-node: $N_8732115165297_134528445c_1_0, from-node: $N_8732115165297_134528445c_1) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 140, has bb-end 141; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$bb isa basic-block, has bb-start 140, has bb-end 141; 
(in-function: $func_cgc_validate_header, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115268101_134528452c isa instruction, has hash "N_8732115268101_134528452c", has il-index 141, has asm-address "0x804bdc4", has operation-type "MLIL_GOTO", has ins-text "goto 28 @ 0x804beae";
(contains-instruction: $N_8732115268101_134528452c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115268101_134528452c isa instruction, has hash "N_8732115268101_134528452c"; 

insert
$N_8732115268101_134528452c_0 isa constant, has hash "N_8732115268101_134528452c_0", has constant-value "28", has edge-label "dest";
(to-node: $N_8732115268101_134528452c_0, from-node: $N_8732115268101_134528452c) isa node-link; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 5, has bb-start 0; 
$tobb   isa basic-block, has bb-end 16, has bb-start 6; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 5, has bb-start 0; 
$tobb   isa basic-block, has bb-end 18, has bb-start 17; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 16, has bb-start 6; 
$tobb   isa basic-block, has bb-end 25, has bb-start 19; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 16, has bb-start 6; 
$tobb   isa basic-block, has bb-end 27, has bb-start 26; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 18, has bb-start 17; 
$tobb   isa basic-block, has bb-end 38, has bb-start 28; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 25, has bb-start 19; 
$tobb   isa basic-block, has bb-end 43, has bb-start 39; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 25, has bb-start 19; 
$tobb   isa basic-block, has bb-end 45, has bb-start 44; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 27, has bb-start 26; 
$tobb   isa basic-block, has bb-end 38, has bb-start 28; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 43, has bb-start 39; 
$tobb   isa basic-block, has bb-end 48, has bb-start 46; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 43, has bb-start 39; 
$tobb   isa basic-block, has bb-end 50, has bb-start 49; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 45, has bb-start 44; 
$tobb   isa basic-block, has bb-end 38, has bb-start 28; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 48, has bb-start 46; 
$tobb   isa basic-block, has bb-end 53, has bb-start 51; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 48, has bb-start 46; 
$tobb   isa basic-block, has bb-end 55, has bb-start 54; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 50, has bb-start 49; 
$tobb   isa basic-block, has bb-end 38, has bb-start 28; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 53, has bb-start 51; 
$tobb   isa basic-block, has bb-end 56, has bb-start 56; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 53, has bb-start 51; 
$tobb   isa basic-block, has bb-end 59, has bb-start 57; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 55, has bb-start 54; 
$tobb   isa basic-block, has bb-end 38, has bb-start 28; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 56, has bb-start 56; 
$tobb   isa basic-block, has bb-end 62, has bb-start 60; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 59, has bb-start 57; 
$tobb   isa basic-block, has bb-end 63, has bb-start 63; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 59, has bb-start 57; 
$tobb   isa basic-block, has bb-end 65, has bb-start 64; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 62, has bb-start 60; 
$tobb   isa basic-block, has bb-end 66, has bb-start 66; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 62, has bb-start 60; 
$tobb   isa basic-block, has bb-end 68, has bb-start 67; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 63, has bb-start 63; 
$tobb   isa basic-block, has bb-end 62, has bb-start 60; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 65, has bb-start 64; 
$tobb   isa basic-block, has bb-end 38, has bb-start 28; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 66, has bb-start 66; 
$tobb   isa basic-block, has bb-end 81, has bb-start 69; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 68, has bb-start 67; 
$tobb   isa basic-block, has bb-end 82, has bb-start 82; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 68, has bb-start 67; 
$tobb   isa basic-block, has bb-end 84, has bb-start 83; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 81, has bb-start 69; 
$tobb   isa basic-block, has bb-end 96, has bb-start 85; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 81, has bb-start 69; 
$tobb   isa basic-block, has bb-end 98, has bb-start 97; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 82, has bb-start 82; 
$tobb   isa basic-block, has bb-end 81, has bb-start 69; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 84, has bb-start 83; 
$tobb   isa basic-block, has bb-end 99, has bb-start 99; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 84, has bb-start 83; 
$tobb   isa basic-block, has bb-end 101, has bb-start 100; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 96, has bb-start 85; 
$tobb   isa basic-block, has bb-end 104, has bb-start 102; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 96, has bb-start 85; 
$tobb   isa basic-block, has bb-end 106, has bb-start 105; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 98, has bb-start 97; 
$tobb   isa basic-block, has bb-end 38, has bb-start 28; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 99, has bb-start 99; 
$tobb   isa basic-block, has bb-end 81, has bb-start 69; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 101, has bb-start 100; 
$tobb   isa basic-block, has bb-end 107, has bb-start 107; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 101, has bb-start 100; 
$tobb   isa basic-block, has bb-end 109, has bb-start 108; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 104, has bb-start 102; 
$tobb   isa basic-block, has bb-end 110, has bb-start 110; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 104, has bb-start 102; 
$tobb   isa basic-block, has bb-end 113, has bb-start 111; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 106, has bb-start 105; 
$tobb   isa basic-block, has bb-end 38, has bb-start 28; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 107, has bb-start 107; 
$tobb   isa basic-block, has bb-end 81, has bb-start 69; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 109, has bb-start 108; 
$tobb   isa basic-block, has bb-end 114, has bb-start 114; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 109, has bb-start 108; 
$tobb   isa basic-block, has bb-end 116, has bb-start 115; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 110, has bb-start 110; 
$tobb   isa basic-block, has bb-end 122, has bb-start 117; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 113, has bb-start 111; 
$tobb   isa basic-block, has bb-end 123, has bb-start 123; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 113, has bb-start 111; 
$tobb   isa basic-block, has bb-end 125, has bb-start 124; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 114, has bb-start 114; 
$tobb   isa basic-block, has bb-end 81, has bb-start 69; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 116, has bb-start 115; 
$tobb   isa basic-block, has bb-end 126, has bb-start 126; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 116, has bb-start 115; 
$tobb   isa basic-block, has bb-end 128, has bb-start 127; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 122, has bb-start 117; 
$tobb   isa basic-block, has bb-end 133, has bb-start 129; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 122, has bb-start 117; 
$tobb   isa basic-block, has bb-end 135, has bb-start 134; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 123, has bb-start 123; 
$tobb   isa basic-block, has bb-end 122, has bb-start 117; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 125, has bb-start 124; 
$tobb   isa basic-block, has bb-end 38, has bb-start 28; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 126, has bb-start 126; 
$tobb   isa basic-block, has bb-end 81, has bb-start 69; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 128, has bb-start 127; 
$tobb   isa basic-block, has bb-end 136, has bb-start 136; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 128, has bb-start 127; 
$tobb   isa basic-block, has bb-end 138, has bb-start 137; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 133, has bb-start 129; 
$tobb   isa basic-block, has bb-end 38, has bb-start 28; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 135, has bb-start 134; 
$tobb   isa basic-block, has bb-end 38, has bb-start 28; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 136, has bb-start 136; 
$tobb   isa basic-block, has bb-end 81, has bb-start 69; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 138, has bb-start 137; 
$tobb   isa basic-block, has bb-end 139, has bb-start 139; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 138, has bb-start 137; 
$tobb   isa basic-block, has bb-end 141, has bb-start 140; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 139, has bb-start 139; 
$tobb   isa basic-block, has bb-end 81, has bb-start 69; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_validate_header isa function, has name "cgc_validate_header"; 
$frombb isa basic-block, has bb-end 141, has bb-start 140; 
$tobb   isa basic-block, has bb-end 38, has bb-start 28; 
(contains-basic-block: $frombb, in-function: $func_cgc_validate_header) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_validate_header) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

insert 
$func_cgc_init_track isa function, has name "cgc_init_track", has asm-address "0x804bec0", has stack "[<var int32_t var_4c>, <var int32_t var_4c_1>, <var int32_t* var_4c_2>, <var int32_t var_48>, <var int32_t var_48_1>, <var int32_t var_44>, <var int32_t var_44_1>, <var int32_t var_40>, <var int32_t* var_40_1>, <var int32_t* var_40_2>, <var char var_31>, <var char var_31_1>, <var int32_t var_30>, <var int32_t var_2c>, <var int32_t var_28>, <var int32_t var_24>, <var int32_t var_20>, <var int32_t var_1c>, <var int32_t var_18>, <var int32_t var_18_1>, <var int32_t var_14>, <var int32_t var_10>, <var int32_t var_c>, <var int32_t var_8>, <var int32_t __saved_ebp>, <var void* const __return_addr>]"; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 0, has bb-end 2; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 0, has bb-end 2; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 0, has bb-end 2; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115418969_134528724c isa instruction, has hash "N_8732115418969_134528724c", has il-index 0, has asm-address "0x804bed4", has operation-type "MLIL_SET_VAR_ALIASED", has ins-text "var_1c @ mem#0 -> mem#1 = 0";
(contains-instruction: $N_8732115418969_134528724c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115418969_134528724c isa instruction, has hash "N_8732115418969_134528724c"; 

insert
$N_8732115418969_134528724c_0 isa variable-ssa, has hash "N_8732115418969_134528724c_0", has var "var_1c", has version 1, has edge-label "prev", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115418969_134528724c_0, from-node: $N_8732115418969_134528724c) isa node-link; 

match
$N_8732115418969_134528724c isa instruction, has hash "N_8732115418969_134528724c"; 

insert
$N_8732115418969_134528724c_1 isa variable-ssa, has hash "N_8732115418969_134528724c_1", has var "var_1c", has version 0, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115418969_134528724c_1, from-node: $N_8732115418969_134528724c) isa node-link; 

match
$N_8732115418969_134528724c isa instruction, has hash "N_8732115418969_134528724c"; 

insert
$N_8732115418969_134528724c_2 isa MLIL_CONST, has hash "N_8732115418969_134528724c_2", has edge-label "unimplemented";
(to-node: $N_8732115418969_134528724c_2, from-node: $N_8732115418969_134528724c) isa node-link; 

match
$N_8732115418969_134528724c_2 isa operation, has hash "N_8732115418969_134528724c_2"; 

insert
$N_8732115418969_134528724c_2_0 isa constant, has hash "N_8732115418969_134528724c_2_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115418969_134528724c_2_0, from-node: $N_8732115418969_134528724c_2) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 0, has bb-end 2; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 0, has bb-end 2; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732116578657_134528748c isa instruction, has hash "N_8732116578657_134528748c", has il-index 1, has asm-address "0x804beec", has operation-type "MLIL_CALL_SSA", has ins-text "mem#2 = 0x8049530(0x30, arg2#0, 0x30) @ mem#1";
(contains-instruction: $N_8732116578657_134528748c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732116578657_134528748c isa instruction, has hash "N_8732116578657_134528748c"; 

insert
$N_8732116578657_134528748c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8732116578657_134528748c_0", has edge-label "output";
(to-node: $N_8732116578657_134528748c_0, from-node: $N_8732116578657_134528748c) isa node-link; 

match
$N_8732116578657_134528748c_0 isa operation, has hash "N_8732116578657_134528748c_0"; 

insert
$N_8732116578657_134528748c_0_0 isa constant, has hash "N_8732116578657_134528748c_0_0", has constant-value "2", has edge-label "dest_memory";
(to-node: $N_8732116578657_134528748c_0_0, from-node: $N_8732116578657_134528748c_0) isa node-link; 

match
$N_8732116578657_134528748c_0 isa operation, has hash "N_8732116578657_134528748c_0"; 

insert
$L_8732116578657_134528748c_0_1 isa list, has hash "L_8732116578657_134528748c_0_1", has list-size 0, has edge-label "dest";
(to-node: $L_8732116578657_134528748c_0_1, from-node: $N_8732116578657_134528748c_0) isa node-link; 

match
$N_8732116578657_134528748c isa instruction, has hash "N_8732116578657_134528748c"; 

insert
$N_8732116578657_134528748c_1 isa MLIL_CONST_PTR, has hash "N_8732116578657_134528748c_1", has edge-label "dest";
(to-node: $N_8732116578657_134528748c_1, from-node: $N_8732116578657_134528748c) isa node-link; 

match
$N_8732116578657_134528748c_1 isa operation, has hash "N_8732116578657_134528748c_1"; 

insert
$N_8732116578657_134528748c_1_0 isa constant, has hash "N_8732116578657_134528748c_1_0", has constant-value "134518064", has edge-label "constant";
(to-node: $N_8732116578657_134528748c_1_0, from-node: $N_8732116578657_134528748c_1) isa node-link; 

match
$N_8732116578657_134528748c isa instruction, has hash "N_8732116578657_134528748c"; 

insert
$L_8732116578657_134528748c_2 isa list, has hash "L_8732116578657_134528748c_2", has list-size 3, has edge-label "params";
(to-node: $L_8732116578657_134528748c_2, from-node: $N_8732116578657_134528748c) isa node-link; 

match
$L_8732116578657_134528748c_2 isa list, has hash "L_8732116578657_134528748c_2"; 

insert
$N_8732116578657_134528748c_2_0 isa MLIL_CONST, has hash "N_8732116578657_134528748c_2_0", has edge-label "0";
(to-node: $N_8732116578657_134528748c_2_0, from-node: $L_8732116578657_134528748c_2) isa node-link; 

match
$N_8732116578657_134528748c_2_0 isa operation, has hash "N_8732116578657_134528748c_2_0"; 

insert
$N_8732116578657_134528748c_2_0_0 isa constant, has hash "N_8732116578657_134528748c_2_0_0", has constant-value "48", has edge-label "constant";
(to-node: $N_8732116578657_134528748c_2_0_0, from-node: $N_8732116578657_134528748c_2_0) isa node-link; 

match
$L_8732116578657_134528748c_2 isa list, has hash "L_8732116578657_134528748c_2"; 

insert
$N_8732116578657_134528748c_2_1 isa MLIL_VAR_SSA, has hash "N_8732116578657_134528748c_2_1", has edge-label "1";
(to-node: $N_8732116578657_134528748c_2_1, from-node: $L_8732116578657_134528748c_2) isa node-link; 

match
$N_8732116578657_134528748c_2_1 isa operation, has hash "N_8732116578657_134528748c_2_1"; 

insert
$N_8732116578657_134528748c_2_1_0 isa variable-ssa, has hash "N_8732116578657_134528748c_2_1_0", has var "arg2", has version 0, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732116578657_134528748c_2_1_0, from-node: $N_8732116578657_134528748c_2_1) isa node-link; 

match
$L_8732116578657_134528748c_2 isa list, has hash "L_8732116578657_134528748c_2"; 

insert
$N_8732116578657_134528748c_2_2 isa MLIL_CONST, has hash "N_8732116578657_134528748c_2_2", has edge-label "2";
(to-node: $N_8732116578657_134528748c_2_2, from-node: $L_8732116578657_134528748c_2) isa node-link; 

match
$N_8732116578657_134528748c_2_2 isa operation, has hash "N_8732116578657_134528748c_2_2"; 

insert
$N_8732116578657_134528748c_2_2_0 isa constant, has hash "N_8732116578657_134528748c_2_2_0", has constant-value "48", has edge-label "constant";
(to-node: $N_8732116578657_134528748c_2_2_0, from-node: $N_8732116578657_134528748c_2_2) isa node-link; 

match
$N_8732116578657_134528748c isa instruction, has hash "N_8732116578657_134528748c"; 

insert
$N_8732116578657_134528748c_3 isa constant, has hash "N_8732116578657_134528748c_3", has constant-value "1", has edge-label "src_memory";
(to-node: $N_8732116578657_134528748c_3, from-node: $N_8732116578657_134528748c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 0, has bb-end 2; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 0, has bb-end 2; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114841877_134528760c isa instruction, has hash "N_8732114841877_134528760c", has il-index 2, has asm-address "0x804bef8", has operation-type "MLIL_IF", has ins-text "if (0 != 0) then 3 @ 0x804bf2a else 6 @ 0x804bf05";
(contains-instruction: $N_8732114841877_134528760c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114841877_134528760c isa instruction, has hash "N_8732114841877_134528760c"; 

insert
$N_8732114841877_134528760c_0 isa MLIL_CMP_NE, has hash "N_8732114841877_134528760c_0", has edge-label "condition";
(to-node: $N_8732114841877_134528760c_0, from-node: $N_8732114841877_134528760c) isa node-link; 

match
$N_8732114841877_134528760c_0 isa operation, has hash "N_8732114841877_134528760c_0"; 

insert
$N_8732114841877_134528760c_0_0 isa MLIL_CONST, has hash "N_8732114841877_134528760c_0_0", has edge-label "left";
(to-node: $N_8732114841877_134528760c_0_0, from-node: $N_8732114841877_134528760c_0) isa node-link; 

match
$N_8732114841877_134528760c_0_0 isa operation, has hash "N_8732114841877_134528760c_0_0"; 

insert
$N_8732114841877_134528760c_0_0_0 isa constant, has hash "N_8732114841877_134528760c_0_0_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732114841877_134528760c_0_0_0, from-node: $N_8732114841877_134528760c_0_0) isa node-link; 

match
$N_8732114841877_134528760c_0 isa operation, has hash "N_8732114841877_134528760c_0"; 

insert
$N_8732114841877_134528760c_0_1 isa MLIL_CONST, has hash "N_8732114841877_134528760c_0_1", has edge-label "right";
(to-node: $N_8732114841877_134528760c_0_1, from-node: $N_8732114841877_134528760c_0) isa node-link; 

match
$N_8732114841877_134528760c_0_1 isa operation, has hash "N_8732114841877_134528760c_0_1"; 

insert
$N_8732114841877_134528760c_0_1_0 isa constant, has hash "N_8732114841877_134528760c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732114841877_134528760c_0_1_0, from-node: $N_8732114841877_134528760c_0_1) isa node-link; 

match
$N_8732114841877_134528760c isa instruction, has hash "N_8732114841877_134528760c"; 

insert
$N_8732114841877_134528760c_1 isa constant, has hash "N_8732114841877_134528760c_1", has constant-value "3", has edge-label "true";
(to-node: $N_8732114841877_134528760c_1, from-node: $N_8732114841877_134528760c) isa node-link; 

match
$N_8732114841877_134528760c isa instruction, has hash "N_8732114841877_134528760c"; 

insert
$N_8732114841877_134528760c_2 isa constant, has hash "N_8732114841877_134528760c_2", has constant-value "6", has edge-label "false";
(to-node: $N_8732114841877_134528760c_2, from-node: $N_8732114841877_134528760c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 3, has bb-end 5; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 3, has bb-end 5; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 3, has bb-end 5; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732116569305_134528810c isa instruction, has hash "N_8732116569305_134528810c", has il-index 3, has asm-address "0x804bf2a", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_40_1#1 = &var_1c";
(contains-instruction: $N_8732116569305_134528810c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732116569305_134528810c isa instruction, has hash "N_8732116569305_134528810c"; 

insert
$N_8732116569305_134528810c_0 isa variable-ssa, has hash "N_8732116569305_134528810c_0", has var "var_40_1", has version 1, has edge-label "dest", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732116569305_134528810c_0, from-node: $N_8732116569305_134528810c) isa node-link; 

match
$N_8732116569305_134528810c isa instruction, has hash "N_8732116569305_134528810c"; 

insert
$N_8732116569305_134528810c_1 isa MLIL_ADDRESS_OF, has hash "N_8732116569305_134528810c_1", has edge-label "src";
(to-node: $N_8732116569305_134528810c_1, from-node: $N_8732116569305_134528810c) isa node-link; 

match
$N_8732116569305_134528810c_1 isa operation, has hash "N_8732116569305_134528810c_1"; 

insert
$N_8732116569305_134528810c_1_0 isa variable, has hash "N_8732116569305_134528810c_1_0", has var "var_1c", has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732116569305_134528810c_1_0, from-node: $N_8732116569305_134528810c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 3, has bb-end 5; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 3, has bb-end 5; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115424005_134528820c isa instruction, has hash "N_8732115424005_134528820c", has il-index 4, has asm-address "0x804bf34", has operation-type "MLIL_CALL_SSA", has ins-text "eax#1, edx#1, ecx_1#1, mem#3 = 0x8048f40(0, 0, 0x2c, var_40_1#1) @ mem#2";
(contains-instruction: $N_8732115424005_134528820c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115424005_134528820c isa instruction, has hash "N_8732115424005_134528820c"; 

insert
$N_8732115424005_134528820c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8732115424005_134528820c_0", has edge-label "output";
(to-node: $N_8732115424005_134528820c_0, from-node: $N_8732115424005_134528820c) isa node-link; 

match
$N_8732115424005_134528820c_0 isa operation, has hash "N_8732115424005_134528820c_0"; 

insert
$N_8732115424005_134528820c_0_0 isa constant, has hash "N_8732115424005_134528820c_0_0", has constant-value "3", has edge-label "dest_memory";
(to-node: $N_8732115424005_134528820c_0_0, from-node: $N_8732115424005_134528820c_0) isa node-link; 

match
$N_8732115424005_134528820c_0 isa operation, has hash "N_8732115424005_134528820c_0"; 

insert
$L_8732115424005_134528820c_0_1 isa list, has hash "L_8732115424005_134528820c_0_1", has list-size 3, has edge-label "dest";
(to-node: $L_8732115424005_134528820c_0_1, from-node: $N_8732115424005_134528820c_0) isa node-link; 

match
$L_8732115424005_134528820c_0_1 isa list, has hash "L_8732115424005_134528820c_0_1"; 

insert
$N_8732115424005_134528820c_0_1_0 isa variable-ssa, has hash "N_8732115424005_134528820c_0_1_0", has var "eax", has version 1, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115424005_134528820c_0_1_0, from-node: $L_8732115424005_134528820c_0_1) isa node-link; 

match
$L_8732115424005_134528820c_0_1 isa list, has hash "L_8732115424005_134528820c_0_1"; 

insert
$N_8732115424005_134528820c_0_1_1 isa variable-ssa, has hash "N_8732115424005_134528820c_0_1_1", has var "edx", has version 1, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115424005_134528820c_0_1_1, from-node: $L_8732115424005_134528820c_0_1) isa node-link; 

match
$L_8732115424005_134528820c_0_1 isa list, has hash "L_8732115424005_134528820c_0_1"; 

insert
$N_8732115424005_134528820c_0_1_2 isa variable-ssa, has hash "N_8732115424005_134528820c_0_1_2", has var "ecx_1", has version 1, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115424005_134528820c_0_1_2, from-node: $L_8732115424005_134528820c_0_1) isa node-link; 

match
$N_8732115424005_134528820c isa instruction, has hash "N_8732115424005_134528820c"; 

insert
$N_8732115424005_134528820c_1 isa MLIL_CONST_PTR, has hash "N_8732115424005_134528820c_1", has edge-label "dest";
(to-node: $N_8732115424005_134528820c_1, from-node: $N_8732115424005_134528820c) isa node-link; 

match
$N_8732115424005_134528820c_1 isa operation, has hash "N_8732115424005_134528820c_1"; 

insert
$N_8732115424005_134528820c_1_0 isa constant, has hash "N_8732115424005_134528820c_1_0", has constant-value "134516544", has edge-label "constant";
(to-node: $N_8732115424005_134528820c_1_0, from-node: $N_8732115424005_134528820c_1) isa node-link; 

match
$N_8732115424005_134528820c isa instruction, has hash "N_8732115424005_134528820c"; 

insert
$L_8732115424005_134528820c_2 isa list, has hash "L_8732115424005_134528820c_2", has list-size 4, has edge-label "params";
(to-node: $L_8732115424005_134528820c_2, from-node: $N_8732115424005_134528820c) isa node-link; 

match
$L_8732115424005_134528820c_2 isa list, has hash "L_8732115424005_134528820c_2"; 

insert
$N_8732115424005_134528820c_2_0 isa MLIL_CONST, has hash "N_8732115424005_134528820c_2_0", has edge-label "0";
(to-node: $N_8732115424005_134528820c_2_0, from-node: $L_8732115424005_134528820c_2) isa node-link; 

match
$N_8732115424005_134528820c_2_0 isa operation, has hash "N_8732115424005_134528820c_2_0"; 

insert
$N_8732115424005_134528820c_2_0_0 isa constant, has hash "N_8732115424005_134528820c_2_0_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115424005_134528820c_2_0_0, from-node: $N_8732115424005_134528820c_2_0) isa node-link; 

match
$L_8732115424005_134528820c_2 isa list, has hash "L_8732115424005_134528820c_2"; 

insert
$N_8732115424005_134528820c_2_1 isa MLIL_CONST, has hash "N_8732115424005_134528820c_2_1", has edge-label "1";
(to-node: $N_8732115424005_134528820c_2_1, from-node: $L_8732115424005_134528820c_2) isa node-link; 

match
$N_8732115424005_134528820c_2_1 isa operation, has hash "N_8732115424005_134528820c_2_1"; 

insert
$N_8732115424005_134528820c_2_1_0 isa constant, has hash "N_8732115424005_134528820c_2_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115424005_134528820c_2_1_0, from-node: $N_8732115424005_134528820c_2_1) isa node-link; 

match
$L_8732115424005_134528820c_2 isa list, has hash "L_8732115424005_134528820c_2"; 

insert
$N_8732115424005_134528820c_2_2 isa MLIL_CONST, has hash "N_8732115424005_134528820c_2_2", has edge-label "2";
(to-node: $N_8732115424005_134528820c_2_2, from-node: $L_8732115424005_134528820c_2) isa node-link; 

match
$N_8732115424005_134528820c_2_2 isa operation, has hash "N_8732115424005_134528820c_2_2"; 

insert
$N_8732115424005_134528820c_2_2_0 isa constant, has hash "N_8732115424005_134528820c_2_2_0", has constant-value "44", has edge-label "constant";
(to-node: $N_8732115424005_134528820c_2_2_0, from-node: $N_8732115424005_134528820c_2_2) isa node-link; 

match
$L_8732115424005_134528820c_2 isa list, has hash "L_8732115424005_134528820c_2"; 

insert
$N_8732115424005_134528820c_2_3 isa MLIL_VAR_SSA, has hash "N_8732115424005_134528820c_2_3", has edge-label "3";
(to-node: $N_8732115424005_134528820c_2_3, from-node: $L_8732115424005_134528820c_2) isa node-link; 

match
$N_8732115424005_134528820c_2_3 isa operation, has hash "N_8732115424005_134528820c_2_3"; 

insert
$N_8732115424005_134528820c_2_3_0 isa variable-ssa, has hash "N_8732115424005_134528820c_2_3_0", has var "var_40_1", has version 1, has edge-label "src", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115424005_134528820c_2_3_0, from-node: $N_8732115424005_134528820c_2_3) isa node-link; 

match
$N_8732115424005_134528820c isa instruction, has hash "N_8732115424005_134528820c"; 

insert
$N_8732115424005_134528820c_3 isa constant, has hash "N_8732115424005_134528820c_3", has constant-value "2", has edge-label "src_memory";
(to-node: $N_8732115424005_134528820c_3, from-node: $N_8732115424005_134528820c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 3, has bb-end 5; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 3, has bb-end 5; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114918197_134528828c isa instruction, has hash "N_8732114918197_134528828c", has il-index 5, has asm-address "0x804bf3c", has operation-type "MLIL_IF", has ins-text "if (eax#1 != 0) then 7 @ 0x0 else 8 @ 0x804bf46";
(contains-instruction: $N_8732114918197_134528828c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114918197_134528828c isa instruction, has hash "N_8732114918197_134528828c"; 

insert
$N_8732114918197_134528828c_0 isa MLIL_CMP_NE, has hash "N_8732114918197_134528828c_0", has edge-label "condition";
(to-node: $N_8732114918197_134528828c_0, from-node: $N_8732114918197_134528828c) isa node-link; 

match
$N_8732114918197_134528828c_0 isa operation, has hash "N_8732114918197_134528828c_0"; 

insert
$N_8732114918197_134528828c_0_0 isa MLIL_VAR_SSA, has hash "N_8732114918197_134528828c_0_0", has edge-label "left";
(to-node: $N_8732114918197_134528828c_0_0, from-node: $N_8732114918197_134528828c_0) isa node-link; 

match
$N_8732114918197_134528828c_0_0 isa operation, has hash "N_8732114918197_134528828c_0_0"; 

insert
$N_8732114918197_134528828c_0_0_0 isa variable-ssa, has hash "N_8732114918197_134528828c_0_0_0", has var "eax", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114918197_134528828c_0_0_0, from-node: $N_8732114918197_134528828c_0_0) isa node-link; 

match
$N_8732114918197_134528828c_0 isa operation, has hash "N_8732114918197_134528828c_0"; 

insert
$N_8732114918197_134528828c_0_1 isa MLIL_CONST, has hash "N_8732114918197_134528828c_0_1", has edge-label "right";
(to-node: $N_8732114918197_134528828c_0_1, from-node: $N_8732114918197_134528828c_0) isa node-link; 

match
$N_8732114918197_134528828c_0_1 isa operation, has hash "N_8732114918197_134528828c_0_1"; 

insert
$N_8732114918197_134528828c_0_1_0 isa constant, has hash "N_8732114918197_134528828c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732114918197_134528828c_0_1_0, from-node: $N_8732114918197_134528828c_0_1) isa node-link; 

match
$N_8732114918197_134528828c isa instruction, has hash "N_8732114918197_134528828c"; 

insert
$N_8732114918197_134528828c_1 isa constant, has hash "N_8732114918197_134528828c_1", has constant-value "7", has edge-label "true";
(to-node: $N_8732114918197_134528828c_1, from-node: $N_8732114918197_134528828c) isa node-link; 

match
$N_8732114918197_134528828c isa instruction, has hash "N_8732114918197_134528828c"; 

insert
$N_8732114918197_134528828c_2 isa constant, has hash "N_8732114918197_134528828c_2", has constant-value "8", has edge-label "false";
(to-node: $N_8732114918197_134528828c_2, from-node: $N_8732114918197_134528828c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 6, has bb-end 6; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 6, has bb-end 6; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 6, has bb-end 6; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115209989_134528773c isa instruction, has hash "N_8732115209989_134528773c", has il-index 6, has asm-address "0x804bf05", has operation-type "MLIL_GOTO", has ins-text "goto 9 @ 0x804c09d";
(contains-instruction: $N_8732115209989_134528773c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115209989_134528773c isa instruction, has hash "N_8732115209989_134528773c"; 

insert
$N_8732115209989_134528773c_0 isa constant, has hash "N_8732115209989_134528773c_0", has constant-value "9", has edge-label "dest";
(to-node: $N_8732115209989_134528773c_0, from-node: $N_8732115209989_134528773c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114942469_0c isa instruction, has hash "N_8732114942469_0c", has il-index 71, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 74 @ 0x804c041";
(contains-instruction: $N_8732114942469_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114942469_0c isa instruction, has hash "N_8732114942469_0c"; 

insert
$N_8732114942469_0c_0 isa constant, has hash "N_8732114942469_0c_0", has constant-value "74", has edge-label "dest";
(to-node: $N_8732114942469_0c_0, from-node: $N_8732114942469_0c) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114986541_0c isa instruction, has hash "N_8732114986541_0c", has il-index 7, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 23 @ 0x804bf52";
(contains-instruction: $N_8732114986541_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114986541_0c isa instruction, has hash "N_8732114986541_0c"; 

insert
$N_8732114986541_0c_0 isa constant, has hash "N_8732114986541_0c_0", has constant-value "23", has edge-label "dest";
(to-node: $N_8732114986541_0c_0, from-node: $N_8732114986541_0c) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 7, has bb-end 7; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115447813_0c isa instruction, has hash "N_8732115447813_0c", has il-index 29, has asm-address "0x0", has operation-type "MLIL_GOTO", has ins-text "goto 23 @ 0x804bf52";
(contains-instruction: $N_8732115447813_0c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115447813_0c isa instruction, has hash "N_8732115447813_0c"; 

insert
$N_8732115447813_0c_0 isa constant, has hash "N_8732115447813_0c_0", has constant-value "23", has edge-label "dest";
(to-node: $N_8732115447813_0c_0, from-node: $N_8732115447813_0c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 8, has bb-end 8; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 8, has bb-end 8; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 8, has bb-end 8; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732116579589_134528838c isa instruction, has hash "N_8732116579589_134528838c", has il-index 8, has asm-address "0x804bf46", has operation-type "MLIL_IF", has ins-text "if (var_1c @ mem#3 == 0x2c) then 25 @ 0x804bf69 else 29 @ 0x0";
(contains-instruction: $N_8732116579589_134528838c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732116579589_134528838c isa instruction, has hash "N_8732116579589_134528838c"; 

insert
$N_8732116579589_134528838c_0 isa MLIL_CMP_E, has hash "N_8732116579589_134528838c_0", has edge-label "condition";
(to-node: $N_8732116579589_134528838c_0, from-node: $N_8732116579589_134528838c) isa node-link; 

match
$N_8732116579589_134528838c_0 isa operation, has hash "N_8732116579589_134528838c_0"; 

insert
$N_8732116579589_134528838c_0_0 isa MLIL_VAR_ALIASED, has hash "N_8732116579589_134528838c_0_0", has edge-label "left";
(to-node: $N_8732116579589_134528838c_0_0, from-node: $N_8732116579589_134528838c_0) isa node-link; 

match
$N_8732116579589_134528838c_0_0 isa operation, has hash "N_8732116579589_134528838c_0_0"; 

insert
$N_8732116579589_134528838c_0_0_0 isa variable-ssa, has hash "N_8732116579589_134528838c_0_0_0", has var "var_1c", has version 3, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732116579589_134528838c_0_0_0, from-node: $N_8732116579589_134528838c_0_0) isa node-link; 

match
$N_8732116579589_134528838c_0 isa operation, has hash "N_8732116579589_134528838c_0"; 

insert
$N_8732116579589_134528838c_0_1 isa MLIL_CONST, has hash "N_8732116579589_134528838c_0_1", has edge-label "right";
(to-node: $N_8732116579589_134528838c_0_1, from-node: $N_8732116579589_134528838c_0) isa node-link; 

match
$N_8732116579589_134528838c_0_1 isa operation, has hash "N_8732116579589_134528838c_0_1"; 

insert
$N_8732116579589_134528838c_0_1_0 isa constant, has hash "N_8732116579589_134528838c_0_1_0", has constant-value "44", has edge-label "constant";
(to-node: $N_8732116579589_134528838c_0_1_0, from-node: $N_8732116579589_134528838c_0_1) isa node-link; 

match
$N_8732116579589_134528838c isa instruction, has hash "N_8732116579589_134528838c"; 

insert
$N_8732116579589_134528838c_1 isa constant, has hash "N_8732116579589_134528838c_1", has constant-value "25", has edge-label "true";
(to-node: $N_8732116579589_134528838c_1, from-node: $N_8732116579589_134528838c) isa node-link; 

match
$N_8732116579589_134528838c isa instruction, has hash "N_8732116579589_134528838c"; 

insert
$N_8732116579589_134528838c_2 isa constant, has hash "N_8732116579589_134528838c_2", has constant-value "29", has edge-label "false";
(to-node: $N_8732116579589_134528838c_2, from-node: $N_8732116579589_134528838c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114984965_134529181c isa instruction, has hash "N_8732114984965_134529181c", has il-index 18, has asm-address "0x804c09d", has operation-type "MLIL_VAR_PHI", has ins-text "ebx#3 = ϕ(ebx#0, ebx#2)";
(contains-instruction: $N_8732114984965_134529181c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114984965_134529181c isa instruction, has hash "N_8732114984965_134529181c"; 

insert
$N_8732114984965_134529181c_0 isa variable-ssa, has hash "N_8732114984965_134529181c_0", has var "ebx", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114984965_134529181c_0, from-node: $N_8732114984965_134529181c) isa node-link; 

match
$N_8732114984965_134529181c isa instruction, has hash "N_8732114984965_134529181c"; 

insert
$L_8732114984965_134529181c_1 isa list, has hash "L_8732114984965_134529181c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732114984965_134529181c_1, from-node: $N_8732114984965_134529181c) isa node-link; 

match
$L_8732114984965_134529181c_1 isa list, has hash "L_8732114984965_134529181c_1"; 

insert
$N_8732114984965_134529181c_1_0 isa variable-ssa, has hash "N_8732114984965_134529181c_1_0", has var "ebx", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114984965_134529181c_1_0, from-node: $L_8732114984965_134529181c_1) isa node-link; 

match
$L_8732114984965_134529181c_1 isa list, has hash "L_8732114984965_134529181c_1"; 

insert
$N_8732114984965_134529181c_1_1 isa variable-ssa, has hash "N_8732114984965_134529181c_1_1", has var "ebx", has version 2, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114984965_134529181c_1_1, from-node: $L_8732114984965_134529181c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115091977_134529181c isa instruction, has hash "N_8732115091977_134529181c", has il-index 15, has asm-address "0x804c09d", has operation-type "MLIL_VAR_PHI", has ins-text "eax_5#12 = ϕ(eax_4#0, eax#1, eax_2#3, eax_3#4, eax_4#10, eax_5#11)";
(contains-instruction: $N_8732115091977_134529181c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115091977_134529181c isa instruction, has hash "N_8732115091977_134529181c"; 

insert
$N_8732115091977_134529181c_0 isa variable-ssa, has hash "N_8732115091977_134529181c_0", has var "eax_5", has version 12, has edge-label "dest", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115091977_134529181c_0, from-node: $N_8732115091977_134529181c) isa node-link; 

match
$N_8732115091977_134529181c isa instruction, has hash "N_8732115091977_134529181c"; 

insert
$L_8732115091977_134529181c_1 isa list, has hash "L_8732115091977_134529181c_1", has list-size 6, has edge-label "src";
(to-node: $L_8732115091977_134529181c_1, from-node: $N_8732115091977_134529181c) isa node-link; 

match
$L_8732115091977_134529181c_1 isa list, has hash "L_8732115091977_134529181c_1"; 

insert
$N_8732115091977_134529181c_1_0 isa variable-ssa, has hash "N_8732115091977_134529181c_1_0", has var "eax_4", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115091977_134529181c_1_0, from-node: $L_8732115091977_134529181c_1) isa node-link; 

match
$L_8732115091977_134529181c_1 isa list, has hash "L_8732115091977_134529181c_1"; 

insert
$N_8732115091977_134529181c_1_1 isa variable-ssa, has hash "N_8732115091977_134529181c_1_1", has var "eax", has version 1, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115091977_134529181c_1_1, from-node: $L_8732115091977_134529181c_1) isa node-link; 

match
$L_8732115091977_134529181c_1 isa list, has hash "L_8732115091977_134529181c_1"; 

insert
$N_8732115091977_134529181c_1_2 isa variable-ssa, has hash "N_8732115091977_134529181c_1_2", has var "eax_2", has version 3, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115091977_134529181c_1_2, from-node: $L_8732115091977_134529181c_1) isa node-link; 

match
$L_8732115091977_134529181c_1 isa list, has hash "L_8732115091977_134529181c_1"; 

insert
$N_8732115091977_134529181c_1_3 isa variable-ssa, has hash "N_8732115091977_134529181c_1_3", has var "eax_3", has version 4, has edge-label "3", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115091977_134529181c_1_3, from-node: $L_8732115091977_134529181c_1) isa node-link; 

match
$L_8732115091977_134529181c_1 isa list, has hash "L_8732115091977_134529181c_1"; 

insert
$N_8732115091977_134529181c_1_4 isa variable-ssa, has hash "N_8732115091977_134529181c_1_4", has var "eax_4", has version 10, has edge-label "4", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115091977_134529181c_1_4, from-node: $L_8732115091977_134529181c_1) isa node-link; 

match
$L_8732115091977_134529181c_1 isa list, has hash "L_8732115091977_134529181c_1"; 

insert
$N_8732115091977_134529181c_1_5 isa variable-ssa, has hash "N_8732115091977_134529181c_1_5", has var "eax_5", has version 11, has edge-label "5", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115091977_134529181c_1_5, from-node: $L_8732115091977_134529181c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115098117_134529181c isa instruction, has hash "N_8732115098117_134529181c", has il-index 14, has asm-address "0x804c09d", has operation-type "MLIL_VAR_PHI", has ins-text "var_18_1#2 = ϕ(var_18#0, var_18_1#1)";
(contains-instruction: $N_8732115098117_134529181c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115098117_134529181c isa instruction, has hash "N_8732115098117_134529181c"; 

insert
$N_8732115098117_134529181c_0 isa variable-ssa, has hash "N_8732115098117_134529181c_0", has var "var_18_1", has version 2, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115098117_134529181c_0, from-node: $N_8732115098117_134529181c) isa node-link; 

match
$N_8732115098117_134529181c isa instruction, has hash "N_8732115098117_134529181c"; 

insert
$L_8732115098117_134529181c_1 isa list, has hash "L_8732115098117_134529181c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115098117_134529181c_1, from-node: $N_8732115098117_134529181c) isa node-link; 

match
$L_8732115098117_134529181c_1 isa list, has hash "L_8732115098117_134529181c_1"; 

insert
$N_8732115098117_134529181c_1_0 isa variable-ssa, has hash "N_8732115098117_134529181c_1_0", has var "var_18", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115098117_134529181c_1_0, from-node: $L_8732115098117_134529181c_1) isa node-link; 

match
$L_8732115098117_134529181c_1 isa list, has hash "L_8732115098117_134529181c_1"; 

insert
$N_8732115098117_134529181c_1_1 isa variable-ssa, has hash "N_8732115098117_134529181c_1_1", has var "var_18_1", has version 1, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115098117_134529181c_1_1, from-node: $L_8732115098117_134529181c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115099653_134529181c isa instruction, has hash "N_8732115099653_134529181c", has il-index 16, has asm-address "0x804c09d", has operation-type "MLIL_VAR_PHI", has ins-text "ecx_4#6 = ϕ(ecx#0, ecx_1#1, ecx_2#2, ecx_3#4, ecx_4#5)";
(contains-instruction: $N_8732115099653_134529181c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115099653_134529181c isa instruction, has hash "N_8732115099653_134529181c"; 

insert
$N_8732115099653_134529181c_0 isa variable-ssa, has hash "N_8732115099653_134529181c_0", has var "ecx_4", has version 6, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115099653_134529181c_0, from-node: $N_8732115099653_134529181c) isa node-link; 

match
$N_8732115099653_134529181c isa instruction, has hash "N_8732115099653_134529181c"; 

insert
$L_8732115099653_134529181c_1 isa list, has hash "L_8732115099653_134529181c_1", has list-size 5, has edge-label "src";
(to-node: $L_8732115099653_134529181c_1, from-node: $N_8732115099653_134529181c) isa node-link; 

match
$L_8732115099653_134529181c_1 isa list, has hash "L_8732115099653_134529181c_1"; 

insert
$N_8732115099653_134529181c_1_0 isa variable-ssa, has hash "N_8732115099653_134529181c_1_0", has var "ecx", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115099653_134529181c_1_0, from-node: $L_8732115099653_134529181c_1) isa node-link; 

match
$L_8732115099653_134529181c_1 isa list, has hash "L_8732115099653_134529181c_1"; 

insert
$N_8732115099653_134529181c_1_1 isa variable-ssa, has hash "N_8732115099653_134529181c_1_1", has var "ecx_1", has version 1, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115099653_134529181c_1_1, from-node: $L_8732115099653_134529181c_1) isa node-link; 

match
$L_8732115099653_134529181c_1 isa list, has hash "L_8732115099653_134529181c_1"; 

insert
$N_8732115099653_134529181c_1_2 isa variable-ssa, has hash "N_8732115099653_134529181c_1_2", has var "ecx_2", has version 2, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115099653_134529181c_1_2, from-node: $L_8732115099653_134529181c_1) isa node-link; 

match
$L_8732115099653_134529181c_1 isa list, has hash "L_8732115099653_134529181c_1"; 

insert
$N_8732115099653_134529181c_1_3 isa variable-ssa, has hash "N_8732115099653_134529181c_1_3", has var "ecx_3", has version 4, has edge-label "3", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115099653_134529181c_1_3, from-node: $L_8732115099653_134529181c_1) isa node-link; 

match
$L_8732115099653_134529181c_1 isa list, has hash "L_8732115099653_134529181c_1"; 

insert
$N_8732115099653_134529181c_1_4 isa variable-ssa, has hash "N_8732115099653_134529181c_1_4", has var "ecx_4", has version 5, has edge-label "4", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115099653_134529181c_1_4, from-node: $L_8732115099653_134529181c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115147781_134529181c isa instruction, has hash "N_8732115147781_134529181c", has il-index 17, has asm-address "0x804c09d", has operation-type "MLIL_VAR_PHI", has ins-text "edx_5#13 = ϕ(edx_4#0, edx#1, edx_1#2, edx_2#3, edx_4#11, edx_5#12)";
(contains-instruction: $N_8732115147781_134529181c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115147781_134529181c isa instruction, has hash "N_8732115147781_134529181c"; 

insert
$N_8732115147781_134529181c_0 isa variable-ssa, has hash "N_8732115147781_134529181c_0", has var "edx_5", has version 13, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115147781_134529181c_0, from-node: $N_8732115147781_134529181c) isa node-link; 

match
$N_8732115147781_134529181c isa instruction, has hash "N_8732115147781_134529181c"; 

insert
$L_8732115147781_134529181c_1 isa list, has hash "L_8732115147781_134529181c_1", has list-size 6, has edge-label "src";
(to-node: $L_8732115147781_134529181c_1, from-node: $N_8732115147781_134529181c) isa node-link; 

match
$L_8732115147781_134529181c_1 isa list, has hash "L_8732115147781_134529181c_1"; 

insert
$N_8732115147781_134529181c_1_0 isa variable-ssa, has hash "N_8732115147781_134529181c_1_0", has var "edx_4", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115147781_134529181c_1_0, from-node: $L_8732115147781_134529181c_1) isa node-link; 

match
$L_8732115147781_134529181c_1 isa list, has hash "L_8732115147781_134529181c_1"; 

insert
$N_8732115147781_134529181c_1_1 isa variable-ssa, has hash "N_8732115147781_134529181c_1_1", has var "edx", has version 1, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115147781_134529181c_1_1, from-node: $L_8732115147781_134529181c_1) isa node-link; 

match
$L_8732115147781_134529181c_1 isa list, has hash "L_8732115147781_134529181c_1"; 

insert
$N_8732115147781_134529181c_1_2 isa variable-ssa, has hash "N_8732115147781_134529181c_1_2", has var "edx_1", has version 2, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115147781_134529181c_1_2, from-node: $L_8732115147781_134529181c_1) isa node-link; 

match
$L_8732115147781_134529181c_1 isa list, has hash "L_8732115147781_134529181c_1"; 

insert
$N_8732115147781_134529181c_1_3 isa variable-ssa, has hash "N_8732115147781_134529181c_1_3", has var "edx_2", has version 3, has edge-label "3", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115147781_134529181c_1_3, from-node: $L_8732115147781_134529181c_1) isa node-link; 

match
$L_8732115147781_134529181c_1 isa list, has hash "L_8732115147781_134529181c_1"; 

insert
$N_8732115147781_134529181c_1_4 isa variable-ssa, has hash "N_8732115147781_134529181c_1_4", has var "edx_4", has version 11, has edge-label "4", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115147781_134529181c_1_4, from-node: $L_8732115147781_134529181c_1) isa node-link; 

match
$L_8732115147781_134529181c_1 isa list, has hash "L_8732115147781_134529181c_1"; 

insert
$N_8732115147781_134529181c_1_5 isa variable-ssa, has hash "N_8732115147781_134529181c_1_5", has var "edx_5", has version 12, has edge-label "5", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115147781_134529181c_1_5, from-node: $L_8732115147781_134529181c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115263757_134529181c isa instruction, has hash "N_8732115263757_134529181c", has il-index 19, has asm-address "0x804c09d", has operation-type "MLIL_VAR_PHI", has ins-text "esi_2#4 = ϕ(esi#0, esi_2#3)";
(contains-instruction: $N_8732115263757_134529181c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115263757_134529181c isa instruction, has hash "N_8732115263757_134529181c"; 

insert
$N_8732115263757_134529181c_0 isa variable-ssa, has hash "N_8732115263757_134529181c_0", has var "esi_2", has version 4, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115263757_134529181c_0, from-node: $N_8732115263757_134529181c) isa node-link; 

match
$N_8732115263757_134529181c isa instruction, has hash "N_8732115263757_134529181c"; 

insert
$L_8732115263757_134529181c_1 isa list, has hash "L_8732115263757_134529181c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115263757_134529181c_1, from-node: $N_8732115263757_134529181c) isa node-link; 

match
$L_8732115263757_134529181c_1 isa list, has hash "L_8732115263757_134529181c_1"; 

insert
$N_8732115263757_134529181c_1_0 isa variable-ssa, has hash "N_8732115263757_134529181c_1_0", has var "esi", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115263757_134529181c_1_0, from-node: $L_8732115263757_134529181c_1) isa node-link; 

match
$L_8732115263757_134529181c_1 isa list, has hash "L_8732115263757_134529181c_1"; 

insert
$N_8732115263757_134529181c_1_1 isa variable-ssa, has hash "N_8732115263757_134529181c_1_1", has var "esi_2", has version 3, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115263757_134529181c_1_1, from-node: $L_8732115263757_134529181c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115288001_134529181c isa instruction, has hash "N_8732115288001_134529181c", has il-index 22, has asm-address "0x804c09d", has operation-type "MLIL_RET", has ins-text "return 0";
(contains-instruction: $N_8732115288001_134529181c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115288001_134529181c isa instruction, has hash "N_8732115288001_134529181c"; 

insert
$L_8732115288001_134529181c_0 isa list, has hash "L_8732115288001_134529181c_0", has list-size 1, has edge-label "src";
(to-node: $L_8732115288001_134529181c_0, from-node: $N_8732115288001_134529181c) isa node-link; 

match
$L_8732115288001_134529181c_0 isa list, has hash "L_8732115288001_134529181c_0"; 

insert
$N_8732115288001_134529181c_0_0 isa MLIL_CONST, has hash "N_8732115288001_134529181c_0_0", has edge-label "0";
(to-node: $N_8732115288001_134529181c_0_0, from-node: $L_8732115288001_134529181c_0) isa node-link; 

match
$N_8732115288001_134529181c_0_0 isa operation, has hash "N_8732115288001_134529181c_0_0"; 

insert
$N_8732115288001_134529181c_0_0_0 isa constant, has hash "N_8732115288001_134529181c_0_0_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115288001_134529181c_0_0_0, from-node: $N_8732115288001_134529181c_0_0) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115335429_134529181c isa instruction, has hash "N_8732115335429_134529181c", has il-index 21, has asm-address "0x804c09d", has operation-type "MLIL_MEM_PHI", has ins-text "mem#16 = ϕ(mem#2, mem#7, mem#11, mem#13, mem#14, mem#15)";
(contains-instruction: $N_8732115335429_134529181c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115335429_134529181c isa instruction, has hash "N_8732115335429_134529181c"; 

insert
$N_8732115335429_134529181c_0 isa constant, has hash "N_8732115335429_134529181c_0", has constant-value "16", has edge-label "dest_memory";
(to-node: $N_8732115335429_134529181c_0, from-node: $N_8732115335429_134529181c) isa node-link; 

match
$N_8732115335429_134529181c isa instruction, has hash "N_8732115335429_134529181c"; 

insert
$L_8732115335429_134529181c_1 isa list, has hash "L_8732115335429_134529181c_1", has list-size 6, has edge-label "src_memory";
(to-node: $L_8732115335429_134529181c_1, from-node: $N_8732115335429_134529181c) isa node-link; 

match
$L_8732115335429_134529181c_1 isa list, has hash "L_8732115335429_134529181c_1"; 

insert
$N_8732115335429_134529181c_1_0 isa constant, has hash "N_8732115335429_134529181c_1_0", has constant-value "2", has edge-label "0";
(to-node: $N_8732115335429_134529181c_1_0, from-node: $L_8732115335429_134529181c_1) isa node-link; 

match
$L_8732115335429_134529181c_1 isa list, has hash "L_8732115335429_134529181c_1"; 

insert
$N_8732115335429_134529181c_1_1 isa constant, has hash "N_8732115335429_134529181c_1_1", has constant-value "7", has edge-label "1";
(to-node: $N_8732115335429_134529181c_1_1, from-node: $L_8732115335429_134529181c_1) isa node-link; 

match
$L_8732115335429_134529181c_1 isa list, has hash "L_8732115335429_134529181c_1"; 

insert
$N_8732115335429_134529181c_1_2 isa constant, has hash "N_8732115335429_134529181c_1_2", has constant-value "11", has edge-label "2";
(to-node: $N_8732115335429_134529181c_1_2, from-node: $L_8732115335429_134529181c_1) isa node-link; 

match
$L_8732115335429_134529181c_1 isa list, has hash "L_8732115335429_134529181c_1"; 

insert
$N_8732115335429_134529181c_1_3 isa constant, has hash "N_8732115335429_134529181c_1_3", has constant-value "13", has edge-label "3";
(to-node: $N_8732115335429_134529181c_1_3, from-node: $L_8732115335429_134529181c_1) isa node-link; 

match
$L_8732115335429_134529181c_1 isa list, has hash "L_8732115335429_134529181c_1"; 

insert
$N_8732115335429_134529181c_1_4 isa constant, has hash "N_8732115335429_134529181c_1_4", has constant-value "14", has edge-label "4";
(to-node: $N_8732115335429_134529181c_1_4, from-node: $L_8732115335429_134529181c_1) isa node-link; 

match
$L_8732115335429_134529181c_1 isa list, has hash "L_8732115335429_134529181c_1"; 

insert
$N_8732115335429_134529181c_1_5 isa constant, has hash "N_8732115335429_134529181c_1_5", has constant-value "15", has edge-label "5";
(to-node: $N_8732115335429_134529181c_1_5, from-node: $L_8732115335429_134529181c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115339269_134529181c isa instruction, has hash "N_8732115339269_134529181c", has il-index 20, has asm-address "0x804c09d", has operation-type "MLIL_VAR_PHI", has ins-text "cond:0_1#3 = ϕ(cond:0#0, cond:0_1#2)";
(contains-instruction: $N_8732115339269_134529181c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115339269_134529181c isa instruction, has hash "N_8732115339269_134529181c"; 

insert
$N_8732115339269_134529181c_0 isa variable-ssa, has hash "N_8732115339269_134529181c_0", has var "cond:0_1", has version 3, has edge-label "dest", has var-type "bool", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115339269_134529181c_0, from-node: $N_8732115339269_134529181c) isa node-link; 

match
$N_8732115339269_134529181c isa instruction, has hash "N_8732115339269_134529181c"; 

insert
$L_8732115339269_134529181c_1 isa list, has hash "L_8732115339269_134529181c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115339269_134529181c_1, from-node: $N_8732115339269_134529181c) isa node-link; 

match
$L_8732115339269_134529181c_1 isa list, has hash "L_8732115339269_134529181c_1"; 

insert
$N_8732115339269_134529181c_1_0 isa variable-ssa, has hash "N_8732115339269_134529181c_1_0", has var "cond:0", has version 0, has edge-label "0", has var-type "bool", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115339269_134529181c_1_0, from-node: $L_8732115339269_134529181c_1) isa node-link; 

match
$L_8732115339269_134529181c_1 isa list, has hash "L_8732115339269_134529181c_1"; 

insert
$N_8732115339269_134529181c_1_1 isa variable-ssa, has hash "N_8732115339269_134529181c_1_1", has var "cond:0_1", has version 2, has edge-label "1", has var-type "bool", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115339269_134529181c_1_1, from-node: $L_8732115339269_134529181c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115373329_134529181c isa instruction, has hash "N_8732115373329_134529181c", has il-index 11, has asm-address "0x804c09d", has operation-type "MLIL_VAR_PHI", has ins-text "var_44_1#3 = ϕ(var_44#0, var_44_1#2)";
(contains-instruction: $N_8732115373329_134529181c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115373329_134529181c isa instruction, has hash "N_8732115373329_134529181c"; 

insert
$N_8732115373329_134529181c_0 isa variable-ssa, has hash "N_8732115373329_134529181c_0", has var "var_44_1", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115373329_134529181c_0, from-node: $N_8732115373329_134529181c) isa node-link; 

match
$N_8732115373329_134529181c isa instruction, has hash "N_8732115373329_134529181c"; 

insert
$L_8732115373329_134529181c_1 isa list, has hash "L_8732115373329_134529181c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115373329_134529181c_1, from-node: $N_8732115373329_134529181c) isa node-link; 

match
$L_8732115373329_134529181c_1 isa list, has hash "L_8732115373329_134529181c_1"; 

insert
$N_8732115373329_134529181c_1_0 isa variable-ssa, has hash "N_8732115373329_134529181c_1_0", has var "var_44", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115373329_134529181c_1_0, from-node: $L_8732115373329_134529181c_1) isa node-link; 

match
$L_8732115373329_134529181c_1 isa list, has hash "L_8732115373329_134529181c_1"; 

insert
$N_8732115373329_134529181c_1_1 isa variable-ssa, has hash "N_8732115373329_134529181c_1_1", has var "var_44_1", has version 2, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115373329_134529181c_1_1, from-node: $L_8732115373329_134529181c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115376389_134529181c isa instruction, has hash "N_8732115376389_134529181c", has il-index 12, has asm-address "0x804c09d", has operation-type "MLIL_VAR_PHI", has ins-text "var_40_2#4 = ϕ(var_40#0, var_40_1#1, var_40_2#3)";
(contains-instruction: $N_8732115376389_134529181c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115376389_134529181c isa instruction, has hash "N_8732115376389_134529181c"; 

insert
$N_8732115376389_134529181c_0 isa variable-ssa, has hash "N_8732115376389_134529181c_0", has var "var_40_2", has version 4, has edge-label "dest", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115376389_134529181c_0, from-node: $N_8732115376389_134529181c) isa node-link; 

match
$N_8732115376389_134529181c isa instruction, has hash "N_8732115376389_134529181c"; 

insert
$L_8732115376389_134529181c_1 isa list, has hash "L_8732115376389_134529181c_1", has list-size 3, has edge-label "src";
(to-node: $L_8732115376389_134529181c_1, from-node: $N_8732115376389_134529181c) isa node-link; 

match
$L_8732115376389_134529181c_1 isa list, has hash "L_8732115376389_134529181c_1"; 

insert
$N_8732115376389_134529181c_1_0 isa variable-ssa, has hash "N_8732115376389_134529181c_1_0", has var "var_40", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115376389_134529181c_1_0, from-node: $L_8732115376389_134529181c_1) isa node-link; 

match
$L_8732115376389_134529181c_1 isa list, has hash "L_8732115376389_134529181c_1"; 

insert
$N_8732115376389_134529181c_1_1 isa variable-ssa, has hash "N_8732115376389_134529181c_1_1", has var "var_40_1", has version 1, has edge-label "1", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115376389_134529181c_1_1, from-node: $L_8732115376389_134529181c_1) isa node-link; 

match
$L_8732115376389_134529181c_1 isa list, has hash "L_8732115376389_134529181c_1"; 

insert
$N_8732115376389_134529181c_1_2 isa variable-ssa, has hash "N_8732115376389_134529181c_1_2", has var "var_40_2", has version 3, has edge-label "2", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115376389_134529181c_1_2, from-node: $L_8732115376389_134529181c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115379973_134529181c isa instruction, has hash "N_8732115379973_134529181c", has il-index 13, has asm-address "0x804c09d", has operation-type "MLIL_VAR_PHI", has ins-text "var_31_1#5 = ϕ(var_31#0, var_31_1#4)";
(contains-instruction: $N_8732115379973_134529181c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115379973_134529181c isa instruction, has hash "N_8732115379973_134529181c"; 

insert
$N_8732115379973_134529181c_0 isa variable-ssa, has hash "N_8732115379973_134529181c_0", has var "var_31_1", has version 5, has edge-label "dest", has var-type "char", has var-size -53, has var-func "cgc_init_track";
(to-node: $N_8732115379973_134529181c_0, from-node: $N_8732115379973_134529181c) isa node-link; 

match
$N_8732115379973_134529181c isa instruction, has hash "N_8732115379973_134529181c"; 

insert
$L_8732115379973_134529181c_1 isa list, has hash "L_8732115379973_134529181c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115379973_134529181c_1, from-node: $N_8732115379973_134529181c) isa node-link; 

match
$L_8732115379973_134529181c_1 isa list, has hash "L_8732115379973_134529181c_1"; 

insert
$N_8732115379973_134529181c_1_0 isa variable-ssa, has hash "N_8732115379973_134529181c_1_0", has var "var_31", has version 0, has edge-label "0", has var-type "char", has var-size -49, has var-func "cgc_init_track";
(to-node: $N_8732115379973_134529181c_1_0, from-node: $L_8732115379973_134529181c_1) isa node-link; 

match
$L_8732115379973_134529181c_1 isa list, has hash "L_8732115379973_134529181c_1"; 

insert
$N_8732115379973_134529181c_1_1 isa variable-ssa, has hash "N_8732115379973_134529181c_1_1", has var "var_31_1", has version 4, has edge-label "1", has var-type "char", has var-size -53, has var-func "cgc_init_track";
(to-node: $N_8732115379973_134529181c_1_1, from-node: $L_8732115379973_134529181c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115426321_134529181c isa instruction, has hash "N_8732115426321_134529181c", has il-index 10, has asm-address "0x804c09d", has operation-type "MLIL_VAR_PHI", has ins-text "var_48_1#3 = ϕ(var_48#0, var_48_1#2)";
(contains-instruction: $N_8732115426321_134529181c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115426321_134529181c isa instruction, has hash "N_8732115426321_134529181c"; 

insert
$N_8732115426321_134529181c_0 isa variable-ssa, has hash "N_8732115426321_134529181c_0", has var "var_48_1", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115426321_134529181c_0, from-node: $N_8732115426321_134529181c) isa node-link; 

match
$N_8732115426321_134529181c isa instruction, has hash "N_8732115426321_134529181c"; 

insert
$L_8732115426321_134529181c_1 isa list, has hash "L_8732115426321_134529181c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115426321_134529181c_1, from-node: $N_8732115426321_134529181c) isa node-link; 

match
$L_8732115426321_134529181c_1 isa list, has hash "L_8732115426321_134529181c_1"; 

insert
$N_8732115426321_134529181c_1_0 isa variable-ssa, has hash "N_8732115426321_134529181c_1_0", has var "var_48", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115426321_134529181c_1_0, from-node: $L_8732115426321_134529181c_1) isa node-link; 

match
$L_8732115426321_134529181c_1 isa list, has hash "L_8732115426321_134529181c_1"; 

insert
$N_8732115426321_134529181c_1_1 isa variable-ssa, has hash "N_8732115426321_134529181c_1_1", has var "var_48_1", has version 2, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115426321_134529181c_1_1, from-node: $L_8732115426321_134529181c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 9, has bb-end 22; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115426325_134529181c isa instruction, has hash "N_8732115426325_134529181c", has il-index 9, has asm-address "0x804c09d", has operation-type "MLIL_VAR_PHI", has ins-text "var_4c_2#4 = ϕ(var_4c#0, var_4c_1#1, var_4c_1#2, var_4c_2#3)";
(contains-instruction: $N_8732115426325_134529181c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115426325_134529181c isa instruction, has hash "N_8732115426325_134529181c"; 

insert
$N_8732115426325_134529181c_0 isa variable-ssa, has hash "N_8732115426325_134529181c_0", has var "var_4c_2", has version 4, has edge-label "dest", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115426325_134529181c_0, from-node: $N_8732115426325_134529181c) isa node-link; 

match
$N_8732115426325_134529181c isa instruction, has hash "N_8732115426325_134529181c"; 

insert
$L_8732115426325_134529181c_1 isa list, has hash "L_8732115426325_134529181c_1", has list-size 4, has edge-label "src";
(to-node: $L_8732115426325_134529181c_1, from-node: $N_8732115426325_134529181c) isa node-link; 

match
$L_8732115426325_134529181c_1 isa list, has hash "L_8732115426325_134529181c_1"; 

insert
$N_8732115426325_134529181c_1_0 isa variable-ssa, has hash "N_8732115426325_134529181c_1_0", has var "var_4c", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115426325_134529181c_1_0, from-node: $L_8732115426325_134529181c_1) isa node-link; 

match
$L_8732115426325_134529181c_1 isa list, has hash "L_8732115426325_134529181c_1"; 

insert
$N_8732115426325_134529181c_1_1 isa variable-ssa, has hash "N_8732115426325_134529181c_1_1", has var "var_4c_1", has version 1, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115426325_134529181c_1_1, from-node: $L_8732115426325_134529181c_1) isa node-link; 

match
$L_8732115426325_134529181c_1 isa list, has hash "L_8732115426325_134529181c_1"; 

insert
$N_8732115426325_134529181c_1_2 isa variable-ssa, has hash "N_8732115426325_134529181c_1_2", has var "var_4c_1", has version 2, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115426325_134529181c_1_2, from-node: $L_8732115426325_134529181c_1) isa node-link; 

match
$L_8732115426325_134529181c_1 isa list, has hash "L_8732115426325_134529181c_1"; 

insert
$N_8732115426325_134529181c_1_3 isa variable-ssa, has hash "N_8732115426325_134529181c_1_3", has var "var_4c_2", has version 3, has edge-label "3", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115426325_134529181c_1_3, from-node: $L_8732115426325_134529181c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 23, has bb-end 24; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 23, has bb-end 24; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 23, has bb-end 24; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114922245_134528850c isa instruction, has hash "N_8732114922245_134528850c", has il-index 23, has asm-address "0x804bf52", has operation-type "MLIL_CALL_SSA", has ins-text "mem#15 = 0x8049490(0, edx#1, ecx_1#1, 0) @ mem#3";
(contains-instruction: $N_8732114922245_134528850c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114922245_134528850c isa instruction, has hash "N_8732114922245_134528850c"; 

insert
$N_8732114922245_134528850c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8732114922245_134528850c_0", has edge-label "output";
(to-node: $N_8732114922245_134528850c_0, from-node: $N_8732114922245_134528850c) isa node-link; 

match
$N_8732114922245_134528850c_0 isa operation, has hash "N_8732114922245_134528850c_0"; 

insert
$N_8732114922245_134528850c_0_0 isa constant, has hash "N_8732114922245_134528850c_0_0", has constant-value "15", has edge-label "dest_memory";
(to-node: $N_8732114922245_134528850c_0_0, from-node: $N_8732114922245_134528850c_0) isa node-link; 

match
$N_8732114922245_134528850c_0 isa operation, has hash "N_8732114922245_134528850c_0"; 

insert
$L_8732114922245_134528850c_0_1 isa list, has hash "L_8732114922245_134528850c_0_1", has list-size 0, has edge-label "dest";
(to-node: $L_8732114922245_134528850c_0_1, from-node: $N_8732114922245_134528850c_0) isa node-link; 

match
$N_8732114922245_134528850c isa instruction, has hash "N_8732114922245_134528850c"; 

insert
$N_8732114922245_134528850c_1 isa MLIL_CONST_PTR, has hash "N_8732114922245_134528850c_1", has edge-label "dest";
(to-node: $N_8732114922245_134528850c_1, from-node: $N_8732114922245_134528850c) isa node-link; 

match
$N_8732114922245_134528850c_1 isa operation, has hash "N_8732114922245_134528850c_1"; 

insert
$N_8732114922245_134528850c_1_0 isa constant, has hash "N_8732114922245_134528850c_1_0", has constant-value "134517904", has edge-label "constant";
(to-node: $N_8732114922245_134528850c_1_0, from-node: $N_8732114922245_134528850c_1) isa node-link; 

match
$N_8732114922245_134528850c isa instruction, has hash "N_8732114922245_134528850c"; 

insert
$L_8732114922245_134528850c_2 isa list, has hash "L_8732114922245_134528850c_2", has list-size 4, has edge-label "params";
(to-node: $L_8732114922245_134528850c_2, from-node: $N_8732114922245_134528850c) isa node-link; 

match
$L_8732114922245_134528850c_2 isa list, has hash "L_8732114922245_134528850c_2"; 

insert
$N_8732114922245_134528850c_2_0 isa MLIL_CONST, has hash "N_8732114922245_134528850c_2_0", has edge-label "0";
(to-node: $N_8732114922245_134528850c_2_0, from-node: $L_8732114922245_134528850c_2) isa node-link; 

match
$N_8732114922245_134528850c_2_0 isa operation, has hash "N_8732114922245_134528850c_2_0"; 

insert
$N_8732114922245_134528850c_2_0_0 isa constant, has hash "N_8732114922245_134528850c_2_0_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732114922245_134528850c_2_0_0, from-node: $N_8732114922245_134528850c_2_0) isa node-link; 

match
$L_8732114922245_134528850c_2 isa list, has hash "L_8732114922245_134528850c_2"; 

insert
$N_8732114922245_134528850c_2_1 isa MLIL_VAR_SSA, has hash "N_8732114922245_134528850c_2_1", has edge-label "1";
(to-node: $N_8732114922245_134528850c_2_1, from-node: $L_8732114922245_134528850c_2) isa node-link; 

match
$N_8732114922245_134528850c_2_1 isa operation, has hash "N_8732114922245_134528850c_2_1"; 

insert
$N_8732114922245_134528850c_2_1_0 isa variable-ssa, has hash "N_8732114922245_134528850c_2_1_0", has var "edx", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114922245_134528850c_2_1_0, from-node: $N_8732114922245_134528850c_2_1) isa node-link; 

match
$L_8732114922245_134528850c_2 isa list, has hash "L_8732114922245_134528850c_2"; 

insert
$N_8732114922245_134528850c_2_2 isa MLIL_VAR_SSA, has hash "N_8732114922245_134528850c_2_2", has edge-label "2";
(to-node: $N_8732114922245_134528850c_2_2, from-node: $L_8732114922245_134528850c_2) isa node-link; 

match
$N_8732114922245_134528850c_2_2 isa operation, has hash "N_8732114922245_134528850c_2_2"; 

insert
$N_8732114922245_134528850c_2_2_0 isa variable-ssa, has hash "N_8732114922245_134528850c_2_2_0", has var "ecx_1", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114922245_134528850c_2_2_0, from-node: $N_8732114922245_134528850c_2_2) isa node-link; 

match
$L_8732114922245_134528850c_2 isa list, has hash "L_8732114922245_134528850c_2"; 

insert
$N_8732114922245_134528850c_2_3 isa MLIL_CONST_PTR, has hash "N_8732114922245_134528850c_2_3", has edge-label "3";
(to-node: $N_8732114922245_134528850c_2_3, from-node: $L_8732114922245_134528850c_2) isa node-link; 

match
$N_8732114922245_134528850c_2_3 isa operation, has hash "N_8732114922245_134528850c_2_3"; 

insert
$N_8732114922245_134528850c_2_3_0 isa constant, has hash "N_8732114922245_134528850c_2_3_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732114922245_134528850c_2_3_0, from-node: $N_8732114922245_134528850c_2_3) isa node-link; 

match
$N_8732114922245_134528850c isa instruction, has hash "N_8732114922245_134528850c"; 

insert
$N_8732114922245_134528850c_3 isa constant, has hash "N_8732114922245_134528850c_3", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732114922245_134528850c_3, from-node: $N_8732114922245_134528850c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 23, has bb-end 24; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 23, has bb-end 24; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115439585_134528862c isa instruction, has hash "N_8732115439585_134528862c", has il-index 24, has asm-address "0x804bf5e", has operation-type "MLIL_GOTO", has ins-text "goto 9 @ 0x804c09d";
(contains-instruction: $N_8732115439585_134528862c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115439585_134528862c isa instruction, has hash "N_8732115439585_134528862c"; 

insert
$N_8732115439585_134528862c_0 isa constant, has hash "N_8732115439585_134528862c_0", has constant-value "9", has edge-label "dest";
(to-node: $N_8732115439585_134528862c_0, from-node: $N_8732115439585_134528862c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 25, has bb-end 28; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 25, has bb-end 28; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 25, has bb-end 28; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115233497_134528873c isa instruction, has hash "N_8732115233497_134528873c", has il-index 25, has asm-address "0x804bf69", has operation-type "MLIL_CALL_SSA", has ins-text "eax_1#2, edx_1#2, ecx_2#2, mem#4 = 0x804bbe0(0) @ mem#3";
(contains-instruction: $N_8732115233497_134528873c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115233497_134528873c isa instruction, has hash "N_8732115233497_134528873c"; 

insert
$N_8732115233497_134528873c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8732115233497_134528873c_0", has edge-label "output";
(to-node: $N_8732115233497_134528873c_0, from-node: $N_8732115233497_134528873c) isa node-link; 

match
$N_8732115233497_134528873c_0 isa operation, has hash "N_8732115233497_134528873c_0"; 

insert
$N_8732115233497_134528873c_0_0 isa constant, has hash "N_8732115233497_134528873c_0_0", has constant-value "4", has edge-label "dest_memory";
(to-node: $N_8732115233497_134528873c_0_0, from-node: $N_8732115233497_134528873c_0) isa node-link; 

match
$N_8732115233497_134528873c_0 isa operation, has hash "N_8732115233497_134528873c_0"; 

insert
$L_8732115233497_134528873c_0_1 isa list, has hash "L_8732115233497_134528873c_0_1", has list-size 3, has edge-label "dest";
(to-node: $L_8732115233497_134528873c_0_1, from-node: $N_8732115233497_134528873c_0) isa node-link; 

match
$L_8732115233497_134528873c_0_1 isa list, has hash "L_8732115233497_134528873c_0_1"; 

insert
$N_8732115233497_134528873c_0_1_0 isa variable-ssa, has hash "N_8732115233497_134528873c_0_1_0", has var "eax_1", has version 2, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115233497_134528873c_0_1_0, from-node: $L_8732115233497_134528873c_0_1) isa node-link; 

match
$L_8732115233497_134528873c_0_1 isa list, has hash "L_8732115233497_134528873c_0_1"; 

insert
$N_8732115233497_134528873c_0_1_1 isa variable-ssa, has hash "N_8732115233497_134528873c_0_1_1", has var "edx_1", has version 2, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115233497_134528873c_0_1_1, from-node: $L_8732115233497_134528873c_0_1) isa node-link; 

match
$L_8732115233497_134528873c_0_1 isa list, has hash "L_8732115233497_134528873c_0_1"; 

insert
$N_8732115233497_134528873c_0_1_2 isa variable-ssa, has hash "N_8732115233497_134528873c_0_1_2", has var "ecx_2", has version 2, has edge-label "2", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115233497_134528873c_0_1_2, from-node: $L_8732115233497_134528873c_0_1) isa node-link; 

match
$N_8732115233497_134528873c isa instruction, has hash "N_8732115233497_134528873c"; 

insert
$N_8732115233497_134528873c_1 isa MLIL_CONST_PTR, has hash "N_8732115233497_134528873c_1", has edge-label "dest";
(to-node: $N_8732115233497_134528873c_1, from-node: $N_8732115233497_134528873c) isa node-link; 

match
$N_8732115233497_134528873c_1 isa operation, has hash "N_8732115233497_134528873c_1"; 

insert
$N_8732115233497_134528873c_1_0 isa constant, has hash "N_8732115233497_134528873c_1_0", has constant-value "134527968", has edge-label "constant";
(to-node: $N_8732115233497_134528873c_1_0, from-node: $N_8732115233497_134528873c_1) isa node-link; 

match
$N_8732115233497_134528873c isa instruction, has hash "N_8732115233497_134528873c"; 

insert
$L_8732115233497_134528873c_2 isa list, has hash "L_8732115233497_134528873c_2", has list-size 1, has edge-label "params";
(to-node: $L_8732115233497_134528873c_2, from-node: $N_8732115233497_134528873c) isa node-link; 

match
$L_8732115233497_134528873c_2 isa list, has hash "L_8732115233497_134528873c_2"; 

insert
$N_8732115233497_134528873c_2_0 isa MLIL_CONST_PTR, has hash "N_8732115233497_134528873c_2_0", has edge-label "0";
(to-node: $N_8732115233497_134528873c_2_0, from-node: $L_8732115233497_134528873c_2) isa node-link; 

match
$N_8732115233497_134528873c_2_0 isa operation, has hash "N_8732115233497_134528873c_2_0"; 

insert
$N_8732115233497_134528873c_2_0_0 isa constant, has hash "N_8732115233497_134528873c_2_0_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115233497_134528873c_2_0_0, from-node: $N_8732115233497_134528873c_2_0) isa node-link; 

match
$N_8732115233497_134528873c isa instruction, has hash "N_8732115233497_134528873c"; 

insert
$N_8732115233497_134528873c_3 isa constant, has hash "N_8732115233497_134528873c_3", has constant-value "3", has edge-label "src_memory";
(to-node: $N_8732115233497_134528873c_3, from-node: $N_8732115233497_134528873c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 25, has bb-end 28; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 25, has bb-end 28; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115478001_134528878c isa instruction, has hash "N_8732115478001_134528878c", has il-index 26, has asm-address "0x804bf6e", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_2#3 = eax_1#2 - 0x2c";
(contains-instruction: $N_8732115478001_134528878c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115478001_134528878c isa instruction, has hash "N_8732115478001_134528878c"; 

insert
$N_8732115478001_134528878c_0 isa variable-ssa, has hash "N_8732115478001_134528878c_0", has var "eax_2", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115478001_134528878c_0, from-node: $N_8732115478001_134528878c) isa node-link; 

match
$N_8732115478001_134528878c isa instruction, has hash "N_8732115478001_134528878c"; 

insert
$N_8732115478001_134528878c_1 isa MLIL_SUB, has hash "N_8732115478001_134528878c_1", has edge-label "src";
(to-node: $N_8732115478001_134528878c_1, from-node: $N_8732115478001_134528878c) isa node-link; 

match
$N_8732115478001_134528878c_1 isa operation, has hash "N_8732115478001_134528878c_1"; 

insert
$N_8732115478001_134528878c_1_0 isa MLIL_VAR_SSA, has hash "N_8732115478001_134528878c_1_0", has edge-label "left";
(to-node: $N_8732115478001_134528878c_1_0, from-node: $N_8732115478001_134528878c_1) isa node-link; 

match
$N_8732115478001_134528878c_1_0 isa operation, has hash "N_8732115478001_134528878c_1_0"; 

insert
$N_8732115478001_134528878c_1_0_0 isa variable-ssa, has hash "N_8732115478001_134528878c_1_0_0", has var "eax_1", has version 2, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115478001_134528878c_1_0_0, from-node: $N_8732115478001_134528878c_1_0) isa node-link; 

match
$N_8732115478001_134528878c_1 isa operation, has hash "N_8732115478001_134528878c_1"; 

insert
$N_8732115478001_134528878c_1_1 isa MLIL_CONST, has hash "N_8732115478001_134528878c_1_1", has edge-label "right";
(to-node: $N_8732115478001_134528878c_1_1, from-node: $N_8732115478001_134528878c_1) isa node-link; 

match
$N_8732115478001_134528878c_1_1 isa operation, has hash "N_8732115478001_134528878c_1_1"; 

insert
$N_8732115478001_134528878c_1_1_0 isa constant, has hash "N_8732115478001_134528878c_1_1_0", has constant-value "44", has edge-label "constant";
(to-node: $N_8732115478001_134528878c_1_1_0, from-node: $N_8732115478001_134528878c_1_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 25, has bb-end 28; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 25, has bb-end 28; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115260677_134528881c isa instruction, has hash "N_8732115260677_134528881c", has il-index 27, has asm-address "0x804bf71", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_18_1#1 = eax_2#3";
(contains-instruction: $N_8732115260677_134528881c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115260677_134528881c isa instruction, has hash "N_8732115260677_134528881c"; 

insert
$N_8732115260677_134528881c_0 isa variable-ssa, has hash "N_8732115260677_134528881c_0", has var "var_18_1", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115260677_134528881c_0, from-node: $N_8732115260677_134528881c) isa node-link; 

match
$N_8732115260677_134528881c isa instruction, has hash "N_8732115260677_134528881c"; 

insert
$N_8732115260677_134528881c_1 isa MLIL_VAR_SSA, has hash "N_8732115260677_134528881c_1", has edge-label "src";
(to-node: $N_8732115260677_134528881c_1, from-node: $N_8732115260677_134528881c) isa node-link; 

match
$N_8732115260677_134528881c_1 isa operation, has hash "N_8732115260677_134528881c_1"; 

insert
$N_8732115260677_134528881c_1_0 isa variable-ssa, has hash "N_8732115260677_134528881c_1_0", has var "eax_2", has version 3, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115260677_134528881c_1_0, from-node: $N_8732115260677_134528881c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 25, has bb-end 28; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 25, has bb-end 28; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114899213_134528888c isa instruction, has hash "N_8732114899213_134528888c", has il-index 28, has asm-address "0x804bf78", has operation-type "MLIL_IF", has ins-text "if (var_18_1#1 s>= 0) then 30 @ 0x804bf99 else 31 @ 0x804bf84";
(contains-instruction: $N_8732114899213_134528888c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114899213_134528888c isa instruction, has hash "N_8732114899213_134528888c"; 

insert
$N_8732114899213_134528888c_0 isa MLIL_CMP_SGE, has hash "N_8732114899213_134528888c_0", has edge-label "condition";
(to-node: $N_8732114899213_134528888c_0, from-node: $N_8732114899213_134528888c) isa node-link; 

match
$N_8732114899213_134528888c_0 isa operation, has hash "N_8732114899213_134528888c_0"; 

insert
$N_8732114899213_134528888c_0_0 isa MLIL_VAR_SSA, has hash "N_8732114899213_134528888c_0_0", has edge-label "left";
(to-node: $N_8732114899213_134528888c_0_0, from-node: $N_8732114899213_134528888c_0) isa node-link; 

match
$N_8732114899213_134528888c_0_0 isa operation, has hash "N_8732114899213_134528888c_0_0"; 

insert
$N_8732114899213_134528888c_0_0_0 isa variable-ssa, has hash "N_8732114899213_134528888c_0_0_0", has var "var_18_1", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114899213_134528888c_0_0_0, from-node: $N_8732114899213_134528888c_0_0) isa node-link; 

match
$N_8732114899213_134528888c_0 isa operation, has hash "N_8732114899213_134528888c_0"; 

insert
$N_8732114899213_134528888c_0_1 isa MLIL_CONST, has hash "N_8732114899213_134528888c_0_1", has edge-label "right";
(to-node: $N_8732114899213_134528888c_0_1, from-node: $N_8732114899213_134528888c_0) isa node-link; 

match
$N_8732114899213_134528888c_0_1 isa operation, has hash "N_8732114899213_134528888c_0_1"; 

insert
$N_8732114899213_134528888c_0_1_0 isa constant, has hash "N_8732114899213_134528888c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732114899213_134528888c_0_1_0, from-node: $N_8732114899213_134528888c_0_1) isa node-link; 

match
$N_8732114899213_134528888c isa instruction, has hash "N_8732114899213_134528888c"; 

insert
$N_8732114899213_134528888c_1 isa constant, has hash "N_8732114899213_134528888c_1", has constant-value "30", has edge-label "true";
(to-node: $N_8732114899213_134528888c_1, from-node: $N_8732114899213_134528888c) isa node-link; 

match
$N_8732114899213_134528888c isa instruction, has hash "N_8732114899213_134528888c"; 

insert
$N_8732114899213_134528888c_2 isa constant, has hash "N_8732114899213_134528888c_2", has constant-value "31", has edge-label "false";
(to-node: $N_8732114899213_134528888c_2, from-node: $N_8732114899213_134528888c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 29, has bb-end 29; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 30, has bb-end 30; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 30, has bb-end 30; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 30, has bb-end 30; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115503885_134528921c isa instruction, has hash "N_8732115503885_134528921c", has il-index 30, has asm-address "0x804bf99", has operation-type "MLIL_IF", has ins-text "if (var_18_1#1 != 0) then 33 @ 0x804bfae else 38 @ 0x804bfa2";
(contains-instruction: $N_8732115503885_134528921c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115503885_134528921c isa instruction, has hash "N_8732115503885_134528921c"; 

insert
$N_8732115503885_134528921c_0 isa MLIL_CMP_NE, has hash "N_8732115503885_134528921c_0", has edge-label "condition";
(to-node: $N_8732115503885_134528921c_0, from-node: $N_8732115503885_134528921c) isa node-link; 

match
$N_8732115503885_134528921c_0 isa operation, has hash "N_8732115503885_134528921c_0"; 

insert
$N_8732115503885_134528921c_0_0 isa MLIL_VAR_SSA, has hash "N_8732115503885_134528921c_0_0", has edge-label "left";
(to-node: $N_8732115503885_134528921c_0_0, from-node: $N_8732115503885_134528921c_0) isa node-link; 

match
$N_8732115503885_134528921c_0_0 isa operation, has hash "N_8732115503885_134528921c_0_0"; 

insert
$N_8732115503885_134528921c_0_0_0 isa variable-ssa, has hash "N_8732115503885_134528921c_0_0_0", has var "var_18_1", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115503885_134528921c_0_0_0, from-node: $N_8732115503885_134528921c_0_0) isa node-link; 

match
$N_8732115503885_134528921c_0 isa operation, has hash "N_8732115503885_134528921c_0"; 

insert
$N_8732115503885_134528921c_0_1 isa MLIL_CONST, has hash "N_8732115503885_134528921c_0_1", has edge-label "right";
(to-node: $N_8732115503885_134528921c_0_1, from-node: $N_8732115503885_134528921c_0) isa node-link; 

match
$N_8732115503885_134528921c_0_1 isa operation, has hash "N_8732115503885_134528921c_0_1"; 

insert
$N_8732115503885_134528921c_0_1_0 isa constant, has hash "N_8732115503885_134528921c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115503885_134528921c_0_1_0, from-node: $N_8732115503885_134528921c_0_1) isa node-link; 

match
$N_8732115503885_134528921c isa instruction, has hash "N_8732115503885_134528921c"; 

insert
$N_8732115503885_134528921c_1 isa constant, has hash "N_8732115503885_134528921c_1", has constant-value "33", has edge-label "true";
(to-node: $N_8732115503885_134528921c_1, from-node: $N_8732115503885_134528921c) isa node-link; 

match
$N_8732115503885_134528921c isa instruction, has hash "N_8732115503885_134528921c"; 

insert
$N_8732115503885_134528921c_2 isa constant, has hash "N_8732115503885_134528921c_2", has constant-value "38", has edge-label "false";
(to-node: $N_8732115503885_134528921c_2, from-node: $N_8732115503885_134528921c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 31, has bb-end 32; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 31, has bb-end 32; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 31, has bb-end 32; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115041541_134528900c isa instruction, has hash "N_8732115041541_134528900c", has il-index 31, has asm-address "0x804bf84", has operation-type "MLIL_CALL_SSA", has ins-text "mem#14 = 0x8049490(0, edx_1#2, ecx_2#2, 0) @ mem#4";
(contains-instruction: $N_8732115041541_134528900c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115041541_134528900c isa instruction, has hash "N_8732115041541_134528900c"; 

insert
$N_8732115041541_134528900c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8732115041541_134528900c_0", has edge-label "output";
(to-node: $N_8732115041541_134528900c_0, from-node: $N_8732115041541_134528900c) isa node-link; 

match
$N_8732115041541_134528900c_0 isa operation, has hash "N_8732115041541_134528900c_0"; 

insert
$N_8732115041541_134528900c_0_0 isa constant, has hash "N_8732115041541_134528900c_0_0", has constant-value "14", has edge-label "dest_memory";
(to-node: $N_8732115041541_134528900c_0_0, from-node: $N_8732115041541_134528900c_0) isa node-link; 

match
$N_8732115041541_134528900c_0 isa operation, has hash "N_8732115041541_134528900c_0"; 

insert
$L_8732115041541_134528900c_0_1 isa list, has hash "L_8732115041541_134528900c_0_1", has list-size 0, has edge-label "dest";
(to-node: $L_8732115041541_134528900c_0_1, from-node: $N_8732115041541_134528900c_0) isa node-link; 

match
$N_8732115041541_134528900c isa instruction, has hash "N_8732115041541_134528900c"; 

insert
$N_8732115041541_134528900c_1 isa MLIL_CONST_PTR, has hash "N_8732115041541_134528900c_1", has edge-label "dest";
(to-node: $N_8732115041541_134528900c_1, from-node: $N_8732115041541_134528900c) isa node-link; 

match
$N_8732115041541_134528900c_1 isa operation, has hash "N_8732115041541_134528900c_1"; 

insert
$N_8732115041541_134528900c_1_0 isa constant, has hash "N_8732115041541_134528900c_1_0", has constant-value "134517904", has edge-label "constant";
(to-node: $N_8732115041541_134528900c_1_0, from-node: $N_8732115041541_134528900c_1) isa node-link; 

match
$N_8732115041541_134528900c isa instruction, has hash "N_8732115041541_134528900c"; 

insert
$L_8732115041541_134528900c_2 isa list, has hash "L_8732115041541_134528900c_2", has list-size 4, has edge-label "params";
(to-node: $L_8732115041541_134528900c_2, from-node: $N_8732115041541_134528900c) isa node-link; 

match
$L_8732115041541_134528900c_2 isa list, has hash "L_8732115041541_134528900c_2"; 

insert
$N_8732115041541_134528900c_2_0 isa MLIL_CONST, has hash "N_8732115041541_134528900c_2_0", has edge-label "0";
(to-node: $N_8732115041541_134528900c_2_0, from-node: $L_8732115041541_134528900c_2) isa node-link; 

match
$N_8732115041541_134528900c_2_0 isa operation, has hash "N_8732115041541_134528900c_2_0"; 

insert
$N_8732115041541_134528900c_2_0_0 isa constant, has hash "N_8732115041541_134528900c_2_0_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115041541_134528900c_2_0_0, from-node: $N_8732115041541_134528900c_2_0) isa node-link; 

match
$L_8732115041541_134528900c_2 isa list, has hash "L_8732115041541_134528900c_2"; 

insert
$N_8732115041541_134528900c_2_1 isa MLIL_VAR_SSA, has hash "N_8732115041541_134528900c_2_1", has edge-label "1";
(to-node: $N_8732115041541_134528900c_2_1, from-node: $L_8732115041541_134528900c_2) isa node-link; 

match
$N_8732115041541_134528900c_2_1 isa operation, has hash "N_8732115041541_134528900c_2_1"; 

insert
$N_8732115041541_134528900c_2_1_0 isa variable-ssa, has hash "N_8732115041541_134528900c_2_1_0", has var "edx_1", has version 2, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115041541_134528900c_2_1_0, from-node: $N_8732115041541_134528900c_2_1) isa node-link; 

match
$L_8732115041541_134528900c_2 isa list, has hash "L_8732115041541_134528900c_2"; 

insert
$N_8732115041541_134528900c_2_2 isa MLIL_VAR_SSA, has hash "N_8732115041541_134528900c_2_2", has edge-label "2";
(to-node: $N_8732115041541_134528900c_2_2, from-node: $L_8732115041541_134528900c_2) isa node-link; 

match
$N_8732115041541_134528900c_2_2 isa operation, has hash "N_8732115041541_134528900c_2_2"; 

insert
$N_8732115041541_134528900c_2_2_0 isa variable-ssa, has hash "N_8732115041541_134528900c_2_2_0", has var "ecx_2", has version 2, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115041541_134528900c_2_2_0, from-node: $N_8732115041541_134528900c_2_2) isa node-link; 

match
$L_8732115041541_134528900c_2 isa list, has hash "L_8732115041541_134528900c_2"; 

insert
$N_8732115041541_134528900c_2_3 isa MLIL_CONST_PTR, has hash "N_8732115041541_134528900c_2_3", has edge-label "3";
(to-node: $N_8732115041541_134528900c_2_3, from-node: $L_8732115041541_134528900c_2) isa node-link; 

match
$N_8732115041541_134528900c_2_3 isa operation, has hash "N_8732115041541_134528900c_2_3"; 

insert
$N_8732115041541_134528900c_2_3_0 isa constant, has hash "N_8732115041541_134528900c_2_3_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115041541_134528900c_2_3_0, from-node: $N_8732115041541_134528900c_2_3) isa node-link; 

match
$N_8732115041541_134528900c isa instruction, has hash "N_8732115041541_134528900c"; 

insert
$N_8732115041541_134528900c_3 isa constant, has hash "N_8732115041541_134528900c_3", has constant-value "4", has edge-label "src_memory";
(to-node: $N_8732115041541_134528900c_3, from-node: $N_8732115041541_134528900c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 31, has bb-end 32; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 31, has bb-end 32; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115508497_134528912c isa instruction, has hash "N_8732115508497_134528912c", has il-index 32, has asm-address "0x804bf90", has operation-type "MLIL_GOTO", has ins-text "goto 9 @ 0x804c09d";
(contains-instruction: $N_8732115508497_134528912c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115508497_134528912c isa instruction, has hash "N_8732115508497_134528912c"; 

insert
$N_8732115508497_134528912c_0 isa constant, has hash "N_8732115508497_134528912c_0", has constant-value "9", has edge-label "dest";
(to-node: $N_8732115508497_134528912c_0, from-node: $N_8732115508497_134528912c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 33, has bb-end 37; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 33, has bb-end 37; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 33, has bb-end 37; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114988541_134528942c isa instruction, has hash "N_8732114988541_134528942c", has il-index 33, has asm-address "0x804bfae", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_3#4 = var_18_1#1";
(contains-instruction: $N_8732114988541_134528942c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114988541_134528942c isa instruction, has hash "N_8732114988541_134528942c"; 

insert
$N_8732114988541_134528942c_0 isa variable-ssa, has hash "N_8732114988541_134528942c_0", has var "eax_3", has version 4, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114988541_134528942c_0, from-node: $N_8732114988541_134528942c) isa node-link; 

match
$N_8732114988541_134528942c isa instruction, has hash "N_8732114988541_134528942c"; 

insert
$N_8732114988541_134528942c_1 isa MLIL_VAR_SSA, has hash "N_8732114988541_134528942c_1", has edge-label "src";
(to-node: $N_8732114988541_134528942c_1, from-node: $N_8732114988541_134528942c) isa node-link; 

match
$N_8732114988541_134528942c_1 isa operation, has hash "N_8732114988541_134528942c_1"; 

insert
$N_8732114988541_134528942c_1_0 isa variable-ssa, has hash "N_8732114988541_134528942c_1_0", has var "var_18_1", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114988541_134528942c_1_0, from-node: $N_8732114988541_134528942c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 33, has bb-end 37; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 33, has bb-end 37; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115509273_134528945c isa instruction, has hash "N_8732115509273_134528945c", has il-index 34, has asm-address "0x804bfb1", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_4c_1#1 = eax_3#4";
(contains-instruction: $N_8732115509273_134528945c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115509273_134528945c isa instruction, has hash "N_8732115509273_134528945c"; 

insert
$N_8732115509273_134528945c_0 isa variable-ssa, has hash "N_8732115509273_134528945c_0", has var "var_4c_1", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115509273_134528945c_0, from-node: $N_8732115509273_134528945c) isa node-link; 

match
$N_8732115509273_134528945c isa instruction, has hash "N_8732115509273_134528945c"; 

insert
$N_8732115509273_134528945c_1 isa MLIL_VAR_SSA, has hash "N_8732115509273_134528945c_1", has edge-label "src";
(to-node: $N_8732115509273_134528945c_1, from-node: $N_8732115509273_134528945c) isa node-link; 

match
$N_8732115509273_134528945c_1 isa operation, has hash "N_8732115509273_134528945c_1"; 

insert
$N_8732115509273_134528945c_1_0 isa variable-ssa, has hash "N_8732115509273_134528945c_1_0", has var "eax_3", has version 4, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115509273_134528945c_1_0, from-node: $N_8732115509273_134528945c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 33, has bb-end 37; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 33, has bb-end 37; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115247121_134528948c isa instruction, has hash "N_8732115247121_134528948c", has il-index 35, has asm-address "0x804bfb4", has operation-type "MLIL_CALL_SSA", has ins-text "edx_2#3, mem#5 = 0x8049530(eax_3#4, edx_1#2, var_4c_1#1) @ mem#4";
(contains-instruction: $N_8732115247121_134528948c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115247121_134528948c isa instruction, has hash "N_8732115247121_134528948c"; 

insert
$N_8732115247121_134528948c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8732115247121_134528948c_0", has edge-label "output";
(to-node: $N_8732115247121_134528948c_0, from-node: $N_8732115247121_134528948c) isa node-link; 

match
$N_8732115247121_134528948c_0 isa operation, has hash "N_8732115247121_134528948c_0"; 

insert
$N_8732115247121_134528948c_0_0 isa constant, has hash "N_8732115247121_134528948c_0_0", has constant-value "5", has edge-label "dest_memory";
(to-node: $N_8732115247121_134528948c_0_0, from-node: $N_8732115247121_134528948c_0) isa node-link; 

match
$N_8732115247121_134528948c_0 isa operation, has hash "N_8732115247121_134528948c_0"; 

insert
$L_8732115247121_134528948c_0_1 isa list, has hash "L_8732115247121_134528948c_0_1", has list-size 1, has edge-label "dest";
(to-node: $L_8732115247121_134528948c_0_1, from-node: $N_8732115247121_134528948c_0) isa node-link; 

match
$L_8732115247121_134528948c_0_1 isa list, has hash "L_8732115247121_134528948c_0_1"; 

insert
$N_8732115247121_134528948c_0_1_0 isa variable-ssa, has hash "N_8732115247121_134528948c_0_1_0", has var "edx_2", has version 3, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115247121_134528948c_0_1_0, from-node: $L_8732115247121_134528948c_0_1) isa node-link; 

match
$N_8732115247121_134528948c isa instruction, has hash "N_8732115247121_134528948c"; 

insert
$N_8732115247121_134528948c_1 isa MLIL_CONST_PTR, has hash "N_8732115247121_134528948c_1", has edge-label "dest";
(to-node: $N_8732115247121_134528948c_1, from-node: $N_8732115247121_134528948c) isa node-link; 

match
$N_8732115247121_134528948c_1 isa operation, has hash "N_8732115247121_134528948c_1"; 

insert
$N_8732115247121_134528948c_1_0 isa constant, has hash "N_8732115247121_134528948c_1_0", has constant-value "134518064", has edge-label "constant";
(to-node: $N_8732115247121_134528948c_1_0, from-node: $N_8732115247121_134528948c_1) isa node-link; 

match
$N_8732115247121_134528948c isa instruction, has hash "N_8732115247121_134528948c"; 

insert
$L_8732115247121_134528948c_2 isa list, has hash "L_8732115247121_134528948c_2", has list-size 3, has edge-label "params";
(to-node: $L_8732115247121_134528948c_2, from-node: $N_8732115247121_134528948c) isa node-link; 

match
$L_8732115247121_134528948c_2 isa list, has hash "L_8732115247121_134528948c_2"; 

insert
$N_8732115247121_134528948c_2_0 isa MLIL_VAR_SSA, has hash "N_8732115247121_134528948c_2_0", has edge-label "0";
(to-node: $N_8732115247121_134528948c_2_0, from-node: $L_8732115247121_134528948c_2) isa node-link; 

match
$N_8732115247121_134528948c_2_0 isa operation, has hash "N_8732115247121_134528948c_2_0"; 

insert
$N_8732115247121_134528948c_2_0_0 isa variable-ssa, has hash "N_8732115247121_134528948c_2_0_0", has var "eax_3", has version 4, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115247121_134528948c_2_0_0, from-node: $N_8732115247121_134528948c_2_0) isa node-link; 

match
$L_8732115247121_134528948c_2 isa list, has hash "L_8732115247121_134528948c_2"; 

insert
$N_8732115247121_134528948c_2_1 isa MLIL_VAR_SSA, has hash "N_8732115247121_134528948c_2_1", has edge-label "1";
(to-node: $N_8732115247121_134528948c_2_1, from-node: $L_8732115247121_134528948c_2) isa node-link; 

match
$N_8732115247121_134528948c_2_1 isa operation, has hash "N_8732115247121_134528948c_2_1"; 

insert
$N_8732115247121_134528948c_2_1_0 isa variable-ssa, has hash "N_8732115247121_134528948c_2_1_0", has var "edx_1", has version 2, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115247121_134528948c_2_1_0, from-node: $N_8732115247121_134528948c_2_1) isa node-link; 

match
$L_8732115247121_134528948c_2 isa list, has hash "L_8732115247121_134528948c_2"; 

insert
$N_8732115247121_134528948c_2_2 isa MLIL_VAR_SSA, has hash "N_8732115247121_134528948c_2_2", has edge-label "2";
(to-node: $N_8732115247121_134528948c_2_2, from-node: $L_8732115247121_134528948c_2) isa node-link; 

match
$N_8732115247121_134528948c_2_2 isa operation, has hash "N_8732115247121_134528948c_2_2"; 

insert
$N_8732115247121_134528948c_2_2_0 isa variable-ssa, has hash "N_8732115247121_134528948c_2_2_0", has var "var_4c_1", has version 1, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115247121_134528948c_2_2_0, from-node: $N_8732115247121_134528948c_2_2) isa node-link; 

match
$N_8732115247121_134528948c isa instruction, has hash "N_8732115247121_134528948c"; 

insert
$N_8732115247121_134528948c_3 isa constant, has hash "N_8732115247121_134528948c_3", has constant-value "4", has edge-label "src_memory";
(to-node: $N_8732115247121_134528948c_3, from-node: $N_8732115247121_134528948c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 33, has bb-end 37; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 33, has bb-end 37; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115190041_134528956c isa instruction, has hash "N_8732115190041_134528956c", has il-index 36, has asm-address "0x804bfbc", has operation-type "MLIL_STORE_SSA", has ins-text "[0x2c].d = 0 @ mem#5 -> mem#6";
(contains-instruction: $N_8732115190041_134528956c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115190041_134528956c isa instruction, has hash "N_8732115190041_134528956c"; 

insert
$N_8732115190041_134528956c_0 isa MLIL_CONST_PTR, has hash "N_8732115190041_134528956c_0", has edge-label "dest";
(to-node: $N_8732115190041_134528956c_0, from-node: $N_8732115190041_134528956c) isa node-link; 

match
$N_8732115190041_134528956c_0 isa operation, has hash "N_8732115190041_134528956c_0"; 

insert
$N_8732115190041_134528956c_0_0 isa constant, has hash "N_8732115190041_134528956c_0_0", has constant-value "44", has edge-label "constant";
(to-node: $N_8732115190041_134528956c_0_0, from-node: $N_8732115190041_134528956c_0) isa node-link; 

match
$N_8732115190041_134528956c isa instruction, has hash "N_8732115190041_134528956c"; 

insert
$N_8732115190041_134528956c_1 isa constant, has hash "N_8732115190041_134528956c_1", has constant-value "6", has edge-label "dest_memory";
(to-node: $N_8732115190041_134528956c_1, from-node: $N_8732115190041_134528956c) isa node-link; 

match
$N_8732115190041_134528956c isa instruction, has hash "N_8732115190041_134528956c"; 

insert
$N_8732115190041_134528956c_2 isa constant, has hash "N_8732115190041_134528956c_2", has constant-value "5", has edge-label "src_memory";
(to-node: $N_8732115190041_134528956c_2, from-node: $N_8732115190041_134528956c) isa node-link; 

match
$N_8732115190041_134528956c isa instruction, has hash "N_8732115190041_134528956c"; 

insert
$N_8732115190041_134528956c_3 isa MLIL_CONST, has hash "N_8732115190041_134528956c_3", has edge-label "src";
(to-node: $N_8732115190041_134528956c_3, from-node: $N_8732115190041_134528956c) isa node-link; 

match
$N_8732115190041_134528956c_3 isa operation, has hash "N_8732115190041_134528956c_3"; 

insert
$N_8732115190041_134528956c_3_0 isa constant, has hash "N_8732115190041_134528956c_3_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115190041_134528956c_3_0, from-node: $N_8732115190041_134528956c_3) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 33, has bb-end 37; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 33, has bb-end 37; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115226913_134528966c isa instruction, has hash "N_8732115226913_134528966c", has il-index 37, has asm-address "0x804bfc6", has operation-type "MLIL_IF", has ins-text "if ([0x2c].d @ mem#6 != 0) then 40 @ 0x804bfe3 else 41 @ 0x804bfd2";
(contains-instruction: $N_8732115226913_134528966c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115226913_134528966c isa instruction, has hash "N_8732115226913_134528966c"; 

insert
$N_8732115226913_134528966c_0 isa MLIL_CMP_NE, has hash "N_8732115226913_134528966c_0", has edge-label "condition";
(to-node: $N_8732115226913_134528966c_0, from-node: $N_8732115226913_134528966c) isa node-link; 

match
$N_8732115226913_134528966c_0 isa operation, has hash "N_8732115226913_134528966c_0"; 

insert
$N_8732115226913_134528966c_0_0 isa MLIL_LOAD_SSA, has hash "N_8732115226913_134528966c_0_0", has edge-label "left";
(to-node: $N_8732115226913_134528966c_0_0, from-node: $N_8732115226913_134528966c_0) isa node-link; 

match
$N_8732115226913_134528966c_0_0 isa operation, has hash "N_8732115226913_134528966c_0_0"; 

insert
$N_8732115226913_134528966c_0_0_0 isa MLIL_CONST_PTR, has hash "N_8732115226913_134528966c_0_0_0", has edge-label "src";
(to-node: $N_8732115226913_134528966c_0_0_0, from-node: $N_8732115226913_134528966c_0_0) isa node-link; 

match
$N_8732115226913_134528966c_0_0_0 isa operation, has hash "N_8732115226913_134528966c_0_0_0"; 

insert
$N_8732115226913_134528966c_0_0_0_0 isa constant, has hash "N_8732115226913_134528966c_0_0_0_0", has constant-value "44", has edge-label "constant";
(to-node: $N_8732115226913_134528966c_0_0_0_0, from-node: $N_8732115226913_134528966c_0_0_0) isa node-link; 

match
$N_8732115226913_134528966c_0_0 isa operation, has hash "N_8732115226913_134528966c_0_0"; 

insert
$N_8732115226913_134528966c_0_0_1 isa constant, has hash "N_8732115226913_134528966c_0_0_1", has constant-value "6", has edge-label "src_memory";
(to-node: $N_8732115226913_134528966c_0_0_1, from-node: $N_8732115226913_134528966c_0_0) isa node-link; 

match
$N_8732115226913_134528966c_0 isa operation, has hash "N_8732115226913_134528966c_0"; 

insert
$N_8732115226913_134528966c_0_1 isa MLIL_CONST, has hash "N_8732115226913_134528966c_0_1", has edge-label "right";
(to-node: $N_8732115226913_134528966c_0_1, from-node: $N_8732115226913_134528966c_0) isa node-link; 

match
$N_8732115226913_134528966c_0_1 isa operation, has hash "N_8732115226913_134528966c_0_1"; 

insert
$N_8732115226913_134528966c_0_1_0 isa constant, has hash "N_8732115226913_134528966c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115226913_134528966c_0_1_0, from-node: $N_8732115226913_134528966c_0_1) isa node-link; 

match
$N_8732115226913_134528966c isa instruction, has hash "N_8732115226913_134528966c"; 

insert
$N_8732115226913_134528966c_1 isa constant, has hash "N_8732115226913_134528966c_1", has constant-value "40", has edge-label "true";
(to-node: $N_8732115226913_134528966c_1, from-node: $N_8732115226913_134528966c) isa node-link; 

match
$N_8732115226913_134528966c isa instruction, has hash "N_8732115226913_134528966c"; 

insert
$N_8732115226913_134528966c_2 isa constant, has hash "N_8732115226913_134528966c_2", has constant-value "41", has edge-label "false";
(to-node: $N_8732115226913_134528966c_2, from-node: $N_8732115226913_134528966c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 38, has bb-end 39; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 38, has bb-end 39; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 38, has bb-end 39; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115308805_134528930c isa instruction, has hash "N_8732115308805_134528930c", has il-index 38, has asm-address "0x804bfa2", has operation-type "MLIL_STORE_SSA", has ins-text "[0x2c].d = 0 @ mem#4 -> mem#8";
(contains-instruction: $N_8732115308805_134528930c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115308805_134528930c isa instruction, has hash "N_8732115308805_134528930c"; 

insert
$N_8732115308805_134528930c_0 isa MLIL_CONST_PTR, has hash "N_8732115308805_134528930c_0", has edge-label "dest";
(to-node: $N_8732115308805_134528930c_0, from-node: $N_8732115308805_134528930c) isa node-link; 

match
$N_8732115308805_134528930c_0 isa operation, has hash "N_8732115308805_134528930c_0"; 

insert
$N_8732115308805_134528930c_0_0 isa constant, has hash "N_8732115308805_134528930c_0_0", has constant-value "44", has edge-label "constant";
(to-node: $N_8732115308805_134528930c_0_0, from-node: $N_8732115308805_134528930c_0) isa node-link; 

match
$N_8732115308805_134528930c isa instruction, has hash "N_8732115308805_134528930c"; 

insert
$N_8732115308805_134528930c_1 isa constant, has hash "N_8732115308805_134528930c_1", has constant-value "8", has edge-label "dest_memory";
(to-node: $N_8732115308805_134528930c_1, from-node: $N_8732115308805_134528930c) isa node-link; 

match
$N_8732115308805_134528930c isa instruction, has hash "N_8732115308805_134528930c"; 

insert
$N_8732115308805_134528930c_2 isa constant, has hash "N_8732115308805_134528930c_2", has constant-value "4", has edge-label "src_memory";
(to-node: $N_8732115308805_134528930c_2, from-node: $N_8732115308805_134528930c) isa node-link; 

match
$N_8732115308805_134528930c isa instruction, has hash "N_8732115308805_134528930c"; 

insert
$N_8732115308805_134528930c_3 isa MLIL_CONST, has hash "N_8732115308805_134528930c_3", has edge-label "src";
(to-node: $N_8732115308805_134528930c_3, from-node: $N_8732115308805_134528930c) isa node-link; 

match
$N_8732115308805_134528930c_3 isa operation, has hash "N_8732115308805_134528930c_3"; 

insert
$N_8732115308805_134528930c_3_0 isa constant, has hash "N_8732115308805_134528930c_3_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115308805_134528930c_3_0, from-node: $N_8732115308805_134528930c_3) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 38, has bb-end 39; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 38, has bb-end 39; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115418913_134528937c isa instruction, has hash "N_8732115418913_134528937c", has il-index 39, has asm-address "0x804bfa9", has operation-type "MLIL_GOTO", has ins-text "goto 43 @ 0x804bfe8";
(contains-instruction: $N_8732115418913_134528937c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115418913_134528937c isa instruction, has hash "N_8732115418913_134528937c"; 

insert
$N_8732115418913_134528937c_0 isa constant, has hash "N_8732115418913_134528937c_0", has constant-value "43", has edge-label "dest";
(to-node: $N_8732115418913_134528937c_0, from-node: $N_8732115418913_134528937c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 40, has bb-end 40; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 40, has bb-end 40; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 40, has bb-end 40; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115221501_134528995c isa instruction, has hash "N_8732115221501_134528995c", has il-index 40, has asm-address "0x804bfe3", has operation-type "MLIL_GOTO", has ins-text "goto 43 @ 0x804bfe8";
(contains-instruction: $N_8732115221501_134528995c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115221501_134528995c isa instruction, has hash "N_8732115221501_134528995c"; 

insert
$N_8732115221501_134528995c_0 isa constant, has hash "N_8732115221501_134528995c_0", has constant-value "43", has edge-label "dest";
(to-node: $N_8732115221501_134528995c_0, from-node: $N_8732115221501_134528995c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 41, has bb-end 42; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 41, has bb-end 42; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 41, has bb-end 42; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115328577_134528978c isa instruction, has hash "N_8732115328577_134528978c", has il-index 41, has asm-address "0x804bfd2", has operation-type "MLIL_CALL_SSA", has ins-text "mem#7 = 0x8049490(0, edx_2#3, 0, 0) @ mem#6";
(contains-instruction: $N_8732115328577_134528978c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115328577_134528978c isa instruction, has hash "N_8732115328577_134528978c"; 

insert
$N_8732115328577_134528978c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8732115328577_134528978c_0", has edge-label "output";
(to-node: $N_8732115328577_134528978c_0, from-node: $N_8732115328577_134528978c) isa node-link; 

match
$N_8732115328577_134528978c_0 isa operation, has hash "N_8732115328577_134528978c_0"; 

insert
$N_8732115328577_134528978c_0_0 isa constant, has hash "N_8732115328577_134528978c_0_0", has constant-value "7", has edge-label "dest_memory";
(to-node: $N_8732115328577_134528978c_0_0, from-node: $N_8732115328577_134528978c_0) isa node-link; 

match
$N_8732115328577_134528978c_0 isa operation, has hash "N_8732115328577_134528978c_0"; 

insert
$L_8732115328577_134528978c_0_1 isa list, has hash "L_8732115328577_134528978c_0_1", has list-size 0, has edge-label "dest";
(to-node: $L_8732115328577_134528978c_0_1, from-node: $N_8732115328577_134528978c_0) isa node-link; 

match
$N_8732115328577_134528978c isa instruction, has hash "N_8732115328577_134528978c"; 

insert
$N_8732115328577_134528978c_1 isa MLIL_CONST_PTR, has hash "N_8732115328577_134528978c_1", has edge-label "dest";
(to-node: $N_8732115328577_134528978c_1, from-node: $N_8732115328577_134528978c) isa node-link; 

match
$N_8732115328577_134528978c_1 isa operation, has hash "N_8732115328577_134528978c_1"; 

insert
$N_8732115328577_134528978c_1_0 isa constant, has hash "N_8732115328577_134528978c_1_0", has constant-value "134517904", has edge-label "constant";
(to-node: $N_8732115328577_134528978c_1_0, from-node: $N_8732115328577_134528978c_1) isa node-link; 

match
$N_8732115328577_134528978c isa instruction, has hash "N_8732115328577_134528978c"; 

insert
$L_8732115328577_134528978c_2 isa list, has hash "L_8732115328577_134528978c_2", has list-size 4, has edge-label "params";
(to-node: $L_8732115328577_134528978c_2, from-node: $N_8732115328577_134528978c) isa node-link; 

match
$L_8732115328577_134528978c_2 isa list, has hash "L_8732115328577_134528978c_2"; 

insert
$N_8732115328577_134528978c_2_0 isa MLIL_CONST, has hash "N_8732115328577_134528978c_2_0", has edge-label "0";
(to-node: $N_8732115328577_134528978c_2_0, from-node: $L_8732115328577_134528978c_2) isa node-link; 

match
$N_8732115328577_134528978c_2_0 isa operation, has hash "N_8732115328577_134528978c_2_0"; 

insert
$N_8732115328577_134528978c_2_0_0 isa constant, has hash "N_8732115328577_134528978c_2_0_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115328577_134528978c_2_0_0, from-node: $N_8732115328577_134528978c_2_0) isa node-link; 

match
$L_8732115328577_134528978c_2 isa list, has hash "L_8732115328577_134528978c_2"; 

insert
$N_8732115328577_134528978c_2_1 isa MLIL_VAR_SSA, has hash "N_8732115328577_134528978c_2_1", has edge-label "1";
(to-node: $N_8732115328577_134528978c_2_1, from-node: $L_8732115328577_134528978c_2) isa node-link; 

match
$N_8732115328577_134528978c_2_1 isa operation, has hash "N_8732115328577_134528978c_2_1"; 

insert
$N_8732115328577_134528978c_2_1_0 isa variable-ssa, has hash "N_8732115328577_134528978c_2_1_0", has var "edx_2", has version 3, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115328577_134528978c_2_1_0, from-node: $N_8732115328577_134528978c_2_1) isa node-link; 

match
$L_8732115328577_134528978c_2 isa list, has hash "L_8732115328577_134528978c_2"; 

insert
$N_8732115328577_134528978c_2_2 isa MLIL_CONST, has hash "N_8732115328577_134528978c_2_2", has edge-label "2";
(to-node: $N_8732115328577_134528978c_2_2, from-node: $L_8732115328577_134528978c_2) isa node-link; 

match
$N_8732115328577_134528978c_2_2 isa operation, has hash "N_8732115328577_134528978c_2_2"; 

insert
$N_8732115328577_134528978c_2_2_0 isa constant, has hash "N_8732115328577_134528978c_2_2_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115328577_134528978c_2_2_0, from-node: $N_8732115328577_134528978c_2_2) isa node-link; 

match
$L_8732115328577_134528978c_2 isa list, has hash "L_8732115328577_134528978c_2"; 

insert
$N_8732115328577_134528978c_2_3 isa MLIL_CONST_PTR, has hash "N_8732115328577_134528978c_2_3", has edge-label "3";
(to-node: $N_8732115328577_134528978c_2_3, from-node: $L_8732115328577_134528978c_2) isa node-link; 

match
$N_8732115328577_134528978c_2_3 isa operation, has hash "N_8732115328577_134528978c_2_3"; 

insert
$N_8732115328577_134528978c_2_3_0 isa constant, has hash "N_8732115328577_134528978c_2_3_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115328577_134528978c_2_3_0, from-node: $N_8732115328577_134528978c_2_3) isa node-link; 

match
$N_8732115328577_134528978c isa instruction, has hash "N_8732115328577_134528978c"; 

insert
$N_8732115328577_134528978c_3 isa constant, has hash "N_8732115328577_134528978c_3", has constant-value "6", has edge-label "src_memory";
(to-node: $N_8732115328577_134528978c_3, from-node: $N_8732115328577_134528978c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 41, has bb-end 42; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 41, has bb-end 42; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115309849_134528990c isa instruction, has hash "N_8732115309849_134528990c", has il-index 42, has asm-address "0x804bfde", has operation-type "MLIL_GOTO", has ins-text "goto 9 @ 0x804c09d";
(contains-instruction: $N_8732115309849_134528990c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115309849_134528990c isa instruction, has hash "N_8732115309849_134528990c"; 

insert
$N_8732115309849_134528990c_0 isa constant, has hash "N_8732115309849_134528990c_0", has constant-value "9", has edge-label "dest";
(to-node: $N_8732115309849_134528990c_0, from-node: $N_8732115309849_134528990c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 43, has bb-end 47; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 43, has bb-end 47; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 43, has bb-end 47; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115380489_134529000c isa instruction, has hash "N_8732115380489_134529000c", has il-index 46, has asm-address "0x804bfe8", has operation-type "MLIL_MEM_PHI", has ins-text "mem#9 = ϕ(mem#6, mem#8)";
(contains-instruction: $N_8732115380489_134529000c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115380489_134529000c isa instruction, has hash "N_8732115380489_134529000c"; 

insert
$N_8732115380489_134529000c_0 isa constant, has hash "N_8732115380489_134529000c_0", has constant-value "9", has edge-label "dest_memory";
(to-node: $N_8732115380489_134529000c_0, from-node: $N_8732115380489_134529000c) isa node-link; 

match
$N_8732115380489_134529000c isa instruction, has hash "N_8732115380489_134529000c"; 

insert
$L_8732115380489_134529000c_1 isa list, has hash "L_8732115380489_134529000c_1", has list-size 2, has edge-label "src_memory";
(to-node: $L_8732115380489_134529000c_1, from-node: $N_8732115380489_134529000c) isa node-link; 

match
$L_8732115380489_134529000c_1 isa list, has hash "L_8732115380489_134529000c_1"; 

insert
$N_8732115380489_134529000c_1_0 isa constant, has hash "N_8732115380489_134529000c_1_0", has constant-value "6", has edge-label "0";
(to-node: $N_8732115380489_134529000c_1_0, from-node: $L_8732115380489_134529000c_1) isa node-link; 

match
$L_8732115380489_134529000c_1 isa list, has hash "L_8732115380489_134529000c_1"; 

insert
$N_8732115380489_134529000c_1_1 isa constant, has hash "N_8732115380489_134529000c_1_1", has constant-value "8", has edge-label "1";
(to-node: $N_8732115380489_134529000c_1_1, from-node: $L_8732115380489_134529000c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 43, has bb-end 47; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115382781_134529000c isa instruction, has hash "N_8732115382781_134529000c", has il-index 45, has asm-address "0x804bfe8", has operation-type "MLIL_VAR_PHI", has ins-text "edx_2#4 = ϕ(edx_1#2, edx_2#3)";
(contains-instruction: $N_8732115382781_134529000c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115382781_134529000c isa instruction, has hash "N_8732115382781_134529000c"; 

insert
$N_8732115382781_134529000c_0 isa variable-ssa, has hash "N_8732115382781_134529000c_0", has var "edx_2", has version 4, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115382781_134529000c_0, from-node: $N_8732115382781_134529000c) isa node-link; 

match
$N_8732115382781_134529000c isa instruction, has hash "N_8732115382781_134529000c"; 

insert
$L_8732115382781_134529000c_1 isa list, has hash "L_8732115382781_134529000c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115382781_134529000c_1, from-node: $N_8732115382781_134529000c) isa node-link; 

match
$L_8732115382781_134529000c_1 isa list, has hash "L_8732115382781_134529000c_1"; 

insert
$N_8732115382781_134529000c_1_0 isa variable-ssa, has hash "N_8732115382781_134529000c_1_0", has var "edx_1", has version 2, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115382781_134529000c_1_0, from-node: $L_8732115382781_134529000c_1) isa node-link; 

match
$L_8732115382781_134529000c_1 isa list, has hash "L_8732115382781_134529000c_1"; 

insert
$N_8732115382781_134529000c_1_1 isa variable-ssa, has hash "N_8732115382781_134529000c_1_1", has var "edx_2", has version 3, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115382781_134529000c_1_1, from-node: $L_8732115382781_134529000c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 43, has bb-end 47; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115485433_134529000c isa instruction, has hash "N_8732115485433_134529000c", has il-index 47, has asm-address "0x804bfe8", has operation-type "MLIL_GOTO", has ins-text "goto 48 @ 0x804bff8";
(contains-instruction: $N_8732115485433_134529000c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115485433_134529000c isa instruction, has hash "N_8732115485433_134529000c"; 

insert
$N_8732115485433_134529000c_0 isa constant, has hash "N_8732115485433_134529000c_0", has constant-value "48", has edge-label "dest";
(to-node: $N_8732115485433_134529000c_0, from-node: $N_8732115485433_134529000c) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 43, has bb-end 47; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115503661_134529000c isa instruction, has hash "N_8732115503661_134529000c", has il-index 44, has asm-address "0x804bfe8", has operation-type "MLIL_VAR_PHI", has ins-text "eax_3#5 = ϕ(eax_2#3, eax_3#4)";
(contains-instruction: $N_8732115503661_134529000c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115503661_134529000c isa instruction, has hash "N_8732115503661_134529000c"; 

insert
$N_8732115503661_134529000c_0 isa variable-ssa, has hash "N_8732115503661_134529000c_0", has var "eax_3", has version 5, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115503661_134529000c_0, from-node: $N_8732115503661_134529000c) isa node-link; 

match
$N_8732115503661_134529000c isa instruction, has hash "N_8732115503661_134529000c"; 

insert
$L_8732115503661_134529000c_1 isa list, has hash "L_8732115503661_134529000c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115503661_134529000c_1, from-node: $N_8732115503661_134529000c) isa node-link; 

match
$L_8732115503661_134529000c_1 isa list, has hash "L_8732115503661_134529000c_1"; 

insert
$N_8732115503661_134529000c_1_0 isa variable-ssa, has hash "N_8732115503661_134529000c_1_0", has var "eax_2", has version 3, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115503661_134529000c_1_0, from-node: $L_8732115503661_134529000c_1) isa node-link; 

match
$L_8732115503661_134529000c_1 isa list, has hash "L_8732115503661_134529000c_1"; 

insert
$N_8732115503661_134529000c_1_1 isa variable-ssa, has hash "N_8732115503661_134529000c_1_1", has var "eax_3", has version 4, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115503661_134529000c_1_1, from-node: $L_8732115503661_134529000c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 43, has bb-end 47; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115508241_134529000c isa instruction, has hash "N_8732115508241_134529000c", has il-index 43, has asm-address "0x804bfe8", has operation-type "MLIL_VAR_PHI", has ins-text "var_4c_1#2 = ϕ(var_4c#0, var_4c_1#1)";
(contains-instruction: $N_8732115508241_134529000c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115508241_134529000c isa instruction, has hash "N_8732115508241_134529000c"; 

insert
$N_8732115508241_134529000c_0 isa variable-ssa, has hash "N_8732115508241_134529000c_0", has var "var_4c_1", has version 2, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115508241_134529000c_0, from-node: $N_8732115508241_134529000c) isa node-link; 

match
$N_8732115508241_134529000c isa instruction, has hash "N_8732115508241_134529000c"; 

insert
$L_8732115508241_134529000c_1 isa list, has hash "L_8732115508241_134529000c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115508241_134529000c_1, from-node: $N_8732115508241_134529000c) isa node-link; 

match
$L_8732115508241_134529000c_1 isa list, has hash "L_8732115508241_134529000c_1"; 

insert
$N_8732115508241_134529000c_1_0 isa variable-ssa, has hash "N_8732115508241_134529000c_1_0", has var "var_4c", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115508241_134529000c_1_0, from-node: $L_8732115508241_134529000c_1) isa node-link; 

match
$L_8732115508241_134529000c_1 isa list, has hash "L_8732115508241_134529000c_1"; 

insert
$N_8732115508241_134529000c_1_1 isa variable-ssa, has hash "N_8732115508241_134529000c_1_1", has var "var_4c_1", has version 1, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115508241_134529000c_1_1, from-node: $L_8732115508241_134529000c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114832901_134529016c isa instruction, has hash "N_8732114832901_134529016c", has il-index 58, has asm-address "0x804bff8", has operation-type "MLIL_MEM_PHI", has ins-text "mem#10 = ϕ(mem#9, mem#11)";
(contains-instruction: $N_8732114832901_134529016c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114832901_134529016c isa instruction, has hash "N_8732114832901_134529016c"; 

insert
$N_8732114832901_134529016c_0 isa constant, has hash "N_8732114832901_134529016c_0", has constant-value "10", has edge-label "dest_memory";
(to-node: $N_8732114832901_134529016c_0, from-node: $N_8732114832901_134529016c) isa node-link; 

match
$N_8732114832901_134529016c isa instruction, has hash "N_8732114832901_134529016c"; 

insert
$L_8732114832901_134529016c_1 isa list, has hash "L_8732114832901_134529016c_1", has list-size 2, has edge-label "src_memory";
(to-node: $L_8732114832901_134529016c_1, from-node: $N_8732114832901_134529016c) isa node-link; 

match
$L_8732114832901_134529016c_1 isa list, has hash "L_8732114832901_134529016c_1"; 

insert
$N_8732114832901_134529016c_1_0 isa constant, has hash "N_8732114832901_134529016c_1_0", has constant-value "9", has edge-label "0";
(to-node: $N_8732114832901_134529016c_1_0, from-node: $L_8732114832901_134529016c_1) isa node-link; 

match
$L_8732114832901_134529016c_1 isa list, has hash "L_8732114832901_134529016c_1"; 

insert
$N_8732114832901_134529016c_1_1 isa constant, has hash "N_8732114832901_134529016c_1_1", has constant-value "11", has edge-label "1";
(to-node: $N_8732114832901_134529016c_1_1, from-node: $L_8732114832901_134529016c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114894089_134529016c isa instruction, has hash "N_8732114894089_134529016c", has il-index 51, has asm-address "0x804bff8", has operation-type "MLIL_VAR_PHI", has ins-text "var_31_1#1 = ϕ(var_31#0, var_31_1#4)";
(contains-instruction: $N_8732114894089_134529016c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114894089_134529016c isa instruction, has hash "N_8732114894089_134529016c"; 

insert
$N_8732114894089_134529016c_0 isa variable-ssa, has hash "N_8732114894089_134529016c_0", has var "var_31_1", has version 1, has edge-label "dest", has var-type "char", has var-size -53, has var-func "cgc_init_track";
(to-node: $N_8732114894089_134529016c_0, from-node: $N_8732114894089_134529016c) isa node-link; 

match
$N_8732114894089_134529016c isa instruction, has hash "N_8732114894089_134529016c"; 

insert
$L_8732114894089_134529016c_1 isa list, has hash "L_8732114894089_134529016c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732114894089_134529016c_1, from-node: $N_8732114894089_134529016c) isa node-link; 

match
$L_8732114894089_134529016c_1 isa list, has hash "L_8732114894089_134529016c_1"; 

insert
$N_8732114894089_134529016c_1_0 isa variable-ssa, has hash "N_8732114894089_134529016c_1_0", has var "var_31", has version 0, has edge-label "0", has var-type "char", has var-size -49, has var-func "cgc_init_track";
(to-node: $N_8732114894089_134529016c_1_0, from-node: $L_8732114894089_134529016c_1) isa node-link; 

match
$L_8732114894089_134529016c_1 isa list, has hash "L_8732114894089_134529016c_1"; 

insert
$N_8732114894089_134529016c_1_1 isa variable-ssa, has hash "N_8732114894089_134529016c_1_1", has var "var_31_1", has version 4, has edge-label "1", has var-type "char", has var-size -53, has var-func "cgc_init_track";
(to-node: $N_8732114894089_134529016c_1_1, from-node: $L_8732114894089_134529016c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114904581_134529016c isa instruction, has hash "N_8732114904581_134529016c", has il-index 50, has asm-address "0x804bff8", has operation-type "MLIL_VAR_PHI", has ins-text "var_40_2#2 = ϕ(var_40_1#1, var_40_2#3)";
(contains-instruction: $N_8732114904581_134529016c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114904581_134529016c isa instruction, has hash "N_8732114904581_134529016c"; 

insert
$N_8732114904581_134529016c_0 isa variable-ssa, has hash "N_8732114904581_134529016c_0", has var "var_40_2", has version 2, has edge-label "dest", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114904581_134529016c_0, from-node: $N_8732114904581_134529016c) isa node-link; 

match
$N_8732114904581_134529016c isa instruction, has hash "N_8732114904581_134529016c"; 

insert
$L_8732114904581_134529016c_1 isa list, has hash "L_8732114904581_134529016c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732114904581_134529016c_1, from-node: $N_8732114904581_134529016c) isa node-link; 

match
$L_8732114904581_134529016c_1 isa list, has hash "L_8732114904581_134529016c_1"; 

insert
$N_8732114904581_134529016c_1_0 isa variable-ssa, has hash "N_8732114904581_134529016c_1_0", has var "var_40_1", has version 1, has edge-label "0", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114904581_134529016c_1_0, from-node: $L_8732114904581_134529016c_1) isa node-link; 

match
$L_8732114904581_134529016c_1 isa list, has hash "L_8732114904581_134529016c_1"; 

insert
$N_8732114904581_134529016c_1_1 isa variable-ssa, has hash "N_8732114904581_134529016c_1_1", has var "var_40_2", has version 3, has edge-label "1", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114904581_134529016c_1_1, from-node: $L_8732114904581_134529016c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114914053_134529016c isa instruction, has hash "N_8732114914053_134529016c", has il-index 54, has asm-address "0x804bff8", has operation-type "MLIL_VAR_PHI", has ins-text "edx_4#5 = ϕ(edx_2#4, edx_4#11)";
(contains-instruction: $N_8732114914053_134529016c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114914053_134529016c isa instruction, has hash "N_8732114914053_134529016c"; 

insert
$N_8732114914053_134529016c_0 isa variable-ssa, has hash "N_8732114914053_134529016c_0", has var "edx_4", has version 5, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114914053_134529016c_0, from-node: $N_8732114914053_134529016c) isa node-link; 

match
$N_8732114914053_134529016c isa instruction, has hash "N_8732114914053_134529016c"; 

insert
$L_8732114914053_134529016c_1 isa list, has hash "L_8732114914053_134529016c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732114914053_134529016c_1, from-node: $N_8732114914053_134529016c) isa node-link; 

match
$L_8732114914053_134529016c_1 isa list, has hash "L_8732114914053_134529016c_1"; 

insert
$N_8732114914053_134529016c_1_0 isa variable-ssa, has hash "N_8732114914053_134529016c_1_0", has var "edx_2", has version 4, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114914053_134529016c_1_0, from-node: $L_8732114914053_134529016c_1) isa node-link; 

match
$L_8732114914053_134529016c_1 isa list, has hash "L_8732114914053_134529016c_1"; 

insert
$N_8732114914053_134529016c_1_1 isa variable-ssa, has hash "N_8732114914053_134529016c_1_1", has var "edx_4", has version 11, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114914053_134529016c_1_1, from-node: $L_8732114914053_134529016c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114919173_134529016c isa instruction, has hash "N_8732114919173_134529016c", has il-index 55, has asm-address "0x804bff8", has operation-type "MLIL_VAR_PHI", has ins-text "ebx#1 = ϕ(ebx#0, ebx#2)";
(contains-instruction: $N_8732114919173_134529016c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114919173_134529016c isa instruction, has hash "N_8732114919173_134529016c"; 

insert
$N_8732114919173_134529016c_0 isa variable-ssa, has hash "N_8732114919173_134529016c_0", has var "ebx", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114919173_134529016c_0, from-node: $N_8732114919173_134529016c) isa node-link; 

match
$N_8732114919173_134529016c isa instruction, has hash "N_8732114919173_134529016c"; 

insert
$L_8732114919173_134529016c_1 isa list, has hash "L_8732114919173_134529016c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732114919173_134529016c_1, from-node: $N_8732114919173_134529016c) isa node-link; 

match
$L_8732114919173_134529016c_1 isa list, has hash "L_8732114919173_134529016c_1"; 

insert
$N_8732114919173_134529016c_1_0 isa variable-ssa, has hash "N_8732114919173_134529016c_1_0", has var "ebx", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114919173_134529016c_1_0, from-node: $L_8732114919173_134529016c_1) isa node-link; 

match
$L_8732114919173_134529016c_1 isa list, has hash "L_8732114919173_134529016c_1"; 

insert
$N_8732114919173_134529016c_1_1 isa variable-ssa, has hash "N_8732114919173_134529016c_1_1", has var "ebx", has version 2, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114919173_134529016c_1_1, from-node: $L_8732114919173_134529016c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114947357_134529016c isa instruction, has hash "N_8732114947357_134529016c", has il-index 57, has asm-address "0x804bff8", has operation-type "MLIL_VAR_PHI", has ins-text "cond:0_1#1 = ϕ(cond:0#0, cond:0_1#2)";
(contains-instruction: $N_8732114947357_134529016c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114947357_134529016c isa instruction, has hash "N_8732114947357_134529016c"; 

insert
$N_8732114947357_134529016c_0 isa variable-ssa, has hash "N_8732114947357_134529016c_0", has var "cond:0_1", has version 1, has edge-label "dest", has var-type "bool", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114947357_134529016c_0, from-node: $N_8732114947357_134529016c) isa node-link; 

match
$N_8732114947357_134529016c isa instruction, has hash "N_8732114947357_134529016c"; 

insert
$L_8732114947357_134529016c_1 isa list, has hash "L_8732114947357_134529016c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732114947357_134529016c_1, from-node: $N_8732114947357_134529016c) isa node-link; 

match
$L_8732114947357_134529016c_1 isa list, has hash "L_8732114947357_134529016c_1"; 

insert
$N_8732114947357_134529016c_1_0 isa variable-ssa, has hash "N_8732114947357_134529016c_1_0", has var "cond:0", has version 0, has edge-label "0", has var-type "bool", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114947357_134529016c_1_0, from-node: $L_8732114947357_134529016c_1) isa node-link; 

match
$L_8732114947357_134529016c_1 isa list, has hash "L_8732114947357_134529016c_1"; 

insert
$N_8732114947357_134529016c_1_1 isa variable-ssa, has hash "N_8732114947357_134529016c_1_1", has var "cond:0_1", has version 2, has edge-label "1", has var-type "bool", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114947357_134529016c_1_1, from-node: $L_8732114947357_134529016c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114957317_134529016c isa instruction, has hash "N_8732114957317_134529016c", has il-index 56, has asm-address "0x804bff8", has operation-type "MLIL_VAR_PHI", has ins-text "esi_2#1 = ϕ(esi#0, esi_2#3)";
(contains-instruction: $N_8732114957317_134529016c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114957317_134529016c isa instruction, has hash "N_8732114957317_134529016c"; 

insert
$N_8732114957317_134529016c_0 isa variable-ssa, has hash "N_8732114957317_134529016c_0", has var "esi_2", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114957317_134529016c_0, from-node: $N_8732114957317_134529016c) isa node-link; 

match
$N_8732114957317_134529016c isa instruction, has hash "N_8732114957317_134529016c"; 

insert
$L_8732114957317_134529016c_1 isa list, has hash "L_8732114957317_134529016c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732114957317_134529016c_1, from-node: $N_8732114957317_134529016c) isa node-link; 

match
$L_8732114957317_134529016c_1 isa list, has hash "L_8732114957317_134529016c_1"; 

insert
$N_8732114957317_134529016c_1_0 isa variable-ssa, has hash "N_8732114957317_134529016c_1_0", has var "esi", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114957317_134529016c_1_0, from-node: $L_8732114957317_134529016c_1) isa node-link; 

match
$L_8732114957317_134529016c_1 isa list, has hash "L_8732114957317_134529016c_1"; 

insert
$N_8732114957317_134529016c_1_1 isa variable-ssa, has hash "N_8732114957317_134529016c_1_1", has var "esi_2", has version 3, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114957317_134529016c_1_1, from-node: $L_8732114957317_134529016c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114959857_134529016c isa instruction, has hash "N_8732114959857_134529016c", has il-index 49, has asm-address "0x804bff8", has operation-type "MLIL_VAR_PHI", has ins-text "var_44_1#1 = ϕ(var_44#0, var_44_1#2)";
(contains-instruction: $N_8732114959857_134529016c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114959857_134529016c isa instruction, has hash "N_8732114959857_134529016c"; 

insert
$N_8732114959857_134529016c_0 isa variable-ssa, has hash "N_8732114959857_134529016c_0", has var "var_44_1", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114959857_134529016c_0, from-node: $N_8732114959857_134529016c) isa node-link; 

match
$N_8732114959857_134529016c isa instruction, has hash "N_8732114959857_134529016c"; 

insert
$L_8732114959857_134529016c_1 isa list, has hash "L_8732114959857_134529016c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732114959857_134529016c_1, from-node: $N_8732114959857_134529016c) isa node-link; 

match
$L_8732114959857_134529016c_1 isa list, has hash "L_8732114959857_134529016c_1"; 

insert
$N_8732114959857_134529016c_1_0 isa variable-ssa, has hash "N_8732114959857_134529016c_1_0", has var "var_44", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114959857_134529016c_1_0, from-node: $L_8732114959857_134529016c_1) isa node-link; 

match
$L_8732114959857_134529016c_1 isa list, has hash "L_8732114959857_134529016c_1"; 

insert
$N_8732114959857_134529016c_1_1 isa variable-ssa, has hash "N_8732114959857_134529016c_1_1", has var "var_44_1", has version 2, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114959857_134529016c_1_1, from-node: $L_8732114959857_134529016c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115077637_134529016c isa instruction, has hash "N_8732115077637_134529016c", has il-index 53, has asm-address "0x804bff8", has operation-type "MLIL_VAR_PHI", has ins-text "ecx_3#3 = ϕ(ecx_2#2, ecx_3#4)";
(contains-instruction: $N_8732115077637_134529016c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115077637_134529016c isa instruction, has hash "N_8732115077637_134529016c"; 

insert
$N_8732115077637_134529016c_0 isa variable-ssa, has hash "N_8732115077637_134529016c_0", has var "ecx_3", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115077637_134529016c_0, from-node: $N_8732115077637_134529016c) isa node-link; 

match
$N_8732115077637_134529016c isa instruction, has hash "N_8732115077637_134529016c"; 

insert
$L_8732115077637_134529016c_1 isa list, has hash "L_8732115077637_134529016c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115077637_134529016c_1, from-node: $N_8732115077637_134529016c) isa node-link; 

match
$L_8732115077637_134529016c_1 isa list, has hash "L_8732115077637_134529016c_1"; 

insert
$N_8732115077637_134529016c_1_0 isa variable-ssa, has hash "N_8732115077637_134529016c_1_0", has var "ecx_2", has version 2, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115077637_134529016c_1_0, from-node: $L_8732115077637_134529016c_1) isa node-link; 

match
$L_8732115077637_134529016c_1 isa list, has hash "L_8732115077637_134529016c_1"; 

insert
$N_8732115077637_134529016c_1_1 isa variable-ssa, has hash "N_8732115077637_134529016c_1_1", has var "ecx_3", has version 4, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115077637_134529016c_1_1, from-node: $L_8732115077637_134529016c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115087109_134529016c isa instruction, has hash "N_8732115087109_134529016c", has il-index 52, has asm-address "0x804bff8", has operation-type "MLIL_VAR_PHI", has ins-text "eax_4#6 = ϕ(eax_3#5, eax_4#10)";
(contains-instruction: $N_8732115087109_134529016c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115087109_134529016c isa instruction, has hash "N_8732115087109_134529016c"; 

insert
$N_8732115087109_134529016c_0 isa variable-ssa, has hash "N_8732115087109_134529016c_0", has var "eax_4", has version 6, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115087109_134529016c_0, from-node: $N_8732115087109_134529016c) isa node-link; 

match
$N_8732115087109_134529016c isa instruction, has hash "N_8732115087109_134529016c"; 

insert
$L_8732115087109_134529016c_1 isa list, has hash "L_8732115087109_134529016c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115087109_134529016c_1, from-node: $N_8732115087109_134529016c) isa node-link; 

match
$L_8732115087109_134529016c_1 isa list, has hash "L_8732115087109_134529016c_1"; 

insert
$N_8732115087109_134529016c_1_0 isa variable-ssa, has hash "N_8732115087109_134529016c_1_0", has var "eax_3", has version 5, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115087109_134529016c_1_0, from-node: $L_8732115087109_134529016c_1) isa node-link; 

match
$L_8732115087109_134529016c_1 isa list, has hash "L_8732115087109_134529016c_1"; 

insert
$N_8732115087109_134529016c_1_1 isa variable-ssa, has hash "N_8732115087109_134529016c_1_1", has var "eax_4", has version 10, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115087109_134529016c_1_1, from-node: $L_8732115087109_134529016c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115462713_134529016c isa instruction, has hash "N_8732115462713_134529016c", has il-index 59, has asm-address "0x804bff8", has operation-type "MLIL_SET_VAR_SSA", has ins-text "edx_3#6 = 0 + [0x2c].d @ mem#10";
(contains-instruction: $N_8732115462713_134529016c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115462713_134529016c isa instruction, has hash "N_8732115462713_134529016c"; 

insert
$N_8732115462713_134529016c_0 isa variable-ssa, has hash "N_8732115462713_134529016c_0", has var "edx_3", has version 6, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115462713_134529016c_0, from-node: $N_8732115462713_134529016c) isa node-link; 

match
$N_8732115462713_134529016c isa instruction, has hash "N_8732115462713_134529016c"; 

insert
$N_8732115462713_134529016c_1 isa MLIL_ADD, has hash "N_8732115462713_134529016c_1", has edge-label "src";
(to-node: $N_8732115462713_134529016c_1, from-node: $N_8732115462713_134529016c) isa node-link; 

match
$N_8732115462713_134529016c_1 isa operation, has hash "N_8732115462713_134529016c_1"; 

insert
$N_8732115462713_134529016c_1_0 isa MLIL_CONST, has hash "N_8732115462713_134529016c_1_0", has edge-label "left";
(to-node: $N_8732115462713_134529016c_1_0, from-node: $N_8732115462713_134529016c_1) isa node-link; 

match
$N_8732115462713_134529016c_1_0 isa operation, has hash "N_8732115462713_134529016c_1_0"; 

insert
$N_8732115462713_134529016c_1_0_0 isa constant, has hash "N_8732115462713_134529016c_1_0_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115462713_134529016c_1_0_0, from-node: $N_8732115462713_134529016c_1_0) isa node-link; 

match
$N_8732115462713_134529016c_1 isa operation, has hash "N_8732115462713_134529016c_1"; 

insert
$N_8732115462713_134529016c_1_1 isa MLIL_LOAD_SSA, has hash "N_8732115462713_134529016c_1_1", has edge-label "right";
(to-node: $N_8732115462713_134529016c_1_1, from-node: $N_8732115462713_134529016c_1) isa node-link; 

match
$N_8732115462713_134529016c_1_1 isa operation, has hash "N_8732115462713_134529016c_1_1"; 

insert
$N_8732115462713_134529016c_1_1_0 isa MLIL_CONST_PTR, has hash "N_8732115462713_134529016c_1_1_0", has edge-label "src";
(to-node: $N_8732115462713_134529016c_1_1_0, from-node: $N_8732115462713_134529016c_1_1) isa node-link; 

match
$N_8732115462713_134529016c_1_1_0 isa operation, has hash "N_8732115462713_134529016c_1_1_0"; 

insert
$N_8732115462713_134529016c_1_1_0_0 isa constant, has hash "N_8732115462713_134529016c_1_1_0_0", has constant-value "44", has edge-label "constant";
(to-node: $N_8732115462713_134529016c_1_1_0_0, from-node: $N_8732115462713_134529016c_1_1_0) isa node-link; 

match
$N_8732115462713_134529016c_1_1 isa operation, has hash "N_8732115462713_134529016c_1_1"; 

insert
$N_8732115462713_134529016c_1_1_1 isa constant, has hash "N_8732115462713_134529016c_1_1_1", has constant-value "10", has edge-label "src_memory";
(to-node: $N_8732115462713_134529016c_1_1_1, from-node: $N_8732115462713_134529016c_1_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115479081_134529016c isa instruction, has hash "N_8732115479081_134529016c", has il-index 48, has asm-address "0x804bff8", has operation-type "MLIL_VAR_PHI", has ins-text "var_48_1#1 = ϕ(var_48#0, var_48_1#2)";
(contains-instruction: $N_8732115479081_134529016c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115479081_134529016c isa instruction, has hash "N_8732115479081_134529016c"; 

insert
$N_8732115479081_134529016c_0 isa variable-ssa, has hash "N_8732115479081_134529016c_0", has var "var_48_1", has version 1, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115479081_134529016c_0, from-node: $N_8732115479081_134529016c) isa node-link; 

match
$N_8732115479081_134529016c isa instruction, has hash "N_8732115479081_134529016c"; 

insert
$L_8732115479081_134529016c_1 isa list, has hash "L_8732115479081_134529016c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115479081_134529016c_1, from-node: $N_8732115479081_134529016c) isa node-link; 

match
$L_8732115479081_134529016c_1 isa list, has hash "L_8732115479081_134529016c_1"; 

insert
$N_8732115479081_134529016c_1_0 isa variable-ssa, has hash "N_8732115479081_134529016c_1_0", has var "var_48", has version 0, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115479081_134529016c_1_0, from-node: $L_8732115479081_134529016c_1) isa node-link; 

match
$L_8732115479081_134529016c_1 isa list, has hash "L_8732115479081_134529016c_1"; 

insert
$N_8732115479081_134529016c_1_1 isa variable-ssa, has hash "N_8732115479081_134529016c_1_1", has var "var_48_1", has version 2, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115479081_134529016c_1_1, from-node: $L_8732115479081_134529016c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115150669_134529022c isa instruction, has hash "N_8732115150669_134529022c", has il-index 60, has asm-address "0x804bffe", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi_1#2 = [0x28].d @ mem#10";
(contains-instruction: $N_8732115150669_134529022c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115150669_134529022c isa instruction, has hash "N_8732115150669_134529022c"; 

insert
$N_8732115150669_134529022c_0 isa variable-ssa, has hash "N_8732115150669_134529022c_0", has var "esi_1", has version 2, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115150669_134529022c_0, from-node: $N_8732115150669_134529022c) isa node-link; 

match
$N_8732115150669_134529022c isa instruction, has hash "N_8732115150669_134529022c"; 

insert
$N_8732115150669_134529022c_1 isa MLIL_LOAD_SSA, has hash "N_8732115150669_134529022c_1", has edge-label "src";
(to-node: $N_8732115150669_134529022c_1, from-node: $N_8732115150669_134529022c) isa node-link; 

match
$N_8732115150669_134529022c_1 isa operation, has hash "N_8732115150669_134529022c_1"; 

insert
$N_8732115150669_134529022c_1_0 isa MLIL_CONST_PTR, has hash "N_8732115150669_134529022c_1_0", has edge-label "src";
(to-node: $N_8732115150669_134529022c_1_0, from-node: $N_8732115150669_134529022c_1) isa node-link; 

match
$N_8732115150669_134529022c_1_0 isa operation, has hash "N_8732115150669_134529022c_1_0"; 

insert
$N_8732115150669_134529022c_1_0_0 isa constant, has hash "N_8732115150669_134529022c_1_0_0", has constant-value "40", has edge-label "constant";
(to-node: $N_8732115150669_134529022c_1_0_0, from-node: $N_8732115150669_134529022c_1_0) isa node-link; 

match
$N_8732115150669_134529022c_1 isa operation, has hash "N_8732115150669_134529022c_1"; 

insert
$N_8732115150669_134529022c_1_1 isa constant, has hash "N_8732115150669_134529022c_1_1", has constant-value "10", has edge-label "src_memory";
(to-node: $N_8732115150669_134529022c_1_1, from-node: $N_8732115150669_134529022c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114893389_134529025c isa instruction, has hash "N_8732114893389_134529025c", has il-index 61, has asm-address "0x804c001", has operation-type "MLIL_SET_VAR_SSA", has ins-text "esi_2#3 = esi_1#2 - 0";
(contains-instruction: $N_8732114893389_134529025c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114893389_134529025c isa instruction, has hash "N_8732114893389_134529025c"; 

insert
$N_8732114893389_134529025c_0 isa variable-ssa, has hash "N_8732114893389_134529025c_0", has var "esi_2", has version 3, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114893389_134529025c_0, from-node: $N_8732114893389_134529025c) isa node-link; 

match
$N_8732114893389_134529025c isa instruction, has hash "N_8732114893389_134529025c"; 

insert
$N_8732114893389_134529025c_1 isa MLIL_SUB, has hash "N_8732114893389_134529025c_1", has edge-label "src";
(to-node: $N_8732114893389_134529025c_1, from-node: $N_8732114893389_134529025c) isa node-link; 

match
$N_8732114893389_134529025c_1 isa operation, has hash "N_8732114893389_134529025c_1"; 

insert
$N_8732114893389_134529025c_1_0 isa MLIL_VAR_SSA, has hash "N_8732114893389_134529025c_1_0", has edge-label "left";
(to-node: $N_8732114893389_134529025c_1_0, from-node: $N_8732114893389_134529025c_1) isa node-link; 

match
$N_8732114893389_134529025c_1_0 isa operation, has hash "N_8732114893389_134529025c_1_0"; 

insert
$N_8732114893389_134529025c_1_0_0 isa variable-ssa, has hash "N_8732114893389_134529025c_1_0_0", has var "esi_1", has version 2, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114893389_134529025c_1_0_0, from-node: $N_8732114893389_134529025c_1_0) isa node-link; 

match
$N_8732114893389_134529025c_1 isa operation, has hash "N_8732114893389_134529025c_1"; 

insert
$N_8732114893389_134529025c_1_1 isa MLIL_CONST, has hash "N_8732114893389_134529025c_1_1", has edge-label "right";
(to-node: $N_8732114893389_134529025c_1_1, from-node: $N_8732114893389_134529025c_1) isa node-link; 

match
$N_8732114893389_134529025c_1_1 isa operation, has hash "N_8732114893389_134529025c_1_1"; 

insert
$N_8732114893389_134529025c_1_1_0 isa constant, has hash "N_8732114893389_134529025c_1_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732114893389_134529025c_1_1_0, from-node: $N_8732114893389_134529025c_1_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115035909_134529035c isa instruction, has hash "N_8732115035909_134529035c", has il-index 62, has asm-address "0x804c00b", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_48_1#2 = edx_3#6";
(contains-instruction: $N_8732115035909_134529035c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115035909_134529035c isa instruction, has hash "N_8732115035909_134529035c"; 

insert
$N_8732115035909_134529035c_0 isa variable-ssa, has hash "N_8732115035909_134529035c_0", has var "var_48_1", has version 2, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115035909_134529035c_0, from-node: $N_8732115035909_134529035c) isa node-link; 

match
$N_8732115035909_134529035c isa instruction, has hash "N_8732115035909_134529035c"; 

insert
$N_8732115035909_134529035c_1 isa MLIL_VAR_SSA, has hash "N_8732115035909_134529035c_1", has edge-label "src";
(to-node: $N_8732115035909_134529035c_1, from-node: $N_8732115035909_134529035c) isa node-link; 

match
$N_8732115035909_134529035c_1 isa operation, has hash "N_8732115035909_134529035c_1"; 

insert
$N_8732115035909_134529035c_1_0 isa variable-ssa, has hash "N_8732115035909_134529035c_1_0", has var "edx_3", has version 6, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115035909_134529035c_1_0, from-node: $N_8732115035909_134529035c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114975237_134529039c isa instruction, has hash "N_8732114975237_134529039c", has il-index 63, has asm-address "0x804c00f", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_44_1#2 = esi_2#3";
(contains-instruction: $N_8732114975237_134529039c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114975237_134529039c isa instruction, has hash "N_8732114975237_134529039c"; 

insert
$N_8732114975237_134529039c_0 isa variable-ssa, has hash "N_8732114975237_134529039c_0", has var "var_44_1", has version 2, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114975237_134529039c_0, from-node: $N_8732114975237_134529039c) isa node-link; 

match
$N_8732114975237_134529039c isa instruction, has hash "N_8732114975237_134529039c"; 

insert
$N_8732114975237_134529039c_1 isa MLIL_VAR_SSA, has hash "N_8732114975237_134529039c_1", has edge-label "src";
(to-node: $N_8732114975237_134529039c_1, from-node: $N_8732114975237_134529039c) isa node-link; 

match
$N_8732114975237_134529039c_1 isa operation, has hash "N_8732114975237_134529039c_1"; 

insert
$N_8732114975237_134529039c_1_0 isa variable-ssa, has hash "N_8732114975237_134529039c_1_0", has var "esi_2", has version 3, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114975237_134529039c_1_0, from-node: $N_8732114975237_134529039c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115212805_134529043c isa instruction, has hash "N_8732115212805_134529043c", has il-index 64, has asm-address "0x804c013", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_40_2#3 = &var_1c";
(contains-instruction: $N_8732115212805_134529043c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115212805_134529043c isa instruction, has hash "N_8732115212805_134529043c"; 

insert
$N_8732115212805_134529043c_0 isa variable-ssa, has hash "N_8732115212805_134529043c_0", has var "var_40_2", has version 3, has edge-label "dest", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115212805_134529043c_0, from-node: $N_8732115212805_134529043c) isa node-link; 

match
$N_8732115212805_134529043c isa instruction, has hash "N_8732115212805_134529043c"; 

insert
$N_8732115212805_134529043c_1 isa MLIL_ADDRESS_OF, has hash "N_8732115212805_134529043c_1", has edge-label "src";
(to-node: $N_8732115212805_134529043c_1, from-node: $N_8732115212805_134529043c) isa node-link; 

match
$N_8732115212805_134529043c_1 isa operation, has hash "N_8732115212805_134529043c_1"; 

insert
$N_8732115212805_134529043c_1_0 isa variable, has hash "N_8732115212805_134529043c_1_0", has var "var_1c", has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115212805_134529043c_1_0, from-node: $N_8732115212805_134529043c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114986249_134529050c isa instruction, has hash "N_8732114986249_134529050c", has il-index 65, has asm-address "0x804c01a", has operation-type "MLIL_CALL_SSA", has ins-text "eax_4#7, edx_4#7, mem#11 = 0x8048f40(0, var_48_1#2, var_44_1#2, var_40_2#3) @ mem#10";
(contains-instruction: $N_8732114986249_134529050c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114986249_134529050c isa instruction, has hash "N_8732114986249_134529050c"; 

insert
$N_8732114986249_134529050c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8732114986249_134529050c_0", has edge-label "output";
(to-node: $N_8732114986249_134529050c_0, from-node: $N_8732114986249_134529050c) isa node-link; 

match
$N_8732114986249_134529050c_0 isa operation, has hash "N_8732114986249_134529050c_0"; 

insert
$N_8732114986249_134529050c_0_0 isa constant, has hash "N_8732114986249_134529050c_0_0", has constant-value "11", has edge-label "dest_memory";
(to-node: $N_8732114986249_134529050c_0_0, from-node: $N_8732114986249_134529050c_0) isa node-link; 

match
$N_8732114986249_134529050c_0 isa operation, has hash "N_8732114986249_134529050c_0"; 

insert
$L_8732114986249_134529050c_0_1 isa list, has hash "L_8732114986249_134529050c_0_1", has list-size 2, has edge-label "dest";
(to-node: $L_8732114986249_134529050c_0_1, from-node: $N_8732114986249_134529050c_0) isa node-link; 

match
$L_8732114986249_134529050c_0_1 isa list, has hash "L_8732114986249_134529050c_0_1"; 

insert
$N_8732114986249_134529050c_0_1_0 isa variable-ssa, has hash "N_8732114986249_134529050c_0_1_0", has var "eax_4", has version 7, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114986249_134529050c_0_1_0, from-node: $L_8732114986249_134529050c_0_1) isa node-link; 

match
$L_8732114986249_134529050c_0_1 isa list, has hash "L_8732114986249_134529050c_0_1"; 

insert
$N_8732114986249_134529050c_0_1_1 isa variable-ssa, has hash "N_8732114986249_134529050c_0_1_1", has var "edx_4", has version 7, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114986249_134529050c_0_1_1, from-node: $L_8732114986249_134529050c_0_1) isa node-link; 

match
$N_8732114986249_134529050c isa instruction, has hash "N_8732114986249_134529050c"; 

insert
$N_8732114986249_134529050c_1 isa MLIL_CONST_PTR, has hash "N_8732114986249_134529050c_1", has edge-label "dest";
(to-node: $N_8732114986249_134529050c_1, from-node: $N_8732114986249_134529050c) isa node-link; 

match
$N_8732114986249_134529050c_1 isa operation, has hash "N_8732114986249_134529050c_1"; 

insert
$N_8732114986249_134529050c_1_0 isa constant, has hash "N_8732114986249_134529050c_1_0", has constant-value "134516544", has edge-label "constant";
(to-node: $N_8732114986249_134529050c_1_0, from-node: $N_8732114986249_134529050c_1) isa node-link; 

match
$N_8732114986249_134529050c isa instruction, has hash "N_8732114986249_134529050c"; 

insert
$L_8732114986249_134529050c_2 isa list, has hash "L_8732114986249_134529050c_2", has list-size 4, has edge-label "params";
(to-node: $L_8732114986249_134529050c_2, from-node: $N_8732114986249_134529050c) isa node-link; 

match
$L_8732114986249_134529050c_2 isa list, has hash "L_8732114986249_134529050c_2"; 

insert
$N_8732114986249_134529050c_2_0 isa MLIL_CONST, has hash "N_8732114986249_134529050c_2_0", has edge-label "0";
(to-node: $N_8732114986249_134529050c_2_0, from-node: $L_8732114986249_134529050c_2) isa node-link; 

match
$N_8732114986249_134529050c_2_0 isa operation, has hash "N_8732114986249_134529050c_2_0"; 

insert
$N_8732114986249_134529050c_2_0_0 isa constant, has hash "N_8732114986249_134529050c_2_0_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732114986249_134529050c_2_0_0, from-node: $N_8732114986249_134529050c_2_0) isa node-link; 

match
$L_8732114986249_134529050c_2 isa list, has hash "L_8732114986249_134529050c_2"; 

insert
$N_8732114986249_134529050c_2_1 isa MLIL_VAR_SSA, has hash "N_8732114986249_134529050c_2_1", has edge-label "1";
(to-node: $N_8732114986249_134529050c_2_1, from-node: $L_8732114986249_134529050c_2) isa node-link; 

match
$N_8732114986249_134529050c_2_1 isa operation, has hash "N_8732114986249_134529050c_2_1"; 

insert
$N_8732114986249_134529050c_2_1_0 isa variable-ssa, has hash "N_8732114986249_134529050c_2_1_0", has var "var_48_1", has version 2, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114986249_134529050c_2_1_0, from-node: $N_8732114986249_134529050c_2_1) isa node-link; 

match
$L_8732114986249_134529050c_2 isa list, has hash "L_8732114986249_134529050c_2"; 

insert
$N_8732114986249_134529050c_2_2 isa MLIL_VAR_SSA, has hash "N_8732114986249_134529050c_2_2", has edge-label "2";
(to-node: $N_8732114986249_134529050c_2_2, from-node: $L_8732114986249_134529050c_2) isa node-link; 

match
$N_8732114986249_134529050c_2_2 isa operation, has hash "N_8732114986249_134529050c_2_2"; 

insert
$N_8732114986249_134529050c_2_2_0 isa variable-ssa, has hash "N_8732114986249_134529050c_2_2_0", has var "var_44_1", has version 2, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114986249_134529050c_2_2_0, from-node: $N_8732114986249_134529050c_2_2) isa node-link; 

match
$L_8732114986249_134529050c_2 isa list, has hash "L_8732114986249_134529050c_2"; 

insert
$N_8732114986249_134529050c_2_3 isa MLIL_VAR_SSA, has hash "N_8732114986249_134529050c_2_3", has edge-label "3";
(to-node: $N_8732114986249_134529050c_2_3, from-node: $L_8732114986249_134529050c_2) isa node-link; 

match
$N_8732114986249_134529050c_2_3 isa operation, has hash "N_8732114986249_134529050c_2_3"; 

insert
$N_8732114986249_134529050c_2_3_0 isa variable-ssa, has hash "N_8732114986249_134529050c_2_3_0", has var "var_40_2", has version 3, has edge-label "src", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114986249_134529050c_2_3_0, from-node: $N_8732114986249_134529050c_2_3) isa node-link; 

match
$N_8732114986249_134529050c isa instruction, has hash "N_8732114986249_134529050c"; 

insert
$N_8732114986249_134529050c_3 isa constant, has hash "N_8732114986249_134529050c_3", has constant-value "10", has edge-label "src_memory";
(to-node: $N_8732114986249_134529050c_3, from-node: $N_8732114986249_134529050c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115222837_134529055c isa instruction, has hash "N_8732115222837_134529055c", has il-index 66, has asm-address "0x804c01f", has operation-type "MLIL_SET_VAR_SSA", has ins-text "ecx_3#4 = 0";
(contains-instruction: $N_8732115222837_134529055c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115222837_134529055c isa instruction, has hash "N_8732115222837_134529055c"; 

insert
$N_8732115222837_134529055c_0 isa variable-ssa, has hash "N_8732115222837_134529055c_0", has var "ecx_3", has version 4, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115222837_134529055c_0, from-node: $N_8732115222837_134529055c) isa node-link; 

match
$N_8732115222837_134529055c isa instruction, has hash "N_8732115222837_134529055c"; 

insert
$N_8732115222837_134529055c_1 isa MLIL_CONST, has hash "N_8732115222837_134529055c_1", has edge-label "src";
(to-node: $N_8732115222837_134529055c_1, from-node: $N_8732115222837_134529055c) isa node-link; 

match
$N_8732115222837_134529055c_1 isa operation, has hash "N_8732115222837_134529055c_1"; 

insert
$N_8732115222837_134529055c_1_0 isa constant, has hash "N_8732115222837_134529055c_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115222837_134529055c_1_0, from-node: $N_8732115222837_134529055c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115380565_134529057c isa instruction, has hash "N_8732115380565_134529057c", has il-index 67, has asm-address "0x804c021", has operation-type "MLIL_SET_VAR_SSA_FIELD", has ins-text "ebx#2.bl = ecx_3#4.cl @ ebx#1";
(contains-instruction: $N_8732115380565_134529057c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115380565_134529057c isa instruction, has hash "N_8732115380565_134529057c"; 

insert
$N_8732115380565_134529057c_0 isa variable-ssa, has hash "N_8732115380565_134529057c_0", has var "ebx", has version 2, has edge-label "prev", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115380565_134529057c_0, from-node: $N_8732115380565_134529057c) isa node-link; 

match
$N_8732115380565_134529057c isa instruction, has hash "N_8732115380565_134529057c"; 

insert
$N_8732115380565_134529057c_1 isa variable-ssa, has hash "N_8732115380565_134529057c_1", has var "ebx", has version 1, has edge-label "offset", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115380565_134529057c_1, from-node: $N_8732115380565_134529057c) isa node-link; 

match
$N_8732115380565_134529057c isa instruction, has hash "N_8732115380565_134529057c"; 

insert
$N_8732115380565_134529057c_2 isa constant, has hash "N_8732115380565_134529057c_2", has constant-value "0", has edge-label "src";
(to-node: $N_8732115380565_134529057c_2, from-node: $N_8732115380565_134529057c) isa node-link; 

match
$N_8732115380565_134529057c isa instruction, has hash "N_8732115380565_134529057c"; 

insert
$N_8732115380565_134529057c_3 isa MLIL_VAR_SSA_FIELD, has hash "N_8732115380565_134529057c_3", has edge-label "unimplemented";
(to-node: $N_8732115380565_134529057c_3, from-node: $N_8732115380565_134529057c) isa node-link; 

match
$N_8732115380565_134529057c_3 isa operation, has hash "N_8732115380565_134529057c_3"; 

insert
$N_8732115380565_134529057c_3_0 isa variable-ssa, has hash "N_8732115380565_134529057c_3_0", has var "ecx_3", has version 4, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115380565_134529057c_3_0, from-node: $N_8732115380565_134529057c_3) isa node-link; 

match
$N_8732115380565_134529057c_3 isa operation, has hash "N_8732115380565_134529057c_3"; 

insert
$N_8732115380565_134529057c_3_1 isa constant, has hash "N_8732115380565_134529057c_3_1", has constant-value "0", has edge-label "offset";
(to-node: $N_8732115380565_134529057c_3_1, from-node: $N_8732115380565_134529057c_3) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115037489_134529059c isa instruction, has hash "N_8732115037489_134529059c", has il-index 68, has asm-address "0x804c023", has operation-type "MLIL_SET_VAR_SSA", has ins-text "cond:0_1#2 = eax_4#7 != 0";
(contains-instruction: $N_8732115037489_134529059c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115037489_134529059c isa instruction, has hash "N_8732115037489_134529059c"; 

insert
$N_8732115037489_134529059c_0 isa variable-ssa, has hash "N_8732115037489_134529059c_0", has var "cond:0_1", has version 2, has edge-label "dest", has var-type "bool", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115037489_134529059c_0, from-node: $N_8732115037489_134529059c) isa node-link; 

match
$N_8732115037489_134529059c isa instruction, has hash "N_8732115037489_134529059c"; 

insert
$N_8732115037489_134529059c_1 isa MLIL_CMP_NE, has hash "N_8732115037489_134529059c_1", has edge-label "src";
(to-node: $N_8732115037489_134529059c_1, from-node: $N_8732115037489_134529059c) isa node-link; 

match
$N_8732115037489_134529059c_1 isa operation, has hash "N_8732115037489_134529059c_1"; 

insert
$N_8732115037489_134529059c_1_0 isa MLIL_VAR_SSA, has hash "N_8732115037489_134529059c_1_0", has edge-label "left";
(to-node: $N_8732115037489_134529059c_1_0, from-node: $N_8732115037489_134529059c_1) isa node-link; 

match
$N_8732115037489_134529059c_1_0 isa operation, has hash "N_8732115037489_134529059c_1_0"; 

insert
$N_8732115037489_134529059c_1_0_0 isa variable-ssa, has hash "N_8732115037489_134529059c_1_0_0", has var "eax_4", has version 7, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115037489_134529059c_1_0_0, from-node: $N_8732115037489_134529059c_1_0) isa node-link; 

match
$N_8732115037489_134529059c_1 isa operation, has hash "N_8732115037489_134529059c_1"; 

insert
$N_8732115037489_134529059c_1_1 isa MLIL_CONST, has hash "N_8732115037489_134529059c_1_1", has edge-label "right";
(to-node: $N_8732115037489_134529059c_1_1, from-node: $N_8732115037489_134529059c_1) isa node-link; 

match
$N_8732115037489_134529059c_1_1 isa operation, has hash "N_8732115037489_134529059c_1_1"; 

insert
$N_8732115037489_134529059c_1_1_0 isa constant, has hash "N_8732115037489_134529059c_1_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115037489_134529059c_1_1_0, from-node: $N_8732115037489_134529059c_1_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115328005_134529062c isa instruction, has hash "N_8732115328005_134529062c", has il-index 69, has asm-address "0x804c026", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_31_1#2 = ebx#2.bl";
(contains-instruction: $N_8732115328005_134529062c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115328005_134529062c isa instruction, has hash "N_8732115328005_134529062c"; 

insert
$N_8732115328005_134529062c_0 isa variable-ssa, has hash "N_8732115328005_134529062c_0", has var "var_31_1", has version 2, has edge-label "dest", has var-type "char", has var-size -53, has var-func "cgc_init_track";
(to-node: $N_8732115328005_134529062c_0, from-node: $N_8732115328005_134529062c) isa node-link; 

match
$N_8732115328005_134529062c isa instruction, has hash "N_8732115328005_134529062c"; 

insert
$N_8732115328005_134529062c_1 isa MLIL_VAR_SSA_FIELD, has hash "N_8732115328005_134529062c_1", has edge-label "src";
(to-node: $N_8732115328005_134529062c_1, from-node: $N_8732115328005_134529062c) isa node-link; 

match
$N_8732115328005_134529062c_1 isa operation, has hash "N_8732115328005_134529062c_1"; 

insert
$N_8732115328005_134529062c_1_0 isa variable-ssa, has hash "N_8732115328005_134529062c_1_0", has var "ebx", has version 2, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115328005_134529062c_1_0, from-node: $N_8732115328005_134529062c_1) isa node-link; 

match
$N_8732115328005_134529062c_1 isa operation, has hash "N_8732115328005_134529062c_1"; 

insert
$N_8732115328005_134529062c_1_1 isa constant, has hash "N_8732115328005_134529062c_1_1", has constant-value "0", has edge-label "offset";
(to-node: $N_8732115328005_134529062c_1_1, from-node: $N_8732115328005_134529062c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 48, has bb-end 70; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115149317_134529065c isa instruction, has hash "N_8732115149317_134529065c", has il-index 70, has asm-address "0x804c029", has operation-type "MLIL_IF", has ins-text "if (cond:0_1#2) then 71 @ 0x0 else 72 @ 0x804c032";
(contains-instruction: $N_8732115149317_134529065c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115149317_134529065c isa instruction, has hash "N_8732115149317_134529065c"; 

insert
$N_8732115149317_134529065c_0 isa MLIL_VAR_SSA, has hash "N_8732115149317_134529065c_0", has edge-label "condition";
(to-node: $N_8732115149317_134529065c_0, from-node: $N_8732115149317_134529065c) isa node-link; 

match
$N_8732115149317_134529065c_0 isa operation, has hash "N_8732115149317_134529065c_0"; 

insert
$N_8732115149317_134529065c_0_0 isa variable-ssa, has hash "N_8732115149317_134529065c_0_0", has var "cond:0_1", has version 2, has edge-label "src", has var-type "bool", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115149317_134529065c_0_0, from-node: $N_8732115149317_134529065c_0) isa node-link; 

match
$N_8732115149317_134529065c isa instruction, has hash "N_8732115149317_134529065c"; 

insert
$N_8732115149317_134529065c_1 isa constant, has hash "N_8732115149317_134529065c_1", has constant-value "71", has edge-label "true";
(to-node: $N_8732115149317_134529065c_1, from-node: $N_8732115149317_134529065c) isa node-link; 

match
$N_8732115149317_134529065c isa instruction, has hash "N_8732115149317_134529065c"; 

insert
$N_8732115149317_134529065c_2 isa constant, has hash "N_8732115149317_134529065c_2", has constant-value "72", has edge-label "false";
(to-node: $N_8732115149317_134529065c_2, from-node: $N_8732115149317_134529065c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 71, has bb-end 71; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 72, has bb-end 73; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 72, has bb-end 73; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 72, has bb-end 73; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115054893_134529074c isa instruction, has hash "N_8732115054893_134529074c", has il-index 72, has asm-address "0x804c032", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_4#8 = 0 + var_1c @ mem#11";
(contains-instruction: $N_8732115054893_134529074c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115054893_134529074c isa instruction, has hash "N_8732115054893_134529074c"; 

insert
$N_8732115054893_134529074c_0 isa variable-ssa, has hash "N_8732115054893_134529074c_0", has var "eax_4", has version 8, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115054893_134529074c_0, from-node: $N_8732115054893_134529074c) isa node-link; 

match
$N_8732115054893_134529074c isa instruction, has hash "N_8732115054893_134529074c"; 

insert
$N_8732115054893_134529074c_1 isa MLIL_ADD, has hash "N_8732115054893_134529074c_1", has edge-label "src";
(to-node: $N_8732115054893_134529074c_1, from-node: $N_8732115054893_134529074c) isa node-link; 

match
$N_8732115054893_134529074c_1 isa operation, has hash "N_8732115054893_134529074c_1"; 

insert
$N_8732115054893_134529074c_1_0 isa MLIL_CONST, has hash "N_8732115054893_134529074c_1_0", has edge-label "left";
(to-node: $N_8732115054893_134529074c_1_0, from-node: $N_8732115054893_134529074c_1) isa node-link; 

match
$N_8732115054893_134529074c_1_0 isa operation, has hash "N_8732115054893_134529074c_1_0"; 

insert
$N_8732115054893_134529074c_1_0_0 isa constant, has hash "N_8732115054893_134529074c_1_0_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115054893_134529074c_1_0_0, from-node: $N_8732115054893_134529074c_1_0) isa node-link; 

match
$N_8732115054893_134529074c_1 isa operation, has hash "N_8732115054893_134529074c_1"; 

insert
$N_8732115054893_134529074c_1_1 isa MLIL_VAR_ALIASED, has hash "N_8732115054893_134529074c_1_1", has edge-label "right";
(to-node: $N_8732115054893_134529074c_1_1, from-node: $N_8732115054893_134529074c_1) isa node-link; 

match
$N_8732115054893_134529074c_1_1 isa operation, has hash "N_8732115054893_134529074c_1_1"; 

insert
$N_8732115054893_134529074c_1_1_0 isa variable-ssa, has hash "N_8732115054893_134529074c_1_1_0", has var "var_1c", has version 11, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115054893_134529074c_1_1_0, from-node: $N_8732115054893_134529074c_1_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 72, has bb-end 73; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 72, has bb-end 73; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114814517_134529083c isa instruction, has hash "N_8732114814517_134529083c", has il-index 73, has asm-address "0x804c03b", has operation-type "MLIL_IF", has ins-text "if (eax_4#8 != [0x28].d @ mem#11) then 79 else 81";
(contains-instruction: $N_8732114814517_134529083c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114814517_134529083c isa instruction, has hash "N_8732114814517_134529083c"; 

insert
$N_8732114814517_134529083c_0 isa MLIL_CMP_NE, has hash "N_8732114814517_134529083c_0", has edge-label "condition";
(to-node: $N_8732114814517_134529083c_0, from-node: $N_8732114814517_134529083c) isa node-link; 

match
$N_8732114814517_134529083c_0 isa operation, has hash "N_8732114814517_134529083c_0"; 

insert
$N_8732114814517_134529083c_0_0 isa MLIL_VAR_SSA, has hash "N_8732114814517_134529083c_0_0", has edge-label "left";
(to-node: $N_8732114814517_134529083c_0_0, from-node: $N_8732114814517_134529083c_0) isa node-link; 

match
$N_8732114814517_134529083c_0_0 isa operation, has hash "N_8732114814517_134529083c_0_0"; 

insert
$N_8732114814517_134529083c_0_0_0 isa variable-ssa, has hash "N_8732114814517_134529083c_0_0_0", has var "eax_4", has version 8, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114814517_134529083c_0_0_0, from-node: $N_8732114814517_134529083c_0_0) isa node-link; 

match
$N_8732114814517_134529083c_0 isa operation, has hash "N_8732114814517_134529083c_0"; 

insert
$N_8732114814517_134529083c_0_1 isa MLIL_LOAD_SSA, has hash "N_8732114814517_134529083c_0_1", has edge-label "right";
(to-node: $N_8732114814517_134529083c_0_1, from-node: $N_8732114814517_134529083c_0) isa node-link; 

match
$N_8732114814517_134529083c_0_1 isa operation, has hash "N_8732114814517_134529083c_0_1"; 

insert
$N_8732114814517_134529083c_0_1_0 isa MLIL_CONST_PTR, has hash "N_8732114814517_134529083c_0_1_0", has edge-label "src";
(to-node: $N_8732114814517_134529083c_0_1_0, from-node: $N_8732114814517_134529083c_0_1) isa node-link; 

match
$N_8732114814517_134529083c_0_1_0 isa operation, has hash "N_8732114814517_134529083c_0_1_0"; 

insert
$N_8732114814517_134529083c_0_1_0_0 isa constant, has hash "N_8732114814517_134529083c_0_1_0_0", has constant-value "40", has edge-label "constant";
(to-node: $N_8732114814517_134529083c_0_1_0_0, from-node: $N_8732114814517_134529083c_0_1_0) isa node-link; 

match
$N_8732114814517_134529083c_0_1 isa operation, has hash "N_8732114814517_134529083c_0_1"; 

insert
$N_8732114814517_134529083c_0_1_1 isa constant, has hash "N_8732114814517_134529083c_0_1_1", has constant-value "11", has edge-label "src_memory";
(to-node: $N_8732114814517_134529083c_0_1_1, from-node: $N_8732114814517_134529083c_0_1) isa node-link; 

match
$N_8732114814517_134529083c isa instruction, has hash "N_8732114814517_134529083c"; 

insert
$N_8732114814517_134529083c_1 isa constant, has hash "N_8732114814517_134529083c_1", has constant-value "79", has edge-label "true";
(to-node: $N_8732114814517_134529083c_1, from-node: $N_8732114814517_134529083c) isa node-link; 

match
$N_8732114814517_134529083c isa instruction, has hash "N_8732114814517_134529083c"; 

insert
$N_8732114814517_134529083c_2 isa constant, has hash "N_8732114814517_134529083c_2", has constant-value "81", has edge-label "false";
(to-node: $N_8732114814517_134529083c_2, from-node: $N_8732114814517_134529083c) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 72, has bb-end 73; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114827837_134529083c isa instruction, has hash "N_8732114827837_134529083c", has il-index 80, has asm-address "0x804c03b", has operation-type "MLIL_GOTO", has ins-text "goto 85 @ 0x804c03e";
(contains-instruction: $N_8732114827837_134529083c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114827837_134529083c isa instruction, has hash "N_8732114827837_134529083c"; 

insert
$N_8732114827837_134529083c_0 isa constant, has hash "N_8732114827837_134529083c_0", has constant-value "85", has edge-label "dest";
(to-node: $N_8732114827837_134529083c_0, from-node: $N_8732114827837_134529083c) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 72, has bb-end 73; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114902533_134529083c isa instruction, has hash "N_8732114902533_134529083c", has il-index 79, has asm-address "0x804c03b", has operation-type "MLIL_SET_VAR_SSA_FIELD", has ins-text "edx_4#8.dl = 1 @ edx_4#7";
(contains-instruction: $N_8732114902533_134529083c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114902533_134529083c isa instruction, has hash "N_8732114902533_134529083c"; 

insert
$N_8732114902533_134529083c_0 isa variable-ssa, has hash "N_8732114902533_134529083c_0", has var "edx_4", has version 8, has edge-label "prev", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114902533_134529083c_0, from-node: $N_8732114902533_134529083c) isa node-link; 

match
$N_8732114902533_134529083c isa instruction, has hash "N_8732114902533_134529083c"; 

insert
$N_8732114902533_134529083c_1 isa variable-ssa, has hash "N_8732114902533_134529083c_1", has var "edx_4", has version 7, has edge-label "offset", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114902533_134529083c_1, from-node: $N_8732114902533_134529083c) isa node-link; 

match
$N_8732114902533_134529083c isa instruction, has hash "N_8732114902533_134529083c"; 

insert
$N_8732114902533_134529083c_2 isa constant, has hash "N_8732114902533_134529083c_2", has constant-value "0", has edge-label "src";
(to-node: $N_8732114902533_134529083c_2, from-node: $N_8732114902533_134529083c) isa node-link; 

match
$N_8732114902533_134529083c isa instruction, has hash "N_8732114902533_134529083c"; 

insert
$N_8732114902533_134529083c_3 isa MLIL_CONST, has hash "N_8732114902533_134529083c_3", has edge-label "unimplemented";
(to-node: $N_8732114902533_134529083c_3, from-node: $N_8732114902533_134529083c) isa node-link; 

match
$N_8732114902533_134529083c_3 isa operation, has hash "N_8732114902533_134529083c_3"; 

insert
$N_8732114902533_134529083c_3_0 isa constant, has hash "N_8732114902533_134529083c_3_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8732114902533_134529083c_3_0, from-node: $N_8732114902533_134529083c_3) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 72, has bb-end 73; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114906913_134529083c isa instruction, has hash "N_8732114906913_134529083c", has il-index 82, has asm-address "0x804c03b", has operation-type "MLIL_GOTO", has ins-text "goto 85 @ 0x804c03e";
(contains-instruction: $N_8732114906913_134529083c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114906913_134529083c isa instruction, has hash "N_8732114906913_134529083c"; 

insert
$N_8732114906913_134529083c_0 isa constant, has hash "N_8732114906913_134529083c_0", has constant-value "85", has edge-label "dest";
(to-node: $N_8732114906913_134529083c_0, from-node: $N_8732114906913_134529083c) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 72, has bb-end 73; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114952453_134529083c isa instruction, has hash "N_8732114952453_134529083c", has il-index 81, has asm-address "0x804c03b", has operation-type "MLIL_SET_VAR_SSA_FIELD", has ins-text "edx_4#9.dl = 0 @ edx_4#7";
(contains-instruction: $N_8732114952453_134529083c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114952453_134529083c isa instruction, has hash "N_8732114952453_134529083c"; 

insert
$N_8732114952453_134529083c_0 isa variable-ssa, has hash "N_8732114952453_134529083c_0", has var "edx_4", has version 9, has edge-label "prev", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114952453_134529083c_0, from-node: $N_8732114952453_134529083c) isa node-link; 

match
$N_8732114952453_134529083c isa instruction, has hash "N_8732114952453_134529083c"; 

insert
$N_8732114952453_134529083c_1 isa variable-ssa, has hash "N_8732114952453_134529083c_1", has var "edx_4", has version 7, has edge-label "offset", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114952453_134529083c_1, from-node: $N_8732114952453_134529083c) isa node-link; 

match
$N_8732114952453_134529083c isa instruction, has hash "N_8732114952453_134529083c"; 

insert
$N_8732114952453_134529083c_2 isa constant, has hash "N_8732114952453_134529083c_2", has constant-value "0", has edge-label "src";
(to-node: $N_8732114952453_134529083c_2, from-node: $N_8732114952453_134529083c) isa node-link; 

match
$N_8732114952453_134529083c isa instruction, has hash "N_8732114952453_134529083c"; 

insert
$N_8732114952453_134529083c_3 isa MLIL_CONST, has hash "N_8732114952453_134529083c_3", has edge-label "unimplemented";
(to-node: $N_8732114952453_134529083c_3, from-node: $N_8732114952453_134529083c) isa node-link; 

match
$N_8732114952453_134529083c_3 isa operation, has hash "N_8732114952453_134529083c_3"; 

insert
$N_8732114952453_134529083c_3_0 isa constant, has hash "N_8732114952453_134529083c_3_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732114952453_134529083c_3_0, from-node: $N_8732114952453_134529083c_3) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 74, has bb-end 78; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 74, has bb-end 78; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 74, has bb-end 78; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115286029_134529089c isa instruction, has hash "N_8732115286029_134529089c", has il-index 76, has asm-address "0x804c041", has operation-type "MLIL_VAR_PHI", has ins-text "edx_4#11 = ϕ(edx_4#7, edx_4#10)";
(contains-instruction: $N_8732115286029_134529089c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115286029_134529089c isa instruction, has hash "N_8732115286029_134529089c"; 

insert
$N_8732115286029_134529089c_0 isa variable-ssa, has hash "N_8732115286029_134529089c_0", has var "edx_4", has version 11, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115286029_134529089c_0, from-node: $N_8732115286029_134529089c) isa node-link; 

match
$N_8732115286029_134529089c isa instruction, has hash "N_8732115286029_134529089c"; 

insert
$L_8732115286029_134529089c_1 isa list, has hash "L_8732115286029_134529089c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115286029_134529089c_1, from-node: $N_8732115286029_134529089c) isa node-link; 

match
$L_8732115286029_134529089c_1 isa list, has hash "L_8732115286029_134529089c_1"; 

insert
$N_8732115286029_134529089c_1_0 isa variable-ssa, has hash "N_8732115286029_134529089c_1_0", has var "edx_4", has version 7, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115286029_134529089c_1_0, from-node: $L_8732115286029_134529089c_1) isa node-link; 

match
$L_8732115286029_134529089c_1 isa list, has hash "L_8732115286029_134529089c_1"; 

insert
$N_8732115286029_134529089c_1_1 isa variable-ssa, has hash "N_8732115286029_134529089c_1_1", has var "edx_4", has version 10, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115286029_134529089c_1_1, from-node: $L_8732115286029_134529089c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 74, has bb-end 78; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115298333_134529089c isa instruction, has hash "N_8732115298333_134529089c", has il-index 74, has asm-address "0x804c041", has operation-type "MLIL_VAR_PHI", has ins-text "var_31_1#4 = ϕ(var_31_1#2, var_31_1#3)";
(contains-instruction: $N_8732115298333_134529089c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115298333_134529089c isa instruction, has hash "N_8732115298333_134529089c"; 

insert
$N_8732115298333_134529089c_0 isa variable-ssa, has hash "N_8732115298333_134529089c_0", has var "var_31_1", has version 4, has edge-label "dest", has var-type "char", has var-size -53, has var-func "cgc_init_track";
(to-node: $N_8732115298333_134529089c_0, from-node: $N_8732115298333_134529089c) isa node-link; 

match
$N_8732115298333_134529089c isa instruction, has hash "N_8732115298333_134529089c"; 

insert
$L_8732115298333_134529089c_1 isa list, has hash "L_8732115298333_134529089c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115298333_134529089c_1, from-node: $N_8732115298333_134529089c) isa node-link; 

match
$L_8732115298333_134529089c_1 isa list, has hash "L_8732115298333_134529089c_1"; 

insert
$N_8732115298333_134529089c_1_0 isa variable-ssa, has hash "N_8732115298333_134529089c_1_0", has var "var_31_1", has version 2, has edge-label "0", has var-type "char", has var-size -53, has var-func "cgc_init_track";
(to-node: $N_8732115298333_134529089c_1_0, from-node: $L_8732115298333_134529089c_1) isa node-link; 

match
$L_8732115298333_134529089c_1 isa list, has hash "L_8732115298333_134529089c_1"; 

insert
$N_8732115298333_134529089c_1_1 isa variable-ssa, has hash "N_8732115298333_134529089c_1_1", has var "var_31_1", has version 3, has edge-label "1", has var-type "char", has var-size -53, has var-func "cgc_init_track";
(to-node: $N_8732115298333_134529089c_1_1, from-node: $L_8732115298333_134529089c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 74, has bb-end 78; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115368437_134529089c isa instruction, has hash "N_8732115368437_134529089c", has il-index 75, has asm-address "0x804c041", has operation-type "MLIL_VAR_PHI", has ins-text "eax_4#9 = ϕ(eax_4#7, eax_4#8)";
(contains-instruction: $N_8732115368437_134529089c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115368437_134529089c isa instruction, has hash "N_8732115368437_134529089c"; 

insert
$N_8732115368437_134529089c_0 isa variable-ssa, has hash "N_8732115368437_134529089c_0", has var "eax_4", has version 9, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115368437_134529089c_0, from-node: $N_8732115368437_134529089c) isa node-link; 

match
$N_8732115368437_134529089c isa instruction, has hash "N_8732115368437_134529089c"; 

insert
$L_8732115368437_134529089c_1 isa list, has hash "L_8732115368437_134529089c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732115368437_134529089c_1, from-node: $N_8732115368437_134529089c) isa node-link; 

match
$L_8732115368437_134529089c_1 isa list, has hash "L_8732115368437_134529089c_1"; 

insert
$N_8732115368437_134529089c_1_0 isa variable-ssa, has hash "N_8732115368437_134529089c_1_0", has var "eax_4", has version 7, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115368437_134529089c_1_0, from-node: $L_8732115368437_134529089c_1) isa node-link; 

match
$L_8732115368437_134529089c_1 isa list, has hash "L_8732115368437_134529089c_1"; 

insert
$N_8732115368437_134529089c_1_1 isa variable-ssa, has hash "N_8732115368437_134529089c_1_1", has var "eax_4", has version 8, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115368437_134529089c_1_1, from-node: $L_8732115368437_134529089c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 74, has bb-end 78; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115485201_134529089c isa instruction, has hash "N_8732115485201_134529089c", has il-index 77, has asm-address "0x804c041", has operation-type "MLIL_SET_VAR_SSA_FIELD", has ins-text "eax_4#10.al = var_31_1#4 @ eax_4#9";
(contains-instruction: $N_8732115485201_134529089c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115485201_134529089c isa instruction, has hash "N_8732115485201_134529089c"; 

insert
$N_8732115485201_134529089c_0 isa variable-ssa, has hash "N_8732115485201_134529089c_0", has var "eax_4", has version 10, has edge-label "prev", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115485201_134529089c_0, from-node: $N_8732115485201_134529089c) isa node-link; 

match
$N_8732115485201_134529089c isa instruction, has hash "N_8732115485201_134529089c"; 

insert
$N_8732115485201_134529089c_1 isa variable-ssa, has hash "N_8732115485201_134529089c_1", has var "eax_4", has version 9, has edge-label "offset", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115485201_134529089c_1, from-node: $N_8732115485201_134529089c) isa node-link; 

match
$N_8732115485201_134529089c isa instruction, has hash "N_8732115485201_134529089c"; 

insert
$N_8732115485201_134529089c_2 isa constant, has hash "N_8732115485201_134529089c_2", has constant-value "0", has edge-label "src";
(to-node: $N_8732115485201_134529089c_2, from-node: $N_8732115485201_134529089c) isa node-link; 

match
$N_8732115485201_134529089c isa instruction, has hash "N_8732115485201_134529089c"; 

insert
$N_8732115485201_134529089c_3 isa MLIL_VAR_SSA, has hash "N_8732115485201_134529089c_3", has edge-label "unimplemented";
(to-node: $N_8732115485201_134529089c_3, from-node: $N_8732115485201_134529089c) isa node-link; 

match
$N_8732115485201_134529089c_3 isa operation, has hash "N_8732115485201_134529089c_3"; 

insert
$N_8732115485201_134529089c_3_0 isa variable-ssa, has hash "N_8732115485201_134529089c_3_0", has var "var_31_1", has version 4, has edge-label "src", has var-type "char", has var-size -53, has var-func "cgc_init_track";
(to-node: $N_8732115485201_134529089c_3_0, from-node: $N_8732115485201_134529089c_3) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 74, has bb-end 78; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 74, has bb-end 78; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115376397_134529094c isa instruction, has hash "N_8732115376397_134529094c", has il-index 78, has asm-address "0x804c046", has operation-type "MLIL_IF", has ins-text "if (eax_4#10.al & 1 != 0) then 83 @ 0x804c055 else 84 @ 0x804c04c";
(contains-instruction: $N_8732115376397_134529094c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115376397_134529094c isa instruction, has hash "N_8732115376397_134529094c"; 

insert
$N_8732115376397_134529094c_0 isa MLIL_CMP_NE, has hash "N_8732115376397_134529094c_0", has edge-label "condition";
(to-node: $N_8732115376397_134529094c_0, from-node: $N_8732115376397_134529094c) isa node-link; 

match
$N_8732115376397_134529094c_0 isa operation, has hash "N_8732115376397_134529094c_0"; 

insert
$N_8732115376397_134529094c_0_0 isa MLIL_AND, has hash "N_8732115376397_134529094c_0_0", has edge-label "left";
(to-node: $N_8732115376397_134529094c_0_0, from-node: $N_8732115376397_134529094c_0) isa node-link; 

match
$N_8732115376397_134529094c_0_0 isa operation, has hash "N_8732115376397_134529094c_0_0"; 

insert
$N_8732115376397_134529094c_0_0_0 isa MLIL_VAR_SSA_FIELD, has hash "N_8732115376397_134529094c_0_0_0", has edge-label "left";
(to-node: $N_8732115376397_134529094c_0_0_0, from-node: $N_8732115376397_134529094c_0_0) isa node-link; 

match
$N_8732115376397_134529094c_0_0_0 isa operation, has hash "N_8732115376397_134529094c_0_0_0"; 

insert
$N_8732115376397_134529094c_0_0_0_0 isa variable-ssa, has hash "N_8732115376397_134529094c_0_0_0_0", has var "eax_4", has version 10, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115376397_134529094c_0_0_0_0, from-node: $N_8732115376397_134529094c_0_0_0) isa node-link; 

match
$N_8732115376397_134529094c_0_0_0 isa operation, has hash "N_8732115376397_134529094c_0_0_0"; 

insert
$N_8732115376397_134529094c_0_0_0_1 isa constant, has hash "N_8732115376397_134529094c_0_0_0_1", has constant-value "0", has edge-label "offset";
(to-node: $N_8732115376397_134529094c_0_0_0_1, from-node: $N_8732115376397_134529094c_0_0_0) isa node-link; 

match
$N_8732115376397_134529094c_0_0 isa operation, has hash "N_8732115376397_134529094c_0_0"; 

insert
$N_8732115376397_134529094c_0_0_1 isa MLIL_CONST, has hash "N_8732115376397_134529094c_0_0_1", has edge-label "right";
(to-node: $N_8732115376397_134529094c_0_0_1, from-node: $N_8732115376397_134529094c_0_0) isa node-link; 

match
$N_8732115376397_134529094c_0_0_1 isa operation, has hash "N_8732115376397_134529094c_0_0_1"; 

insert
$N_8732115376397_134529094c_0_0_1_0 isa constant, has hash "N_8732115376397_134529094c_0_0_1_0", has constant-value "1", has edge-label "constant";
(to-node: $N_8732115376397_134529094c_0_0_1_0, from-node: $N_8732115376397_134529094c_0_0_1) isa node-link; 

match
$N_8732115376397_134529094c_0 isa operation, has hash "N_8732115376397_134529094c_0"; 

insert
$N_8732115376397_134529094c_0_1 isa MLIL_CONST, has hash "N_8732115376397_134529094c_0_1", has edge-label "right";
(to-node: $N_8732115376397_134529094c_0_1, from-node: $N_8732115376397_134529094c_0) isa node-link; 

match
$N_8732115376397_134529094c_0_1 isa operation, has hash "N_8732115376397_134529094c_0_1"; 

insert
$N_8732115376397_134529094c_0_1_0 isa constant, has hash "N_8732115376397_134529094c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115376397_134529094c_0_1_0, from-node: $N_8732115376397_134529094c_0_1) isa node-link; 

match
$N_8732115376397_134529094c isa instruction, has hash "N_8732115376397_134529094c"; 

insert
$N_8732115376397_134529094c_1 isa constant, has hash "N_8732115376397_134529094c_1", has constant-value "83", has edge-label "true";
(to-node: $N_8732115376397_134529094c_1, from-node: $N_8732115376397_134529094c) isa node-link; 

match
$N_8732115376397_134529094c isa instruction, has hash "N_8732115376397_134529094c"; 

insert
$N_8732115376397_134529094c_2 isa constant, has hash "N_8732115376397_134529094c_2", has constant-value "84", has edge-label "false";
(to-node: $N_8732115376397_134529094c_2, from-node: $N_8732115376397_134529094c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 79, has bb-end 80; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 81, has bb-end 82; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 83, has bb-end 83; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 83, has bb-end 83; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 83, has bb-end 83; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114947353_134529109c isa instruction, has hash "N_8732114947353_134529109c", has il-index 83, has asm-address "0x804c055", has operation-type "MLIL_IF", has ins-text "if (var_1c @ mem#11 != 0) then 88 @ 0x804c089 else 89 @ 0x804c05e";
(contains-instruction: $N_8732114947353_134529109c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114947353_134529109c isa instruction, has hash "N_8732114947353_134529109c"; 

insert
$N_8732114947353_134529109c_0 isa MLIL_CMP_NE, has hash "N_8732114947353_134529109c_0", has edge-label "condition";
(to-node: $N_8732114947353_134529109c_0, from-node: $N_8732114947353_134529109c) isa node-link; 

match
$N_8732114947353_134529109c_0 isa operation, has hash "N_8732114947353_134529109c_0"; 

insert
$N_8732114947353_134529109c_0_0 isa MLIL_VAR_ALIASED, has hash "N_8732114947353_134529109c_0_0", has edge-label "left";
(to-node: $N_8732114947353_134529109c_0_0, from-node: $N_8732114947353_134529109c_0) isa node-link; 

match
$N_8732114947353_134529109c_0_0 isa operation, has hash "N_8732114947353_134529109c_0_0"; 

insert
$N_8732114947353_134529109c_0_0_0 isa variable-ssa, has hash "N_8732114947353_134529109c_0_0_0", has var "var_1c", has version 11, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114947353_134529109c_0_0_0, from-node: $N_8732114947353_134529109c_0_0) isa node-link; 

match
$N_8732114947353_134529109c_0 isa operation, has hash "N_8732114947353_134529109c_0"; 

insert
$N_8732114947353_134529109c_0_1 isa MLIL_CONST, has hash "N_8732114947353_134529109c_0_1", has edge-label "right";
(to-node: $N_8732114947353_134529109c_0_1, from-node: $N_8732114947353_134529109c_0) isa node-link; 

match
$N_8732114947353_134529109c_0_1 isa operation, has hash "N_8732114947353_134529109c_0_1"; 

insert
$N_8732114947353_134529109c_0_1_0 isa constant, has hash "N_8732114947353_134529109c_0_1_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732114947353_134529109c_0_1_0, from-node: $N_8732114947353_134529109c_0_1) isa node-link; 

match
$N_8732114947353_134529109c isa instruction, has hash "N_8732114947353_134529109c"; 

insert
$N_8732114947353_134529109c_1 isa constant, has hash "N_8732114947353_134529109c_1", has constant-value "88", has edge-label "true";
(to-node: $N_8732114947353_134529109c_1, from-node: $N_8732114947353_134529109c) isa node-link; 

match
$N_8732114947353_134529109c isa instruction, has hash "N_8732114947353_134529109c"; 

insert
$N_8732114947353_134529109c_2 isa constant, has hash "N_8732114947353_134529109c_2", has constant-value "89", has edge-label "false";
(to-node: $N_8732114947353_134529109c_2, from-node: $N_8732114947353_134529109c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 84, has bb-end 84; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 84, has bb-end 84; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 84, has bb-end 84; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115035421_134529100c isa instruction, has hash "N_8732115035421_134529100c", has il-index 84, has asm-address "0x804c04c", has operation-type "MLIL_GOTO", has ins-text "goto 94 @ 0x804c091";
(contains-instruction: $N_8732115035421_134529100c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115035421_134529100c isa instruction, has hash "N_8732115035421_134529100c"; 

insert
$N_8732115035421_134529100c_0 isa constant, has hash "N_8732115035421_134529100c_0", has constant-value "94", has edge-label "dest";
(to-node: $N_8732115035421_134529100c_0, from-node: $N_8732115035421_134529100c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 85, has bb-end 87; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 85, has bb-end 87; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 85, has bb-end 87; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114844157_134529086c isa instruction, has hash "N_8732114844157_134529086c", has il-index 86, has asm-address "0x804c03e", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_31_1#3 = edx_4#10.dl";
(contains-instruction: $N_8732114844157_134529086c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114844157_134529086c isa instruction, has hash "N_8732114844157_134529086c"; 

insert
$N_8732114844157_134529086c_0 isa variable-ssa, has hash "N_8732114844157_134529086c_0", has var "var_31_1", has version 3, has edge-label "dest", has var-type "char", has var-size -53, has var-func "cgc_init_track";
(to-node: $N_8732114844157_134529086c_0, from-node: $N_8732114844157_134529086c) isa node-link; 

match
$N_8732114844157_134529086c isa instruction, has hash "N_8732114844157_134529086c"; 

insert
$N_8732114844157_134529086c_1 isa MLIL_VAR_SSA_FIELD, has hash "N_8732114844157_134529086c_1", has edge-label "src";
(to-node: $N_8732114844157_134529086c_1, from-node: $N_8732114844157_134529086c) isa node-link; 

match
$N_8732114844157_134529086c_1 isa operation, has hash "N_8732114844157_134529086c_1"; 

insert
$N_8732114844157_134529086c_1_0 isa variable-ssa, has hash "N_8732114844157_134529086c_1_0", has var "edx_4", has version 10, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114844157_134529086c_1_0, from-node: $N_8732114844157_134529086c_1) isa node-link; 

match
$N_8732114844157_134529086c_1 isa operation, has hash "N_8732114844157_134529086c_1"; 

insert
$N_8732114844157_134529086c_1_1 isa constant, has hash "N_8732114844157_134529086c_1_1", has constant-value "0", has edge-label "offset";
(to-node: $N_8732114844157_134529086c_1_1, from-node: $N_8732114844157_134529086c_1) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 85, has bb-end 87; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114853629_134529086c isa instruction, has hash "N_8732114853629_134529086c", has il-index 87, has asm-address "0x804c03e", has operation-type "MLIL_GOTO", has ins-text "goto 74 @ 0x804c041";
(contains-instruction: $N_8732114853629_134529086c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114853629_134529086c isa instruction, has hash "N_8732114853629_134529086c"; 

insert
$N_8732114853629_134529086c_0 isa constant, has hash "N_8732114853629_134529086c_0", has constant-value "74", has edge-label "dest";
(to-node: $N_8732114853629_134529086c_0, from-node: $N_8732114853629_134529086c) isa node-link; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 85, has bb-end 87; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114854925_134529086c isa instruction, has hash "N_8732114854925_134529086c", has il-index 85, has asm-address "0x804c03e", has operation-type "MLIL_VAR_PHI", has ins-text "edx_4#10 = ϕ(arg2#8, arg2#9)";
(contains-instruction: $N_8732114854925_134529086c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114854925_134529086c isa instruction, has hash "N_8732114854925_134529086c"; 

insert
$N_8732114854925_134529086c_0 isa variable-ssa, has hash "N_8732114854925_134529086c_0", has var "edx_4", has version 10, has edge-label "dest", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114854925_134529086c_0, from-node: $N_8732114854925_134529086c) isa node-link; 

match
$N_8732114854925_134529086c isa instruction, has hash "N_8732114854925_134529086c"; 

insert
$L_8732114854925_134529086c_1 isa list, has hash "L_8732114854925_134529086c_1", has list-size 2, has edge-label "src";
(to-node: $L_8732114854925_134529086c_1, from-node: $N_8732114854925_134529086c) isa node-link; 

match
$L_8732114854925_134529086c_1 isa list, has hash "L_8732114854925_134529086c_1"; 

insert
$N_8732114854925_134529086c_1_0 isa variable-ssa, has hash "N_8732114854925_134529086c_1_0", has var "arg2", has version 8, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114854925_134529086c_1_0, from-node: $L_8732114854925_134529086c_1) isa node-link; 

match
$L_8732114854925_134529086c_1 isa list, has hash "L_8732114854925_134529086c_1"; 

insert
$N_8732114854925_134529086c_1_1 isa variable-ssa, has hash "N_8732114854925_134529086c_1_1", has var "arg2", has version 9, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114854925_134529086c_1_1, from-node: $L_8732114854925_134529086c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 88, has bb-end 88; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 88, has bb-end 88; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 88, has bb-end 88; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115378977_134529161c isa instruction, has hash "N_8732115378977_134529161c", has il-index 88, has asm-address "0x804c089", has operation-type "MLIL_GOTO", has ins-text "goto 48 @ 0x804bff8";
(contains-instruction: $N_8732115378977_134529161c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115378977_134529161c isa instruction, has hash "N_8732115378977_134529161c"; 

insert
$N_8732115378977_134529161c_0 isa constant, has hash "N_8732115378977_134529161c_0", has constant-value "48", has edge-label "dest";
(to-node: $N_8732115378977_134529161c_0, from-node: $N_8732115378977_134529161c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 89, has bb-end 93; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 89, has bb-end 93; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 89, has bb-end 93; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114855941_134529118c isa instruction, has hash "N_8732114855941_134529118c", has il-index 89, has asm-address "0x804c05e", has operation-type "MLIL_SET_VAR_SSA", has ins-text "eax_5#11 = [0x2c].d @ mem#11";
(contains-instruction: $N_8732114855941_134529118c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114855941_134529118c isa instruction, has hash "N_8732114855941_134529118c"; 

insert
$N_8732114855941_134529118c_0 isa variable-ssa, has hash "N_8732114855941_134529118c_0", has var "eax_5", has version 11, has edge-label "dest", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114855941_134529118c_0, from-node: $N_8732114855941_134529118c) isa node-link; 

match
$N_8732114855941_134529118c isa instruction, has hash "N_8732114855941_134529118c"; 

insert
$N_8732114855941_134529118c_1 isa MLIL_LOAD_SSA, has hash "N_8732114855941_134529118c_1", has edge-label "src";
(to-node: $N_8732114855941_134529118c_1, from-node: $N_8732114855941_134529118c) isa node-link; 

match
$N_8732114855941_134529118c_1 isa operation, has hash "N_8732114855941_134529118c_1"; 

insert
$N_8732114855941_134529118c_1_0 isa MLIL_CONST_PTR, has hash "N_8732114855941_134529118c_1_0", has edge-label "src";
(to-node: $N_8732114855941_134529118c_1_0, from-node: $N_8732114855941_134529118c_1) isa node-link; 

match
$N_8732114855941_134529118c_1_0 isa operation, has hash "N_8732114855941_134529118c_1_0"; 

insert
$N_8732114855941_134529118c_1_0_0 isa constant, has hash "N_8732114855941_134529118c_1_0_0", has constant-value "44", has edge-label "constant";
(to-node: $N_8732114855941_134529118c_1_0_0, from-node: $N_8732114855941_134529118c_1_0) isa node-link; 

match
$N_8732114855941_134529118c_1 isa operation, has hash "N_8732114855941_134529118c_1"; 

insert
$N_8732114855941_134529118c_1_1 isa constant, has hash "N_8732114855941_134529118c_1_1", has constant-value "11", has edge-label "src_memory";
(to-node: $N_8732114855941_134529118c_1_1, from-node: $N_8732114855941_134529118c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 89, has bb-end 93; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 89, has bb-end 93; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114973189_134529121c isa instruction, has hash "N_8732114973189_134529121c", has il-index 90, has asm-address "0x804c061", has operation-type "MLIL_SET_VAR_SSA", has ins-text "var_4c_2#3 = eax_5#11";
(contains-instruction: $N_8732114973189_134529121c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114973189_134529121c isa instruction, has hash "N_8732114973189_134529121c"; 

insert
$N_8732114973189_134529121c_0 isa variable-ssa, has hash "N_8732114973189_134529121c_0", has var "var_4c_2", has version 3, has edge-label "dest", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114973189_134529121c_0, from-node: $N_8732114973189_134529121c) isa node-link; 

match
$N_8732114973189_134529121c isa instruction, has hash "N_8732114973189_134529121c"; 

insert
$N_8732114973189_134529121c_1 isa MLIL_VAR_SSA, has hash "N_8732114973189_134529121c_1", has edge-label "src";
(to-node: $N_8732114973189_134529121c_1, from-node: $N_8732114973189_134529121c) isa node-link; 

match
$N_8732114973189_134529121c_1 isa operation, has hash "N_8732114973189_134529121c_1"; 

insert
$N_8732114973189_134529121c_1_0 isa variable-ssa, has hash "N_8732114973189_134529121c_1_0", has var "eax_5", has version 11, has edge-label "src", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114973189_134529121c_1_0, from-node: $N_8732114973189_134529121c_1) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 89, has bb-end 93; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 89, has bb-end 93; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732114941957_134529124c isa instruction, has hash "N_8732114941957_134529124c", has il-index 91, has asm-address "0x804c064", has operation-type "MLIL_CALL_SSA", has ins-text "edx_5#12, ecx_4#5, mem#12 = 0x8049490(eax_5#11, edx_4#11, 0, var_4c_2#3) @ mem#11";
(contains-instruction: $N_8732114941957_134529124c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732114941957_134529124c isa instruction, has hash "N_8732114941957_134529124c"; 

insert
$N_8732114941957_134529124c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8732114941957_134529124c_0", has edge-label "output";
(to-node: $N_8732114941957_134529124c_0, from-node: $N_8732114941957_134529124c) isa node-link; 

match
$N_8732114941957_134529124c_0 isa operation, has hash "N_8732114941957_134529124c_0"; 

insert
$N_8732114941957_134529124c_0_0 isa constant, has hash "N_8732114941957_134529124c_0_0", has constant-value "12", has edge-label "dest_memory";
(to-node: $N_8732114941957_134529124c_0_0, from-node: $N_8732114941957_134529124c_0) isa node-link; 

match
$N_8732114941957_134529124c_0 isa operation, has hash "N_8732114941957_134529124c_0"; 

insert
$L_8732114941957_134529124c_0_1 isa list, has hash "L_8732114941957_134529124c_0_1", has list-size 2, has edge-label "dest";
(to-node: $L_8732114941957_134529124c_0_1, from-node: $N_8732114941957_134529124c_0) isa node-link; 

match
$L_8732114941957_134529124c_0_1 isa list, has hash "L_8732114941957_134529124c_0_1"; 

insert
$N_8732114941957_134529124c_0_1_0 isa variable-ssa, has hash "N_8732114941957_134529124c_0_1_0", has var "edx_5", has version 12, has edge-label "0", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114941957_134529124c_0_1_0, from-node: $L_8732114941957_134529124c_0_1) isa node-link; 

match
$L_8732114941957_134529124c_0_1 isa list, has hash "L_8732114941957_134529124c_0_1"; 

insert
$N_8732114941957_134529124c_0_1_1 isa variable-ssa, has hash "N_8732114941957_134529124c_0_1_1", has var "ecx_4", has version 5, has edge-label "1", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114941957_134529124c_0_1_1, from-node: $L_8732114941957_134529124c_0_1) isa node-link; 

match
$N_8732114941957_134529124c isa instruction, has hash "N_8732114941957_134529124c"; 

insert
$N_8732114941957_134529124c_1 isa MLIL_CONST_PTR, has hash "N_8732114941957_134529124c_1", has edge-label "dest";
(to-node: $N_8732114941957_134529124c_1, from-node: $N_8732114941957_134529124c) isa node-link; 

match
$N_8732114941957_134529124c_1 isa operation, has hash "N_8732114941957_134529124c_1"; 

insert
$N_8732114941957_134529124c_1_0 isa constant, has hash "N_8732114941957_134529124c_1_0", has constant-value "134517904", has edge-label "constant";
(to-node: $N_8732114941957_134529124c_1_0, from-node: $N_8732114941957_134529124c_1) isa node-link; 

match
$N_8732114941957_134529124c isa instruction, has hash "N_8732114941957_134529124c"; 

insert
$L_8732114941957_134529124c_2 isa list, has hash "L_8732114941957_134529124c_2", has list-size 4, has edge-label "params";
(to-node: $L_8732114941957_134529124c_2, from-node: $N_8732114941957_134529124c) isa node-link; 

match
$L_8732114941957_134529124c_2 isa list, has hash "L_8732114941957_134529124c_2"; 

insert
$N_8732114941957_134529124c_2_0 isa MLIL_VAR_SSA, has hash "N_8732114941957_134529124c_2_0", has edge-label "0";
(to-node: $N_8732114941957_134529124c_2_0, from-node: $L_8732114941957_134529124c_2) isa node-link; 

match
$N_8732114941957_134529124c_2_0 isa operation, has hash "N_8732114941957_134529124c_2_0"; 

insert
$N_8732114941957_134529124c_2_0_0 isa variable-ssa, has hash "N_8732114941957_134529124c_2_0_0", has var "eax_5", has version 11, has edge-label "src", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114941957_134529124c_2_0_0, from-node: $N_8732114941957_134529124c_2_0) isa node-link; 

match
$L_8732114941957_134529124c_2 isa list, has hash "L_8732114941957_134529124c_2"; 

insert
$N_8732114941957_134529124c_2_1 isa MLIL_VAR_SSA, has hash "N_8732114941957_134529124c_2_1", has edge-label "1";
(to-node: $N_8732114941957_134529124c_2_1, from-node: $L_8732114941957_134529124c_2) isa node-link; 

match
$N_8732114941957_134529124c_2_1 isa operation, has hash "N_8732114941957_134529124c_2_1"; 

insert
$N_8732114941957_134529124c_2_1_0 isa variable-ssa, has hash "N_8732114941957_134529124c_2_1_0", has var "edx_4", has version 11, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114941957_134529124c_2_1_0, from-node: $N_8732114941957_134529124c_2_1) isa node-link; 

match
$L_8732114941957_134529124c_2 isa list, has hash "L_8732114941957_134529124c_2"; 

insert
$N_8732114941957_134529124c_2_2 isa MLIL_CONST, has hash "N_8732114941957_134529124c_2_2", has edge-label "2";
(to-node: $N_8732114941957_134529124c_2_2, from-node: $L_8732114941957_134529124c_2) isa node-link; 

match
$N_8732114941957_134529124c_2_2 isa operation, has hash "N_8732114941957_134529124c_2_2"; 

insert
$N_8732114941957_134529124c_2_2_0 isa constant, has hash "N_8732114941957_134529124c_2_2_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732114941957_134529124c_2_2_0, from-node: $N_8732114941957_134529124c_2_2) isa node-link; 

match
$L_8732114941957_134529124c_2 isa list, has hash "L_8732114941957_134529124c_2"; 

insert
$N_8732114941957_134529124c_2_3 isa MLIL_VAR_SSA, has hash "N_8732114941957_134529124c_2_3", has edge-label "3";
(to-node: $N_8732114941957_134529124c_2_3, from-node: $L_8732114941957_134529124c_2) isa node-link; 

match
$N_8732114941957_134529124c_2_3 isa operation, has hash "N_8732114941957_134529124c_2_3"; 

insert
$N_8732114941957_134529124c_2_3_0 isa variable-ssa, has hash "N_8732114941957_134529124c_2_3_0", has var "var_4c_2", has version 3, has edge-label "src", has var-type "int32_t*", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732114941957_134529124c_2_3_0, from-node: $N_8732114941957_134529124c_2_3) isa node-link; 

match
$N_8732114941957_134529124c isa instruction, has hash "N_8732114941957_134529124c"; 

insert
$N_8732114941957_134529124c_3 isa constant, has hash "N_8732114941957_134529124c_3", has constant-value "11", has edge-label "src_memory";
(to-node: $N_8732114941957_134529124c_3, from-node: $N_8732114941957_134529124c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 89, has bb-end 93; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 89, has bb-end 93; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115461521_134529135c isa instruction, has hash "N_8732115461521_134529135c", has il-index 92, has asm-address "0x804c06f", has operation-type "MLIL_CALL_SSA", has ins-text "mem#13 = 0x8049490(0, edx_5#12, ecx_4#5, 0) @ mem#12";
(contains-instruction: $N_8732115461521_134529135c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115461521_134529135c isa instruction, has hash "N_8732115461521_134529135c"; 

insert
$N_8732115461521_134529135c_0 isa MLIL_CALL_OUTPUT_SSA, has hash "N_8732115461521_134529135c_0", has edge-label "output";
(to-node: $N_8732115461521_134529135c_0, from-node: $N_8732115461521_134529135c) isa node-link; 

match
$N_8732115461521_134529135c_0 isa operation, has hash "N_8732115461521_134529135c_0"; 

insert
$N_8732115461521_134529135c_0_0 isa constant, has hash "N_8732115461521_134529135c_0_0", has constant-value "13", has edge-label "dest_memory";
(to-node: $N_8732115461521_134529135c_0_0, from-node: $N_8732115461521_134529135c_0) isa node-link; 

match
$N_8732115461521_134529135c_0 isa operation, has hash "N_8732115461521_134529135c_0"; 

insert
$L_8732115461521_134529135c_0_1 isa list, has hash "L_8732115461521_134529135c_0_1", has list-size 0, has edge-label "dest";
(to-node: $L_8732115461521_134529135c_0_1, from-node: $N_8732115461521_134529135c_0) isa node-link; 

match
$N_8732115461521_134529135c isa instruction, has hash "N_8732115461521_134529135c"; 

insert
$N_8732115461521_134529135c_1 isa MLIL_CONST_PTR, has hash "N_8732115461521_134529135c_1", has edge-label "dest";
(to-node: $N_8732115461521_134529135c_1, from-node: $N_8732115461521_134529135c) isa node-link; 

match
$N_8732115461521_134529135c_1 isa operation, has hash "N_8732115461521_134529135c_1"; 

insert
$N_8732115461521_134529135c_1_0 isa constant, has hash "N_8732115461521_134529135c_1_0", has constant-value "134517904", has edge-label "constant";
(to-node: $N_8732115461521_134529135c_1_0, from-node: $N_8732115461521_134529135c_1) isa node-link; 

match
$N_8732115461521_134529135c isa instruction, has hash "N_8732115461521_134529135c"; 

insert
$L_8732115461521_134529135c_2 isa list, has hash "L_8732115461521_134529135c_2", has list-size 4, has edge-label "params";
(to-node: $L_8732115461521_134529135c_2, from-node: $N_8732115461521_134529135c) isa node-link; 

match
$L_8732115461521_134529135c_2 isa list, has hash "L_8732115461521_134529135c_2"; 

insert
$N_8732115461521_134529135c_2_0 isa MLIL_CONST, has hash "N_8732115461521_134529135c_2_0", has edge-label "0";
(to-node: $N_8732115461521_134529135c_2_0, from-node: $L_8732115461521_134529135c_2) isa node-link; 

match
$N_8732115461521_134529135c_2_0 isa operation, has hash "N_8732115461521_134529135c_2_0"; 

insert
$N_8732115461521_134529135c_2_0_0 isa constant, has hash "N_8732115461521_134529135c_2_0_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115461521_134529135c_2_0_0, from-node: $N_8732115461521_134529135c_2_0) isa node-link; 

match
$L_8732115461521_134529135c_2 isa list, has hash "L_8732115461521_134529135c_2"; 

insert
$N_8732115461521_134529135c_2_1 isa MLIL_VAR_SSA, has hash "N_8732115461521_134529135c_2_1", has edge-label "1";
(to-node: $N_8732115461521_134529135c_2_1, from-node: $L_8732115461521_134529135c_2) isa node-link; 

match
$N_8732115461521_134529135c_2_1 isa operation, has hash "N_8732115461521_134529135c_2_1"; 

insert
$N_8732115461521_134529135c_2_1_0 isa variable-ssa, has hash "N_8732115461521_134529135c_2_1_0", has var "edx_5", has version 12, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115461521_134529135c_2_1_0, from-node: $N_8732115461521_134529135c_2_1) isa node-link; 

match
$L_8732115461521_134529135c_2 isa list, has hash "L_8732115461521_134529135c_2"; 

insert
$N_8732115461521_134529135c_2_2 isa MLIL_VAR_SSA, has hash "N_8732115461521_134529135c_2_2", has edge-label "2";
(to-node: $N_8732115461521_134529135c_2_2, from-node: $L_8732115461521_134529135c_2) isa node-link; 

match
$N_8732115461521_134529135c_2_2 isa operation, has hash "N_8732115461521_134529135c_2_2"; 

insert
$N_8732115461521_134529135c_2_2_0 isa variable-ssa, has hash "N_8732115461521_134529135c_2_2_0", has var "ecx_4", has version 5, has edge-label "src", has var-type "int32_t", has var-size 4, has var-func "cgc_init_track";
(to-node: $N_8732115461521_134529135c_2_2_0, from-node: $N_8732115461521_134529135c_2_2) isa node-link; 

match
$L_8732115461521_134529135c_2 isa list, has hash "L_8732115461521_134529135c_2"; 

insert
$N_8732115461521_134529135c_2_3 isa MLIL_CONST_PTR, has hash "N_8732115461521_134529135c_2_3", has edge-label "3";
(to-node: $N_8732115461521_134529135c_2_3, from-node: $L_8732115461521_134529135c_2) isa node-link; 

match
$N_8732115461521_134529135c_2_3 isa operation, has hash "N_8732115461521_134529135c_2_3"; 

insert
$N_8732115461521_134529135c_2_3_0 isa constant, has hash "N_8732115461521_134529135c_2_3_0", has constant-value "0", has edge-label "constant";
(to-node: $N_8732115461521_134529135c_2_3_0, from-node: $N_8732115461521_134529135c_2_3) isa node-link; 

match
$N_8732115461521_134529135c isa instruction, has hash "N_8732115461521_134529135c"; 

insert
$N_8732115461521_134529135c_3 isa constant, has hash "N_8732115461521_134529135c_3", has constant-value "12", has edge-label "src_memory";
(to-node: $N_8732115461521_134529135c_3, from-node: $N_8732115461521_134529135c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 89, has bb-end 93; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 89, has bb-end 93; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115256865_134529147c isa instruction, has hash "N_8732115256865_134529147c", has il-index 93, has asm-address "0x804c07b", has operation-type "MLIL_GOTO", has ins-text "goto 9 @ 0x804c09d";
(contains-instruction: $N_8732115256865_134529147c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115256865_134529147c isa instruction, has hash "N_8732115256865_134529147c"; 

insert
$N_8732115256865_134529147c_0 isa constant, has hash "N_8732115256865_134529147c_0", has constant-value "9", has edge-label "dest";
(to-node: $N_8732115256865_134529147c_0, from-node: $N_8732115256865_134529147c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 

insert 
$bb isa basic-block, has bb-start 94, has bb-end 94; 
(contains-basic-block: $bb, in-function: $func_cgc_init_track) isa has-basic-block; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 94, has bb-end 94; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

match
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$bb isa basic-block, has bb-start 94, has bb-end 94; 
(in-function: $func_cgc_init_track, contains-basic-block: $bb) isa has-basic-block; 

insert
$N_8732115027205_134529169c isa instruction, has hash "N_8732115027205_134529169c", has il-index 94, has asm-address "0x804c091", has operation-type "MLIL_GOTO", has ins-text "goto 9 @ 0x804c09d";
(contains-instruction: $N_8732115027205_134529169c, in-basic-block: $bb) isa has-instruction; 

match
$N_8732115027205_134529169c isa instruction, has hash "N_8732115027205_134529169c"; 

insert
$N_8732115027205_134529169c_0 isa constant, has hash "N_8732115027205_134529169c_0", has constant-value "9", has edge-label "dest";
(to-node: $N_8732115027205_134529169c_0, from-node: $N_8732115027205_134529169c) isa node-link; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 2, has bb-start 0; 
$tobb   isa basic-block, has bb-end 5, has bb-start 3; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 2, has bb-start 0; 
$tobb   isa basic-block, has bb-end 6, has bb-start 6; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 5, has bb-start 3; 
$tobb   isa basic-block, has bb-end 7, has bb-start 7; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 5, has bb-start 3; 
$tobb   isa basic-block, has bb-end 8, has bb-start 8; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 6, has bb-start 6; 
$tobb   isa basic-block, has bb-end 22, has bb-start 9; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 7, has bb-start 7; 
$tobb   isa basic-block, has bb-end 24, has bb-start 23; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 8, has bb-start 8; 
$tobb   isa basic-block, has bb-end 28, has bb-start 25; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 8, has bb-start 8; 
$tobb   isa basic-block, has bb-end 29, has bb-start 29; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 24, has bb-start 23; 
$tobb   isa basic-block, has bb-end 22, has bb-start 9; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 28, has bb-start 25; 
$tobb   isa basic-block, has bb-end 30, has bb-start 30; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 28, has bb-start 25; 
$tobb   isa basic-block, has bb-end 32, has bb-start 31; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 29, has bb-start 29; 
$tobb   isa basic-block, has bb-end 24, has bb-start 23; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 30, has bb-start 30; 
$tobb   isa basic-block, has bb-end 37, has bb-start 33; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 30, has bb-start 30; 
$tobb   isa basic-block, has bb-end 39, has bb-start 38; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 32, has bb-start 31; 
$tobb   isa basic-block, has bb-end 22, has bb-start 9; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 37, has bb-start 33; 
$tobb   isa basic-block, has bb-end 40, has bb-start 40; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 37, has bb-start 33; 
$tobb   isa basic-block, has bb-end 42, has bb-start 41; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 39, has bb-start 38; 
$tobb   isa basic-block, has bb-end 47, has bb-start 43; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 40, has bb-start 40; 
$tobb   isa basic-block, has bb-end 47, has bb-start 43; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 42, has bb-start 41; 
$tobb   isa basic-block, has bb-end 22, has bb-start 9; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 47, has bb-start 43; 
$tobb   isa basic-block, has bb-end 70, has bb-start 48; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 70, has bb-start 48; 
$tobb   isa basic-block, has bb-end 71, has bb-start 71; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 70, has bb-start 48; 
$tobb   isa basic-block, has bb-end 73, has bb-start 72; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 71, has bb-start 71; 
$tobb   isa basic-block, has bb-end 78, has bb-start 74; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 73, has bb-start 72; 
$tobb   isa basic-block, has bb-end 80, has bb-start 79; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 73, has bb-start 72; 
$tobb   isa basic-block, has bb-end 82, has bb-start 81; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 78, has bb-start 74; 
$tobb   isa basic-block, has bb-end 83, has bb-start 83; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 78, has bb-start 74; 
$tobb   isa basic-block, has bb-end 84, has bb-start 84; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 80, has bb-start 79; 
$tobb   isa basic-block, has bb-end 87, has bb-start 85; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 82, has bb-start 81; 
$tobb   isa basic-block, has bb-end 87, has bb-start 85; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 83, has bb-start 83; 
$tobb   isa basic-block, has bb-end 88, has bb-start 88; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 83, has bb-start 83; 
$tobb   isa basic-block, has bb-end 93, has bb-start 89; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 84, has bb-start 84; 
$tobb   isa basic-block, has bb-end 94, has bb-start 94; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 87, has bb-start 85; 
$tobb   isa basic-block, has bb-end 78, has bb-start 74; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 88, has bb-start 88; 
$tobb   isa basic-block, has bb-end 70, has bb-start 48; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 93, has bb-start 89; 
$tobb   isa basic-block, has bb-end 22, has bb-start 9; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 

match 
$func_cgc_init_track isa function, has name "cgc_init_track"; 
$frombb isa basic-block, has bb-end 94, has bb-start 94; 
$tobb   isa basic-block, has bb-end 22, has bb-start 9; 
(contains-basic-block: $frombb, in-function: $func_cgc_init_track) isa has-basic-block; 
(contains-basic-block: $tobb, in-function: $func_cgc_init_track) isa has-basic-block; 

insert 
(from-basic-block: $frombb, to-basic-block: $tobb) isa basic-block-edge; 
